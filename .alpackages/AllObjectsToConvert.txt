OBJECT Table 50001 Subscriber
{
  OBJECT-PROPERTIES
  {
    Date=08/11/11;
    Time=11:53:26 AM;
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               IF "No." = '' THEN BEGIN
                 SubscriptionSetup.GET;
                 SubscriptionSetup.TESTFIELD("Subscriber Nos.");
                 NoSeriesMgt.InitSeries(SubscriptionSetup."Subscriber Nos.",xRec."No. Series",0D,"No.","No. Series");
               END;

               "Application Date" := WORKDATE;
             END;

    OnModify=BEGIN
               "Last Date Modified" := TODAY;
               "Last Time Modified" := TIME;
               IF ("First Name" <> xRec."First Name") OR
                  ("Middle Name" <> xRec."Middle Name") OR
                  ("Last Name" <> xRec."Last Name") OR
                  ("Date of Birth" <> xRec."Date of Birth") OR
                  ("Phone No." <> xRec."Phone No.") OR
                  ("Mobile No." <> xRec."Mobile No.")
               THEN
                 CheckDupl;
             END;

    OnDelete=VAR
               SSContract@1000000001 : Record 50005;
               SSContractLE@1000000000 : Record 50006;
             BEGIN
               SSContract.SETPERMISSIONFILTER;
               SSContract.RESET;
               SSContract.SETRANGE("Subscriber No.","No.");
               IF SSContract.FIND('-') THEN
                 ERROR(Text010,"No.");

               SSContractLE.SETPERMISSIONFILTER;
               SSContractLE.RESET;
               SSContractLE.SETRANGE("Subscriber No.","No.");
               IF SSContractLE.FIND('-') THEN
                 ERROR(Text010,"No.");
             END;

    OnRename=BEGIN
               ERROR(Text000,TABLECAPTION);
             END;

    LookupPageID=Page50002;
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20        ;AltSearchField=Search Name;
                                                   OnValidate=BEGIN
                                                                IF "No." <> xRec."No." THEN BEGIN
                                                                  SubscriptionSetup.GET;
                                                                  NoSeriesMgt.TestManual(SubscriptionSetup."Subscriber Nos.");
                                                                  "No. Series" := '';
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=No.;
                                                              THA=รหัสสมาชิก] }
    { 2   ;   ;Name                ;Text50        ;OnValidate=VAR
                                                                ContBusRel@1001 : Record 5054;
                                                                Cust@1000 : Record 18;
                                                                Vend@1002 : Record 23;
                                                              BEGIN
                                                                IF NOT (CurrFieldNo IN [FIELDNO("First Name"),FIELDNO("Middle Name"),FIELDNO("Last Name")]) THEN
                                                                  NameBreakdown;
                                                                UpdateSearchName;
                                                              END;

                                                   CaptionML=[ENU=Name;
                                                              THA=ชื่อ] }
    { 3   ;   ;Search Name         ;Code50        ;CaptionML=[ENU=Search Name;
                                                              THA=ชื่อที่ค้นหา] }
    { 4   ;   ;First Name          ;Text30        ;OnValidate=BEGIN
                                                                VALIDATE(Name,COPYSTR(CalculatedName,1,50));
                                                                VALIDATE("Name 2",COPYSTR(CalculatedName,51,50));
                                                              END;

                                                   CaptionML=[ENU=First Name;
                                                              THA=ชื่อแรก] }
    { 5   ;   ;Middle Name         ;Text30        ;OnValidate=BEGIN
                                                                VALIDATE(Name,COPYSTR(CalculatedName,1,50));
                                                                VALIDATE("Name 2",COPYSTR(CalculatedName,51,50));
                                                              END;

                                                   CaptionML=[ENU=Middle Name;
                                                              THA=ชื่อกลาง] }
    { 6   ;   ;Last Name           ;Text30        ;OnValidate=BEGIN
                                                                VALIDATE(Name,COPYSTR(CalculatedName,1,50));
                                                                VALIDATE("Name 2",COPYSTR(CalculatedName,51,50));
                                                              END;

                                                   CaptionML=[ENU=Last Name;
                                                              THA=นามสกุล] }
    { 7   ;   ;Salutation Code     ;Code10        ;TableRelation=Salutation;
                                                   CaptionML=[ENU=Salutation Code;
                                                              THA=รหัสการทักทาย] }
    { 8   ;   ;Date of Birth       ;Date          ;OnValidate=BEGIN
                                                                IF "Date of Birth" <> 0D THEN BEGIN
                                                                  Age := CalcAge("Date of Birth",TODAY);
                                                                END ELSE
                                                                  Age := 0;
                                                              END;

                                                   CaptionML=[ENU=Date of Birth;
                                                              THA=วันเกิด] }
    { 9   ;   ;Age                 ;Integer       ;CaptionML=[ENU=Age;
                                                              THA=อายุ] }
    { 10  ;   ;Application Date    ;Date          ;CaptionML=[ENU=Application Date;
                                                              THA=วันที่เริ่มเป็นสมาชิก] }
    { 11  ;   ;Occupation          ;Code10        ;TableRelation="General Master Setup".Code WHERE (Type=CONST(Occupation));
                                                   CaptionML=[ENU=Occupation;
                                                              THA=อาชีพ] }
    { 12  ;   ;Position            ;Code10        ;TableRelation="General Master Setup".Code WHERE (Type=CONST(Position));
                                                   CaptionML=[ENU=Position;
                                                              THA=ตำแหน่งงาน] }
    { 13  ;   ;Company Name        ;Text50         }
    { 14  ;   ;Education           ;Code10        ;TableRelation="General Master Setup".Code WHERE (Type=CONST(Education));
                                                   CaptionML=[ENU=Education;
                                                              THA=การศึกษา] }
    { 15  ;   ;Estimate Revenue    ;Decimal       ;CaptionML=[ENU=Estimate Revenue;
                                                              THA=รายได้ส่วนตัว/เดือน];
                                                   AutoFormatType=1 }
    { 16  ;   ;Estimate Family Revenue;Decimal    ;CaptionML=[ENU=Estimate Family Revenue;
                                                              THA=รายได้ครอบครัว/เดือน];
                                                   AutoFormatType=1 }
    { 17  ;   ;Marital Status      ;Option        ;InitValue=Single;
                                                   CaptionML=[ENU=Marital Status;
                                                              THA=สถานะภาพสมรส];
                                                   OptionCaptionML=ENU=" ,Single,Married,Divorce,Widow";
                                                   OptionString=[ ,Single,Married,Divorce,Widow] }
    { 18  ;   ;No. of Children     ;Integer       ;CaptionML=[ENU=No. of Children;
                                                              THA=จำนวนบุตร] }
    { 19  ;   ;Zone Area           ;Code10        ;TableRelation="General Master Setup".Code WHERE (Type=CONST(Zone Area)) }
    { 22  ;   ;E-Mail              ;Text80        ;CaptionML=[ENU=E-Mail;
                                                              THA=อีเมล] }
    { 24  ;   ;Address 1           ;Text50        ;CaptionML=[ENU=Address 1;
                                                              THA=ที่อยู่ปัจจุบัน 1] }
    { 25  ;   ;Address 2           ;Text50        ;CaptionML=[ENU=Address 2;
                                                              THA=ที่อยู่ปัจจุบัน 2] }
    { 26  ;   ;Address 3           ;Text30        ;CaptionML=[ENU=Address 3;
                                                              THA=ที่อยู่ปัจจุบัน 3];
                                                   Description=50->30 }
    { 27  ;   ;Phone No.           ;Text30        ;CaptionML=[ENU=Phone No.;
                                                              THA=หมายเลขโทรศัพท์ปัจจุบัน] }
    { 28  ;   ;Mobile No.          ;Text30        ;CaptionML=[ENU=Mobile No.;
                                                              THA=หมายเลขมือถือปัจจุบัน] }
    { 29  ;   ;Fax No.             ;Text30        ;CaptionML=[ENU=Fax No.;
                                                              THA=หมายเลขแฟ็กซ์ปัจจุบัน] }
    { 30  ;   ;Bill-to Address 1   ;Text50        ;CaptionML=[ENU=Bill-to Address 1;
                                                              THA=ที่อยู่ออกใบเสร็จรับเงิน 1] }
    { 31  ;   ;Bill-to Address 2   ;Text50        ;CaptionML=[ENU=Bill-to Address 2;
                                                              THA=ที่อยู่ออกใบเสร็จรับเงิน 2] }
    { 32  ;   ;Bill-to Address 3   ;Text30        ;CaptionML=[ENU=Bill-to Address 3;
                                                              THA=ที่อยู่ออกใบเสร็จรับเงิน 3];
                                                   Description=50->30 }
    { 33  ;   ;Bill-to Phone No.   ;Text30        ;CaptionML=[ENU=Bill-to Phone No.;
                                                              THA=หมายเลขโทรศัพท์ออกใบเสร็จรับเงิน] }
    { 34  ;   ;Bill-to Mobile No.  ;Text30        ;CaptionML=[ENU=Bill-to Mobile No.;
                                                              THA=หมายเลขมือถือออกใบเสร็จรับเงิน] }
    { 35  ;   ;Bill-to Fax No.     ;Text30        ;CaptionML=[ENU=Bill-to Fax No.;
                                                              THA=หมายเลขแฟ็กซ์ออกใบเสร็จรับเงิน] }
    { 36  ;   ;Ship-to Address 1   ;Text50        ;CaptionML=[ENU=Ship-to Address 1;
                                                              THA=ที่อยู่ส่งสินค้า 1] }
    { 37  ;   ;Ship-to Address 2   ;Text50        ;CaptionML=[ENU=Ship-to Address 2;
                                                              THA=ที่อยู่ส่งสินค้า 2] }
    { 38  ;   ;Ship-to Address 3   ;Text30        ;CaptionML=[ENU=Ship-to Address 3;
                                                              THA=ที่อยู่ส่งสินค้า 3];
                                                   Description=50->30 }
    { 39  ;   ;Ship-to Phone No.   ;Text30        ;CaptionML=[ENU=Ship-to Phone No.;
                                                              THA=หมายเลขโทรศัพท์ส่งสินค้า] }
    { 40  ;   ;Ship-to Mobile No.  ;Text30        ;CaptionML=[ENU=Ship-to Mobile No.;
                                                              THA=หมายเลขมือถือส่งสินค้า] }
    { 41  ;   ;Ship-to Fax No.     ;Text30        ;CaptionML=[ENU=Ship-to Fax No.;
                                                              THA=หมายเลขแฟ็กซ์ส่งสินค้า] }
    { 42  ;   ;Bill-to Name        ;Text50        ;OnValidate=VAR
                                                                ContBusRel@1001 : Record 5054;
                                                                Cust@1000 : Record 18;
                                                                Vend@1002 : Record 23;
                                                              BEGIN
                                                                IF NOT (CurrFieldNo IN [FIELDNO("First Name"),FIELDNO("Middle Name"),FIELDNO("Last Name")]) THEN
                                                                  NameBreakdown;
                                                                UpdateSearchName;
                                                              END;

                                                   CaptionML=ENU=Bill-to Name }
    { 43  ;   ;Bill-to Name 2      ;Text50        ;OnValidate=VAR
                                                                ContBusRel@1001 : Record 5054;
                                                                Cust@1000 : Record 18;
                                                                Vend@1002 : Record 23;
                                                              BEGIN
                                                                IF NOT (CurrFieldNo IN [FIELDNO("First Name"),FIELDNO("Middle Name"),FIELDNO("Last Name")]) THEN
                                                                  NameBreakdown;
                                                                UpdateSearchName;
                                                              END;

                                                   CaptionML=ENU=Bill-to Name 2 }
    { 44  ;   ;Name (Thai)         ;Text120        }
    { 45  ;   ;Address (Thai)      ;Text200        }
    { 49  ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Comment Line" WHERE (Table Name=CONST(Subscriber),
                                                                                           No.=FIELD(No.)));
                                                   CaptionML=[ENU=Comment;
                                                              THA=ข้อคิดเห็น];
                                                   Editable=No }
    { 50  ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=No. Series;
                                                              THA=ชุดหมายเลข] }
    { 51  ;   ;Contact No.         ;Code20        ;TableRelation=Contact;
                                                   OnValidate=VAR
                                                                ContBusRel@1000000000 : Record 5054;
                                                                NewContBusRel@1000000001 : Record 5054;
                                                              BEGIN
                                                                IF "Customer No." = '' THEN
                                                                  EXIT;
                                                                IF xRec."Contact No." <> '' THEN BEGIN
                                                                  IF NOT CONFIRM(STRSUBSTNO(Text004,xRec."Contact No."),FALSE) THEN BEGIN
                                                                    "Contact No." := xRec."Contact No.";
                                                                    EXIT;
                                                                  END;
                                                                  ContBusRel.RESET;
                                                                  ContBusRel.SETCURRENTKEY("Link to Table","Contact No.");
                                                                  ContBusRel.SETRANGE("Link to Table",ContBusRel."Link to Table"::Customer);
                                                                  ContBusRel.SETRANGE("Contact No.",xRec."Contact No.");
                                                                  ContBusRel.SETRANGE("No.","Customer No.");
                                                                  IF ContBusRel.FIND('-') THEN BEGIN
                                                                    ContBusRel.DELETE;
                                                                    IF "Contact No." <> '' THEN BEGIN
                                                                      NewContBusRel := ContBusRel;
                                                                      NewContBusRel."Contact No." := "Contact No.";
                                                                      NewContBusRel.INSERT(TRUE);
                                                                    END;
                                                                  END;
                                                                END ELSE
                                                                IF "Contact No." <> '' THEN BEGIN
                                                                  RMSetup.GET;
                                                                  RMSetup.TESTFIELD("Burda-Bus. Rel. Code for Cust.");
                                                                  ContBusRel.INIT;
                                                                  ContBusRel."Contact No." := "Contact No.";
                                                                  ContBusRel."Business Relation Code" := RMSetup."Burda-Bus. Rel. Code for Cust.";
                                                                  ContBusRel."Link to Table" := ContBusRel."Link to Table"::Customer;
                                                                  ContBusRel."No." := "Customer No.";
                                                                  ContBusRel.INSERT(TRUE);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Contact No.;
                                                              THA=รหัสผู้ติดต่อ] }
    { 52  ;   ;Customer No.        ;Code20        ;TableRelation=Customer;
                                                   CaptionML=[ENU=Customer No.;
                                                              THA=รหัสลูกค้า];
                                                   Editable=No }
    { 53  ;   ;Name 2              ;Text50        ;CaptionML=[ENU=Name 2;
                                                              THA=ชื่อ 2] }
    { 54  ;   ;Last Date Modified  ;Date          ;CaptionML=[ENU=Last Date Modified;
                                                              THA=วันที่แก้ไขล่าสุด];
                                                   Editable=No }
    { 55  ;   ;Last Time Modified  ;Time          ;CaptionML=[ENU=Last Time Modified;
                                                              THA=เวลาแก้ไขล่าสุด];
                                                   Editable=No }
    { 100 ;   ;Old Subscriber No.  ;Code20        ;Editable=No }
    { 101 ;   ;No. Of Subscriber Contract;Integer ;FieldClass=FlowField;
                                                   CalcFormula=Count("Subscriber Contract" WHERE (Subscriber No.=FIELD(No.),
                                                                                                  Magazine Code=FIELD(Magazine Filter)));
                                                   Editable=No }
    { 102 ;   ;Magazine Filter     ;Code20        ;FieldClass=FlowFilter;
                                                   TableRelation=Magazine }
    { 103 ;   ;Sex                 ;Option        ;CaptionML=[ENU=Sex;
                                                              THA=เพศ];
                                                   OptionCaptionML=[ENU=" ,Male,Female";
                                                                    THA=" ,ชาย,หญิง"];
                                                   OptionString=[ ,Male,Female] }
    { 104 ;   ;Province/City       ;Text30         }
    { 105 ;   ;Bill-to Province/City;Text30        }
    { 106 ;   ;Ship-to Province/City;Text30        }
    { 107 ;   ;Comment Text        ;Text120        }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
    {    ;Search Name                              }
    {    ;Contact No.                              }
    {    ;Customer No.                             }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1000000014 : TextConst 'ENU=You cannot rename a %1.;THA=คุณไม่สามารถเปลี่ยนชื่อ %1';
      Text001@1000000004 : TextConst 'ENU=Please key in %1!';
      Text002@1000000007 : TextConst 'ENU=Subscriber %1 has been created as customer %2.';
      Text003@1000000011 : TextConst 'ENU=Do you want to create subscriber contract for %1?';
      Text004@1000000013 : TextConst 'ENU=Contact No. %1 has been related to customer %2.\Do you want to continue?';
      Text005@1000000006 : TextConst 'ENU=Duplicate Subscribers were found.';
      Text009@1000000008 : TextConst 'ENU=%1 %2 has been created.;THA=%1 %2 ถูกสร้างขึ้น';
      Text010@1000000016 : TextConst 'ENU=You cannot delete %1 because there are one or more ledger entries in subscriber contract.';
      Text020@1000000009 : TextConst 'ENU=Do you want to create subscriber %1 as a customer using a customer template?';
      Text022@1000000010 : TextConst 'ENU=The Creation of the customer has been aborted.;THA=การสร้างลูกค้าถูกยกเลิกก่อนเสร็จสมบูรณ์';
      Text029@1000000000 : TextConst 'ENU=The combined length of first name, middle name and surname exceeds the maximum length allowed for the name field by %1 character(s).;THA=ความยาวรวมของชื่อ, ชื่อกลางและนามสกุลเกินกว่าความยาวสูงสุดที่ใช้ได้สำหรับฟิลด์ชื่อ ซึ่งได้แก่ %1 อักขระ.';
      Text032@1000000001 : TextConst 'ENU=The length of %1 exceeds the maximum length allowed for the %1 field by %2 character(s).;THA=ความยาวของ %1 เกินกว่าความยาวสูงสุดที่อนุญาตสำหรับฟิลด์ %1 จำนวน %2 ตัว';
      SubscriptionSetup@1000000002 : Record 50000;
      Contact@1000000012 : Record 5050;
      RMSetup@1000000015 : Record 5079;
      DuplMgt@1000000005 : Codeunit 5060;
      NoSeriesMgt@1000000003 : Codeunit 396;

    PROCEDURE AssistEdit@2(OldSubscriber@1000 : Record 50001) : Boolean;
    VAR
      Subscriber@1001 : Record 50001;
    BEGIN
      WITH Subscriber DO BEGIN
        Subscriber := Rec;
        SubscriptionSetup.GET;
        SubscriptionSetup.TESTFIELD("Subscriber Nos.");
        IF NoSeriesMgt.SelectSeries(SubscriptionSetup."Subscriber Nos.",OldSubscriber."No. Series","No. Series") THEN BEGIN
          NoSeriesMgt.SetSeries("No.");
          Rec := Subscriber;
          EXIT(TRUE);
        END;
      END;
    END;

    PROCEDURE CalculatedName@14() NewName@1000 : Text[250];
    VAR
      NewName250@1001 : Text[250];
    BEGIN
      IF "First Name" <> '' THEN
        NewName250 := "First Name";
      IF "Middle Name" <> '' THEN
        NewName250 := NewName250 + ' ' + "Middle Name";
      IF "Last Name" <> '' THEN
        NewName250 := NewName250 + ' ' + "Last Name";

      NewName250 := DELCHR(NewName250,'<',' ');

      IF STRLEN(NewName250) > MAXSTRLEN(Name) + MAXSTRLEN("Name 2")THEN
        ERROR(Text029,STRLEN(NewName250) - (MAXSTRLEN(Name) + MAXSTRLEN("Name 2")));

      NewName := NewName250;
    END;

    PROCEDURE UpdateSearchName@22();
    BEGIN
      IF ("Search Name" = UPPERCASE(xRec.Name)) OR ("Search Name" = '') THEN
        "Search Name" := Name;
    END;

    PROCEDURE NameBreakdown@13();
    VAR
      NamePart@1000 : ARRAY [30] OF Text[250];
      TempName@1001 : Text[250];
      FirstName250@1004 : Text[250];
      i@1002 : Integer;
      NoOfParts@1003 : Integer;
    BEGIN
      TempName := Name;
      WHILE STRPOS(TempName,' ') > 0 DO BEGIN
        IF STRPOS(TempName,' ') > 1 THEN BEGIN
          i := i + 1;
          NamePart[i] := COPYSTR(TempName,1,STRPOS(TempName,' ') - 1);
        END;
        TempName := COPYSTR(TempName,STRPOS(TempName,' ') + 1);
      END;
      i := i + 1;
      NamePart[i] := TempName;
      NoOfParts := i;

      "First Name" := '';
      "Middle Name" := '';
      "Last Name" := '';
      FOR i := 1 TO NoOfParts DO BEGIN
        IF (i = NoOfParts) AND (NoOfParts > 1) THEN BEGIN
          IF STRLEN(NamePart[i]) > MAXSTRLEN("Last Name") THEN
            ERROR(Text032,FIELDCAPTION("Last Name"),STRLEN(NamePart[i]) - MAXSTRLEN("Last Name"));
          "Last Name" := NamePart[i]
        END ELSE
          IF (i = NoOfParts - 1) AND (NoOfParts > 2) THEN BEGIN
            IF STRLEN(NamePart[i]) > MAXSTRLEN("Middle Name") THEN
              ERROR(Text032,FIELDCAPTION("Middle Name"),STRLEN(NamePart[i]) - MAXSTRLEN("Middle Name"));
            "Middle Name" := NamePart[i]
          END ELSE BEGIN
            FirstName250 := DELCHR("First Name" + ' ' + NamePart[i],'<',' ');
            IF STRLEN(FirstName250) > MAXSTRLEN("First Name") THEN
              ERROR(Text032,FIELDCAPTION("First Name"),STRLEN(FirstName250) - MAXSTRLEN("First Name"));
            "First Name" := FirstName250;
          END;
      END;
    END;

    PROCEDURE CreateCustomer@3(CustomerTemplate@1000000000 : Code[10]);
    VAR
      Cust@1000 : Record 18;
      CustTemplate@1003 : Record 5105;
      DefaultDim@1005 : Record 352;
      DefaultDim2@1004 : Record 352;
      ContBusRel@1000000002 : Record 5054;
    BEGIN
      IF CustomerTemplate = '' THEN
        EXIT;
      IF "Customer No." <> '' THEN
        ERROR(Text002,"No.","Customer No.");

      RMSetup.GET;
      RMSetup.TESTFIELD("Bus. Rel. Code for Customers",'');
      RMSetup.TESTFIELD("Burda-Bus. Rel. Code for Cust.");

      IF CustomerTemplate <> '' THEN
        CustTemplate.GET(CustomerTemplate);

      SubscriptionSetup.GET;
      SubscriptionSetup.TESTFIELD("Customer Nos.");

      Cust.INIT;
      Cust."No." := NoSeriesMgt.GetNextNo(SubscriptionSetup."Customer Nos.",WORKDATE,TRUE);
      Cust.INSERT(TRUE);

      Cust.VALIDATE(Name,Name);
      Cust."Name 2" := "Name 2";
      Cust."Search Name" := "Search Name";
      Cust.Address := "Address 1";
      Cust."Address 2" := "Address 2";
      Cust."Address 3" := "Address 3";
      Cust."Phone No." := "Phone No.";
      Cust."Fax No." := "Fax No.";
      Cust.MODIFY;
      IF CustTemplate.Code <> '' THEN BEGIN
        Cust."Customer Posting Group" := CustTemplate."Customer Posting Group";
        Cust."Customer Price Group" := CustTemplate."Customer Price Group";
        Cust."Invoice Disc. Code" := CustTemplate."Invoice Disc. Code";
        Cust."Customer Disc. Group" := CustTemplate."Customer Disc. Group";
        Cust."Allow Line Disc." := CustTemplate."Allow Line Disc.";
        Cust."Gen. Bus. Posting Group" := CustTemplate."Gen. Bus. Posting Group";
        Cust."VAT Bus. Posting Group" := CustTemplate."VAT Bus. Posting Group";
        Cust."WHT Business Posting Group" := CustTemplate."WHT Business Posting Group";
        Cust."Payment Terms Code" := CustTemplate."Payment Terms Code";
        Cust."Payment Method Code" := CustTemplate."Payment Method Code";
        Cust."Shipment Method Code" := CustTemplate."Shipment Method Code";
        Cust.MODIFY;

        DefaultDim.SETRANGE("Table ID",DATABASE::"Customer Template");
        DefaultDim.SETRANGE(DefaultDim."No.",CustTemplate.Code);
        IF DefaultDim.FIND('-') THEN
          REPEAT
            CLEAR(DefaultDim2);
            DefaultDim2.INIT;
            DefaultDim2.VALIDATE("Table ID",DATABASE::Customer);
            DefaultDim2."No." := Cust."No.";
            DefaultDim2.VALIDATE("Dimension Code",DefaultDim."Dimension Code");
            DefaultDim2.VALIDATE("Dimension Value Code",DefaultDim."Dimension Value Code");
            DefaultDim2."Value Posting" := DefaultDim."Value Posting";
            DefaultDim2.INSERT(TRUE);
          UNTIL DefaultDim.NEXT = 0;
      END;

      IF "Contact No." <> '' THEN BEGIN
        ContBusRel.INIT;
        ContBusRel."Contact No." := "Contact No.";
        ContBusRel."Business Relation Code" := RMSetup."Burda-Bus. Rel. Code for Cust.";
        ContBusRel."Link to Table" := ContBusRel."Link to Table"::Customer;
        ContBusRel."No." := Cust."No.";
        ContBusRel.INSERT(TRUE);
      END;

      "Customer No." := Cust."No.";
      MODIFY;
      COMMIT;
      MESSAGE(Text009, Cust.TABLECAPTION, Cust."No.");
    END;

    PROCEDURE CheckDupl@21();
    VAR
      Subscriber@1000000000 : Record 50001;
    BEGIN
      Subscriber.SETFILTER("No.",'<>%1',"No.");
      Subscriber.SETRANGE("First Name","First Name");
      Subscriber.SETRANGE("Middle Name","Middle Name");
      Subscriber.SETRANGE("Last Name","Last Name");
      Subscriber.SETRANGE("Date of Birth","Date of Birth");
      Subscriber.SETRANGE("Phone No.","Phone No.");
      Subscriber.SETRANGE("Mobile No.","Mobile No.");
      IF Subscriber.FIND('-') THEN
        ERROR(Text005);
    END;

    PROCEDURE CalcAge@1000000003(DateOfBirth@1000000002 : Date;CurrentDate@1000000001 : Date) : Integer;
    VAR
      Age@1000000000 : Integer;
    BEGIN
      IF DateOfBirth = 0D THEN
        ERROR(Text001, 'Date of Birth');
      Age := (CurrentDate - DateOfBirth) DIV 365;
      EXIT(Age);
    END;

    PROCEDURE ChooseCustomerTemplate@27() ChooseCustTemplate@1001 : Code[10];
    VAR
      CustTemplate@1000 : Record 5105;
    BEGIN
      IF CONFIRM(Text020,TRUE,"No.",Name) THEN BEGIN
        IF PAGE.RUNMODAL(0,CustTemplate) = ACTION::LookupOK THEN
          EXIT(CustTemplate.Code)
        ELSE
          ERROR(Text022);
      END ELSE
        EXIT;
    END;

    PROCEDURE CreateSubscriberContract@1000000000();
    VAR
      Subscriber@1000000001 : Record 50001;
      SubsContract@1000000000 : Record 50005;
    BEGIN
      IF NOT CONFIRM(Text003,FALSE,"No.") THEN
        EXIT;

      TESTFIELD("Customer No.");

      WITH SubsContract DO BEGIN
        INIT;
        SubscriptionSetup.GET;
        SubscriptionSetup.TESTFIELD("Subscriber Contract Nos.");
        IF NoSeriesMgt.SelectSeries(SubscriptionSetup."Subscriber Contract Nos.",'',"No. Series") THEN BEGIN
          NoSeriesMgt.SetSeries(SubsContract."No.");
          "Subscriber No." := Rec."No.";
          INSERT(TRUE);
        END;
      END;
      COMMIT;
      PAGE.RUN(PAGE::"Subscriber Contracts",SubsContract);
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   06.03.2007   KKE   New table for Subscriber Master
      002   25.07.2008   KKE   Add new field "Provice"
    }
    END.
  }
}

OBJECT Table 50002 General Master Setup
{
  OBJECT-PROPERTIES
  {
    Date=12/12/11;
    Time=[ 2:17:37 PM];
    Modified=Yes;
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=General Master Setup;
    LookupPageID=Page50004;
  }
  FIELDS
  {
    { 1   ;   ;Type                ;Option        ;OptionString=Occupation,Position,Education,Zone Area,Customer Type,Resource Lead,Resource Channel,,Credit Card Bank,Credit Card Type,Call Category,Complaint Topic }
    { 2   ;   ;Code                ;Code10        ;CaptionML=[ENU=Code;
                                                              THA=รหัส];
                                                   NotBlank=Yes }
    { 3   ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              THA=คำอธิบาย] }
  }
  KEYS
  {
    {    ;Type,Code                               ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut
      PTH : Phitsanu Thoranasoonthorn

      No.   Date         Sign  Description
      ----------------------------------------
      001   06.03.2007   KKE   New table for General Master Setup
      002   02.07.2008   PTH   Add New 2 Option for Filed "Type" ...,Credit Card Type,Call Category,Complaint Topic.
    }
    END.
  }
}

OBJECT Table 50003 Credit Card
{
  OBJECT-PROPERTIES
  {
    Date=10/24/07;
    Time=[ 5:20:47 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
  }
  FIELDS
  {
    { 1   ;   ;Bank                ;Code10        ;TableRelation="General Master Setup".Code WHERE (Type=CONST(Credit Card Bank)) }
    { 2   ;   ;Credit Card Type    ;Code10        ;TableRelation="General Master Setup".Code WHERE (Type=CONST(Credit Card Type)) }
    { 3   ;   ;Start Date          ;Date           }
    { 4   ;   ;End Date            ;Date           }
    { 5   ;   ;% Charge Fee (Cust.);Decimal       ;DecimalPlaces=0:2;
                                                   MinValue=0;
                                                   MaxValue=100 }
    { 6   ;   ;VAT % for Charge Fee;Decimal       ;DecimalPlaces=0:2;
                                                   MinValue=0;
                                                   MaxValue=100 }
    { 7   ;   ;% Charge Fee (Bank) ;Decimal       ;DecimalPlaces=0:2;
                                                   MinValue=0;
                                                   MaxValue=100 }
  }
  KEYS
  {
    {    ;Bank,Credit Card Type,Start Date        ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   06.03.2007   KKE   New table for Credit Card - Subscription Module
    }
    END.
  }
}

OBJECT Table 50004 Promotion
{
  OBJECT-PROPERTIES
  {
    Date=08/11/11;
    Time=11:49:58 AM;
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               IF "No." = '' THEN BEGIN
                 MagazineAdsSetup.GET;
                 MagazineAdsSetup.TESTFIELD("Promotion Nos.");
                 NoSeriesMgt.InitSeries(MagazineAdsSetup."Promotion Nos.",xRec."No. Series",0D,"No.","No. Series");
               END;

               "Promotion Date" := WORKDATE;
             END;

    OnDelete=VAR
               SubscriberContract@1000000000 : Record 50005;
             BEGIN
               SubscriberContract.SETRANGE("Promotion Code","No.");
               IF SubscriberContract.FIND('-') THEN
                 ERROR(Text001,"No.",SubscriberContract."No.");
             END;

    OnRename=BEGIN
               ERROR(Text000,TABLECAPTION);
             END;

    LookupPageID=Page50008;
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20        ;OnValidate=BEGIN
                                                                IF "No." <> xRec."No." THEN BEGIN
                                                                  MagazineAdsSetup.GET;
                                                                  NoSeriesMgt.TestManual(MagazineAdsSetup."Promotion Nos.");
                                                                  "No. Series" := '';
                                                                END;
                                                              END;
                                                               }
    { 2   ;   ;Description         ;Text50         }
    { 3   ;   ;Promotion Date      ;Date           }
    { 4   ;   ;Start Date          ;Date           }
    { 5   ;   ;End Date            ;Date           }
    { 6   ;   ;Limitation Quantity ;Decimal       ;DecimalPlaces=0:5 }
    { 7   ;   ;Magazine Item Code  ;Code20        ;TableRelation=Item WHERE (Item Type=CONST(Magazine));
                                                   OnValidate=BEGIN
                                                                IF Item.GET("Magazine Item Code") THEN BEGIN
                                                                  "Magazine Code" := Item."Magazine Code";
                                                                  "Volume No." := Item."Volume No.";
                                                                  "Issue No." := Item."Issue No.";
                                                                  "Issue Date" := Item."Issue Date";
                                                                END ELSE BEGIN
                                                                  "Magazine Code" := '';
                                                                  "Volume No." := '';
                                                                  "Issue No." := '';
                                                                  "Issue Date" := 0D;
                                                                END;
                                                              END;
                                                               }
    { 8   ;   ;Magazine Code       ;Code20        ;TableRelation=Magazine;
                                                   Editable=No }
    { 9   ;   ;Volume No.          ;Code20        ;TableRelation=Volume;
                                                   Editable=No }
    { 10  ;   ;Issue No.           ;Code20        ;TableRelation="Issue No.";
                                                   Editable=No }
    { 11  ;   ;Issue Date          ;Date          ;Editable=No }
    { 12  ;   ;Promotion Type      ;Option        ;OnValidate=BEGIN
                                                                CASE "Promotion Type" OF
                                                                  "Promotion Type"::" ":
                                                                    BEGIN
                                                                      TESTFIELD("Discount Value",0);
                                                                      TESTFIELD("Premium Flag",FALSE);
                                                                      TESTFIELD("Free Magazine Flag",FALSE);
                                                                    END;
                                                                  "Promotion Type"::Discount:
                                                                    BEGIN
                                                                      TESTFIELD("Premium Flag",FALSE);
                                                                      TESTFIELD("Free Magazine Flag",FALSE);
                                                                    END;
                                                                  "Promotion Type"::Premium:
                                                                    BEGIN
                                                                      TESTFIELD("Discount Value",0);
                                                                    END;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Promotion Type;
                                                              THA=ประเภทโปรโมชั่น];
                                                   OptionString=[ ,Discount,Premium,Both] }
    { 13  ;   ;Discount Type       ;Option        ;OnValidate=BEGIN
                                                                VALIDATE("Discount Value");
                                                                VALIDATE("Promotion Price");
                                                              END;

                                                   CaptionML=[ENU=Discount Type;
                                                              THA=ประเภทส่วนลด];
                                                   OptionString=[ ,Amount,Percentage] }
    { 14  ;   ;Discount Value      ;Decimal       ;OnValidate=BEGIN
                                                                IF (("Discount Value" > 100) OR ("Discount Value" < 0)) AND ("Discount Type" = "Discount Type"::Percentage) THEN
                                                                  ERROR(Text002);
                                                                VALIDATE("Promotion Price");
                                                              END;

                                                   MinValue=0;
                                                   AutoFormatType=1 }
    { 15  ;   ;Credit Card Bank    ;Text30         }
    { 16  ;   ;Promotion Duration  ;Option        ;CaptionML=[ENU=Promotion Duration;
                                                              THA=รูปแบบโปรโมชั่น];
                                                   OptionString=[ ,2 Months,3 Months,6 Months,1 Year,2 Years,18 Months,3 Years] }
    { 17  ;   ;Promotion Price     ;Decimal       ;OnValidate=BEGIN
                                                                IF "Discount Type" = "Discount Type"::Percentage THEN
                                                                  "Promotion Net Price" := "Promotion Price" - ROUND("Promotion Price" * "Discount Value" /100)
                                                                ELSE
                                                                  "Promotion Net Price" := "Promotion Price" - "Discount Value";
                                                              END;

                                                   CaptionML=[ENU=Promotion Price;
                                                              THA=ราคาขาย];
                                                   AutoFormatType=1 }
    { 18  ;   ;Promotion Quantity  ;Decimal       ;CaptionML=[ENU=Promotion Quantity;
                                                              THA=ปริมาณ];
                                                   DecimalPlaces=0:5 }
    { 19  ;   ;Promotion Net Price ;Decimal       ;CaptionML=[ENU=Promotion Net Price;
                                                              THA=ราคาสุทธิ];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 20  ;   ;Premium Flag        ;Boolean       ;OnValidate=BEGIN
                                                                IF "Premium Flag" = FALSE THEN BEGIN
                                                                  TESTFIELD("Premium Item 1",'');
                                                                  TESTFIELD("Premium Quantity 1",0);
                                                                  TESTFIELD("Premium Item 2",'');
                                                                  TESTFIELD("Premium Quantity 2",0);
                                                                  TESTFIELD("Premium Item 3",'');
                                                                  TESTFIELD("Premium Quantity 3",0);
                                                                  TESTFIELD("Premium Item 4",'');
                                                                  TESTFIELD("Premium Quantity 4",0);
                                                                  TESTFIELD("Premium Item 5",'');
                                                                  TESTFIELD("Premium Quantity 5",0);
                                                                END;
                                                              END;
                                                               }
    { 21  ;   ;Premium Item 1      ;Code20        ;TableRelation=Item WHERE (Item Type=CONST(Premium));
                                                   OnValidate=BEGIN
                                                                IF "Premium Item 1" = '' THEN
                                                                  "Premium Quantity 1" := 0
                                                                ELSE
                                                                  "Premium Quantity 1" := 1;
                                                              END;
                                                               }
    { 22  ;   ;Premium Quantity 1  ;Decimal       ;OnValidate=BEGIN
                                                                IF "Premium Quantity 1" <> 0 THEN
                                                                  TESTFIELD("Premium Item 1");
                                                              END;

                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 23  ;   ;Premium Item 2      ;Code20        ;TableRelation=Item WHERE (Item Type=CONST(Premium));
                                                   OnValidate=BEGIN
                                                                IF "Premium Item 2" = '' THEN
                                                                  "Premium Quantity 2" := 0
                                                                ELSE
                                                                  "Premium Quantity 2" := 1;
                                                              END;
                                                               }
    { 24  ;   ;Premium Quantity 2  ;Decimal       ;OnValidate=BEGIN
                                                                IF "Premium Quantity 2" <> 0 THEN
                                                                  TESTFIELD("Premium Item 2");
                                                              END;

                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 25  ;   ;Premium Item 3      ;Code20        ;TableRelation=Item WHERE (Item Type=CONST(Premium));
                                                   OnValidate=BEGIN
                                                                IF "Premium Item 3" = '' THEN
                                                                  "Premium Quantity 3" := 0
                                                                ELSE
                                                                  "Premium Quantity 3" := 1;
                                                              END;
                                                               }
    { 26  ;   ;Premium Quantity 3  ;Decimal       ;OnValidate=BEGIN
                                                                IF "Premium Quantity 3" <> 0 THEN
                                                                  TESTFIELD("Premium Item 3");
                                                              END;

                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 27  ;   ;Premium Item 4      ;Code20        ;TableRelation=Item WHERE (Item Type=CONST(Premium));
                                                   OnValidate=BEGIN
                                                                IF "Premium Item 4" = '' THEN
                                                                  "Premium Quantity 4" := 0
                                                                ELSE
                                                                  "Premium Quantity 4" := 1;
                                                              END;
                                                               }
    { 28  ;   ;Premium Quantity 4  ;Decimal       ;OnValidate=BEGIN
                                                                IF "Premium Quantity 4" <> 0 THEN
                                                                  TESTFIELD("Premium Item 4");
                                                              END;

                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 29  ;   ;Premium Item 5      ;Code20        ;TableRelation=Item WHERE (Item Type=CONST(Premium));
                                                   OnValidate=BEGIN
                                                                IF "Premium Item 5" = '' THEN
                                                                  "Premium Quantity 5" := 0
                                                                ELSE
                                                                  "Premium Quantity 5" := 1;
                                                              END;
                                                               }
    { 30  ;   ;Premium Quantity 5  ;Decimal       ;OnValidate=BEGIN
                                                                IF "Premium Quantity 5" <> 0 THEN
                                                                  TESTFIELD("Premium Item 5");
                                                              END;

                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 31  ;   ;Free Magazine Flag  ;Boolean       ;OnValidate=BEGIN
                                                                IF "Free Magazine Flag" = FALSE THEN BEGIN
                                                                  TESTFIELD("Free Magazine Code",'');
                                                                  TESTFIELD("Free Magazine Quantity",0);
                                                                END;
                                                              END;
                                                               }
    { 32  ;   ;Free Magazine Code  ;Code20        ;TableRelation=Magazine;
                                                   OnValidate=BEGIN
                                                                IF "Free Magazine Code" <> '' THEN BEGIN
                                                                  TESTFIELD("Free Magazine Flag",TRUE);
                                                                  TESTFIELD("Free Magazine Code","Magazine Code");
                                                                END ELSE
                                                                  VALIDATE("Free Magazine Quantity",0);
                                                              END;
                                                               }
    { 33  ;   ;Free Magazine Quantity;Decimal     ;OnValidate=BEGIN
                                                                IF "Free Magazine Quantity" <> 0 THEN
                                                                  TESTFIELD("Free Magazine Code");
                                                              END;

                                                   DecimalPlaces=0:5 }
    { 34  ;   ;Free Other Magazine Code;Code20    ;TableRelation=Magazine;
                                                   OnValidate=BEGIN
                                                                IF "Free Other Magazine Code" <> '' THEN BEGIN
                                                                  IF "Free Other Magazine Code" = "Magazine Code" THEN
                                                                    ERROR(Text003,FIELDCAPTION("Free Other Magazine Code"),FIELDCAPTION("Magazine Code"));
                                                                END ELSE
                                                                  VALIDATE("Free Other Magazine Quantity",0);
                                                              END;
                                                               }
    { 35  ;   ;Free Other Magazine Quantity;Decimal;
                                                   OnValidate=BEGIN
                                                                IF "Free Other Magazine Quantity" <> 0 THEN
                                                                  TESTFIELD("Free Other Magazine Code");
                                                              END;

                                                   DecimalPlaces=0:5 }
    { 49  ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Comment Line" WHERE (Table Name=CONST(Promotion),
                                                                                           No.=FIELD(No.)));
                                                   CaptionML=[ENU=Comment;
                                                              THA=ข้อคิดเห็น];
                                                   Editable=No }
    { 50  ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=No. Series;
                                                              THA=ชุดหมายเลข] }
    { 51  ;   ;Comment Text        ;Text30         }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      MagazineAdsSetup@1000000000 : Record 50000;
      NoSeriesMgt@1000000001 : Codeunit 396;
      Text000@1000000006 : TextConst 'ENU=You cannot rename a %1.;THA=คุณไม่สามารถเปลี่ยนชื่อ %1';
      Text001@1000000002 : TextConst 'ENU=You cannot delete promotion %1 because it has been used by subscriber contract %2.';
      Text002@1000000004 : TextConst 'ENU=Invalid Discount Value.';
      Item@1000000005 : Record 27;
      Text003@1000000003 : TextConst 'ENU=%1 and %2 must be different.';

    PROCEDURE AssistEdit@2(OldPromotion@1000 : Record 50004) : Boolean;
    VAR
      Promotion@1001 : Record 50004;
    BEGIN
      WITH Promotion DO BEGIN
        Promotion := Rec;
        MagazineAdsSetup.GET;
        MagazineAdsSetup.TESTFIELD("Promotion Nos.");
        IF NoSeriesMgt.SelectSeries(MagazineAdsSetup."Promotion Nos.",OldPromotion."No. Series","No. Series") THEN BEGIN
          NoSeriesMgt.SetSeries("No.");
          Rec := Promotion;
          EXIT(TRUE);
        END;
      END;
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   06.03.2007   KKE   New table for Promotion - Subscription Module
    }
    END.
  }
}

OBJECT Table 50005 Subscriber Contract
{
  OBJECT-PROPERTIES
  {
    Date=05/15/12;
    Time=[ 4:41:16 PM];
    Modified=Yes;
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               IF "No." = '' THEN BEGIN
                 SubscriptionSetup.GET;
                 SubscriptionSetup.TESTFIELD("Subscriber Contract Nos.");
                 NoSeriesMgt.InitSeries(SubscriptionSetup."Subscriber Contract Nos.",xRec."No. Series",0D,"No.","No. Series");
               END;

               "Subscription Date" := WORKDATE;
             END;

    OnModify=BEGIN
               IF "Payment Option" = xRec."Payment Option" THEN
               TESTFIELD("Contract Status","Contract Status"::Open);
             END;

    OnDelete=VAR
               RenewFromSubContract@1000000000 : Record 50005;
             BEGIN
               IF "Contract Status" IN ["Contract Status"::Confirm,"Contract Status"::Released] THEN
                 ERROR(Text010);

               SSContractLE.SETPERMISSIONFILTER;
               SSContractLE.RESET;
               SSContractLE.SETRANGE("Subscriber Contract No.","No.");
               IF SSContractLE.FIND('-') THEN
                 ERROR(Text010,"No.");

               IF "Renew Contract From" <> '' THEN BEGIN
                 RenewFromSubContract.GET("Renew Contract From");
                 RenewFromSubContract."Renew Contract To" := '';
                 RenewFromSubContract.MODIFY;
               END;
             END;

    OnRename=BEGIN
               ERROR(Text000,TABLECAPTION);
             END;

    LookupPageID=Page50010;
    DrillDownPageID=Page50010;
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20        ;OnValidate=BEGIN
                                                                IF "No." <> xRec."No." THEN BEGIN
                                                                  SubscriptionSetup.GET;
                                                                  NoSeriesMgt.TestManual(SubscriptionSetup."Subscriber Contract Nos.");
                                                                  "No. Series" := '';
                                                                END;
                                                              END;
                                                               }
    { 2   ;   ;Subscriber No.      ;Code20        ;TableRelation=Subscriber;
                                                   OnValidate=BEGIN
                                                                SSContractLE.SETPERMISSIONFILTER;
                                                                SSContractLE.RESET;
                                                                SSContractLE.SETRANGE("Subscriber Contract No.","No.");
                                                                IF SSContractLE.FIND('-') THEN
                                                                  ERROR(Text018,FIELDCAPTION("Subscriber No."));
                                                              END;
                                                               }
    { 3   ;   ;Subscription Date   ;Date          ;OnValidate=BEGIN
                                                                VALIDATE("Credit Card Bank Amount");
                                                              END;
                                                               }
    { 4   ;   ;Contract Type       ;Option        ;OptionString=[ ,Subscriber,Complimentary] }
    { 5   ;   ;Contract Sub Type   ;Option        ;OptionString=[ ,SALES & MKT VIP,SP CHANNEL,MD VIP,VIP ED,Member,EVENT,EMBASSY,PRESS] }
    { 6   ;   ;VIP Type            ;Code10         }
    { 7   ;   ;Contract Status     ;Option        ;OptionString=Open,Confirm,Released,Closed,Cancelled;
                                                   Editable=No }
    { 8   ;   ;Payment Status      ;Option        ;OptionString=Open,Paid;
                                                   Editable=No }
    { 9   ;   ;Contract Category   ;Option        ;OptionString=New,Renew,Promotion }
    { 10  ;   ;Renew Contract From ;Code20        ;TableRelation="Subscriber Contract";
                                                   Editable=No }
    { 11  ;   ;Renew Contract To   ;Code20        ;TableRelation="Subscriber Contract";
                                                   Editable=No }
    { 12  ;   ;Related Contract No.;Code20        ;TableRelation="Subscriber Contract";
                                                   OnValidate=BEGIN
                                                                IF "Related Contract No." <> '' THEN
                                                                  TESTFIELD("Free Magazine Flag",TRUE)
                                                                ELSE BEGIN
                                                                  "Free Other Magazine Code" := '';
                                                                  "Free Other Magazine Quantity" := 0;
                                                                END;
                                                              END;
                                                               }
    { 13  ;   ;Resource Lead       ;Code10        ;TableRelation="General Master Setup".Code WHERE (Type=CONST(Resource Lead)) }
    { 14  ;   ;Resource Channel    ;Code10        ;TableRelation="General Master Setup".Code WHERE (Type=CONST(Resource Channel)) }
    { 15  ;   ;Shipping Agent Code ;Code20        ;TableRelation=Customer WHERE (Shipping Agent=CONST(Yes)) }
    { 16  ;   ;Magazine Code       ;Code20        ;TableRelation=Magazine;
                                                   OnValidate=BEGIN
                                                                IF "Starting Magazine Item No." <> '' THEN BEGIN
                                                                  Item.GET("Starting Magazine Item No.");
                                                                  TESTFIELD("Magazine Code",Item."Magazine Code");
                                                                END ELSE
                                                                IF "Ending Magazine Item No." <> '' THEN BEGIN
                                                                  Item.GET("Ending Magazine Item No.");
                                                                  TESTFIELD("Magazine Code",Item."Magazine Code");
                                                                END;
                                                                IF Promotion.GET("Promotion Code") THEN
                                                                  TESTFIELD("Magazine Code",Promotion."Magazine Code");
                                                              END;
                                                               }
    { 17  ;   ;Promotion Code      ;Code20        ;TableRelation=Promotion;
                                                   OnValidate=BEGIN
                                                                IF Promotion.GET("Promotion Code") THEN BEGIN
                                                                  "Promotion Type" := Promotion."Promotion Type";
                                                                  "Promotion Price" := Promotion."Promotion Price";
                                                                  "Discount Type" := Promotion."Discount Type";
                                                                  "Discount Value" := Promotion."Discount Value";
                                                                  "Promotion Net Price" := Promotion."Promotion Net Price";
                                                                  VALIDATE("Promotion Quantity",Promotion."Promotion Quantity");
                                                                  "Promotion Duration" := Promotion."Promotion Duration";
                                                                  "Premium Flag" := Promotion."Premium Flag";
                                                                  "Premium Item 1" := Promotion."Premium Item 1";
                                                                  "Premium Quantity 1" := Promotion."Premium Quantity 1";
                                                                  "Premium Item 2" := Promotion."Premium Item 2";
                                                                  "Premium Quantity 2" := Promotion."Premium Quantity 2";
                                                                  "Premium Item 3" := Promotion."Premium Item 3";
                                                                  "Premium Quantity 3" := Promotion."Premium Quantity 3";
                                                                  "Premium Item 4" := Promotion."Premium Item 4";
                                                                  "Premium Quantity 4" := Promotion."Premium Quantity 4";
                                                                  "Premium Item 5" := Promotion."Premium Item 5";
                                                                  "Premium Quantity 5" := Promotion."Premium Quantity 5";
                                                                  "Free Magazine Flag" := Promotion."Free Magazine Flag";
                                                                  "Free Magazine Code" := Promotion."Free Magazine Code";
                                                                  "Free Magazine Quantity" := Promotion."Free Magazine Quantity";
                                                                  "Free Other Magazine Code" := Promotion."Free Other Magazine Code";
                                                                  "Free Other Magazine Quantity" := Promotion."Free Other Magazine Quantity";
                                                                  TESTFIELD("Magazine Code",Promotion."Magazine Code");
                                                                END ELSE BEGIN
                                                                  "Promotion Type" := Promotion."Promotion Type"::" ";
                                                                  "Promotion Price" := 0;
                                                                  "Discount Type" := 0;
                                                                  "Discount Value" := 0;
                                                                  "Promotion Net Price" := 0;
                                                                  VALIDATE("Promotion Quantity",0);
                                                                  "Promotion Duration" := 0;
                                                                  "Premium Flag" := FALSE;
                                                                  "Premium Item 1" := '';
                                                                  "Premium Quantity 1" := 0;
                                                                  "Premium Item 2" := '';
                                                                  "Premium Quantity 2" := 0;
                                                                  "Premium Item 3" := '';
                                                                  "Premium Quantity 3" := 0;
                                                                  "Premium Item 4" := '';
                                                                  "Premium Quantity 4" := 0;
                                                                  "Premium Item 5" := '';
                                                                  "Premium Quantity 5" := 0;
                                                                  "Free Magazine Flag" := FALSE;
                                                                  "Free Magazine Code" := '';
                                                                  "Free Magazine Quantity" := 0;
                                                                  "Free Other Magazine Code" := '';
                                                                  "Free Other Magazine Quantity" := 0;
                                                                END;
                                                                VALIDATE("Credit Card Charge Fee");
                                                                VALIDATE("Promotion Quantity");
                                                              END;
                                                               }
    { 18  ;   ;Promotion Price     ;Decimal       ;OnValidate=BEGIN
                                                                IF "Discount Type" = "Discount Type"::Percentage THEN
                                                                  "Promotion Net Price" := "Promotion Price" - ROUND("Promotion Price" * "Discount Value" /100)
                                                                ELSE
                                                                  "Promotion Net Price" := "Promotion Price" - "Discount Value";
                                                                VALIDATE("Promotion Net Price");
                                                              END;

                                                   AutoFormatType=1 }
    { 19  ;   ;Discount Type       ;Option        ;OnValidate=BEGIN
                                                                VALIDATE("Discount Value");
                                                                VALIDATE("Promotion Price");
                                                              END;

                                                   OptionString=[ ,Amount,Percentage] }
    { 20  ;   ;Discount Value      ;Decimal       ;OnValidate=BEGIN
                                                                IF (("Discount Value" > 100) OR ("Discount Value" < 0)) AND ("Discount Type" = "Discount Type"::Percentage) THEN
                                                                  ERROR(Text002);
                                                                VALIDATE("Promotion Price");
                                                              END;

                                                   MinValue=0;
                                                   AutoFormatType=1 }
    { 21  ;   ;Promotion Net Price ;Decimal       ;OnValidate=BEGIN
                                                                VALIDATE("Credit Card Charge Fee");
                                                              END;

                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 22  ;   ;Promotion Quantity  ;Decimal       ;OnValidate=BEGIN
                                                                "Contract Quantity" := "Promotion Quantity" + "Free Magazine Quantity";
                                                              END;

                                                   DecimalPlaces=0:5 }
    { 23  ;   ;Promotion Duration  ;Option        ;OptionString=[ ,2 Months,3 Months,6 Months,1 Year,2 Years,18 Months,3 Years] }
    { 24  ;   ;Contract Quantity   ;Decimal       ;DecimalPlaces=0:5;
                                                   Editable=No }
    { 25  ;   ;Contract Net Price  ;Decimal       ;OnValidate=BEGIN
                                                                //GKU : #002 +
                                                                //"Contract Net Price" := "Promotion Net Price" + "Credit Card Charge Fee";
                                                                "Contract Net Price" := "Promotion Net Price" + "Credit Charge Amount (Cust.)";
                                                              END;

                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 26  ;   ;Starting Magazine Item No.;Code20  ;TableRelation=Item WHERE (Item Type=CONST(Magazine),
                                                                             Magazine Code=FIELD(Magazine Code));
                                                   OnValidate=VAR
                                                                l_Item@1000000000 : Record 27;
                                                              BEGIN
                                                                "Starting Volume No." := '';
                                                                "Starting Issue No." := '';
                                                                "Starting Issue Date" := 0D;
                                                                IF Item.GET("Starting Magazine Item No.") THEN BEGIN
                                                                  TESTFIELD("Magazine Code",Item."Magazine Code");
                                                                  "Starting Volume No." := Item."Volume No.";
                                                                  "Starting Issue No." := Item."Issue No.";
                                                                  "Starting Issue Date" := Item."Issue Date";
                                                                END;
                                                                ItemFilter := STRSUBSTNO('%1..%2',"Starting Magazine Item No.","Ending Magazine Item No.");
                                                                IF ItemFilter = '..' THEN
                                                                  EXIT;
                                                                l_Item.SETFILTER("No.",ItemFilter);
                                                                l_Item.FIND('-');
                                                              END;
                                                               }
    { 27  ;   ;Starting Volume No. ;Code20        ;TableRelation=Volume;
                                                   OnValidate=BEGIN
                                                                VALIDATE("Starting Issue No.");
                                                              END;

                                                   Editable=No }
    { 28  ;   ;Starting Issue No.  ;Code20        ;TableRelation="Issue No.";
                                                   OnValidate=BEGIN
                                                                "Starting Issue Date" := 0D;
                                                                IF MagazineVolumeIssue.GET("Magazine Code","Starting Volume No.","Starting Issue No.") THEN
                                                                  "Starting Issue Date" := MagazineVolumeIssue."Issue Date";
                                                              END;

                                                   Editable=No }
    { 29  ;   ;Starting Issue Date ;Date          ;Editable=No }
    { 30  ;   ;Ending Magazine Item No.;Code20    ;TableRelation=Item WHERE (Item Type=CONST(Magazine),
                                                                             Magazine Code=FIELD(Magazine Code));
                                                   OnValidate=VAR
                                                                l_Item@1000000000 : Record 27;
                                                              BEGIN
                                                                "Ending Volume No." := '';
                                                                "Ending Issue No." := '';
                                                                "Ending Issue Date" := 0D;
                                                                IF Item.GET("Ending Magazine Item No.") THEN BEGIN
                                                                  TESTFIELD("Magazine Code",Item."Magazine Code");
                                                                  "Ending Volume No." := Item."Volume No.";
                                                                  "Ending Issue No." := Item."Issue No.";
                                                                  "Ending Issue Date" := Item."Issue Date";
                                                                END;
                                                                ItemFilter := STRSUBSTNO('%1..%2',"Starting Magazine Item No.","Ending Magazine Item No.");
                                                                IF ItemFilter = '..' THEN
                                                                  EXIT;
                                                                l_Item.SETFILTER("No.",ItemFilter);
                                                                l_Item.FIND('-');
                                                              END;
                                                               }
    { 31  ;   ;Ending Volume No.   ;Code20        ;TableRelation=Volume;
                                                   Editable=No }
    { 32  ;   ;Ending Issue No.    ;Code20        ;TableRelation="Issue No.";
                                                   OnValidate=BEGIN
                                                                "Ending Issue Date" := 0D;
                                                                IF MagazineVolumeIssue.GET("Magazine Code","Ending Volume No.","Ending Issue No.") THEN
                                                                  "Ending Issue Date" := MagazineVolumeIssue."Issue Date";
                                                              END;

                                                   Editable=No }
    { 33  ;   ;Ending Issue Date   ;Date          ;Editable=No }
    { 34  ;   ;Expired Date        ;Date           }
    { 35  ;   ;Premium Flag        ;Boolean        }
    { 36  ;   ;Premium Item 1      ;Code20        ;TableRelation=Item WHERE (Item Type=CONST(Premium));
                                                   OnValidate=BEGIN
                                                                IF "Premium Item 1" = '' THEN
                                                                  "Premium Quantity 1" := 0
                                                                ELSE
                                                                  "Premium Quantity 1" := 1;
                                                              END;
                                                               }
    { 37  ;   ;Premium Quantity 1  ;Decimal       ;OnValidate=BEGIN
                                                                IF "Premium Quantity 1" <> 0 THEN
                                                                  TESTFIELD("Premium Item 1");
                                                              END;

                                                   DecimalPlaces=0:5 }
    { 38  ;   ;Premium Item 2      ;Code20        ;TableRelation=Item WHERE (Item Type=CONST(Premium));
                                                   OnValidate=BEGIN
                                                                IF "Premium Item 2" = '' THEN
                                                                  "Premium Quantity 2" := 0
                                                                ELSE
                                                                  "Premium Quantity 2" := 1;
                                                              END;
                                                               }
    { 39  ;   ;Premium Quantity 2  ;Decimal       ;OnValidate=BEGIN
                                                                IF "Premium Quantity 2" <> 0 THEN
                                                                  TESTFIELD("Premium Item 2");
                                                              END;

                                                   DecimalPlaces=0:5 }
    { 40  ;   ;Premium Item 3      ;Code20        ;TableRelation=Item WHERE (Item Type=CONST(Premium));
                                                   OnValidate=BEGIN
                                                                IF "Premium Item 3" = '' THEN
                                                                  "Premium Quantity 3" := 0
                                                                ELSE
                                                                  "Premium Quantity 3" := 1;
                                                              END;
                                                               }
    { 41  ;   ;Premium Quantity 3  ;Decimal       ;OnValidate=BEGIN
                                                                IF "Premium Quantity 3" <> 0 THEN
                                                                  TESTFIELD("Premium Item 3");
                                                              END;

                                                   DecimalPlaces=0:5 }
    { 42  ;   ;Premium Item 4      ;Code20        ;TableRelation=Item WHERE (Item Type=CONST(Premium));
                                                   OnValidate=BEGIN
                                                                IF "Premium Item 4" = '' THEN
                                                                  "Premium Quantity 4" := 0
                                                                ELSE
                                                                  "Premium Quantity 4" := 1;
                                                              END;
                                                               }
    { 43  ;   ;Premium Quantity 4  ;Decimal       ;OnValidate=BEGIN
                                                                IF "Premium Quantity 4" <> 0 THEN
                                                                  TESTFIELD("Premium Item 4");
                                                              END;

                                                   DecimalPlaces=0:5 }
    { 44  ;   ;Premium Item 5      ;Code20        ;TableRelation=Item WHERE (Item Type=CONST(Premium));
                                                   OnValidate=BEGIN
                                                                IF "Premium Item 5" = '' THEN
                                                                  "Premium Quantity 5" := 0
                                                                ELSE
                                                                  "Premium Quantity 5" := 1;
                                                              END;
                                                               }
    { 45  ;   ;Premium Quantity 5  ;Decimal       ;OnValidate=BEGIN
                                                                IF "Premium Quantity 5" <> 0 THEN
                                                                  TESTFIELD("Premium Item 5");
                                                              END;

                                                   DecimalPlaces=0:5 }
    { 46  ;   ;Free Magazine Flag  ;Boolean       ;OnValidate=BEGIN
                                                                IF "Free Magazine Flag" = FALSE THEN BEGIN
                                                                  TESTFIELD("Free Magazine Code",'');
                                                                  TESTFIELD("Related Contract No.",'');
                                                                END;
                                                              END;
                                                               }
    { 47  ;   ;Free Magazine Code  ;Code20        ;TableRelation=Magazine;
                                                   OnValidate=BEGIN
                                                                IF "Free Magazine Code" <> '' THEN BEGIN
                                                                  TESTFIELD("Free Magazine Flag",TRUE);
                                                                  TESTFIELD("Free Magazine Code","Magazine Code");
                                                                END ELSE
                                                                  VALIDATE("Free Magazine Quantity",0);
                                                              END;
                                                               }
    { 48  ;   ;Free Magazine Quantity;Decimal     ;OnValidate=BEGIN
                                                                IF "Free Magazine Quantity" <> 0 THEN
                                                                  TESTFIELD("Free Magazine Code");

                                                                "Contract Quantity" := "Promotion Quantity" + "Free Magazine Quantity";
                                                              END;

                                                   DecimalPlaces=0:5 }
    { 49  ;   ;Premium Start Volume No.;Code20    ;TableRelation=Volume;
                                                   OnValidate=BEGIN
                                                                VALIDATE("Premium Start Issue No.");
                                                              END;
                                                               }
    { 50  ;   ;Premium Start Issue No.;Code20     ;TableRelation="Issue No.";
                                                   OnValidate=BEGIN
                                                                "Premium Start Issue Date" := 0D;
                                                                IF MagazineVolumeIssue.GET("Magazine Code","Premium Start Volume No.","Premium Start Issue No.") THEN
                                                                  "Premium Start Issue Date" := MagazineVolumeIssue."Issue Date";
                                                              END;
                                                               }
    { 51  ;   ;Premium Start Issue Date;Date      ;Editable=No }
    { 52  ;   ;Premium End Volume No.;Code20      ;TableRelation=Volume;
                                                   OnValidate=BEGIN
                                                                VALIDATE("Premium End Issue No.");
                                                              END;
                                                               }
    { 53  ;   ;Premium End Issue No.;Code20       ;TableRelation="Issue No.";
                                                   OnValidate=BEGIN
                                                                "Premium End Issue Date" := 0D;
                                                                IF MagazineVolumeIssue.GET("Magazine Code","Premium End Volume No.","Premium End Issue No.") THEN
                                                                  "Premium End Issue Date" := MagazineVolumeIssue."Issue Date";
                                                              END;
                                                               }
    { 54  ;   ;Premium End Issue Date;Date        ;Editable=No }
    { 55  ;   ;Payment Remark      ;Text50         }
    { 56  ;   ;Payment Method Code ;Code10        ;TableRelation="Payment Method" }
    { 57  ;   ;Receipt No.         ;Code20         }
    { 58  ;   ;Receipt Amount      ;Decimal       ;AutoFormatType=1 }
    { 59  ;   ;Credit Card Bank    ;Code10        ;TableRelation="General Master Setup".Code WHERE (Type=CONST(Credit Card Bank));
                                                   OnValidate=BEGIN
                                                                VALIDATE("Credit Card Bank Amount");
                                                              END;
                                                               }
    { 60  ;   ;Credit Card Type    ;Code10        ;TableRelation="General Master Setup".Code WHERE (Type=CONST(Credit Card Type));
                                                   OnValidate=BEGIN
                                                                VALIDATE("Credit Card Bank Amount");
                                                              END;
                                                               }
    { 61  ;   ;Credit Card No.     ;Code20         }
    { 62  ;   ;Credit Card 3Last No.;Text3         }
    { 63  ;   ;Credit Card Expire Date;Text30     ;OnValidate=BEGIN
                                                                VALIDATE("Credit Card Base Amount");
                                                              END;
                                                               }
    { 64  ;   ;Credit Card Bank Amount;Decimal    ;OnValidate=BEGIN
                                                                {---
                                                                "Credit Card Charge Fee" := 0;
                                                                "Credit Card Amount" := 0;
                                                                IF "Credit Card Bank Amount" <> 0 THEN BEGIN
                                                                  TESTFIELD("Subscription Date");
                                                                  CreditCard.SETRANGE(Bank,"Credit Card Bank");
                                                                  CreditCard.SETRANGE("Credit Card Type","Credit Card Type");
                                                                  CreditCard.SETFILTER("End Date",'>=%1',"Subscription Date");
                                                                  IF CreditCard.FIND('-') THEN
                                                                    "Credit Card Charge Fee" :=
                                                                      ROUND(("Credit Card Bank Amount" * CreditCard."% Charge Fee"/100) * (1 + CreditCard."VAT % for Charge Fee"/100));
                                                                  "Credit Card Amount" := "Credit Card Bank Amount" + "Credit Card Charge Fee";
                                                                END;
                                                                VALIDATE("Credit Card Charge Fee");
                                                                ---}
                                                              END;

                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 65  ;   ;Credit Card Charge Fee;Decimal     ;OnValidate=BEGIN
                                                                //GKU : #002
                                                                //"Contract Net Price" := "Promotion Net Price" + "Credit Card Charge Fee";
                                                                "Contract Net Price" := "Promotion Net Price" + "Credit Charge Amount (Cust.)";
                                                              END;

                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 66  ;   ;Credit Card Amount  ;Decimal       ;Editable=No;
                                                   AutoFormatType=1 }
    { 67  ;   ;Bank Code           ;Code20         }
    { 68  ;   ;Bank Branch         ;Code20         }
    { 69  ;   ;Check No.           ;Code20         }
    { 70  ;   ;Check Date          ;Date           }
    { 71  ;   ;Check Amount        ;Decimal       ;AutoFormatType=1 }
    { 72  ;   ;Last SO Magazine Item No.;Code20   ;Editable=No }
    { 73  ;   ;Last SO Date        ;Date          ;Editable=No }
    { 74  ;   ;Last SO Doc. No.    ;Code20        ;Editable=No }
    { 75  ;   ;Last Shipment Magazine Item No;Code20;
                                                   Editable=No }
    { 76  ;   ;Last Shipment Date  ;Date          ;Editable=No }
    { 77  ;   ;Last Shipment Doc. No.;Code20      ;Editable=No }
    { 78  ;   ;Block               ;Boolean        }
    { 79  ;   ;Free Other Magazine Code;Code20    ;TableRelation=Magazine;
                                                   OnValidate=BEGIN
                                                                IF "Free Other Magazine Code" <> '' THEN BEGIN
                                                                  TESTFIELD("Related Contract No.");
                                                                  IF "Free Other Magazine Code" = "Magazine Code" THEN
                                                                    ERROR(Text016,FIELDCAPTION("Free Other Magazine Code"),FIELDCAPTION("Magazine Code"));
                                                                END ELSE
                                                                  VALIDATE("Free Other Magazine Quantity",0);
                                                              END;
                                                               }
    { 80  ;   ;Free Other Magazine Quantity;Decimal;
                                                   OnValidate=BEGIN
                                                                IF "Free Other Magazine Quantity" <> 0 THEN
                                                                  TESTFIELD("Free Other Magazine Code");
                                                              END;

                                                   DecimalPlaces=0:5 }
    { 90  ;   ;Promotion Type      ;Option        ;CaptionML=[ENU=Promotion Type;
                                                              THA=ประเภทโปรโมชั่น];
                                                   OptionString=[ ,Discount,Premium,Both];
                                                   Editable=No }
    { 100 ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Comment Line" WHERE (Table Name=CONST(Subscriber Contract),
                                                                                           No.=FIELD(No.)));
                                                   CaptionML=[ENU=Comment;
                                                              THA=ข้อคิดเห็น];
                                                   Editable=No }
    { 101 ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=No. Series;
                                                              THA=ชุดหมายเลข] }
    { 200 ;   ;Credit Card Base Amount;Decimal    ;OnValidate=BEGIN
                                                                "Credit Charge Amount (Cust.)" := 0;
                                                                "Credit Card Bank Amount" := 0;
                                                                "Credit Card Charge Fee" := 0;
                                                                "Credit Card Amount" := 0;
                                                                IF "Credit Card Base Amount" <> 0 THEN BEGIN
                                                                  TESTFIELD("Subscription Date");
                                                                  CreditCard.RESET;
                                                                  CreditCard.SETRANGE(Bank,"Credit Card Bank");
                                                                  CreditCard.SETRANGE("Credit Card Type","Credit Card Type");
                                                                  CreditCard.SETFILTER("End Date",'>=%1',"Subscription Date");
                                                                  IF NOT CreditCard.FIND('-') THEN
                                                                    CreditCard.INIT;

                                                                  //A
                                                                  "Credit Charge Amount (Cust.)" :=
                                                                    ROUND("Credit Card Base Amount" * CreditCard."% Charge Fee (Cust.)" /100,1);  //need integer value
                                                                  //B
                                                                  "Credit Card Amount" := "Credit Card Base Amount" + "Credit Charge Amount (Cust.)";
                                                                  //C = (B* %[Charge Fee (Bank)]) + (B* %[Charge Fee (Bank)] * %7%VAT)
                                                                  "Credit Card Charge Fee" :=
                                                                    ROUND(("Credit Card Amount" * CreditCard."% Charge Fee (Bank)" /100) * (1 + CreditCard."VAT % for Charge Fee" /100));
                                                                //Incl. VAT
                                                                  //D = B - C
                                                                  "Credit Card Bank Amount" := "Credit Card Amount" - "Credit Card Charge Fee";
                                                                END;
                                                                VALIDATE("Credit Card Charge Fee");
                                                              END;

                                                   AutoFormatType=1 }
    { 201 ;   ;Credit Charge Amount (Cust.);Decimal;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 202 ;   ;Payment Method (Charge Fee);Code10 ;TableRelation="Payment Method" }
    { 203 ;   ;Payment Option      ;Option        ;OptionString=[ ,Cash,Transfer,Postal Order] }
    { 204 ;   ;Postal Order        ;Text30         }
    { 50000;  ;Rem. Qty            ;Decimal       ;Editable=No }
    { 50001;  ;Total L/E Qty       ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Subscriber Contract L/E" WHERE (Subscriber Contract No.=FIELD(No.)));
                                                   Editable=No }
    { 50002;  ;Rem Qty Lisa        ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Subscriber Contract L/E" WHERE (Subscriber Contract No.=FIELD(No.),
                                                                                                      Magazine Item No.=FILTER(>LS0828),
                                                                                                      Magazine Code=FIELD(Magazine Code)));
                                                   Editable=No }
    { 50003;  ;Rem Qty HELLO       ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Subscriber Contract L/E" WHERE (Subscriber Contract No.=FIELD(No.),
                                                                                                      Magazine Item No.=FILTER(>HL0215),
                                                                                                      Magazine Code=FIELD(Magazine Code)));
                                                   Editable=No }
    { 50004;  ;Rem Qty AUTOBILD    ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Subscriber Contract L/E" WHERE (Subscriber Contract No.=FIELD(No.),
                                                                                                      Magazine Item No.=FILTER(>AB0414),
                                                                                                      Magazine Code=FIELD(Magazine Code)));
                                                   Editable=No }
    { 50005;  ;Rem Qty Wedding     ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Subscriber Contract L/E" WHERE (Subscriber Contract No.=FIELD(No.),
                                                                                                      Magazine Item No.=FILTER(>WD0025),
                                                                                                      Magazine Code=FIELD(Magazine Code)));
                                                   Editable=No }
    { 50006;  ;Subscriber Name     ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Subscriber.Name WHERE (No.=FIELD(Subscriber No.)));
                                                   Editable=No }
    { 50007;  ;Contract Issue No.  ;Code20         }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
    {    ;Contract Category,No.                    }
    {    ;Magazine Code,No.                        }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      SubscriptionSetup@1000000000 : Record 50000;
      SSContractLE@1000000029 : Record 50006;
      CreditCard@1000000002 : Record 50003;
      Promotion@1000000003 : Record 50004;
      MagazineVolumeIssue@1000000017 : Record 50012;
      Item@1000000023 : Record 27;
      NoSeriesMgt@1000000001 : Codeunit 396;
      Text000@1000000025 : TextConst 'ENU=You cannot rename a %1.;THA=คุณไม่สามารถเปลี่ยนชื่อ %1';
      Text001@1000000004 : TextConst 'ENU=Do you want to renew subscriber contract?';
      Text002@1000000006 : TextConst 'ENU=Contract Status must not be %1.';
      Text003@1000000005 : TextConst 'ENU=New subscriber contract no. %1 has been created.';
      Text004@1000000007 : TextConst 'ENU=Do you want to cancel subscriber contract %1?';
      Text005@1000000008 : TextConst 'ENU=Balance amount must be zero.';
      Text006@1000000009 : TextConst 'ENU=Do you want to create subscriber contract ledger entries?';
      Text007@1000000012 : TextConst 'ENU=Create Subscriber Contract L/E...\\';
      Text008@1000000011 : TextConst 'ENU=Subscriber No.    #1##########;THA=ลูกค้าหมายเลข   #1##########\';
      Text009@1000000010 : TextConst 'ENU=Create completed. The number of created is %1 record(s).';
      Text010@1000000016 : TextConst 'ENU=You cannot delete %1 because there are one or more ledger entries for this subscriber contract.';
      Text011@1000000015 : TextConst 'ENU=There is nothing to create.';
      Text012@1000000018 : TextConst 'ENU=Total %1 on subscriber contract L/E does not match %2.';
      Text013@1000000013 : TextConst 'ENU=Invalid Discount Value.';
      Text014@1000000019 : TextConst 'ENU=Contract Status must be Confirm or Released.';
      Text015@1000000020 : TextConst 'ENU=Number of magazine item does not match contract quantity.';
      Text016@1000000021 : TextConst 'ENU=%1 and %2 must be different.';
      Text017@1000000022 : TextConst 'ENU=You have already created subscriber contract ledger entries. Do you want to continue?';
      Text018@1000000024 : TextConst 'ENU=Subscriber contract ledger entries has been created. You cannot change %1.';
      Text019@1000000026 : TextConst 'ENU=%1 of Subscriber Contract L/E does not found in the range between %2 and %3.';
      ItemFilter@1000000027 : Text[250];
      Text020@1000000028 : TextConst 'ENU=Subscriber contract no. %1 has been renewed.';
      Text021@1000000014 : TextConst 'ENU=You do not have this permission.';

    PROCEDURE AssistEdit@2(OldSubsContract@1000 : Record 50005) : Boolean;
    VAR
      SubsContract@1001 : Record 50005;
    BEGIN
      WITH SubsContract DO BEGIN
        SubsContract := Rec;
        SubscriptionSetup.GET;
        SubscriptionSetup.TESTFIELD("Subscriber Contract Nos.");
        IF NoSeriesMgt.SelectSeries(SubscriptionSetup."Subscriber Contract Nos.",OldSubsContract."No. Series","No. Series") THEN BEGIN
          NoSeriesMgt.SetSeries("No.");
          Rec := SubsContract;
          EXIT(TRUE);
        END;
      END;
    END;

    PROCEDURE GetSubscriberName@1000000016() : Text[50];
    VAR
      Subscriber@1000000000 : Record 50001;
    BEGIN
      IF Subscriber.GET("Subscriber No.") THEN
        EXIT(Subscriber.Name);
      EXIT('');
    END;

    PROCEDURE CreateSubscriberContractLE@1000000004();
    VAR
      SSContractLE@1000000000 : Record 50006;
      MagazineVolumeIssue@1000000006 : Record 50012;
      Window@1000000004 : Dialog;
      NoOfCreated@1000000005 : Integer;
    BEGIN
      IF NOT CONFIRM(Text006,FALSE) THEN
        EXIT;

      TESTFIELD("Contract Status","Contract Status"::Confirm);
      //GKU : #002 +
      {--IF "Promotion Net Price" + "Credit Card Charge Fee" <> "Receipt Amount" + "Credit Card Amount" + "Check Amount" THEN--}
      IF "Promotion Net Price" + "Credit Charge Amount (Cust.)" <> "Receipt Amount" + "Credit Card Amount" + "Check Amount" THEN
        ERROR(Text005);
      //GKU : #002 -
      IF "Contract Type" <> "Contract Type"::Complimentary THEN BEGIN  //KKE : #003
      TESTFIELD("Promotion Net Price");
      TESTFIELD("Contract Quantity");
      TESTFIELD("Contract Net Price");
      TESTFIELD("Payment Method Code");
      END;  //KKE : #003

      SSContractLE.RESET;
      SSContractLE.SETRANGE("Subscriber Contract No.","No.");
      SSContractLE.SETRANGE("Subscriber No.","Subscriber No.");
      IF SSContractLE.FIND('-') THEN
        IF NOT CONFIRM(Text017,FALSE) THEN
          EXIT;
      SSContractLE.RESET;

      Window.OPEN(Text007 + Text008);

      MagazineVolumeIssue.SETPERMISSIONFILTER;
      MagazineVolumeIssue.RESET;
      MagazineVolumeIssue.SETRANGE("Magazine Code","Magazine Code");
      MagazineVolumeIssue.SETRANGE("Magazine Item No.","Starting Magazine Item No.","Ending Magazine Item No.");
      MagazineVolumeIssue.SETRANGE("Volume No.","Starting Volume No.","Ending Volume No.");
      //MagazineVolumeIssue.SETRANGE("Issue No.","Starting Issue No.","Ending Issue No.");
      MagazineVolumeIssue.SETRANGE("Create as Item",TRUE);
      IF NOT MagazineVolumeIssue.FIND('-') THEN BEGIN
        Window.CLOSE;
        ERROR(Text011);
      END;

      REPEAT
        SSContractLE.INIT;
        SSContractLE."Subscriber Contract No." := "No.";
        SSContractLE."Subscriber No." := "Subscriber No.";
        SSContractLE."Magazine Code" := MagazineVolumeIssue."Magazine Code";
        SSContractLE."Volume No." := MagazineVolumeIssue."Volume No.";
        SSContractLE."Issue No." := MagazineVolumeIssue."Issue No.";
        SSContractLE."Issue Date" := MagazineVolumeIssue."Issue Date";
        SSContractLE."Magazine Item No." := MagazineVolumeIssue."Magazine Item No.";
        SSContractLE.Quantity := 1;
        IF "Contract Quantity" <> 0 THEN  //KKE : #003
        SSContractLE."Unit Price" := "Contract Net Price" / "Contract Quantity";
        SSContractLE."Shipping Agent Code" := "Shipping Agent Code";
        SSContractLE."System-Created Entry" := TRUE;
        IF SSContractLE.INSERT THEN
          NoOfCreated += 1;
        //ELSE
          //SSContractLE.MODIFY;
      UNTIL MagazineVolumeIssue.NEXT=0;

      Window.CLOSE;
      COMMIT;
      MESSAGE(STRSUBSTNO(Text009,NoOfCreated));
    END;

    PROCEDURE RenewSubscriberContract@1000000000();
    VAR
      NewSSContract@1000000000 : Record 50005;
    BEGIN
      IF NOT CONFIRM(Text001,FALSE) THEN
        EXIT;

      //Can renew subscriber contract when status = release or closed.
      IF NOT ("Contract Status" IN ["Contract Status"::Released,"Contract Status"::Closed]) THEN
        ERROR(Text002,"Contract Status");

      IF "Renew Contract To" <> '' THEN
        ERROR(Text020,"No.");

      //TESTFIELD("Contract Status","Contract Status"::Released);

      NewSSContract.INIT;
      SubscriptionSetup.GET;
      SubscriptionSetup.TESTFIELD("Subscriber Contract Nos.");
      IF NoSeriesMgt.SelectSeries(SubscriptionSetup."Subscriber Contract Nos.",'',"No. Series") THEN
        NoSeriesMgt.SetSeries(NewSSContract."No.");

      NewSSContract."Subscriber No." := "Subscriber No.";
      NewSSContract."Subscription Date" := "Subscription Date";
      NewSSContract."Contract Type" := "Contract Type";
      NewSSContract."Contract Sub Type" := "Contract Sub Type";
      NewSSContract."VIP Type" := "VIP Type";
      NewSSContract."Contract Category" := "Contract Category"::Renew;
      NewSSContract."Renew Contract From" := "No.";
      NewSSContract."Resource Lead" := "Resource Lead";
      NewSSContract."Resource Channel" := "Resource Channel";
      NewSSContract."Shipping Agent Code" := "Shipping Agent Code";
      NewSSContract."Magazine Code" := "Magazine Code";
      NewSSContract.INSERT(TRUE);

      "Renew Contract To" := NewSSContract."No.";
      //"Contract Status" := "Contract Status"::Closed;
      MODIFY;

      MESSAGE(Text003,NewSSContract."No.");
      Rec := NewSSContract;
      COMMIT;
    END;

    PROCEDURE ConfirmContract@1000000006();
    VAR
      SSContractLE@1000000000 : Record 50006;
      MagazineVolumeIssue@1000000006 : Record 50012;
      Window@1000000004 : Dialog;
      NoOfCreated@1000000005 : Integer;
    BEGIN
      TESTFIELD("Contract Status","Contract Status"::Open);
      //GKU : #002 +
      {IF "Promotion Net Price" + "Credit Card Charge Fee" <> "Receipt Amount" + "Credit Card Amount" + "Check Amount" THEN
        ERROR(Text005);}
      IF "Promotion Net Price" + "Credit Charge Amount (Cust.)" <> "Receipt Amount" + "Credit Card Amount" + "Check Amount" THEN
        ERROR(Text005);
      //GKU : #002 -
      IF "Contract Type" <> "Contract Type"::Complimentary THEN BEGIN  //KKE : #003
      TESTFIELD("Promotion Net Price");
      TESTFIELD("Contract Quantity");
      TESTFIELD("Contract Net Price");
      TESTFIELD("Payment Method Code");
      END;
      TESTFIELD("Shipping Agent Code");

      IF "Receipt Amount" <> 0 THEN
        TESTFIELD("Receipt No.");

      IF "Credit Card Bank Amount" <> 0 THEN BEGIN
        TESTFIELD("Credit Card Bank");
        TESTFIELD("Credit Card Type");
        TESTFIELD("Credit Card No.");
        TESTFIELD("Credit Card 3Last No.");
        TESTFIELD("Credit Card Expire Date");
      END;

      IF "Check Amount" <> 0 THEN BEGIN
        TESTFIELD("Bank Code");
        TESTFIELD("Bank Branch");
        TESTFIELD("Check No.");
        TESTFIELD("Check Date");
      END;

      MagazineVolumeIssue.SETPERMISSIONFILTER;
      MagazineVolumeIssue.RESET;
      MagazineVolumeIssue.SETRANGE("Magazine Code","Magazine Code");
      MagazineVolumeIssue.SETRANGE("Magazine Item No.","Starting Magazine Item No.","Ending Magazine Item No.");
      MagazineVolumeIssue.SETRANGE("Volume No.","Starting Volume No.","Ending Volume No.");
      //MagazineVolumeIssue.SETRANGE("Issue No.","Starting Issue No.","Ending Issue No.");
      MagazineVolumeIssue.SETRANGE("Create as Item",TRUE);
      IF MagazineVolumeIssue.COUNT < "Contract Quantity" THEN
        ERROR(Text015);

      "Contract Status" := "Contract Status"::Confirm;
      MODIFY;
    END;

    PROCEDURE Release@1000000001();
    BEGIN
      TESTFIELD("Contract Status","Contract Status"::Confirm);

      VALIDATE("Free Other Magazine Code");
      //GKU : #002 +
      {--IF "Promotion Net Price" + "Credit Card Charge Fee" - ("Receipt Amount" + "Credit Card Amount" + "Check Amount") <> 0 THEN--}
      IF "Promotion Net Price" + "Credit Charge Amount (Cust.)" - ("Receipt Amount" + "Credit Card Amount" + "Check Amount") <> 0 THEN
        ERROR(Text005);
      //GKU : #002 -
      IF "Contract Type" <> "Contract Type"::Complimentary THEN BEGIN  //KKE : #003
      TESTFIELD("Contract Quantity");
      TESTFIELD("Contract Net Price");
      TESTFIELD("Shipping Agent Code");
      TESTFIELD("Payment Method Code");
      END;
      IF "Credit Card Charge Fee" <> 0 THEN
        TESTFIELD("Payment Method (Charge Fee)");

      IF "Receipt Amount" <> 0 THEN
        TESTFIELD("Receipt No.");

      IF "Credit Card Bank Amount" <> 0 THEN BEGIN
        TESTFIELD("Credit Card Bank");
        TESTFIELD("Credit Card Type");
        TESTFIELD("Credit Card No.");
        TESTFIELD("Credit Card 3Last No.");
        TESTFIELD("Credit Card Expire Date");
      END;

      IF "Check Amount" <> 0 THEN BEGIN
        TESTFIELD("Bank Code");
        TESTFIELD("Bank Branch");
        TESTFIELD("Check No.");
        TESTFIELD("Check Date");
      END;

      SSContractLE.SETPERMISSIONFILTER;
      SSContractLE.RESET;
      SSContractLE.SETRANGE("Subscriber Contract No.","No.");
      SSContractLE.SETRANGE("Magazine Code","Magazine Code");
      SSContractLE.CALCSUMS(Quantity,"Unit Price");
      IF ROUND(SSContractLE."Unit Price") <> "Contract Net Price" THEN
        ERROR(Text012,SSContractLE.FIELDCAPTION("Unit Price"),FIELDCAPTION("Contract Net Price"));
      IF ROUND(SSContractLE.Quantity) <> "Contract Quantity" THEN
        ERROR(Text012,SSContractLE.FIELDCAPTION(Quantity),FIELDCAPTION("Contract Quantity"));
      SSContractLE.FIND('-');
      REPEAT
        IF (SSContractLE."Magazine Item No." < "Starting Magazine Item No.") OR
           (SSContractLE."Magazine Item No." > "Ending Magazine Item No.")
         THEN
           ERROR(Text019,SSContractLE."Magazine Item No.",
             FIELDCAPTION("Starting Magazine Item No."),
             FIELDCAPTION("Ending Magazine Item No."));
      UNTIL SSContractLE.NEXT=0;

      "Contract Status" := "Contract Status"::Released;
      MODIFY;
    END;

    PROCEDURE Reopen@1000000002();
    BEGIN
      IF ("Contract Status" <> "Contract Status"::Confirm) AND ("Contract Status" <> "Contract Status"::Released) THEN
        ERROR(Text014);


      IF ("Payment Status" = "Payment Status"::Paid) //AND ("Contract Status" = "Contract Status"::Released)
            AND (UPPERCASE(USERID) <> 'SA') THEN BEGIN
         ERROR(Text021);
      END;

      "Contract Status" := "Contract Status"::Open;
      MODIFY;
    END;

    PROCEDURE Cancel@1000000003();
    BEGIN
      IF NOT CONFIRM(STRSUBSTNO(Text004,"No."),FALSE) THEN
        EXIT;

      IF "Contract Status" <> "Contract Status"::Open THEN
        TESTFIELD("Contract Status","Contract Status"::Released);
      IF "Contract Status" <> "Contract Status"::Released THEN
        TESTFIELD("Contract Status","Contract Status"::Open);

      "Contract Status" := "Contract Status"::Cancelled;
      MODIFY;
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut
      GKU : Goragot Kuanmuang

      No.   Date         Sign  Description
      ----------------------------------------
      001   07.03.2007   KKE   New table for Subscriber Contract.
      002   04.10.2007   GKU   Use 'Credit Charge Amount(Cust.)' instead 'Credit Card Charge Fee' in caluate
      003   29.04.2008   KKE   Allow create Subscriber Contract which Net Price is zero for Contract Type Complimentary.
    }
    END.
  }
}

OBJECT Table 50006 Subscriber Contract L/E
{
  OBJECT-PROPERTIES
  {
    Date=02/12/08;
    Time=[ 6:25:17 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               SubscriberContract.GET("Subscriber Contract No.");
               SubscriberContract.TESTFIELD("Contract Status",SubscriberContract."Contract Status"::Open);
               TESTFIELD("Subscriber No.",SubscriberContract."Subscriber No.");
               TESTFIELD("Magazine Code",SubscriberContract."Magazine Code");
             END;

    OnModify=BEGIN
               TESTFIELD("Paid Flag",FALSE);
             END;

    OnDelete=BEGIN
               IF "Paid Flag" = FALSE THEN
                 EXIT;
               SubscriberContract.GET("Subscriber Contract No.");
               IF SubscriberContract."Payment Status" = SubscriberContract."Payment Status"::Paid THEN
                 ERROR(Text001);
               SubscriberContract.TESTFIELD("Contract Status",SubscriberContract."Contract Status"::Open);
             END;

    OnRename=BEGIN
               ERROR(Text000,TABLECAPTION);
             END;

  }
  FIELDS
  {
    { 1   ;   ;Subscriber Contract No.;Code20     ;TableRelation="Subscriber Contract" }
    { 2   ;   ;Subscriber No.      ;Code20        ;TableRelation=Subscriber }
    { 3   ;   ;Magazine Code       ;Code20        ;TableRelation=Magazine;
                                                   OnValidate=BEGIN
                                                                "Issue Date" := 0D;
                                                                IF MagazineVolumeIssue.GET("Magazine Code","Volume No.","Issue No.") THEN
                                                                  "Issue Date" := MagazineVolumeIssue."Issue Date";
                                                              END;
                                                               }
    { 4   ;   ;Volume No.          ;Code20        ;TableRelation=Volume;
                                                   OnValidate=BEGIN
                                                                "Issue Date" := 0D;
                                                                IF MagazineVolumeIssue.GET("Magazine Code","Volume No.","Issue No.") THEN
                                                                  "Issue Date" := MagazineVolumeIssue."Issue Date";
                                                              END;
                                                               }
    { 5   ;   ;Issue No.           ;Code20        ;TableRelation="Issue No.";
                                                   OnValidate=BEGIN
                                                                "Issue Date" := 0D;
                                                                IF MagazineVolumeIssue.GET("Magazine Code","Volume No.","Issue No.") THEN
                                                                  "Issue Date" := MagazineVolumeIssue."Issue Date";
                                                              END;
                                                               }
    { 6   ;   ;Issue Date          ;Date           }
    { 7   ;   ;Quantity            ;Decimal       ;DecimalPlaces=0:5 }
    { 8   ;   ;Unit Price          ;Decimal       ;AutoFormatType=2 }
    { 9   ;   ;Shipping Agent Code ;Code20        ;TableRelation=Customer WHERE (Shipping Agent=CONST(Yes)) }
    { 10  ;   ;Paid Flag           ;Boolean       ;Editable=No }
    { 11  ;   ;Sales Order Flag    ;Boolean       ;Editable=No }
    { 12  ;   ;Sales Order Date    ;Date          ;Editable=No }
    { 13  ;   ;Sales Order No.     ;Code20        ;Editable=No }
    { 14  ;   ;Sales Order Line No.;Integer       ;Editable=No }
    { 15  ;   ;Delivered Flag      ;Boolean       ;Editable=No }
    { 16  ;   ;Delivered Date      ;Date          ;Editable=No }
    { 17  ;   ;Delivered Document No.;Code20      ;Editable=No }
    { 18  ;   ;Paid Sales Order No.;Code20        ;Editable=No }
    { 19  ;   ;Reversed Flag       ;Boolean       ;Editable=No }
    { 20  ;   ;Magazine Item No.   ;Code20        ;TableRelation=Item WHERE (Item Type=CONST(Magazine));
                                                   OnValidate=BEGIN
                                                                "Volume No." := '';
                                                                "Issue No." := '';
                                                                "Issue Date" := 0D;
                                                                IF Item.GET("Magazine Item No.") THEN BEGIN
                                                                  TESTFIELD("Magazine Code",Item."Magazine Code");
                                                                  "Volume No." := Item."Volume No.";
                                                                  "Issue No." := Item."Issue No.";
                                                                  "Issue Date" := Item."Issue Date";
                                                                END;
                                                              END;
                                                               }
    { 21  ;   ;Reversed Credit Memo No.;Code20    ;Editable=No }
    { 29  ;   ;System-Created Entry;Boolean       ;CaptionML=[ENU=System-Created Entry;
                                                              THA=รายการที่ระบบสร้างขึ้น];
                                                   Editable=No }
    { 30  ;   ;Old Subscriber No.  ;Code20        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Subscriber."Old Subscriber No." WHERE (No.=FIELD(Subscriber No.)));
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Subscriber Contract No.,Subscriber No.,Magazine Code,Volume No.,Issue No.;
                                                   SumIndexFields=Unit Price,Quantity;
                                                   Clustered=Yes }
    {    ;Paid Sales Order No.                     }
    {    ;Shipping Agent Code,Delivered Flag       }
    {    ;Sales Order No.                          }
    {    ;Subscriber No.                           }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      SubscriberContract@1000000000 : Record 50005;
      Text000@1000000002 : TextConst 'ENU=You cannot rename a %1.;THA=คุณไม่สามารถเปลี่ยนชื่อ %1';
      Text001@1000000001 : TextConst 'ENU=This subscriber contract has already paid.';
      MagazineVolumeIssue@1000000003 : Record 50012;
      Item@1000000004 : Record 27;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   06.03.2007   KKE   New table for Subscriber Contract L/E - Subscription Module
    }
    END.
  }
}

OBJECT Table 50007 Magazine Sales Setup
{
  OBJECT-PROPERTIES
  {
    Date=06/14/07;
    Time=[ 6:00:00 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
  }
  FIELDS
  {
    { 1   ;   ;Primary Key         ;Code10        ;CaptionML=[ENU=Primary Key;
                                                              THA=คีย์หลัก] }
    { 2   ;   ;Default Base UOM    ;Code10        ;TableRelation="Unit of Measure" }
    { 3   ;   ;Default Costing Method;Option      ;OptionCaptionML=[ENU=FIFO,LIFO,Specific,Average,Standard;
                                                                    THA=FIFO,LIFO,เฉพาะ,เฉลี่ย,มาตรฐาน];
                                                   OptionString=FIFO,LIFO,Specific,Average,Standard }
    { 4   ;   ;Default Gen. Prod. Posting;Code10  ;TableRelation="Gen. Product Posting Group" }
    { 5   ;   ;Default VAT Prod. Posting Grou;Code10;
                                                   TableRelation="VAT Product Posting Group";
                                                   CaptionML=ENU=Default VAT Prod. Posting Group }
    { 6   ;   ;Default WHT Prod. Posting Grou;Code10;
                                                   TableRelation="WHT Product Posting Group";
                                                   CaptionML=ENU=Default WHT Prod. Posting Group }
    { 7   ;   ;Default Inventory Posting Grou;Code10;
                                                   TableRelation="Inventory Posting Group";
                                                   CaptionML=ENU=Default Inventory Posting Group }
    { 10  ;   ;Agent Customer Nos. ;Code10        ;TableRelation="No. Series" }
    { 11  ;   ;Circulation Billing Nos.;Code10    ;TableRelation="No. Series" }
    { 12  ;   ;Circulation Receipt Nos.;Code10    ;TableRelation="No. Series" }
    { 13  ;   ;Posted Invoice Nos. ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=Posted Invoice Nos.;
                                                              THA=ชุดหมายเลขใบส่งของที่ลงรายการบัญชี] }
  }
  KEYS
  {
    {    ;Primary Key                             ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   12.03.2007   KKE   New table for Magazine Sales Setup
    }
    END.
  }
}

OBJECT Table 50008 Volume
{
  OBJECT-PROPERTIES
  {
    Date=08/29/07;
    Time=[ 2:39:42 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               TESTFIELD("Dimension 3 Code");
             END;

    OnModify=BEGIN
               TESTFIELD("Dimension 3 Code");
             END;

    LookupPageID=Page50014;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code20         }
    { 2   ;   ;Description         ;Text50         }
    { 3   ;   ;Dimension 3 Code    ;Code20        ;OnLookup=BEGIN
                                                              DimMgt.LookupDimValueCode(3,ShortcutDimCode);
                                                              VALIDATE("Dimension 3 Code",ShortcutDimCode);
                                                            END;

                                                   CaptionML=[ENU=Dimension 3 Code;
                                                              THA=รหัสมิติทางลัดหมายเลข 3];
                                                   CaptionClass='1,2,3' }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      DimMgt@1000000000 : Codeunit 408;
      ShortcutDimCode@1000000001 : Code[20];

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   12.03.2007   KKE   New table for Volume - Magazine Sales Module
    }
    END.
  }
}

OBJECT Table 50009 Issue No.
{
  OBJECT-PROPERTIES
  {
    Date=08/29/07;
    Time=[ 2:49:38 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               TESTFIELD("Dimension 4 Code");
             END;

    OnModify=BEGIN
               TESTFIELD("Dimension 4 Code");
             END;

    LookupPageID=Page50015;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code20         }
    { 2   ;   ;Description         ;Text50         }
    { 3   ;   ;Dimension 4 Code    ;Code20        ;OnLookup=BEGIN
                                                              DimMgt.LookupDimValueCode(4,ShortcutDimCode);
                                                              VALIDATE("Dimension 4 Code",ShortcutDimCode);
                                                            END;

                                                   CaptionML=[ENU=Dimension 4 Code;
                                                              THA=รหัสมิติทางลัดหมายเลข 4];
                                                   CaptionClass='1,2,4' }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      DimMgt@1000000000 : Codeunit 408;
      ShortcutDimCode@1000000001 : Code[20];

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   12.03.2007   KKE   New table for Issue No. - Magazine Sales Module
    }
    END.
  }
}

OBJECT Table 50010 Frequency
{
  OBJECT-PROPERTIES
  {
    Date=03/21/07;
    Time=[ 6:00:00 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    LookupPageID=Page50016;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code20         }
    { 2   ;   ;Description         ;Text50         }
    { 3   ;   ;Date Formula        ;DateFormula    }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   12.03.2007   KKE   New table for Frequency - Magazine Sales Module
    }
    END.
  }
}

OBJECT Table 50011 Magazine
{
  OBJECT-PROPERTIES
  {
    Date=08/29/07;
    Time=[ 2:50:24 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               CheckFieldMandatory;
             END;

    OnModify=BEGIN
               CheckFieldMandatory;
             END;

    LookupPageID=Page50017;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code20         }
    { 2   ;   ;Description         ;Text50         }
    { 3   ;   ;Frequency           ;Code20        ;TableRelation=Frequency }
    { 4   ;   ;Magazine Item Nos.  ;Code10        ;TableRelation="No. Series" }
    { 5   ;   ;Pick-up Interval    ;DateFormula    }
    { 6   ;   ;Unit Price          ;Decimal       ;AutoFormatType=1 }
    { 7   ;   ;Dimension 1 Code    ;Code20        ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionML=[ENU=Dimension 1 Code;
                                                              THA=รหัสมิติทางลัดหมายเลข 1];
                                                   CaptionClass='1,2,1' }
    { 8   ;   ;Minimum No. of Page ;Integer        }
    { 9   ;   ;Payment Method for Delivery;Code10 ;TableRelation="Payment Method" }
    { 10  ;   ;Ads. Item Nos.      ;Code10        ;TableRelation="No. Series" }
    { 11  ;   ;Ads. Closing Interval;DateFormula   }
    { 12  ;   ;Subscriber S/O Nos. ;Code10        ;TableRelation="No. Series" }
    { 13  ;   ;Defer Revenue SS Account;Code20    ;TableRelation="G/L Account" }
    { 14  ;   ;Default Gen. Prod. Posting;Code10  ;TableRelation="Gen. Product Posting Group" }
    { 15  ;   ;Circulation S/O Nos.;Code10        ;TableRelation="No. Series" }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    PROCEDURE CheckFieldMandatory@1000000000();
    BEGIN
      TESTFIELD("Magazine Item Nos.");
      TESTFIELD("Ads. Item Nos.");
      TESTFIELD("Unit Price");
      TESTFIELD("Ads. Closing Interval");
      TESTFIELD("Default Gen. Prod. Posting");
      TESTFIELD("Dimension 1 Code");
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   12.03.2007   KKE   New table for Magazine - Magazine Sales Module
    }
    END.
  }
}

OBJECT Table 50012 Magazine/Volume/Issue - Matrix
{
  OBJECT-PROPERTIES
  {
    Date=05/20/08;
    Time=10:53:48 PM;
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    OnModify=BEGIN
               IF "Issue Date" = xRec."Issue Date" THEN
                 TESTFIELD("Create as Item",FALSE);
               TESTFIELD("Issue Date");
             END;

    OnDelete=BEGIN
               TESTFIELD("Create as Item",FALSE);
             END;

    OnRename=BEGIN
               ERROR(Text000,TABLECAPTION);
             END;

  }
  FIELDS
  {
    { 1   ;   ;Magazine Code       ;Code20        ;TableRelation=Magazine;
                                                   OnValidate=BEGIN
                                                                IF Magazine.GET("Magazine Code") THEN BEGIN
                                                                  "Unit Price" := Magazine."Unit Price";
                                                                  VALIDATE("Magazine Item Nos.",Magazine."Magazine Item Nos.");
                                                                  "Ads. Item Nos." := Magazine."Ads. Item Nos.";
                                                                END;
                                                              END;
                                                               }
    { 2   ;   ;Volume No.          ;Code20        ;TableRelation=Volume }
    { 3   ;   ;Issue No.           ;Code20        ;TableRelation="Issue No." }
    { 4   ;   ;Issue Date          ;Date          ;OnValidate=BEGIN
                                                                IF ("Issue Date" <> xRec."Issue Date") AND (xRec."Issue Date" <> 0D) THEN
                                                                  IF Rec.ChangeIssueDate = FALSE THEN
                                                                    "Issue Date" := xRec."Issue Date";

                                                                Magazine.GET("Magazine Code");
                                                                IF Magazine."Ads. Closing Interval" <> XD THEN
                                                                  "Ads. Closing Date" := CALCDATE(STRSUBSTNO('CD - %1',Magazine."Ads. Closing Interval"),"Issue Date")
                                                                ELSE
                                                                  "Ads. Closing Date" := "Issue Date";
                                                              END;
                                                               }
    { 5   ;   ;Magazine Item No.   ;Code20        ;TableRelation=Item WHERE (Item Type=CONST(Magazine));
                                                   Editable=No }
    { 6   ;   ;Cover Description   ;Text50         }
    { 7   ;   ;Unit Price          ;Decimal       ;AutoFormatType=1 }
    { 8   ;   ;Magazine Item Nos.  ;Code10        ;TableRelation="No. Series";
                                                   OnValidate=BEGIN
                                                                IF "Magazine Item Nos." = '' THEN
                                                                  TESTFIELD("Magazine Item No.",'');
                                                              END;
                                                               }
    { 9   ;   ;Create as Item      ;Boolean       ;Editable=No }
    { 10  ;   ;Ads. Item No.       ;Code20        ;TableRelation="Ads. Item";
                                                   Editable=No }
    { 11  ;   ;Ads. Closing Date   ;Date           }
    { 12  ;   ;Ads. Item Nos.      ;Code20        ;TableRelation="No. Series" }
    { 13  ;   ;Create as Ads. Item ;Boolean       ;Editable=No }
  }
  KEYS
  {
    {    ;Magazine Code,Volume No.,Issue No.      ;Clustered=Yes }
    {    ;Create as Item,Magazine Item No.         }
    {    ;Create as Ads. Item,Ads. Item No.        }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Magazine@1000000000 : Record 50011;
      XD@1000000001 : DateFormula;
      Text000@1000000004 : TextConst 'ENU=You cannot rename a %1.;THA=คุณไม่สามารถเปลี่ยนชื่อ %1';
      Text001@1000000002 : TextConst 'ENU=Do you want to chagne issue date for magazine %1 volume %2 issue %3 ?';
      Text002@1000000003 : TextConst 'ENU=You do not have permission to change issue date.';
      Text003@1000000005 : TextConst 'ENU=System will remove ads item %1. Are you sure?';
      Text004@1000000006 : TextConst 'ENU=You do not have permission to remove ads item.';

    PROCEDURE GetMagazineItemNo@1000000000(MagazineCode@1000000001 : Code[20];Volume@1000000002 : Code[20];IssueNo@1000000003 : Code[20]) : Code[20];
    VAR
      MagazineVolumeIssue@1000000000 : Record 50012;
    BEGIN
      IF MagazineVolumeIssue.GET(MagazineCode,Volume,IssueNo) THEN
        EXIT(MagazineVolumeIssue."Magazine Item No.");
      EXIT('');
    END;

    PROCEDURE ChangeIssueDate@1000000001() : Boolean;
    VAR
      UserSetup@1000000004 : Record 91;
      Item@1000000000 : Record 27;
      AdsItem@1000000001 : Record 50036;
      SSContract@1000000002 : Record 50005;
      SSContractLE@1000000003 : Record 50006;
    BEGIN
      //KKE : #002
      IF NOT CONFIRM(STRSUBSTNO(Text001,"Magazine Code","Volume No.","Issue No."),FALSE) THEN
        EXIT(FALSE);

      UserSetup.GET(USERID);
      IF NOT UserSetup."Allow Change Issue Date" THEN
        ERROR(Text002);

      IF Item.GET("Magazine Item No.") THEN BEGIN
        Magazine.GET("Magazine Code");
        Item."Issue Date" := "Issue Date";
        Item."Last Pick-up Date" := CALCDATE(Magazine."Pick-up Interval","Issue Date");
        Item.MODIFY;
      END;

      IF AdsItem.GET("Ads. Item No.") THEN BEGIN
        AdsItem."Issue Date" := "Issue Date";
        AdsItem.MODIFY;
      END;

      SSContract.SETRANGE("Starting Magazine Item No.","Magazine Item No.");
      IF SSContract.FIND('-') THEN
        SSContract.MODIFYALL("Starting Issue Date","Issue Date");

      SSContractLE.SETRANGE("Magazine Item No.","Magazine Item No.");
      IF SSContractLE.FIND('-') THEN
        SSContractLE.MODIFYALL("Issue Date","Issue Date");

      EXIT(TRUE);
    END;

    PROCEDURE RemoveAdsItem@1000000002();
    VAR
      AdsItem@1000000000 : Record 50036;
      MagazineVolumeIssue@1000000001 : Record 50012;
    BEGIN
      //KKE : #003
      IF "Ads. Item No." = '' THEN
        EXIT;
      IF NOT CONFIRM(STRSUBSTNO(Text003,"Ads. Item No."),FALSE) THEN
        EXIT;

      IF UPPERCASE(USERID) <> 'SA' THEN
        ERROR(Text004);

      AdsItem.GET("Ads. Item No.");
      AdsItem.DELETE(TRUE);

      MagazineVolumeIssue.GET("Magazine Code","Volume No.","Issue No.");
      MagazineVolumeIssue."Ads. Item No." := '';
      MagazineVolumeIssue."Create as Ads. Item" := FALSE;
      MagazineVolumeIssue.MODIFY;
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   12.03.2007   KKE   New table for Magazine/Volume/Issue Matrix - Magazine Sales Module
      002   27.08.2007   KKE   Add function to change Issue Date.
      003   20.05.2008   KKE   Add function remove ads. item, incase they make a wrong ads. no. series.
    }
    END.
  }
}

OBJECT Table 50013 Buffer Subscriber Contract L/E
{
  OBJECT-PROPERTIES
  {
    Date=08/26/07;
    Time=11:25:57 AM;
    Version List=Burda1.00;
  }
  PROPERTIES
  {
  }
  FIELDS
  {
    { 1   ;   ;Status              ;Code1          }
    { 2   ;   ;Customer No.        ;Code20        ;TableRelation=Customer }
    { 3   ;   ;Subscriber No.      ;Code20        ;TableRelation=Subscriber }
    { 4   ;   ;Subscriber Contract No.;Code20     ;TableRelation="Subscriber Contract" }
    { 5   ;   ;Magazine Code       ;Code20        ;TableRelation=Magazine }
    { 6   ;   ;Volume No.          ;Code20        ;TableRelation=Volume }
    { 7   ;   ;Issue No.           ;Code20        ;TableRelation="Issue No." }
    { 8   ;   ;Deposit Paid        ;Decimal       ;AutoFormatType=1 }
    { 9   ;   ;Realized Revenue    ;Decimal       ;AutoFormatType=1 }
    { 10  ;   ;Unrealized Revenue  ;Decimal       ;AutoFormatType=1 }
    { 11  ;   ;Reversed Amount     ;Decimal       ;AutoFormatType=1 }
    { 15  ;   ;Show                ;Boolean        }
    { 16  ;   ;Block               ;Boolean        }
    { 17  ;   ;Contract Status     ;Option        ;OptionString=[Open,Confirm,Released,Closed,Cancelled, ] }
  }
  KEYS
  {
    {    ;Subscriber No.,Status,Subscriber Contract No.,Magazine Code,Volume No.,Issue No.;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text007@1000000001 : TextConst 'ENU=Create Buffer Deposit Realized Revenue...\\';
      Text008@1000000000 : TextConst 'ENU=Subscriber No.    #1##########;THA=ลูกค้าหมายเลข   #1##########\';

    PROCEDURE InsertBufferSubscriberLine@1000000000(MagazineFilter@1000000003 : Code[20]);
    VAR
      BufferSubscriberLE@1000000001 : Record 50013;
      Subscriber@1000000008 : Record 50001;
      SubscriberContract@1000000002 : Record 50005;
      SubscriberContractLE@1000000000 : Record 50006;
      Window@1000000004 : Dialog;
    BEGIN
      //Subscriber Contract No.,Subscriber No.,Magazine Code,Volume No.,Issue No.
      BufferSubscriberLE.SETPERMISSIONFILTER;
      BufferSubscriberLE.RESET;
      BufferSubscriberLE.DELETEALL;
      Window.OPEN(Text007 + Text008);

      WITH SubscriberContractLE DO BEGIN
        SETPERMISSIONFILTER;
        IF MagazineFilter <> '' THEN
          SETFILTER("Magazine Code",MagazineFilter);
        IF FIND('-') THEN
        REPEAT
          Window.UPDATE(1,"Subscriber No.");
          //total by subscriber no.
          IF NOT BufferSubscriberLE.GET(
              "Subscriber No.",'0',
              '',
              '',
              '',
              '')
          THEN BEGIN
            CLEAR(BufferSubscriberLE);
            BufferSubscriberLE.INIT;
            BufferSubscriberLE."Subscriber No." := "Subscriber No.";
            BufferSubscriberLE.Status := '0';
            Subscriber.GET("Subscriber No.");
            BufferSubscriberLE."Customer No." := Subscriber."Customer No.";
            BufferSubscriberLE.Show := TRUE;
            BufferSubscriberLE."Contract Status" := BufferSubscriberLE."Contract Status"::" ";
            BufferSubscriberLE.INSERT;
          END;
          IF "Paid Flag" THEN
            BufferSubscriberLE."Deposit Paid" += "Unit Price";
          IF "Paid Flag" AND "Delivered Flag" THEN
            BufferSubscriberLE."Realized Revenue" += "Unit Price";
          IF "Reversed Flag" THEN
            BufferSubscriberLE."Reversed Amount" += "Unit Price"
          ELSE IF "Paid Flag" AND (NOT "Delivered Flag") THEN
            BufferSubscriberLE."Unrealized Revenue" += "Unit Price";
          BufferSubscriberLE.MODIFY;

          //total by subscriber no.,subscriber contract no.,magazine code
          IF NOT BufferSubscriberLE.GET(
              "Subscriber No.",'1',
              "Subscriber Contract No.",
              "Magazine Code",
              '',
              '')
          THEN BEGIN
            CLEAR(BufferSubscriberLE);
            BufferSubscriberLE.INIT;
            BufferSubscriberLE."Subscriber No." := "Subscriber No.";
            BufferSubscriberLE.Status := '1';
            Subscriber.GET("Subscriber No.");
            BufferSubscriberLE."Customer No." := Subscriber."Customer No.";
            BufferSubscriberLE."Subscriber Contract No." := SubscriberContractLE."Subscriber Contract No.";
            BufferSubscriberLE."Magazine Code" := SubscriberContractLE."Magazine Code";
            SubscriberContract.GET("Subscriber Contract No.");
            BufferSubscriberLE.Block := SubscriberContract.Block;
            BufferSubscriberLE."Contract Status" := SubscriberContract."Contract Status";
            BufferSubscriberLE.INSERT;
          END;
          IF "Paid Flag" THEN
            BufferSubscriberLE."Deposit Paid" += "Unit Price";
          IF "Paid Flag" AND "Delivered Flag" THEN
            BufferSubscriberLE."Realized Revenue" += "Unit Price";
          IF "Reversed Flag" THEN
            BufferSubscriberLE."Reversed Amount" += "Unit Price"
          ELSE IF "Paid Flag" AND (NOT "Delivered Flag") THEN
            BufferSubscriberLE."Unrealized Revenue" += "Unit Price";
          BufferSubscriberLE.MODIFY;
        UNTIL NEXT=0;
      END;
      COMMIT;
      Window.CLOSE;
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   12.03.2007   KKE   New buffer table for "Deposit Realized Revenue" - Subscription Module
    }
    END.
  }
}

OBJECT Table 50014 PO Type
{
  OBJECT-PROPERTIES
  {
    Date=07/02/08;
    Time=11:44:19 AM;
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    LookupPageID=Page50020;
    DrillDownPageID=Page50020;
  }
  FIELDS
  {
    { 1   ;   ;PO Type Code        ;Code20         }
    { 2   ;   ;Description         ;Text50         }
    { 3   ;   ;Nos. for PO         ;Code10        ;TableRelation="No. Series" }
  }
  KEYS
  {
    {    ;PO Type Code                            ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   28.03.2007   KKE   New table for "PO Type" - Purchase Module
    }
    END.
  }
}

OBJECT Table 50015 Content Group Setup
{
  OBJECT-PROPERTIES
  {
    Date=04/24/07;
    Time=[ 6:00:00 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    LookupPageID=Page50022;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code20         }
    { 2   ;   ;Magazine Code       ;Code20        ;TableRelation=Magazine }
    { 3   ;   ;Description         ;Text50         }
    { 4   ;   ;Blackground Color   ;Option        ;OptionString=[ ,Black,Dark Red,Red,Pink,Rose,Brown,Orange,Light Orange,Gold,Tan,Olive Green,Dark Yellow,Lime,Yellow,Light Yellow,Dark Green,Green,Sea Green,Bright Green,Light Green,Dark Teal,Teal,Aqua,Turquoise,Light Turquoise,Dark Blue,Blue,Light Blue,Sky Blue,Pale Blue,Indigo,Blue-Gray,Violet,Plum,Lavender,Gray - 80%,Gray - 50%,Gray - 40%,Gray - 25%,White] }
    { 5   ;   ;Foreground Color    ;Option        ;OptionString=[ ,Black,Dark Red,Red,Pink,Rose,Brown,Orange,Light Orange,Gold,Tan,Olive Green,Dark Yellow,Lime,Yellow,Light Yellow,Dark Green,Green,Sea Green,Bright Green,Light Green,Dark Teal,Teal,Aqua,Turquoise,Light Turquoise,Dark Blue,Blue,Light Blue,Sky Blue,Pale Blue,Indigo,Blue-Gray,Violet,Plum,Lavender,Gray - 80%,Gray - 50%,Gray - 40%,Gray - 25%,White] }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    PROCEDURE GetRBGValue@1000000001(_Color@1000000001 : ' ,Black,Dark Red,Red,Pink,Rose,Brown,Orange,Light Orange,Gold,Tan,Olive Green,Dark Yellow,Lime,Yellow,Light Yellow,Dark Green,Green,Sea Green,Bright Green,Light Green,Dark Teal,Teal,Aqua,Turquoise,Light Turquoise,Dark Blue,Blue,Light Blue,Sky Blue,Pale Blue,Indigo,Blue-Gray,Violet,Plum,Lavender,Gray - 80%,Gray - 50%,Gray - 40%,Gray - 25%,White') : Integer;
    VAR
      RBGValue@1000000000 : Integer;
    BEGIN
      CASE _Color OF
        0:
          RBGValue := 0;
        _Color::Black:
          RBGValue := 0;
        _Color::"Dark Red":
          RBGValue := 128;
        _Color::Red:
          RBGValue := 255;
        _Color::Pink:
          RBGValue := 16711935;
        _Color::Rose:
          RBGValue := 16744703;
        _Color::Brown:
          RBGValue := 16512;
        _Color::Orange:
          RBGValue := 25850;
        _Color::"Light Orange":
          RBGValue := 38655;
        _Color::Gold:
          RBGValue := 54015;
        _Color::Tan:
          RBGValue := 9229055;
        _Color::"Olive Green":
          RBGValue := 24144;
        _Color::"Dark Yellow":
          RBGValue := 35985;
        _Color::Lime:
          RBGValue := 2677935;
        _Color::Yellow:
          RBGValue := 65535;
        _Color::"Light Yellow":
          RBGValue := 11206655;
        _Color::"Dark Green":
          RBGValue := 16384;
        _Color::Green:
          RBGValue := 37177;
        _Color::"Sea Green":
          RBGValue := 7372800;
        _Color::"Bright Green":
          RBGValue := 16695;
        _Color::"Light Green":
          RBGValue := 12058015;
        _Color::"Dark Teal":
          RBGValue := 5980160;
        _Color::Teal:
          RBGValue := 6576128;
        _Color::Aqua:
          RBGValue := 11776768;
        _Color::Turquoise:
          RBGValue := 16777005;
        _Color::"Light Turquoise":
          RBGValue := 16777134;
        _Color::"Dark Blue":
          RBGValue := 8519680;
        _Color::Blue:
          RBGValue := 16711680;
        _Color::"Light Blue":
          RBGValue := 16750140;
        _Color::"Sky Blue":
          RBGValue := 14930432;
        _Color::"Pale Blue":
          RBGValue := 16770730;
        _Color::Indigo:
          RBGValue := 10630707;
        _Color::"Blue-Gray":
          RBGValue := 10117983;
        _Color::Violet:
          RBGValue := 16750140;
        _Color::Plum:
          RBGValue := 5975190;
        _Color::Lavender:
          RBGValue := 16732588;
        _Color::"Gray - 80%":
          RBGValue := 3947580;
        _Color::"Gray - 50%":
          RBGValue := 5921370;
        _Color::"Gray - 40%":
          RBGValue := 8553090;
        _Color::"Gray - 25%":
          RBGValue := 11842740;
        _Color::White:
          RBGValue := 16777215;
      END;
      EXIT(RBGValue);
    END;

    PROCEDURE GetColorIndex@1000000000(_Color@1000000001 : ' ,Black,Dark Red,Red,Pink,Rose,Brown,Orange,Light Orange,Gold,Tan,Olive Green,Dark Yellow,Lime,Yellow,Light Yellow,Dark Green,Green,Sea Green,Bright Green,Light Green,Dark Teal,Teal,Aqua,Turquoise,Light Turquoise,Dark Blue,Blue,Light Blue,Sky Blue,Pale Blue,Indigo,Blue-Gray,Violet,Plum,Lavender,Gray - 80%,Gray - 50%,Gray - 40%,Gray - 25%,White') : Integer;
    VAR
      ColorIndex@1000000000 : Integer;
    BEGIN
      CASE _Color OF
        0:
          ColorIndex := 0;
        _Color::Black:
          ColorIndex := 1;
        _Color::"Dark Red":
          ColorIndex := 9;
        _Color::Red:
          ColorIndex := 3;
        _Color::Pink:
          ColorIndex := 7;
        _Color::Rose:
          ColorIndex := 38;
        _Color::Brown:
          ColorIndex := 53;
        _Color::Orange:
          ColorIndex := 46;
        _Color::"Light Orange":
          ColorIndex := 45;
        _Color::Gold:
          ColorIndex := 44;
        _Color::Tan:
          ColorIndex := 40;
        _Color::"Olive Green":
          ColorIndex := 52;
        _Color::"Dark Yellow":
          ColorIndex := 12;
        _Color::Lime:
          ColorIndex := 43;
        _Color::Yellow:
          ColorIndex := 6;
        _Color::"Light Yellow":
          ColorIndex := 36;
        _Color::"Dark Green":
          ColorIndex := 51;
        _Color::Green:
          ColorIndex := 10;
        _Color::"Sea Green":
          ColorIndex := 50;
        _Color::"Bright Green":
          ColorIndex := 4;
        _Color::"Light Green":
          ColorIndex := 35;
        _Color::"Dark Teal":
          ColorIndex := 49;
        _Color::Teal:
          ColorIndex := 14;
        _Color::Aqua:
          ColorIndex := 42;
        _Color::Turquoise:
          ColorIndex := 8;
        _Color::"Light Turquoise":
          ColorIndex := 34;
        _Color::"Dark Blue":
          ColorIndex := 11;
        _Color::Blue:
          ColorIndex := 5;
        _Color::"Light Blue":
          ColorIndex := 41;
        _Color::"Sky Blue":
          ColorIndex := 33;
        _Color::"Pale Blue":
          ColorIndex := 37;
        _Color::Indigo:
          ColorIndex := 55;
        _Color::"Blue-Gray":
          ColorIndex := 47;
        _Color::Violet:
          ColorIndex := 13;
        _Color::Plum:
          ColorIndex := 54;
        _Color::Lavender:
          ColorIndex := 39;
        _Color::"Gray - 80%":
          ColorIndex := 56;
        _Color::"Gray - 50%":
          ColorIndex := 15;
        _Color::"Gray - 40%":
          ColorIndex := 48;
        _Color::"Gray - 25%":
          ColorIndex := 15;
        _Color::White:
          ColorIndex := 2;
      END;
      EXIT(ColorIndex);
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   28.03.2007   KKE   New table for "Content Type Setup" - Editorial Module
    }
    END.
  }
}

OBJECT Table 50016 Content Sub Group Setup
{
  OBJECT-PROPERTIES
  {
    Date=03/28/07;
    Time=[ 6:00:00 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    LookupPageID=Page50023;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code20         }
    { 2   ;   ;Magazine Code       ;Code20        ;TableRelation=Magazine }
    { 3   ;   ;Description         ;Text50         }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   28.03.2007   KKE   New table for "Content Sub Type Setup" - Editorial Module
    }
    END.
  }
}

OBJECT Table 50017 Content Column
{
  OBJECT-PROPERTIES
  {
    Date=07/11/07;
    Time=[ 6:00:00 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    LookupPageID=Page50024;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code20         }
    { 2   ;   ;Magazine Code       ;Code20        ;TableRelation=Magazine }
    { 3   ;   ;Description         ;Text50         }
    { 4   ;   ;No. of Page         ;Decimal       ;DecimalPlaces=0:5 }
    { 5   ;   ;Content Group       ;Code20        ;TableRelation="Content Group Setup" }
    { 6   ;   ;Content Sub Group   ;Code20        ;TableRelation="Content Sub Group Setup" }
    { 7   ;   ;Shortcut Dimension 6 Code;Code20   ;TableRelation="Dimension Value".Code;
                                                   OnLookup=BEGIN
                                                              LookupShortcutDimCode(6,"Shortcut Dimension 6 Code");
                                                            END;

                                                   CaptionML=[ENU=Shortcut Dimension 6 Code;
                                                              THA=รหัสมิติทางลัดหมายเลข 6];
                                                   CaptionClass='1,2,6' }
    { 8   ;   ;Remark              ;Text50         }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      DimMgt@1000000000 : Codeunit 408;
      ShortcutDimCode@1000000001 : Code[20];

    PROCEDURE LookupShortcutDimCode@18(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    BEGIN
      DimMgt.LookupDimValueCode(FieldNumber,ShortcutDimCode);
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   28.03.2007   KKE   New table for "Content Setup" - Editorial Module
    }
    END.
  }
}

OBJECT Table 50018 Editorial Setup
{
  OBJECT-PROPERTIES
  {
    Date=03/30/07;
    Time=[ 6:00:00 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
  }
  FIELDS
  {
    { 1   ;   ;Primary Key         ;Code10        ;CaptionML=[ENU=Primary Key;
                                                              THA=คีย์หลัก] }
    { 2   ;   ;Content Index Nos.  ;Code10        ;TableRelation="No. Series" }
    { 3   ;   ;Dummy Plan Nos.     ;Code10        ;TableRelation="No. Series" }
  }
  KEYS
  {
    {    ;Primary Key                             ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   28.03.2007   KKE   New table for "Editorial Setup" - Editorial Module
    }
    END.
  }
}

OBJECT Table 50019 Content Index Header
{
  OBJECT-PROPERTIES
  {
    Date=08/14/07;
    Time=[ 6:00:00 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               IF "No." = '' THEN BEGIN
                 EditorialSetup.GET;
                 EditorialSetup.TESTFIELD("Content Index Nos.");
                 NoSeriesMgt.InitSeries(EditorialSetup."Content Index Nos.",xRec."No. Series",0D,"No.","No. Series");
               END;

               "Creation Date" := TODAY;
             END;

    OnDelete=BEGIN
               ContentIndexLine.SETRANGE("Content List No.","No.");
               IF ContentIndexLine.FIND('-') THEN
                 ERROR(Text001,"No.");

               ContentIndexLine.RESET;
               ContentIndexLine.SETRANGE("Content List No.","No.");
               ContentIndexLine.DELETEALL;
             END;

    OnRename=BEGIN
               ERROR(Text000,TABLECAPTION);
             END;

    LookupPageID=Page50028;
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20        ;OnValidate=BEGIN
                                                                IF "No." <> xRec."No." THEN BEGIN
                                                                  EditorialSetup.GET;
                                                                  NoSeriesMgt.TestManual(EditorialSetup."Content Index Nos.");
                                                                  "No. Series" := '';
                                                                END;
                                                              END;
                                                               }
    { 2   ;   ;Creation Date       ;Date           }
    { 3   ;   ;Magazine Item No.   ;Code20        ;TableRelation=Item WHERE (Item Type=CONST(Magazine));
                                                   OnValidate=BEGIN
                                                                IF ("Magazine Item No." <> xRec."Magazine Item No.") OR ("Magazine Item No." = '') THEN BEGIN
                                                                  ContentIndexLine.SETRANGE("Content List No.","No.");
                                                                  IF ContentIndexLine.FIND('-') THEN
                                                                    ERROR(Text002,FIELDCAPTION("Magazine Item No."));
                                                                END;

                                                                IF Item.GET("Magazine Item No.") THEN
                                                                  "Magazine Code" := Item."Magazine Code"
                                                                ELSE
                                                                  "Magazine Code" := '';
                                                              END;
                                                               }
    { 5   ;   ;Magazine Code       ;Code20        ;TableRelation=Magazine;
                                                   Editable=No }
    { 10  ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=No. Series;
                                                              THA=ชุดหมายเลข] }
    { 20  ;   ;Close               ;Boolean       ;Editable=No }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      EditorialSetup@1000000001 : Record 50018;
      Item@1000000003 : Record 27;
      ContentIndexLine@1000000005 : Record 50020;
      NoSeriesMgt@1000000000 : Codeunit 396;
      Text000@1000000002 : TextConst 'ENU=You cannot rename a %1.;THA=คุณไม่สามารถเปลี่ยนชื่อ %1';
      Text001@1000000004 : TextConst 'ENU=You cannot delete %1 because the document still has one or more lines.';
      Text002@1000000006 : TextConst 'ENU=You cannot reset %1 because the document still has one or more lines.';

    PROCEDURE AssistEdit@2(OldContentListHdr@1000 : Record 50019) : Boolean;
    VAR
      ContentListHdr@1001 : Record 50019;
    BEGIN
      WITH ContentListHdr DO BEGIN
        ContentListHdr := Rec;
        EditorialSetup.GET;
        EditorialSetup.TESTFIELD("Content Index Nos.");
        IF NoSeriesMgt.SelectSeries(EditorialSetup."Content Index Nos.",OldContentListHdr."No. Series","No. Series") THEN BEGIN
          NoSeriesMgt.SetSeries("No.");
          Rec := ContentListHdr;
          EXIT(TRUE);
        END;
      END;
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   28.03.2007   KKE   New table for "Content Index Header" - Editorial Module
    }
    END.
  }
}

OBJECT Table 50020 Content Index Line
{
  OBJECT-PROPERTIES
  {
    Date=10/01/07;
    Time=[ 6:41:59 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               TESTFIELD("Content Code");
               IF "Magazine Code" = '' THEN BEGIN
                 ContentIndexHeader.GET("Content List No.");
                 ContentIndexHeader.TESTFIELD("Magazine Item No.");
                 Item.GET(ContentIndexHeader."Magazine Item No.");
                 "Magazine Code" := Item."Magazine Code";
               END;
             END;

    OnModify=BEGIN
               IF Status <> xRec.Status THEN
                 EXIT;
               TESTFIELD(Status,Status::" ");
             END;

    OnDelete=BEGIN
               TESTFIELD(Status,Status::" ");
               PhotoExpense.RESET;
               PhotoExpense.SETRANGE("Content Index No.","Content List No.");
               PhotoExpense.SETRANGE("Content Index Line No.","Content List Line No.");
               PhotoExpense.DELETEALL;

               ContentCost.RESET;
               ContentCost.SETRANGE("Content Index No.","Content List No.");
               ContentCost.SETRANGE("Content Index Line No.","Content List Line No.");
               ContentCost.DELETEALL;
             END;

    OnRename=BEGIN
               ERROR(Text000,TABLECAPTION);
             END;

  }
  FIELDS
  {
    { 1   ;   ;Content List No.    ;Code20        ;TableRelation="Content Index Header" }
    { 2   ;   ;Content List Line No.;Integer       }
    { 4   ;   ;Content Code        ;Code20        ;TableRelation="Content Column";
                                                   OnValidate=BEGIN
                                                                IF ContentSetup.GET("Content Code") THEN BEGIN
                                                                  Description := ContentSetup.Description;
                                                                  "No. of Page" := ContentSetup."No. of Page";
                                                                  VALIDATE("Content Type",ContentSetup."Content Group");
                                                                  VALIDATE("Content Sub Type",ContentSetup."Content Sub Group");
                                                                END;
                                                                ContentIndexHeader.GET("Content List No.");
                                                                ContentIndexHeader.TESTFIELD("Magazine Item No.");
                                                                Item.GET(ContentIndexHeader."Magazine Item No.");
                                                                "Magazine Code" := Item."Magazine Code";
                                                              END;
                                                               }
    { 5   ;   ;Description         ;Text50         }
    { 6   ;   ;No. of Page         ;Decimal       ;DecimalPlaces=0:5 }
    { 7   ;   ;Content Type        ;Code20        ;TableRelation="Content Group Setup" }
    { 8   ;   ;Content Sub Type    ;Code20        ;TableRelation="Content Sub Group Setup" }
    { 9   ;   ;Author Name         ;Text50         }
    { 10  ;   ;Description 2       ;Text50         }
    { 11  ;   ;Source of Information;Text50        }
    { 12  ;   ;Cost (LCY)          ;Decimal       ;Editable=No }
    { 13  ;   ;Content Receipt Date;Date           }
    { 14  ;   ;Status              ;Option        ;OptionString=[ ,Picked,Occupied,Approved,Cancelled];
                                                   Editable=No }
    { 15  ;   ;Actual Page No.     ;Integer       ;Editable=No }
    { 16  ;   ;Actual Sub Page No. ;Integer       ;Editable=No }
    { 17  ;   ;Actual Volume No.   ;Code20        ;TableRelation=Volume;
                                                   Editable=No }
    { 18  ;   ;Actual Issue No.    ;Code20        ;Editable=No }
    { 21  ;   ;Size                ;Code20        ;TableRelation="Ads. Size" }
    { 22  ;   ;Position            ;Code20        ;TableRelation="Ads. Position" WHERE (Magazine Code=FIELD(Magazine Code)) }
    { 23  ;   ;Column Name         ;Text50         }
    { 24  ;   ;Own Customer        ;Code20        ;TableRelation=Customer }
    { 25  ;   ;Quantity            ;Decimal       ;DecimalPlaces=0:5 }
    { 26  ;   ;Unit Price          ;Decimal       ;AutoFormatType=1 }
    { 100 ;   ;Magazine Item No.   ;Code20        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Content Index Header"."Magazine Item No." WHERE (No.=FIELD(Content List No.),
                                                                                                                        Magazine Code=FIELD(Magazine Code)));
                                                   TableRelation=Item WHERE (Item Type=CONST(Magazine));
                                                   Editable=No }
    { 101 ;   ;Magazine Code       ;Code20        ;TableRelation=Magazine;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Content List No.,Content List Line No.  ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ContentSetup@1000000000 : Record 50017;
      Text000@1000000001 : TextConst 'ENU=You cannot rename a %1.;THA=คุณไม่สามารถเปลี่ยนชื่อ %1';
      Text001@1000000002 : TextConst 'ENU=Do you want to cancel content line %1?';
      PhotoExpense@1000000004 : Record 50021;
      ContentCost@1000000003 : Record 50022;
      ContentIndexHeader@1000000006 : Record 50019;
      Item@1000000005 : Record 27;

    PROCEDURE ShowPhotoExpense@1000000000();
    VAR
      PhotoExpense@1000000000 : Record 50021;
    BEGIN
      PhotoExpense.SETRANGE("Content Index No.","Content List No.");
      PhotoExpense.SETRANGE("Content Index Line No.","Content List Line No.");
      PAGE.RUNMODAL(PAGE::"Photo Expense",PhotoExpense);
    END;

    PROCEDURE ShowContentCost@1000000001();
    VAR
      ContentCost@1000000000 : Record 50022;
    BEGIN
      ContentCost.SETRANGE("Content Index No.","Content List No.");
      ContentCost.SETRANGE("Content Index Line No.","Content List Line No.");
      PAGE.RUNMODAL(PAGE::"Content Cost",ContentCost);
    END;

    PROCEDURE CancelContent@1000000002();
    BEGIN
      IF NOT CONFIRM(STRSUBSTNO(Text001,"Content List Line No."),FALSE) THEN
        EXIT;

      Status := Status::Cancelled;
    END;

    PROCEDURE UpdateCost@1000000003();
    BEGIN
      TESTFIELD(Status,Status::" ");

      PhotoExpense.RESET;
      PhotoExpense.SETRANGE("Content Index No.","Content List No.");
      PhotoExpense.SETRANGE("Content Index Line No.","Content List Line No.");
      PhotoExpense.CALCSUMS("Cost Amount (LCY)");

      ContentCost.RESET;
      ContentCost.SETRANGE("Content Index No.","Content List No.");
      ContentCost.SETRANGE("Content Index Line No.","Content List Line No.");
      ContentCost.CALCSUMS("Cost Amount (LCY)");

      "Cost (LCY)" := PhotoExpense."Cost Amount (LCY)" + ContentCost."Cost Amount (LCY)";
      MODIFY(TRUE);
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   28.03.2007   KKE   New table for "Content Index Line" - Editorial Module
    }
    END.
  }
}

OBJECT Table 50021 Photo Expense
{
  OBJECT-PROPERTIES
  {
    Date=05/18/07;
    Time=[ 6:00:00 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               GetContentIndexLine;
             END;

    OnModify=BEGIN
               TESTFIELD(Archived,FALSE);
               GetContentIndexLine;
             END;

    OnDelete=BEGIN
               TESTFIELD(Archived,FALSE);
               GetContentIndexLine;
             END;

    OnRename=BEGIN
               ERROR(Text000,TABLECAPTION);
             END;

  }
  FIELDS
  {
    { 1   ;   ;Content Index No.   ;Code20         }
    { 2   ;   ;Content Index Line No.;Integer      }
    { 3   ;   ;Line No.            ;Integer        }
    { 4   ;   ;Picture Code        ;Code20         }
    { 5   ;   ;Picture Size        ;Text30         }
    { 6   ;   ;Reference No.       ;Text30         }
    { 7   ;   ;Description         ;Text50         }
    { 8   ;   ;Agency              ;Text50         }
    { 9   ;   ;Invoice No.         ;Text30         }
    { 10  ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   OnValidate=BEGIN
                                                                IF "Currency Code" = '' THEN
                                                                  "Exchange Rate" := 0;
                                                                VALIDATE("Cost Amount");
                                                              END;
                                                               }
    { 11  ;   ;Cost Amount         ;Decimal       ;OnValidate=BEGIN
                                                                IF "Currency Code" = '' THEN
                                                                  "Cost Amount (LCY)" := "Cost Amount"
                                                                ELSE
                                                                  "Cost Amount (LCY)" := "Cost Amount" * "Exchange Rate";
                                                              END;

                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 12  ;   ;Exchange Rate       ;Decimal       ;OnValidate=BEGIN
                                                                IF "Exchange Rate" <> 0 THEN
                                                                  TESTFIELD("Currency Code");
                                                                VALIDATE("Cost Amount");
                                                              END;

                                                   DecimalPlaces=0:15 }
    { 13  ;   ;Cost Amount (LCY)   ;Decimal       ;OnValidate=BEGIN
                                                                IF "Currency Code" = '' THEN
                                                                  "Cost Amount" := "Cost Amount (LCY)"
                                                                ELSE BEGIN
                                                                  TESTFIELD("Exchange Rate");
                                                                  "Cost Amount" := "Cost Amount (LCY)" / "Exchange Rate";
                                                                END;
                                                              END;

                                                   AutoFormatType=1 }
    { 14  ;   ;Payment Date        ;Date           }
    { 15  ;   ;Billing Date        ;Date           }
    { 16  ;   ;Note                ;Text50         }
    { 17  ;   ;Payment Status      ;Text30         }
    { 18  ;   ;Remarks             ;Text50         }
    { 100 ;   ;Archived            ;Boolean        }
  }
  KEYS
  {
    {    ;Content Index No.,Content Index Line No.,Line No.;
                                                   SumIndexFields=Cost Amount,Cost Amount (LCY);
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1000000000 : TextConst 'ENU=You cannot rename a %1.;THA=คุณไม่สามารถเปลี่ยนชื่อ %1';
      ContentIndexLine@1000000001 : Record 50020;

    PROCEDURE GetContentIndexLine@1000000002();
    BEGIN
      ContentIndexLine.GET("Content Index No.","Content Index Line No.");
      ContentIndexLine.TESTFIELD(Status,ContentIndexLine.Status::" ");
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   28.03.2007   KKE   New table for "Photo Expense" - Editorial Module
    }
    END.
  }
}

OBJECT Table 50022 Content Cost
{
  OBJECT-PROPERTIES
  {
    Date=05/18/07;
    Time=[ 6:00:00 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               GetContentIndexLine;
             END;

    OnModify=BEGIN
               TESTFIELD(Archived,FALSE);
               GetContentIndexLine;
             END;

    OnDelete=BEGIN
               TESTFIELD(Archived,FALSE);
               GetContentIndexLine;
             END;

    OnRename=BEGIN
               ERROR(Text000,TABLECAPTION);
             END;

  }
  FIELDS
  {
    { 1   ;   ;Content Index No.   ;Code20         }
    { 2   ;   ;Content Index Line No.;Integer      }
    { 3   ;   ;Line No.            ;Integer        }
    { 4   ;   ;Expense Code        ;Code20         }
    { 5   ;   ;Reference No.       ;Text30         }
    { 6   ;   ;Description         ;Text50         }
    { 7   ;   ;Invoice No.         ;Text30         }
    { 8   ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   OnValidate=BEGIN
                                                                IF "Currency Code" = '' THEN
                                                                  "Exchange Rate" := 0;
                                                                VALIDATE("Cost Amount");
                                                              END;
                                                               }
    { 9   ;   ;Cost Amount         ;Decimal       ;OnValidate=BEGIN
                                                                IF "Currency Code" = '' THEN
                                                                  "Cost Amount (LCY)" := "Cost Amount"
                                                                ELSE
                                                                  "Cost Amount (LCY)" := "Cost Amount" * "Exchange Rate";
                                                              END;

                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 10  ;   ;Exchange Rate       ;Decimal       ;OnValidate=BEGIN
                                                                IF "Exchange Rate" <> 0 THEN
                                                                  TESTFIELD("Currency Code");
                                                                VALIDATE("Cost Amount");
                                                              END;

                                                   DecimalPlaces=0:15 }
    { 11  ;   ;Cost Amount (LCY)   ;Decimal       ;OnValidate=BEGIN
                                                                IF "Currency Code" = '' THEN
                                                                  "Cost Amount" := "Cost Amount (LCY)"
                                                                ELSE BEGIN
                                                                  TESTFIELD("Exchange Rate");
                                                                  "Cost Amount" := "Cost Amount (LCY)" / "Exchange Rate";
                                                                END;
                                                              END;

                                                   AutoFormatType=1 }
    { 12  ;   ;Payment Date        ;Date           }
    { 13  ;   ;Billing Date        ;Date           }
    { 14  ;   ;Note                ;Text50         }
    { 15  ;   ;Payment Status      ;Text30         }
    { 16  ;   ;Remarks             ;Text50         }
    { 100 ;   ;Archived            ;Boolean        }
  }
  KEYS
  {
    {    ;Content Index No.,Content Index Line No.,Line No.;
                                                   SumIndexFields=Cost Amount,Cost Amount (LCY);
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1000000000 : TextConst 'ENU=You cannot rename a %1.;THA=คุณไม่สามารถเปลี่ยนชื่อ %1';
      ContentIndexLine@1000000001 : Record 50020;

    PROCEDURE GetContentIndexLine@1000000002();
    BEGIN
      ContentIndexLine.GET("Content Index No.","Content Index Line No.");
      ContentIndexLine.TESTFIELD(Status,ContentIndexLine.Status::" ");
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   29.03.2007   KKE   New table for "Content Cost" - Editorial Module
    }
    END.
  }
}

OBJECT Table 50023 Dummy Plan
{
  OBJECT-PROPERTIES
  {
    Date=09/26/07;
    Time=[ 4:53:04 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               IF "Dummy Plan No." = '' THEN BEGIN
                 EditorialSetup.GET;
                 EditorialSetup.TESTFIELD("Dummy Plan Nos.");
                 NoSeriesMgt.InitSeries(EditorialSetup."Dummy Plan Nos.",xRec."No. Series",0D,"Dummy Plan No.","No. Series");
               END;

               "Document Date" := WORKDATE;
               "User ID" := USERID;
             END;

    OnModify=BEGIN
               TESTFIELD("Planning Status","Planning Status"::Open);
             END;

    OnDelete=BEGIN
               TESTFIELD("Planning Status","Planning Status"::Open);

               DummyPlanLine.RESET;
               DummyPlanLine.SETRANGE("Dummy Plan No.","Dummy Plan No.");
               DummyPlanLine.SETRANGE("Revision No.","Revision No.");
               IF DummyPlanLine.FIND('-') THEN
                 DummyPlanLine.DELETEALL;

               BookingList.RESET;
               BookingList.SETRANGE("Dummy Plan No.","Dummy Plan No.");
               BookingList.SETRANGE("Revision No.","Revision No.");
               IF BookingList.FIND('-') THEN
                 BookingList.DELETEALL;
             END;

    OnRename=BEGIN
               ERROR(Text000,TABLECAPTION);
             END;

    LookupPageID=Page50032;
  }
  FIELDS
  {
    { 1   ;   ;Dummy Plan No.      ;Code20        ;OnValidate=BEGIN
                                                                IF "Dummy Plan No." <> xRec."Dummy Plan No." THEN BEGIN
                                                                  EditorialSetup.GET;
                                                                  NoSeriesMgt.TestManual(EditorialSetup."Dummy Plan Nos.");
                                                                  "No. Series" := '';
                                                                END;
                                                              END;
                                                               }
    { 2   ;   ;Magazine Item No.   ;Code20        ;TableRelation=Item WHERE (Item Type=CONST(Magazine));
                                                   OnValidate=BEGIN
                                                                TESTFIELD("Planning Status","Planning Status"::Open);
                                                                IF ("Magazine Item No." <> xRec."Magazine Item No.") OR ("Magazine Item No." = '') THEN BEGIN
                                                                  DummyPlanLine.RESET;
                                                                  DummyPlanLine.SETRANGE("Dummy Plan No.","Dummy Plan No.");
                                                                  DummyPlanLine.SETRANGE("Revision No.","Revision No.");
                                                                  DummyPlanLine.SETFILTER("Line No.",'<>%1',0);
                                                                  IF DummyPlanLine.FIND('-') THEN
                                                                    ERROR(Text005);
                                                                  BookingList.RESET;
                                                                  BookingList.SETRANGE("Dummy Plan No.","Dummy Plan No.");
                                                                  BookingList.SETRANGE("Revision No.","Revision No.");
                                                                  IF BookingList.FIND('-') THEN
                                                                    ERROR(Text011,FIELDCAPTION("Magazine Item No."));

                                                                  //One Magazine Item per one Dummy Plan
                                                                  IF "Magazine Item No." <> '' THEN BEGIN
                                                                    DummyPlan.RESET;
                                                                    DummyPlan.SETFILTER("Dummy Plan No.",'<>%1',"Dummy Plan No.");
                                                                    DummyPlan.SETRANGE("Magazine Item No.","Magazine Item No.");
                                                                    DummyPlan.SETRANGE("Magazine Code");
                                                                    DummyPlan.SETPERMISSIONFILTER;
                                                                    IF DummyPlan.FIND('-') THEN
                                                                      ERROR(Text008,DummyPlan."Dummy Plan No.")
                                                                    ELSE BEGIN
                                                                      ArchivedDummyPlan.RESET;
                                                                      ArchivedDummyPlan.SETFILTER("Dummy Plan No.",'<>%1',"Dummy Plan No.");
                                                                      ArchivedDummyPlan.SETRANGE("Magazine Item No.","Magazine Item No.");
                                                                      ArchivedDummyPlan.SETRANGE("Magazine Code");
                                                                      ArchivedDummyPlan.SETPERMISSIONFILTER;
                                                                      IF ArchivedDummyPlan.FIND('-') THEN
                                                                        ERROR(Text008,ArchivedDummyPlan."Dummy Plan No.");
                                                                    END;
                                                                  END;

                                                                  "No. of Page" := 0;
                                                                  DummyPlanLine.RESET;
                                                                  DummyPlanLine.SETRANGE("Dummy Plan No.","Dummy Plan No.");
                                                                  DummyPlanLine.SETRANGE("Revision No.","Revision No.");
                                                                  IF DummyPlanLine.FIND('-') THEN
                                                                    DummyPlanLine.DELETEALL;

                                                                  Item.GET("Magazine Item No.");
                                                                  "Magazine Code" := Item."Magazine Code";
                                                                  IF Magazine.GET(Item."Magazine Code") THEN BEGIN
                                                                    "No. of Page" := Magazine."Minimum No. of Page";

                                                                    DummyPlanLine.RESET;
                                                                    DummyPlanLine.SETRANGE("Dummy Plan No.","Dummy Plan No.");
                                                                    DummyPlanLine.SETRANGE("Revision No.","Revision No.");
                                                                    IF NOT DummyPlanLine.FIND('-') THEN
                                                                      FOR x:=1 TO "No. of Page" DO BEGIN
                                                                        DummyPlanLine.INIT;
                                                                        DummyPlanLine."Dummy Plan No." := "Dummy Plan No.";
                                                                        DummyPlanLine."Revision No." := "Revision No.";
                                                                        DummyPlanLine."Magazine Item No." := "Magazine Item No.";
                                                                        DummyPlanLine."Page No." := x;
                                                                        DummyPlanLine."Sub Page No." := 0;
                                                                        DummyPlanLine."Line No." := 0;
                                                                        DummyPlanLine."Box No." := x;
                                                                        DummyPlanLine.INSERT;
                                                                      END;
                                                                  END;
                                                                END;
                                                              END;
                                                               }
    { 3   ;   ;Planning Status     ;Option        ;OptionString=Open,Released,Final Approve;
                                                   Editable=No }
    { 4   ;   ;Document Date       ;Date           }
    { 5   ;   ;No. of Page         ;Integer       ;OnValidate=VAR
                                                                BoxNo@1000000000 : Integer;
                                                              BEGIN
                                                                TESTFIELD("Planning Status","Planning Status"::Open);
                                                                IF NOT CONFIRM(Text001,FALSE) THEN BEGIN
                                                                  "No. of Page" := xRec."No. of Page";
                                                                  EXIT;
                                                                END;

                                                                IF "No. of Page" < xRec."No. of Page" THEN BEGIN
                                                                  DummyPlanLine.RESET;
                                                                  DummyPlanLine.SETRANGE("Dummy Plan No.","Dummy Plan No.");
                                                                  DummyPlanLine.SETRANGE("Revision No.","Revision No.");
                                                                  DummyPlanLine.SETFILTER("Page No.",'>%1',"No. of Page");
                                                                  DummyPlanLine.SETFILTER("Planning Status",'<>%1',DummyPlanLine."Planning Status"::" ");
                                                                  IF DummyPlanLine.FIND('-') THEN
                                                                    DummyPlanLine.TESTFIELD("Planning Status",DummyPlanLine."Planning Status"::" ")
                                                                  ELSE BEGIN
                                                                    DummyPlanLine.SETRANGE("Planning Status");
                                                                    DummyPlanLine.DELETEALL;
                                                                  END;
                                                                END ELSE BEGIN
                                                                  BoxNo := 0;
                                                                  DummyPlanLine.RESET;
                                                                  DummyPlanLine.SETCURRENTKEY("Dummy Plan No.","Revision No.","Box No.");
                                                                  DummyPlanLine.SETRANGE("Dummy Plan No.","Dummy Plan No.");
                                                                  DummyPlanLine.SETRANGE("Revision No.","Revision No.");
                                                                  DummyPlanLine.SETFILTER("Page No.",'<>%1',1);
                                                                  IF DummyPlanLine.FIND('+') THEN
                                                                    BoxNo := DummyPlanLine."Box No.";
                                                                  IF BoxNo + "No. of Page" - xRec."No. of Page" > 289 THEN
                                                                    ERROR(Text007,289);
                                                                  FOR x:=1 TO "No. of Page" - xRec."No. of Page" DO BEGIN
                                                                    DummyPlanLine.INIT;
                                                                    DummyPlanLine."Dummy Plan No." := "Dummy Plan No.";
                                                                    DummyPlanLine."Revision No." := "Revision No.";
                                                                    DummyPlanLine."Magazine Item No." := "Magazine Item No.";
                                                                    DummyPlanLine."Page No." := xRec."No. of Page" + x;
                                                                    DummyPlanLine."Sub Page No." := 0;
                                                                    DummyPlanLine."Line No." := 0;
                                                                    DummyPlanLine."Box No." := BoxNo + x;
                                                                    DummyPlanLine.INSERT;
                                                                  END;
                                                                END;
                                                              END;

                                                   MinValue=0;
                                                   MaxValue=289;
                                                   Description=0-289 Page }
    { 6   ;   ;Magazine Code       ;Code20        ;TableRelation=Magazine;
                                                   Editable=No }
    { 10  ;   ;User ID             ;Code20        ;TableRelation=User;
                                                   Editable=No }
    { 11  ;   ;Revision No.        ;Integer       ;Editable=No }
    { 12  ;   ;Revision Date/Time  ;DateTime      ;Editable=No }
    { 13  ;   ;No. Series          ;Code10        ;TableRelation="No. Series" }
  }
  KEYS
  {
    {    ;Dummy Plan No.,Revision No.             ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      EditorialSetup@1000000001 : Record 50018;
      Item@1000000003 : Record 27;
      Magazine@1000000004 : Record 50011;
      DummyPlan@1000000009 : Record 50023;
      DummyPlanLine@1000000006 : Record 50024;
      ArchivedDummyPlan@1000000018 : Record 50047;
      BookingList@1000000012 : Record 50025;
      NoSeriesMgt@1000000000 : Codeunit 396;
      Text000@1000000002 : TextConst 'ENU=You cannot rename a %1.;THA=คุณไม่สามารถเปลี่ยนชื่อ %1';
      Text001@1000000005 : TextConst 'ENU=Do you want to change no. of page?';
      x@1000000007 : Integer;
      Text002@1000000008 : TextConst 'ENU=Do you want to %1 dummy plan %2?';
      Text003@1000000010 : TextConst 'ENU=Dummy plan %1 is still opening by revision no. %2.';
      Text004@1000000011 : TextConst 'ENU=Dummy plan %1 has been approved by revision no. %2.';
      Text005@1000000013 : TextConst 'ENU=You cannot change Magazine Item No.';
      Text006@1000000014 : TextConst 'ENU=Dummy Plan %1 has been archived.';
      Text007@1000000015 : TextConst 'ENU=Dummy Plan has maximum no. of box is %1.';
      Text008@1000000016 : TextConst 'ENU=Magazine Item No. has been used by dummy plan %1.';
      Text009@1000000017 : TextConst 'ENU=Dummy Plan %1 cannot final approve because one or more booking list still opening.';
      Text010@1000000019 : TextConst 'ENU=Please assign value on page %1%2.';
      Text011@1000000020 : TextConst 'ENU=You cannot reset %1 because the booking list still has one or more lines.';

    PROCEDURE AssistEdit@2(OldDummyPlan@1000 : Record 50023) : Boolean;
    VAR
      DummyPlan@1001 : Record 50023;
    BEGIN
      WITH DummyPlan DO BEGIN
        DummyPlan := Rec;
        EditorialSetup.GET;
        EditorialSetup.TESTFIELD("Dummy Plan Nos.");
        IF NoSeriesMgt.SelectSeries(EditorialSetup."Dummy Plan Nos.",OldDummyPlan."No. Series","No. Series") THEN BEGIN
          NoSeriesMgt.SetSeries("Dummy Plan No.");
          Rec := DummyPlan;
          EXIT(TRUE);
        END;
      END;
    END;

    PROCEDURE Release@1000000000();
    BEGIN
      IF NOT CONFIRM(STRSUBSTNO(Text002,'release',"Dummy Plan No."),FALSE) THEN
        EXIT;

      TESTFIELD("Planning Status","Planning Status"::Open);

      "Planning Status" := "Planning Status"::Released;
      "Revision Date/Time" := CURRENTDATETIME;
      MODIFY;
    END;

    PROCEDURE Reopen@1000000001(VAR NewDummyPlan@1000000001 : Record 50023);
    VAR
      NewDummyPlanLine@1000000000 : Record 50024;
      NewBookingList@1000000002 : Record 50025;
      AdsBookingLine@1000000004 : Record 50038;
      ContentIndexLine@1000000005 : Record 50020;
      LastRevisionNo@1000000003 : Integer;
    BEGIN
      IF NOT CONFIRM(STRSUBSTNO(Text002,'reopen',"Dummy Plan No."),FALSE) THEN
        EXIT;

      TESTFIELD("Planning Status","Planning Status"::Released);

      //check other revision for this dummy plan is still opening.
      DummyPlan.RESET;
      DummyPlan.SETRANGE("Dummy Plan No.","Dummy Plan No.");
      DummyPlan.SETRANGE("Magazine Code","Magazine Code");
      DummyPlan.SETRANGE("Planning Status",DummyPlan."Planning Status"::Open);
      DummyPlan.SETPERMISSIONFILTER;
      IF DummyPlan.FIND('-') THEN
        ERROR(Text003,"Dummy Plan No.",DummyPlan."Revision No.");

      //check final approve
      DummyPlan.RESET;
      DummyPlan.SETRANGE("Dummy Plan No.","Dummy Plan No.");
      DummyPlan.SETRANGE("Magazine Code","Magazine Code");
      DummyPlan.SETRANGE("Planning Status",DummyPlan."Planning Status"::"Final Approve");
      DummyPlan.SETPERMISSIONFILTER;
      IF DummyPlan.FIND('-') THEN
        ERROR(Text004,"Dummy Plan No.",DummyPlan."Revision No.");

      //find last revision no.
      DummyPlan.RESET;
      DummyPlan.SETRANGE("Dummy Plan No.","Dummy Plan No.");
      DummyPlan.SETRANGE("Magazine Code","Magazine Code");
      DummyPlan.SETPERMISSIONFILTER;
      IF DummyPlan.FIND('+') THEN
        LastRevisionNo := DummyPlan."Revision No.";

      NewDummyPlan.INIT;
      NewDummyPlan."Dummy Plan No." := "Dummy Plan No.";
      NewDummyPlan."Revision No." := LastRevisionNo + 1;
      NewDummyPlan."Magazine Item No." := "Magazine Item No.";
      NewDummyPlan."Magazine Code" := "Magazine Code";
      NewDummyPlan."Document Date" := "Document Date";
      NewDummyPlan."No. of Page" := "No. of Page";
      NewDummyPlan."No. Series" := "No. Series";
      NewDummyPlan."User ID" := USERID;
      NewDummyPlan.INSERT;

      DummyPlanLine.RESET;
      DummyPlanLine.SETRANGE("Dummy Plan No.","Dummy Plan No.");
      DummyPlanLine.SETRANGE("Revision No.","Revision No.");
      IF DummyPlanLine.FIND('-') THEN
        REPEAT
          NewDummyPlanLine := DummyPlanLine;
          NewDummyPlanLine."Revision No." := LastRevisionNo + 1;
          NewDummyPlanLine.INSERT;
        UNTIL DummyPlanLine.NEXT=0;

      BookingList.RESET;
      BookingList.SETRANGE("Dummy Plan No.","Dummy Plan No.");
      BookingList.SETRANGE("Revision No.","Revision No.");
      IF BookingList.FIND('-') THEN
        REPEAT
          NewBookingList := BookingList;
          NewBookingList."Revision No." := LastRevisionNo + 1;
          NewBookingList.INSERT;

          //Update "Planning Status" on "Ads. Booking Line" and "Content Index Line"
          CASE NewBookingList."From Type" OF
            NewBookingList."From Type"::Ads:
              BEGIN
                IF AdsBookingLine.GET(NewBookingList."Booking No.",NewBookingList."Booking Line No.") THEN BEGIN
                  CASE NewBookingList."Planning Status" OF
                    NewBookingList."Planning Status"::" ":
                      BEGIN
                        AdsBookingLine."Planning Status" := AdsBookingLine."Planning Status"::Picked;
                        AdsBookingLine.MODIFY;
                      END;
                    NewBookingList."Planning Status"::Occupied:
                      BEGIN
                        AdsBookingLine."Planning Status" := AdsBookingLine."Planning Status"::Occupied;
                        AdsBookingLine.MODIFY;
                      END;
                  END;
                END ELSE BEGIN
                  IF NewBookingList."Planning Status" <> NewBookingList."Planning Status"::" " THEN BEGIN
                    NewDummyPlanLine.RESET;
                    NewDummyPlanLine.SETRANGE("Dummy Plan No.",NewBookingList."Dummy Plan No.");
                    NewDummyPlanLine.SETRANGE("Revision No.",NewBookingList."Revision No.");
                    NewDummyPlanLine.SETRANGE("From Type",NewBookingList."From Type");
                    NewDummyPlanLine.SETRANGE("Booking No.",NewBookingList."Booking No.");
                    NewDummyPlanLine.SETRANGE("Booking Line No.",NewBookingList."Booking Line No.");
                    IF NewDummyPlanLine.FIND('-') THEN
                      NewDummyPlanLine.DELETEALL;
                  END;
                  NewBookingList.DELETE;
                END;
              END;
            NewBookingList."From Type"::Content:
              BEGIN
                IF ContentIndexLine.GET(NewBookingList."Booking No.",NewBookingList."Booking Line No.") THEN BEGIN
                  CASE NewBookingList."Planning Status" OF
                    NewBookingList."Planning Status"::" ":
                      BEGIN
                        ContentIndexLine.Status := ContentIndexLine.Status::Picked;
                        ContentIndexLine.MODIFY;
                      END;
                    NewBookingList."Planning Status"::Occupied:
                      BEGIN
                        ContentIndexLine.Status := ContentIndexLine.Status::Occupied;
                        ContentIndexLine.MODIFY;
                      END;
                  END;
                END ELSE BEGIN
                  IF NewBookingList."Planning Status" <> NewBookingList."Planning Status"::" " THEN BEGIN
                    NewDummyPlanLine.RESET;
                    NewDummyPlanLine.SETRANGE("Dummy Plan No.",NewBookingList."Dummy Plan No.");
                    NewDummyPlanLine.SETRANGE("Revision No.",NewBookingList."Revision No.");
                    NewDummyPlanLine.SETRANGE("From Type",NewBookingList."From Type");
                    NewDummyPlanLine.SETRANGE("Booking No.",NewBookingList."Booking No.");
                    NewDummyPlanLine.SETRANGE("Booking Line No.",NewBookingList."Booking Line No.");
                    IF NewDummyPlanLine.FIND('-') THEN
                      NewDummyPlanLine.DELETEALL;
                  END;
                  NewBookingList.DELETE;
                END;
              END;
          END;
        UNTIL BookingList.NEXT=0;

      COMMIT;
    END;

    PROCEDURE FinalApprove@1000000002();
    VAR
      AdsBookingLine@1000000000 : Record 50038;
      ContentIndexHdr@1000000001 : Record 50019;
      ContentIndexLine@1000000004 : Record 50020;
      BookingList2@1000000002 : Record 50025;
    BEGIN
      IF NOT CONFIRM(STRSUBSTNO(Text002,'final approve',"Dummy Plan No."),FALSE) THEN
        EXIT;

      TESTFIELD("Planning Status","Planning Status"::Released);

      //check page must not be empty.
      DummyPlanLine.RESET;
      DummyPlanLine.SETRANGE("Dummy Plan No.","Dummy Plan No.");
      DummyPlanLine.SETRANGE("Revision No.","Revision No.");
      DummyPlanLine.SETRANGE("Line No.",0);
      IF DummyPlanLine.FIND('-') THEN
        REPEAT
          DummyPlanLine.CALCFIELDS("Has Detail");
          IF NOT DummyPlanLine."Has Detail" THEN
            ERROR(Text010,"Dummy Plan No.");
        UNTIL DummyPlanLine.NEXT=0;

      //check booking list is still opening.
      BookingList.RESET;
      BookingList.SETRANGE("Dummy Plan No.","Dummy Plan No.");
      BookingList.SETRANGE("Revision No.","Revision No.");
      BookingList.SETRANGE("Planning Status",BookingList."Planning Status"::" ");
      IF BookingList.FIND('-') THEN
        REPEAT
        //ERROR(Text009,"Dummy Plan No.");
          BookingList.UpdateAdsBookingContentIndex;
          BookingList.DELETE;
        UNTIL BookingList.NEXT=0;

      "User ID" := USERID;
      "Planning Status" := "Planning Status"::"Final Approve";
      MODIFY;

      DummyPlanLine.RESET;
      DummyPlanLine.SETRANGE("Dummy Plan No.","Dummy Plan No.");
      DummyPlanLine.SETRANGE("Revision No.","Revision No.");
      DummyPlanLine.SETFILTER("Line No.",'<>%1',0);
      IF DummyPlanLine.FIND('-') THEN
        REPEAT
          Item.GET("Magazine Item No.");
          BookingList2.GET(
            DummyPlanLine."Dummy Plan No.",
            DummyPlanLine."Revision No.",
            DummyPlanLine."From Type",
            DummyPlanLine."Booking No.",
            DummyPlanLine."Booking Line No.");
          BookingList2."Planning Status" := BookingList2."Planning Status"::Confirmed;
          BookingList2.MODIFY;

          CASE BookingList2."From Type" OF
            BookingList2."From Type"::Ads:
              BEGIN
                {
                AdsBookingLine.SETRANGE("Booking No.",BookingList2."Booking No.");
                AdsBookingLine.SETRANGE("Line No.",BookingList2."Booking Line No.");
                AdsBookingLine.MODIFYALL("Planning Status",AdsBookingLine."Planning Status"::Approved);
                AdsBookingLine.MODIFYALL("Actual Volume No.",Item."Volume No.");
                AdsBookingLine.MODIFYALL("Actual Issue No.",Item."Issue No.");
                AdsBookingLine.MODIFYALL("Actual Page No.",DummyPlanLine."Page No.");
                AdsBookingLine.MODIFYALL("Actual Sub Page No.",DummyPlanLine."Sub Page No.");
                }
                AdsBookingLine.GET(BookingList2."Booking No.",BookingList2."Booking Line No.");
                IF (AdsBookingLine."Actual Page No." = 0) AND
                   (AdsBookingLine."Planning Status" = AdsBookingLine."Planning Status"::Occupied)
                THEN BEGIN
                  AdsBookingLine."Planning Status" := AdsBookingLine."Planning Status"::Approved;
                  AdsBookingLine."Actual Volume No." := Item."Volume No.";
                  AdsBookingLine."Actual Issue No." := Item."Issue No.";
                  AdsBookingLine."Actual Page No." := DummyPlanLine."Page No.";
                  AdsBookingLine."Actual Sub Page No." := DummyPlanLine."Sub Page No.";
                  AdsBookingLine.MODIFY;
                END;
              END;
            BookingList."From Type"::Content:
              BEGIN
                ContentIndexHdr.GET(BookingList2."Booking No.");
                ContentIndexHdr.Close := TRUE;
                ContentIndexHdr.MODIFY;
                {
                ContentIndexLine.SETRANGE("Content List No.",BookingList2."Booking No.");
                ContentIndexLine.SETRANGE("Content List Line No.",BookingList2."Booking Line No.");
                ContentIndexLine.MODIFYALL(Status,ContentIndexLine.Status::Occupied);
                ContentIndexLine.MODIFYALL("Actual Volume No.",Item."Volume No.");
                ContentIndexLine.MODIFYALL("Actual Volume No.",Item."Issue No.");
                ContentIndexLine.MODIFYALL("Actual Page No.",DummyPlanLine."Page No.");
                ContentIndexLine.MODIFYALL("Actual Sub Page No.",DummyPlanLine."Sub Page No.");
                }
                ContentIndexLine.GET(BookingList2."Booking No.",BookingList2."Booking Line No.");
                IF (ContentIndexLine."Actual Page No." = 0) AND (ContentIndexLine.Status = ContentIndexLine.Status::Occupied) THEN BEGIN
                  ContentIndexLine.Status := ContentIndexLine.Status::Approved;
                  ContentIndexLine."Actual Volume No." := Item."Volume No.";
                  ContentIndexLine."Actual Issue No." := Item."Issue No.";
                  ContentIndexLine."Actual Page No." := DummyPlanLine."Page No.";
                  ContentIndexLine."Actual Sub Page No." := DummyPlanLine."Sub Page No.";
                  ContentIndexLine.MODIFY;
                END;
              END;
          END;

        UNTIL DummyPlanLine.NEXT=0;
    END;

    PROCEDURE Archive@1000000003();
    VAR
      ArchivedDummyPlan@1000000001 : Record 50047;
      ArchivedDummyPlanLine@1000000000 : Record 50048;
    BEGIN
      IF NOT CONFIRM(STRSUBSTNO(Text002,'archive',"Dummy Plan No."),FALSE) THEN
        EXIT;

      TESTFIELD("Planning Status","Planning Status"::"Final Approve");

      //archived only one record which it final approve.
      ArchivedDummyPlan.TRANSFERFIELDS(Rec);
      ArchivedDummyPlan.INSERT;

      DummyPlanLine.RESET;
      DummyPlanLine.SETRANGE("Dummy Plan No.","Dummy Plan No.");
      DummyPlanLine.SETRANGE("Revision No.","Revision No.");
      IF DummyPlanLine.FIND('-') THEN
        REPEAT
          ArchivedDummyPlanLine.TRANSFERFIELDS(DummyPlanLine);
          ArchivedDummyPlanLine.INSERT;
        UNTIL DummyPlanLine.NEXT=0;

      BookingList.RESET;
      BookingList.SETRANGE("Dummy Plan No.","Dummy Plan No.");
      BookingList.SETRANGE("Revision No.","Revision No.");
      BookingList.MODIFYALL(Archived,TRUE);

      //delete record
      DummyPlanLine.RESET;
      DummyPlanLine.SETRANGE("Dummy Plan No.","Dummy Plan No.");
      IF DummyPlanLine.FIND('-') THEN
        DummyPlanLine.DELETEALL;

      DummyPlan.RESET;
      DummyPlan.SETRANGE("Dummy Plan No.","Dummy Plan No.");
      DummyPlan.SETRANGE("Magazine Code","Magazine Code");
      IF DummyPlan.FIND('-') THEN
        DummyPlan.DELETEALL;

      BookingList.RESET;
      BookingList.SETRANGE("Dummy Plan No.","Dummy Plan No.");
      BookingList.SETFILTER("Revision No.",'<>%1',"Revision No.");
      IF BookingList.FIND('-') THEN
        BookingList.DELETEALL;

      MESSAGE(Text006,"Dummy Plan No.");
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   30.03.2007   KKE   New table for "Dummy Plan" - Editorial Module
    }
    END.
  }
}

OBJECT Table 50024 Dummy Plan Line
{
  OBJECT-PROPERTIES
  {
    Date=07/04/07;
    Time=[ 6:00:00 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
  }
  FIELDS
  {
    { 1   ;   ;Dummy Plan No.      ;Code20        ;TableRelation="Dummy Plan" }
    { 2   ;   ;Magazine Item No.   ;Code20        ;TableRelation=Item WHERE (Item Type=CONST(Magazine)) }
    { 3   ;   ;Page No.            ;Integer        }
    { 4   ;   ;Line No.            ;Integer        }
    { 5   ;   ;Content Code        ;Code20        ;TableRelation="Ads. Product" }
    { 6   ;   ;Content Type        ;Code20         }
    { 7   ;   ;Blackground Color   ;Option        ;OptionString=[ ,Black,Dark Red,Red,Pink,Rose,Brown,Orange,Light Orange,Gold,Tan,Olive Green,Dark Yellow,Lime,Yellow,Light Yellow,Dark Green,Green,Sea Green,Bright Green,Light Green,Dark Teal,Teal,Aqua,Turquoise,Light Turquoise,Dark Blue,Blue,Light Blue,Sky Blue,Pale Blue,Indigo,Blue-Gray,Violet,Plum,Lavender,Gray - 80%,Gray - 50%,Gray - 40%,Gray - 25%,White] }
    { 8   ;   ;Foreground Color    ;Option        ;OptionString=[ ,Black,Dark Red,Red,Pink,Rose,Brown,Orange,Light Orange,Gold,Tan,Olive Green,Dark Yellow,Lime,Yellow,Light Yellow,Dark Green,Green,Sea Green,Bright Green,Light Green,Dark Teal,Teal,Aqua,Turquoise,Light Turquoise,Dark Blue,Blue,Light Blue,Sky Blue,Pale Blue,Indigo,Blue-Gray,Violet,Plum,Lavender,Gray - 80%,Gray - 50%,Gray - 40%,Gray - 25%,White] }
    { 9   ;   ;Planning Status     ;Option        ;OptionString=[ ,Occupied,Confirmed];
                                                   Editable=No }
    { 10  ;   ;From Type           ;Option        ;OptionString=Ads,Content }
    { 11  ;   ;Booking No.         ;Code20         }
    { 12  ;   ;Booking Line No.    ;Integer        }
    { 13  ;   ;Column Name         ;Text50         }
    { 15  ;   ;Sub Page No.        ;Integer        }
    { 20  ;   ;Revision No.        ;Integer       ;Editable=No }
    { 24  ;   ;Counting Unit       ;Decimal       ;DecimalPlaces=0:5 }
    { 25  ;   ;From Ads. Item No.  ;Code20         }
    { 26  ;   ;RBG Foreground      ;Integer        }
    { 27  ;   ;Box No.             ;Integer       ;MinValue=1 }
    { 28  ;   ;CUnit Before Page   ;Decimal        }
    { 29  ;   ;RBG Blackground     ;Integer        }
    { 30  ;   ;Color Index Foreground;Integer      }
    { 31  ;   ;Color Index Blackground;Integer     }
    { 50  ;   ;Has Detail          ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Dummy Plan Line" WHERE (Dummy Plan No.=FIELD(Dummy Plan No.),
                                                                                              Revision No.=FIELD(Revision No.),
                                                                                              Page No.=FIELD(Page No.),
                                                                                              Sub Page No.=FIELD(Sub Page No.),
                                                                                              Line No.=FILTER(<>0)));
                                                   Editable=No }
    { 51  ;   ;Detail of Page      ;Text150        }
    { 52  ;   ;Detail of Page 2    ;Text150        }
  }
  KEYS
  {
    {    ;Dummy Plan No.,Revision No.,Page No.,Sub Page No.,Line No.;
                                                   SumIndexFields=Counting Unit;
                                                   Clustered=Yes }
    {    ;Dummy Plan No.,Revision No.,Box No.      }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   30.03.2007   KKE   New table for "Dummy Plan Line" - Editorial Module
    }
    END.
  }
}

OBJECT Table 50025 Booking List
{
  OBJECT-PROPERTIES
  {
    Date=07/06/07;
    Time=[ 6:00:00 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    OnModify=BEGIN
               TESTFIELD("Planning Status","Planning Status"::" ");
               TESTFIELD(Archived,FALSE);
             END;

    OnDelete=BEGIN
               TESTFIELD("Planning Status","Planning Status"::" ");
               TESTFIELD(Archived,FALSE);

               UpdateAdsBookingContentIndex;
             END;

    OnRename=BEGIN
               ERROR(Text000,TABLECAPTION);
             END;

    LookupPageID=Page50033;
  }
  FIELDS
  {
    { 1   ;   ;Dummy Plan No.      ;Code20         }
    { 2   ;   ;From Type           ;Option        ;OptionString=Ads,Content }
    { 3   ;   ;Booking No.         ;Code20        ;TableRelation=IF (From Type=CONST(Ads)) "Ads. Booking Header"
                                                                 ELSE IF (From Type=CONST(Content)) "Content Index Header" }
    { 4   ;   ;Booking Line No.    ;Integer        }
    { 5   ;   ;Magazine Item No.   ;Code20        ;TableRelation=Item WHERE (Item Type=CONST(Magazine)) }
    { 6   ;   ;Content Code        ;Code20         }
    { 7   ;   ;Content Type        ;Code20         }
    { 8   ;   ;Blackground Color   ;Option        ;OptionString=[ ,Black,Dark Red,Red,Pink,Rose,Brown,Orange,Light Orange,Gold,Tan,Olive Green,Dark Yellow,Lime,Yellow,Light Yellow,Dark Green,Green,Sea Green,Bright Green,Light Green,Dark Teal,Teal,Aqua,Turquoise,Light Turquoise,Dark Blue,Blue,Light Blue,Sky Blue,Pale Blue,Indigo,Blue-Gray,Violet,Plum,Lavender,Gray - 80%,Gray - 50%,Gray - 40%,Gray - 25%,White] }
    { 9   ;   ;Foreground Color    ;Option        ;OptionString=[ ,Black,Dark Red,Red,Pink,Rose,Brown,Orange,Light Orange,Gold,Tan,Olive Green,Dark Yellow,Lime,Yellow,Light Yellow,Dark Green,Green,Sea Green,Bright Green,Light Green,Dark Teal,Teal,Aqua,Turquoise,Light Turquoise,Dark Blue,Blue,Light Blue,Sky Blue,Pale Blue,Indigo,Blue-Gray,Violet,Plum,Lavender,Gray - 80%,Gray - 50%,Gray - 40%,Gray - 25%,White] }
    { 10  ;   ;Planning Status     ;Option        ;OptionString=[ ,Occupied,Confirmed];
                                                   Editable=No }
    { 11  ;   ;Column Name         ;Text50         }
    { 20  ;   ;Revision No.        ;Integer       ;Editable=No }
    { 24  ;   ;Counting Unit       ;Decimal        }
    { 27  ;   ;Magazine Code       ;Code20        ;TableRelation=Magazine;
                                                   Editable=No }
    { 28  ;   ;Ads. Position       ;Code20        ;TableRelation="Ads. Position" WHERE (Magazine Code=FIELD(Magazine Code)) }
    { 29  ;   ;Ads. Product        ;Code20        ;TableRelation="Ads. Product" }
    { 30  ;   ;Ads. Size           ;Code20        ;TableRelation="Ads. Size" }
    { 31  ;   ;Owner Customer      ;Code20        ;TableRelation=Customer }
    { 32  ;   ;Description         ;Text50         }
    { 33  ;   ;Author Name         ;Text50         }
    { 34  ;   ;Source of Information;Text50        }
    { 35  ;   ;Content Receipt Date;Date           }
    { 36  ;   ;Ads. Type           ;Code20        ;TableRelation="Ads. Type" }
    { 37  ;   ;Ads. Sub-Type       ;Code20        ;TableRelation="Ads. Sub Type".Code WHERE (Ads. Type=FIELD(Ads. Type)) }
    { 38  ;   ;Salesperson Code    ;Code10        ;TableRelation=Salesperson/Purchaser;
                                                   Editable=No }
    { 40  ;   ;Remark              ;Text50         }
    { 100 ;   ;Archived            ;Boolean       ;Editable=No }
  }
  KEYS
  {
    {    ;Dummy Plan No.,Revision No.,From Type,Booking No.,Booking Line No.;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1000000000 : TextConst 'ENU=You cannot rename a %1.;THA=คุณไม่สามารถเปลี่ยนชื่อ %1';

    PROCEDURE UpdateAdsBookingContentIndex@1000000000();
    VAR
      ContentIndexLine@1000000001 : Record 50020;
      AdsBookingLine@1000000000 : Record 50038;
    BEGIN
      IF "From Type" = "From Type"::Content THEN BEGIN
        ContentIndexLine.GET("Booking No.","Booking Line No.");
        ContentIndexLine.Status := ContentIndexLine.Status::" ";
        ContentIndexLine.MODIFY;
      END ELSE BEGIN
        AdsBookingLine.GET("Booking No.","Booking Line No.");
        AdsBookingLine."Planning Status" := AdsBookingLine."Planning Status"::" ";
        AdsBookingLine.MODIFY;
      END;
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   30.03.2007   KKE   New table for "Booking List" - Editorial Module
    }
    END.
  }
}

OBJECT Table 50026 Ads. Item Setup
{
  OBJECT-PROPERTIES
  {
    Date=06/14/07;
    Time=[ 6:00:00 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
  }
  FIELDS
  {
    { 1   ;   ;Primary Key         ;Code10        ;CaptionML=[ENU=Primary Key;
                                                              THA=คีย์หลัก] }
    { 2   ;   ;Default Base UOM    ;Code10        ;TableRelation="Unit of Measure" }
    { 3   ;   ;Ads. Revenue Account;Code20        ;TableRelation="G/L Account" }
    { 4   ;   ;Booking Nos.        ;Code10        ;TableRelation="No. Series" }
    { 5   ;   ;Billing Nos.        ;Code10        ;TableRelation="No. Series" }
    { 6   ;   ;Lock Ads. Closing Date;Boolean      }
    { 7   ;   ;VAT Prod. Posting Group;Code10     ;TableRelation="VAT Product Posting Group";
                                                   CaptionML=[ENU=VAT Prod. Posting Group;
                                                              THA=กลุ่มการลงรายการบัญชีผลิตภัณฑ์ที่ต้องเสีย VAT] }
    { 8   ;   ;Ads. Sales Invoice Nos.;Code10     ;TableRelation="No. Series" }
    { 9   ;   ;Allow Duplicate Billing Line;Boolean }
    { 13  ;   ;Posted Invoice Nos. ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=Posted Invoice Nos.;
                                                              THA=ชุดหมายเลขใบส่งของที่ลงรายการบัญชี] }
  }
  KEYS
  {
    {    ;Primary Key                             ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   30.03.2007   KKE   New table for "Ads. Item Setup" - Ads. Sales Module
    }
    END.
  }
}

OBJECT Table 50027 Booking Revenue Type
{
  OBJECT-PROPERTIES
  {
    Date=06/21/07;
    Time=[ 6:00:00 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    LookupPageID=Page50036;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code20        ;NotBlank=Yes }
    { 2   ;   ;Description         ;Text30         }
    { 3   ;   ;Magazine Code       ;Code20        ;TableRelation=Magazine }
    { 4   ;   ;Ads. Type           ;Code20        ;TableRelation="Ads. Type" }
    { 5   ;   ;Type                ;Option        ;OptionString=Billable,Non-Billable,House-Ads. }
    { 6   ;   ;Create Sale Invoice ;Boolean        }
    { 7   ;   ;Bill Revenue G/L Account;Code20    ;TableRelation="G/L Account" }
    { 8   ;   ;Required Barter G/L Account;Boolean }
    { 9   ;   ;Barter G/L Account  ;Code20        ;TableRelation="G/L Account" }
    { 10  ;   ;Blackground Color   ;Option        ;OptionString=[ ,Black,Dark Red,Red,Pink,Rose,Brown,Orange,Light Orange,Gold,Tan,Olive Green,Dark Yellow,Lime,Yellow,Light Yellow,Dark Green,Green,Sea Green,Bright Green,Light Green,Dark Teal,Teal,Aqua,Turquoise,Light Turquoise,Dark Blue,Blue,Light Blue,Sky Blue,Pale Blue,Indigo,Blue-Gray,Violet,Plum,Lavender,Gray - 80%,Gray - 50%,Gray - 40%,Gray - 25%,White] }
    { 11  ;   ;Foreground Color    ;Option        ;OptionString=[ ,Black,Dark Red,Red,Pink,Rose,Brown,Orange,Light Orange,Gold,Tan,Olive Green,Dark Yellow,Lime,Yellow,Light Yellow,Dark Green,Green,Sea Green,Bright Green,Light Green,Dark Teal,Teal,Aqua,Turquoise,Light Turquoise,Dark Blue,Blue,Light Blue,Sky Blue,Pale Blue,Indigo,Blue-Gray,Violet,Plum,Lavender,Gray - 80%,Gray - 50%,Gray - 40%,Gray - 25%,White] }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   30.03.2007   KKE   New table for "Booking Revenue Type" - Ads. Sales Module
    }
    END.
  }
}

OBJECT Table 50028 Ads. Size
{
  OBJECT-PROPERTIES
  {
    Date=06/21/07;
    Time=[ 6:00:00 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    LookupPageID=Page50037;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code20        ;NotBlank=Yes }
    { 2   ;   ;Description         ;Text50         }
    { 3   ;   ;Counting Unit       ;Decimal       ;DecimalPlaces=0:5 }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   30.03.2007   KKE   New table for "Ads. Size" - Ads. Sales Module
    }
    END.
  }
}

OBJECT Table 50029 Ads. Position
{
  OBJECT-PROPERTIES
  {
    Date=02/27/08;
    Time=11:27:07 AM;
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               TESTFIELD("Shortcut Dimension 5 Code");
             END;

    OnModify=BEGIN
               TESTFIELD("Shortcut Dimension 5 Code");
             END;

    LookupPageID=Page50038;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code20        ;NotBlank=Yes }
    { 2   ;   ;Magazine Code       ;Code20        ;TableRelation=Magazine }
    { 3   ;   ;Position Type       ;Option        ;OptionString=Fixed,ROP }
    { 4   ;   ;Shortcut Dimension 5 Code;Code20   ;TableRelation="Dimension Value".Code;
                                                   OnLookup=BEGIN
                                                              LookupShortcutDimCode(5,"Shortcut Dimension 5 Code");
                                                            END;

                                                   CaptionML=[ENU=Shortcut Dimension 5 Code;
                                                              THA=รหัสมิติทางลัดหมายเลข 5];
                                                   CaptionClass='1,2,5' }
    { 5   ;   ;Description         ;Text50         }
    { 10  ;   ;Closed              ;Boolean        }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      DimMgt@1000000001 : Codeunit 408;
      ShortcutDimCode@1000000000 : Code[20];

    PROCEDURE LookupShortcutDimCode@18(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    BEGIN
      DimMgt.LookupDimValueCode(FieldNumber,ShortcutDimCode);
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   30.03.2007   KKE   New table for "Ads. Position" - Ads. Sales Module
    }
    END.
  }
}

OBJECT Table 50030 Product Category
{
  OBJECT-PROPERTIES
  {
    Date=05/15/09;
    Time=[ 9:25:53 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    LookupPageID=Page50039;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code20        ;NotBlank=Yes }
    { 2   ;   ;Description         ;Text50         }
    { 3   ;   ;Main Category       ;Code20         }
    { 4   ;   ;Main Description    ;Text50         }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
    {    ;Main Category                            }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   30.03.2007   KKE   New table for "Product Category" - Ads. Sales Module
    }
    END.
  }
}

OBJECT Table 50031 Ads. Product
{
  OBJECT-PROPERTIES
  {
    Date=10/15/08;
    Time=[ 7:24:08 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    LookupPageID=Page50040;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code20        ;NotBlank=Yes }
    { 2   ;   ;Description         ;Text50         }
    { 3   ;   ;Product Category    ;Code20        ;TableRelation="Product Category" }
    { 4   ;   ;Owner Customer      ;Code20        ;TableRelation=Customer }
    { 5   ;   ;Short Description   ;Text15         }
    { 6   ;   ;Product Group       ;Text30         }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   30.03.2007   KKE   New table for "Ads. Product" - Ads. Sales Module
      002   15.10.2008   KKE   Add new field "Product Group"
    }
    END.
  }
}

OBJECT Table 50032 Ads. Type
{
  OBJECT-PROPERTIES
  {
    Date=06/11/07;
    Time=[ 6:00:00 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               TESTFIELD("Gen. Bus. Posting Group");
             END;

    OnModify=BEGIN
               TESTFIELD("Gen. Bus. Posting Group");
             END;

    LookupPageID=Page50041;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code20         }
    { 2   ;   ;Description         ;Text50         }
    { 3   ;   ;Gen. Bus. Posting Group;Code10     ;TableRelation="Gen. Business Posting Group";
                                                   CaptionML=[ENU=Gen. Bus. Posting Group;
                                                              THA=กลุ่มการลงรายการบัญชีธุรกิจทั่วไป] }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   30.03.2007   KKE   New table for "Ads. Type" - Ads. Sales Module
    }
    END.
  }
}

OBJECT Table 50033 Ads. Sub Type
{
  OBJECT-PROPERTIES
  {
    Date=02/14/12;
    Time=10:28:02 AM;
    Modified=Yes;
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    LookupPageID=Page50042;
  }
  FIELDS
  {
    { 1   ;   ;Ads. Type           ;Code20        ;TableRelation="Ads. Type" }
    { 2   ;   ;Code                ;Code20         }
    { 3   ;   ;Description         ;Text50         }
    { 4   ;   ;GroupType           ;Text50         }
  }
  KEYS
  {
    {    ;Ads. Type,Code                          ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   30.03.2007   KKE   New table for "Ads. Sub Type" - Ads. Sales Module
    }
    END.
  }
}

OBJECT Table 50034 Zone Area
{
  OBJECT-PROPERTIES
  {
    Date=06/21/07;
    Time=[ 6:00:00 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    LookupPageID=Page50043;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code20        ;NotBlank=Yes }
    { 2   ;   ;Description         ;Text50         }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   30.03.2007   KKE   New table for "Zone Area" - Ads. Sales Module
    }
    END.
  }
}

OBJECT Table 50035 Sales Target
{
  OBJECT-PROPERTIES
  {
    Date=05/09/07;
    Time=[ 6:00:00 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
  }
  FIELDS
  {
    { 1   ;   ;Salesperson Code    ;Code10        ;TableRelation=Salesperson/Purchaser;
                                                   OnValidate=BEGIN
                                                                IF NOT Salesperson.GET("Salesperson Code") THEN
                                                                  CLEAR(Salesperson);

                                                                "Salesperson Name" := Salesperson.Name;
                                                              END;
                                                               }
    { 2   ;   ;Salesperson Name    ;Text50         }
    { 3   ;   ;Start Date          ;Date           }
    { 4   ;   ;End Date            ;Date           }
    { 5   ;   ;Target Sales Amount ;Decimal       ;AutoFormatType=1 }
  }
  KEYS
  {
    {    ;Salesperson Code,Start Date,End Date    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Salesperson@1000000000 : Record 13;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   30.03.2007   KKE   New table for "Sales Target" - Ads. Sales Module
    }
    END.
  }
}

OBJECT Table 50036 Ads. Item
{
  OBJECT-PROPERTIES
  {
    Date=05/20/08;
    Time=10:41:06 PM;
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    OnDelete=BEGIN
               CALCFIELDS("Booking Line","Confirmed Booking","Waiting List Booking","Approved Booking",
                 "Hold Booking","Cancelled Booking","Invoiced Booking","Closed Booking",
                 "Archived Cancelled Booking","Archived Closed Booking","Archived Invoiced Booking");
               IF ("Booking Line" <> 0) OR
                  ("Confirmed Booking" <> 0) OR
                  ("Waiting List Booking" <> 0) OR
                  ("Approved Booking" <> 0) OR
                  ("Hold Booking" <> 0) OR
                  ("Cancelled Booking" <> 0) OR
                  ("Invoiced Booking" <> 0) OR
                  ("Closed Booking" <> 0) OR
                  ("Archived Cancelled Booking" <> 0) OR
                  ("Archived Closed Booking" <> 0) OR
                  ("Archived Invoiced Booking" <> 0)
               THEN
                 ERROR(Text001);
             END;

    LookupPageID=Page50046;
  }
  FIELDS
  {
    { 1   ;   ;Ads. Item No.       ;Code20        ;Editable=No }
    { 2   ;   ;Magazine Code       ;Code20        ;TableRelation=Magazine;
                                                   Editable=No }
    { 3   ;   ;Volume No.          ;Code20        ;TableRelation=Volume;
                                                   Editable=No }
    { 4   ;   ;Issue No.           ;Code20        ;TableRelation="Issue No.";
                                                   Editable=No }
    { 5   ;   ;Issue Date          ;Date          ;Editable=No }
    { 6   ;   ;Base Unit of Measure;Code10        ;TableRelation="Unit of Measure" }
    { 7   ;   ;Ads. Closing Date   ;Date           }
    { 8   ;   ;Closed              ;Boolean       ;Editable=No }
    { 9   ;   ;VAT Prod. Posting Group;Code10     ;TableRelation="VAT Product Posting Group";
                                                   CaptionML=[ENU=VAT Prod. Posting Group;
                                                              THA=กลุ่มการลงรายการบัญชีผลิตภัณฑ์ที่ต้องเสีย VAT] }
    { 10  ;   ;Booking Line        ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Ads. Booking Line"."Total Counting Unit" WHERE (Ads. Item No.=FIELD(Ads. Item No.),
                                                                                                                    Line Status=CONST(Booking),
                                                                                                                    Magazine Code=FIELD(Magazine Code)));
                                                   DecimalPlaces=0:2;
                                                   Description=#002;
                                                   Editable=No }
    { 11  ;   ;Confirmed Booking   ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Ads. Booking Line"."Total Counting Unit" WHERE (Ads. Item No.=FIELD(Ads. Item No.),
                                                                                                                    Line Status=CONST(Confirmed),
                                                                                                                    Magazine Code=FIELD(Magazine Code)));
                                                   DecimalPlaces=0:2;
                                                   Description=#002;
                                                   Editable=No }
    { 12  ;   ;Waiting List Booking;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Ads. Booking Line"."Total Counting Unit" WHERE (Ads. Item No.=FIELD(Ads. Item No.),
                                                                                                                    Line Status=CONST(Waiting List),
                                                                                                                    Magazine Code=FIELD(Magazine Code)));
                                                   DecimalPlaces=0:2;
                                                   Description=#002;
                                                   Editable=No }
    { 13  ;   ;Approved Booking    ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Ads. Booking Line"."Total Counting Unit" WHERE (Ads. Item No.=FIELD(Ads. Item No.),
                                                                                                                    Line Status=CONST(Approved),
                                                                                                                    Magazine Code=FIELD(Magazine Code)));
                                                   DecimalPlaces=0:2;
                                                   Description=#002;
                                                   Editable=No }
    { 14  ;   ;Hold Booking        ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Ads. Booking Line"."Total Counting Unit" WHERE (Ads. Item No.=FIELD(Ads. Item No.),
                                                                                                                    Line Status=CONST(Hold),
                                                                                                                    Magazine Code=FIELD(Magazine Code)));
                                                   DecimalPlaces=0:2;
                                                   Description=#002;
                                                   Editable=No }
    { 15  ;   ;Cancelled Booking   ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Ads. Booking Line"."Total Counting Unit" WHERE (Ads. Item No.=FIELD(Ads. Item No.),
                                                                                                                    Line Status=CONST(Cancelled),
                                                                                                                    Magazine Code=FIELD(Magazine Code)));
                                                   DecimalPlaces=0:2;
                                                   Description=#002;
                                                   Editable=No }
    { 16  ;   ;Invoiced Booking    ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Ads. Booking Line"."Total Counting Unit" WHERE (Ads. Item No.=FIELD(Ads. Item No.),
                                                                                                                    Line Status=CONST(Invoiced),
                                                                                                                    Magazine Code=FIELD(Magazine Code)));
                                                   DecimalPlaces=0:2;
                                                   Description=#002;
                                                   Editable=No }
    { 17  ;   ;Closed Booking      ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Ads. Booking Line"."Total Counting Unit" WHERE (Ads. Item No.=FIELD(Ads. Item No.),
                                                                                                                    Line Status=CONST(Closed),
                                                                                                                    Magazine Code=FIELD(Magazine Code)));
                                                   DecimalPlaces=0:2;
                                                   Description=#002;
                                                   Editable=No }
    { 20  ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=No. Series;
                                                              THA=ชุดหมายเลข];
                                                   Editable=No }
    { 21  ;   ;Archived Cancelled Booking;Decimal ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Archived Ads. Booking Line"."Total Counting Unit" WHERE (Ads. Item No.=FIELD(Ads. Item No.),
                                                                                                                             Line Status=CONST(Cancelled),
                                                                                                                             Magazine Code=FIELD(Magazine Code)));
                                                   DecimalPlaces=0:2;
                                                   Description=Sum from table Archived #002;
                                                   Editable=No }
    { 22  ;   ;Archived Closed Booking;Decimal    ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Archived Ads. Booking Line"."Total Counting Unit" WHERE (Ads. Item No.=FIELD(Ads. Item No.),
                                                                                                                             Line Status=CONST(Closed),
                                                                                                                             Magazine Code=FIELD(Magazine Code)));
                                                   DecimalPlaces=0:2;
                                                   Description=Sum from table Archived #002;
                                                   Editable=No }
    { 23  ;   ;Archived Invoiced Booking;Decimal  ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Archived Ads. Booking Line"."Total Counting Unit" WHERE (Ads. Item No.=FIELD(Ads. Item No.),
                                                                                                                             Line Status=CONST(Invoiced),
                                                                                                                             Magazine Code=FIELD(Magazine Code)));
                                                   DecimalPlaces=0:2;
                                                   Description=Sum from table Archived #002;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Ads. Item No.                           ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text001@1000000000 : TextConst 'ENU=You cannot delete this ads. item because there still has one or more entries.';

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   30.03.2007   KKE   New table for "Ads. Item" - Ads. Sales Module
      002   29.05.2007   KKE   Flowfield Summary change DecimalPlaces from 0:5 to 0:2
    }
    END.
  }
}

OBJECT Table 50037 Ads. Booking Header
{
  OBJECT-PROPERTIES
  {
    Date=11/09/07;
    Time=[ 5:20:42 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               IF "No." = '' THEN BEGIN
                 AdsItemSetup.GET;
                 AdsItemSetup.TESTFIELD("Booking Nos.");
                 NoSeriesMgt.InitSeries(AdsItemSetup."Booking Nos.",xRec."No. Series",0D,"No.","No. Series");
               END;

               "Booking Date" := WORKDATE;

               UserSetup.GET(USERID);
               IF UserSetup."Ads. Booking Filter" = UserSetup."Ads. Booking Filter"::Salesperson THEN
                 VALIDATE("Salesperson Code",UserSetup."Salesperson Code");
             END;

    OnDelete=BEGIN
               AdsBookingLine.SETPERMISSIONFILTER;
               AdsBookingLine.SETRANGE("Booking No.","No.");
               AdsBookingLine.SETFILTER("Line Status",'<>%1',AdsBookingLine."Line Status"::Booking);
               IF AdsBookingLine.FIND('-') THEN
                 ERROR(Text002,"No.");

               AdsBookingLine.RESET;
               AdsBookingLine.SETRANGE("Booking No.","No.");
               AdsBookingLine.SETPERMISSIONFILTER;
               AdsBookingLine.DELETEALL;
             END;

    OnRename=BEGIN
               ERROR(Text000,TABLECAPTION);
             END;

    LookupPageID=Page50050;
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20        ;OnValidate=BEGIN
                                                                IF "No." <> xRec."No." THEN BEGIN
                                                                  AdsItemSetup.GET;
                                                                  NoSeriesMgt.TestManual(AdsItemSetup."Booking Nos.");
                                                                  "No. Series" := '';
                                                                END;
                                                              END;
                                                               }
    { 2   ;   ;Booking Date        ;Date           }
    { 3   ;   ;Salesperson Code    ;Code10        ;TableRelation=Salesperson/Purchaser;
                                                   OnValidate=BEGIN
                                                                IF "Salesperson Code" <> xRec."Salesperson Code" THEN BEGIN
                                                                  AdsBookingLine.RESET;
                                                                  AdsBookingLine.SETPERMISSIONFILTER;
                                                                  AdsBookingLine.SETRANGE("Booking No.","No.");
                                                                  IF AdsBookingLine.FIND('-') THEN
                                                                    AdsBookingLine.MODIFYALL("Salesperson Code","Salesperson Code");
                                                                END;
                                                              END;
                                                               }
    { 4   ;   ;Sell-to Customer No.;Code20        ;TableRelation=Customer;
                                                   OnValidate=BEGIN
                                                                IF ("Sell-to Customer No." <> xRec."Sell-to Customer No.") OR ("Sell-to Customer No." = '') THEN BEGIN
                                                                  AdsBookingLine.RESET;
                                                                  AdsBookingLine.SETPERMISSIONFILTER;
                                                                  AdsBookingLine.SETRANGE("Booking No.","No.");
                                                                  //AdsBookingLine.SETFILTER("Line Status",'<>%1',AdsBookingLine."Line Status"::Booking);
                                                                  AdsBookingLine.SETFILTER("Line Status",'%1|%2',
                                                                    AdsBookingLine."Line Status"::Invoiced,
                                                                    AdsBookingLine."Line Status"::Closed);  //KKE : #002
                                                                  IF AdsBookingLine.FIND('-') THEN
                                                                    ERROR(Text003,'Sell-to Customer No.');
                                                                END;

                                                                CheckCredit("Sell-to Customer No.");
                                                                IF "Bill-to Customer No." = '' THEN BEGIN
                                                                  "Bill-to Customer No." := "Sell-to Customer No.";
                                                                  "Bill-to Customer Type" := "Ads. Sales Type";
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Sell-to Customer No.;
                                                              THA=ขายให้ลูกค้าหมายเลข] }
    { 5   ;   ;Bill-to Customer No.;Code20        ;TableRelation=Customer;
                                                   OnValidate=VAR
                                                                TempDocDim@1000 : TEMPORARY Record 357;
                                                              BEGIN
                                                                IF ("Bill-to Customer No." <> xRec."Bill-to Customer No.") OR ("Bill-to Customer No." = '') THEN BEGIN
                                                                  AdsBookingLine.RESET;
                                                                  AdsBookingLine.SETPERMISSIONFILTER;
                                                                  AdsBookingLine.SETRANGE("Booking No.","No.");
                                                                  //AdsBookingLine.SETFILTER("Line Status",'<>%1',AdsBookingLine."Line Status"::Booking);
                                                                  AdsBookingLine.SETFILTER("Line Status",'%1|%2',
                                                                    AdsBookingLine."Line Status"::Invoiced,
                                                                    AdsBookingLine."Line Status"::Closed);  //KKE : #002
                                                                  IF AdsBookingLine.FIND('-') THEN
                                                                    ERROR(Text003,'Bill-to Customer No.');
                                                                END;

                                                                CheckCredit("Bill-to Customer No.");
                                                              END;

                                                   CaptionML=[ENU=Bill-to Customer No.;
                                                              THA=เก็บเงินจากลูกค้าหมายเลข];
                                                   NotBlank=Yes }
    { 6   ;   ;Payment Terms Code  ;Code10        ;TableRelation="Payment Terms";
                                                   CaptionML=[ENU=Payment Terms Code;
                                                              THA=รหัสเงื่อนไขการชำระเงิน] }
    { 7   ;   ;Ads. Sales Type     ;Code10        ;TableRelation="General Master Setup".Code WHERE (Type=CONST(Customer Type)) }
    { 8   ;   ;Bill-to Customer Type;Code10       ;TableRelation="General Master Setup".Code WHERE (Type=CONST(Customer Type)) }
    { 9   ;   ;Zone Area           ;Code20        ;TableRelation="Zone Area" }
    { 10  ;   ;Contact             ;Text50        ;CaptionML=[ENU=Contact;
                                                              THA=ผู้ติดต่อ] }
    { 11  ;   ;Phone No.           ;Text30        ;CaptionML=[ENU=Phone No.;
                                                              THA=หมายเลขโทรศัพท์] }
    { 12  ;   ;Fax No.             ;Text30        ;CaptionML=[ENU=Fax No.;
                                                              THA=หมายเลขแฟ็กซ์] }
    { 13  ;   ;Mobile No.          ;Text30         }
    { 14  ;   ;E-Mail              ;Text80        ;CaptionML=[ENU=E-Mail;
                                                              THA=อีเมล] }
    { 15  ;   ;Remark              ;Text50         }
    { 20  ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=No. Series;
                                                              THA=ชุดหมายเลข] }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
    {    ;Bill-to Customer No.,Sell-to Customer No. }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      AdsItemSetup@1000000001 : Record 50026;
      Cust@1000000004 : Record 18;
      AdsBookingLine@1000000005 : Record 50038;
      UserSetup@1000000008 : Record 91;
      NoSeriesMgt@1000000000 : Codeunit 396;
      Text000@1000000002 : TextConst 'ENU=You cannot rename a %1.;THA=คุณไม่สามารถเปลี่ยนชื่อ %1';
      Text001@1000000003 : TextConst 'ENU=Customer %1 has credit problem.';
      Text002@1000000007 : TextConst 'ENU=You cannot delete %1 because the document still has one or more lines.';
      Text003@1000000006 : TextConst 'ENU=You cannot reset %1 because the document still has one or more lines.';

    PROCEDURE AssistEdit@2(OldAdsBookingHdr@1000 : Record 50037) : Boolean;
    VAR
      AdsBookingHdr@1001 : Record 50037;
    BEGIN
      WITH AdsBookingHdr DO BEGIN
        AdsBookingHdr := Rec;
        AdsItemSetup.GET;
        AdsItemSetup.TESTFIELD("Booking Nos.");
        IF NoSeriesMgt.SelectSeries(AdsItemSetup."Booking Nos.",OldAdsBookingHdr."No. Series","No. Series") THEN BEGIN
          NoSeriesMgt.SetSeries("No.");
          Rec := AdsBookingHdr;
          EXIT(TRUE);
        END;
      END;
    END;

    PROCEDURE CheckCredit@1000000000(CustNo@1000000001 : Code[20]);
    VAR
      Cust@1000000000 : Record 18;
    BEGIN
      IF Cust.GET(CustNo) THEN BEGIN
        IF Cust."Have Credit Problem" THEN
          MESSAGE(Text001,CustNo);
      END ELSE
        CLEAR(Cust);

      VALIDATE("Ads. Sales Type",Cust."Customer Type");
      VALIDATE("Zone Area",Cust."Zone Area");
      Contact := Cust.Contact;
      "Phone No." := Cust."Phone No.";
      "Fax No." := Cust."Fax No.";
      "E-Mail" := Cust."E-Mail";
      "Payment Terms Code" := Cust."Payment Terms Code";
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   30.03.2007   KKE   New table for "Ads. Booking Header" - Ads. Sales Module
      002   09.11.2007   KKE   Allow change Bill-to Cust. No. if Ads. Booking has not been invoiced.
    }
    END.
  }
}

OBJECT Table 50038 Ads. Booking Line
{
  OBJECT-PROPERTIES
  {
    Date=06/18/12;
    Time=11:13:53 AM;
    Modified=Yes;
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               IF "Shortcut Dimension 5 Code" = '' THEN BEGIN
                 GLSetup.GetShortcutDimCode(GLSetupShortcutDimCode);
                 ERROR(Text001,GLSetupShortcutDimCode[5]);
               END;

               TESTFIELD("Ads. Item No.");
               TESTFIELD("Ads. Position");
               CheckWaitingList;

               GetAdsBookingHdr;
               //AdsBookingHdr.TESTFIELD("Ads. Sales Type");
               "Salesperson Code" := AdsBookingHdr."Salesperson Code";

               "Last Date Modified" := CURRENTDATETIME; //18.06.2012
             END;

    OnModify=VAR
               AdsBookingLine@1000000000 : Record 50038;
             BEGIN
               "Last Date Modified" := CURRENTDATETIME; //18.06.2012
               {
               TESTFIELD("Ads. Item No.");
               TESTFIELD("Ads. Position");
               IF "Line Status" <> xRec."Line Status" THEN
                 EXIT;
               IF NOT ("Line Status" IN ["Line Status"::Booking,"Line Status"::"Waiting List"]) THEN
                 IF Remark <> xRec.Remark THEN BEGIN
                   AdsBookingLine := Rec;
                   Rec := xRec;
                   Rec.Remark := AdsBookingLine.Remark;
                   GetAdsBookingHdr;
                   Rec."Salesperson Code" := AdsBookingHdr."Salesperson Code";
                   EXIT;
                 END ELSE
                   ERROR(Text002,FIELDCAPTION("Line Status"),"Line Status");

               IF "Shortcut Dimension 5 Code" = '' THEN BEGIN
                 GLSetup.GetShortcutDimCode(GLSetupShortcutDimCode);
                 ERROR(Text001,GLSetupShortcutDimCode[5]);
               END;

               TESTFIELD(Closed,FALSE);
               "Total Counting Unit" := Quantity * "Counting Unit";
               GetAdsBookingHdr;
               "Salesperson Code" := AdsBookingHdr."Salesperson Code";
                }
             END;

    OnDelete=BEGIN
               IF NOT ("Line Status" IN ["Line Status"::Booking,"Line Status"::"Waiting List"]) THEN
                 ERROR(Text002,FIELDCAPTION("Line Status"),"Line Status");
             END;

    OnRename=BEGIN
               ERROR(Text000,TABLECAPTION);
             END;

    LookupPageID=Page50100;
    DrillDownPageID=Page50100;
  }
  FIELDS
  {
    { 1   ;   ;Booking No.         ;Code20        ;TableRelation="Ads. Booking Header" }
    { 2   ;   ;Line No.            ;Integer        }
    { 3   ;   ;Ads. Item No.       ;Code20        ;TableRelation="Ads. Item";
                                                   OnValidate=VAR
                                                                TempAdsBookingLine@1000000000 : Record 50038;
                                                              BEGIN
                                                                IF NOT ("Line Status" IN ["Line Status"::Booking,"Line Status"::"Waiting List"]) THEN
                                                                  ERROR(Text002,FIELDCAPTION("Line Status"),"Line Status");
                                                                IF "Ads. Item No." = xRec."Ads. Item No." THEN
                                                                  EXIT;
                                                                IF NOT AdsItem.GET("Ads. Item No.") THEN
                                                                  CLEAR(AdsItem);

                                                                TempAdsBookingLine := Rec;
                                                                INIT;
                                                                "Booking No." := TempAdsBookingLine."Booking No.";
                                                                "Line No." := TempAdsBookingLine."Line No.";
                                                                "Ads. Item No." := AdsItem."Ads. Item No.";
                                                                IF "Ads. Item No." = '' THEN
                                                                  EXIT;

                                                                "Magazine Code" := AdsItem."Magazine Code";
                                                                "Volume No." := AdsItem."Volume No.";
                                                                "Issue No." := AdsItem."Issue No.";
                                                                "Issue Date" := AdsItem."Issue Date";
                                                                "Base Unit of Measure" := AdsItem."Base Unit of Measure";
                                                                "Ads. Closing Date" := AdsItem."Ads. Closing Date";

                                                                GetAdsBookingHdr;
                                                                IF AdsBookingHdr."Bill-to Customer No." <> '' THEN
                                                                  Cust.GET(AdsBookingHdr."Bill-to Customer No.")
                                                                ELSE
                                                                  Cust.GET(AdsBookingHdr."Sell-to Customer No.");
                                                                "VAT Bus. Posting Group" := Cust."VAT Bus. Posting Group";
                                                                "VAT Prod. Posting Group" := AdsItem."VAT Prod. Posting Group";
                                                                "Booking Date" := AdsBookingHdr."Booking Date";
                                                                "Salesperson Code":= AdsBookingHdr."Salesperson Code";  //Issue #21 06.01.2009

                                                                VALIDATE("VAT Prod. Posting Group");
                                                                CheckWaitingList;
                                                              END;
                                                               }
    { 4   ;   ;Magazine Code       ;Code20        ;TableRelation=Magazine;
                                                   Editable=No }
    { 5   ;   ;Volume No.          ;Code20        ;TableRelation=Volume;
                                                   Editable=No }
    { 6   ;   ;Issue No.           ;Code20        ;TableRelation="Issue No.";
                                                   Editable=No }
    { 7   ;   ;Issue Date          ;Date          ;Editable=No }
    { 8   ;   ;Shortcut Dimension 5 Code;Code20   ;TableRelation="Dimension Value".Code;
                                                   OnLookup=BEGIN
                                                              LookupShortcutDimCode(5,"Shortcut Dimension 5 Code");
                                                            END;

                                                   CaptionML=[ENU=Shortcut Dimension 5 Code;
                                                              THA=รหัสมิติทางลัดหมายเลข 5];
                                                   CaptionClass='1,2,5' }
    { 9   ;   ;Ads. Closing Date   ;Date           }
    { 10  ;   ;Booking Revenue Code;Code20        ;TableRelation="Booking Revenue Type";
                                                   OnValidate=BEGIN
                                                                IF NOT BookingRevType.GET("Booking Revenue Code") THEN
                                                                  CLEAR(BookingRevType);
                                                                IF (BookingRevType."Magazine Code" <> "Magazine Code") AND
                                                                   (BookingRevType."Magazine Code" <> '')
                                                                THEN
                                                                  ERROR(Text006,BookingRevType.Code,"Magazine Code");

                                                                "Ads. Type" := BookingRevType."Ads. Type";
                                                                "Booking Revenue Type" := BookingRevType.Type;
                                                                "Create Sales Invoice" := BookingRevType."Create Sale Invoice";
                                                                "Barter Required Document" := BookingRevType."Required Barter G/L Account";
                                                                "Bill Revenue G/L Account" := BookingRevType."Bill Revenue G/L Account";
                                                                "Barter G/L Account" := BookingRevType."Barter G/L Account";
                                                              END;
                                                               }
    { 11  ;   ;Booking Revenue Type;Option        ;OptionString=Billable,Non-Billable,House-Ads. }
    { 12  ;   ;Ads. Size           ;Code20        ;TableRelation="Ads. Size";
                                                   OnValidate=BEGIN
                                                                IF NOT AdsSize.GET("Ads. Size") THEN
                                                                  CLEAR(AdsSize);
                                                                VALIDATE("Counting Unit",AdsSize."Counting Unit");
                                                              END;
                                                               }
    { 13  ;   ;Ads. Type           ;Code20        ;TableRelation="Ads. Type" }
    { 14  ;   ;Ads. Sub-Type       ;Code20        ;TableRelation="Ads. Sub Type".Code WHERE (Ads. Type=FIELD(Ads. Type)) }
    { 15  ;   ;Ads. Position       ;Code20        ;TableRelation="Ads. Position" WHERE (Magazine Code=FIELD(Magazine Code));
                                                   OnValidate=BEGIN
                                                                IF NOT ("Line Status" IN ["Line Status"::Booking,"Line Status"::"Waiting List"]) THEN
                                                                  ERROR(Text002,FIELDCAPTION("Line Status"),"Line Status");
                                                                IF "Ads. Position" = xRec."Ads. Position" THEN
                                                                  EXIT;
                                                                IF NOT AdsPosition.GET("Ads. Position") THEN
                                                                  CLEAR(AdsPosition);
                                                                VALIDATE("Shortcut Dimension 5 Code",AdsPosition."Shortcut Dimension 5 Code");

                                                                CheckWaitingList;
                                                              END;
                                                               }
    { 16  ;   ;Ads. Product        ;Code20        ;TableRelation="Ads. Product";
                                                   OnValidate=BEGIN
                                                                IF NOT AdsProduct.GET("Ads. Product") THEN
                                                                  CLEAR(AdsProduct);
                                                                "Owner Customer" := AdsProduct."Owner Customer";
                                                                "Product Category" := AdsProduct."Product Category";
                                                              END;
                                                               }
    { 17  ;   ;Owner Customer      ;Code20        ;TableRelation=Customer }
    { 18  ;   ;Product Category    ;Code20        ;TableRelation="Product Category" }
    { 19  ;   ;Quantity            ;Decimal       ;InitValue=1;
                                                   OnValidate=BEGIN
                                                                TestStatusOpen;
                                                                UpdateAmounts;
                                                                "Total Counting Unit" := Quantity * "Counting Unit";
                                                              END;

                                                   DecimalPlaces=0:5 }
    { 20  ;   ;Unit Price Excl. VAT;Decimal       ;OnValidate=BEGIN
                                                                TestStatusOpen;
                                                                UpdateAmounts;
                                                              END;

                                                   AutoFormatType=2 }
    { 21  ;   ;Amount              ;Decimal       ;Editable=No;
                                                   AutoFormatType=1 }
    { 22  ;   ;Amount Including VAT;Decimal       ;Editable=No;
                                                   AutoFormatType=1 }
    { 23  ;   ;VAT Bus. Posting Group;Code10      ;TableRelation="VAT Business Posting Group";
                                                   OnValidate=BEGIN
                                                                VALIDATE("VAT Prod. Posting Group");
                                                              END;

                                                   CaptionML=[ENU=VAT Bus. Posting Group;
                                                              THA=กลุ่มการลงรายการบัญชีธุรกิจที่ต้องเสีย VAT] }
    { 24  ;   ;VAT Prod. Posting Group;Code10     ;TableRelation="VAT Product Posting Group";
                                                   OnValidate=BEGIN
                                                                TestStatusOpen;
                                                                VATPostingSetup.GET("VAT Bus. Posting Group","VAT Prod. Posting Group");
                                                                UpdateAmounts;
                                                              END;

                                                   CaptionML=[ENU=VAT Prod. Posting Group;
                                                              THA=กลุ่มการลงรายการบัญชีผลิตภัณฑ์ที่ต้องเสีย VAT] }
    { 25  ;   ;Create Sales Invoice;Boolean       ;Editable=No }
    { 26  ;   ;Cash Invoice Amount ;Decimal       ;OnValidate=BEGIN
                                                                TESTFIELD("Create Sales Invoice",TRUE);
                                                              END;

                                                   AutoFormatType=1 }
    { 27  ;   ;Bill Revenue G/L Account;Code20    ;TableRelation="G/L Account" }
    { 28  ;   ;Barter Amount       ;Decimal       ;OnValidate=BEGIN
                                                                //TESTFIELD("Barter Required Document",TRUE);
                                                              END;

                                                   AutoFormatType=1 }
    { 29  ;   ;Barter G/L Account  ;Code20        ;TableRelation="G/L Account" }
    { 30  ;   ;Barter Required Document;Boolean   ;Editable=No }
    { 31  ;   ;Line Status         ;Option        ;OptionString=[Booking,Waiting List,Confirmed,Approved,Hold,Cancelled,Invoiced,Closed, ];
                                                   Editable=No }
    { 32  ;   ;Waiting List No.    ;Integer       ;Editable=No }
    { 33  ;   ;Scheduled Invoice Date;Date         }
    { 34  ;   ;Cash Invoice No.    ;Code20        ;Editable=No }
    { 35  ;   ;Barter Invoice No.  ;Code20        ;Editable=No }
    { 36  ;   ;Closed              ;Boolean       ;Editable=No }
    { 37  ;   ;Base Unit of Measure;Code10        ;TableRelation="Unit of Measure";
                                                   CaptionML=[ENU=Base Unit of Measure;
                                                              THA=หน่วยวัดมูลฐาน] }
    { 38  ;   ;Booking Date        ;Date           }
    { 39  ;   ;Counting Unit       ;Decimal       ;OnValidate=BEGIN
                                                                "Total Counting Unit" := Quantity * "Counting Unit";
                                                              END;

                                                   DecimalPlaces=0:5 }
    { 40  ;   ;Require Contract    ;Boolean        }
    { 41  ;   ;Have Artwork        ;Boolean        }
    { 42  ;   ;Contact person for artwork;Text50   }
    { 43  ;   ;Total Number of Insertion;Integer   }
    { 44  ;   ;Actual Volume No.   ;Code20        ;TableRelation=Volume;
                                                   Editable=No }
    { 45  ;   ;Actual Issue No.    ;Code20        ;TableRelation="Issue No." }
    { 46  ;   ;Actual Page No.     ;Integer        }
    { 47  ;   ;Actual Sub Page No. ;Integer        }
    { 48  ;   ;Complimentary Offer ;Text50         }
    { 50  ;   ;Remark              ;Text100       ;Description=50-->100 }
    { 52  ;   ;Planning Status     ;Option        ;OptionString=[ ,Picked,Occupied,Approved];
                                                   Editable=No }
    { 53  ;   ;No. Of Revision     ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Booking List" WHERE (From Type=CONST(Ads),
                                                                                           Booking No.=FIELD(Booking No.),
                                                                                           Booking Line No.=FIELD(Line No.)));
                                                   Editable=No }
    { 60  ;   ;Total Counting Unit ;Decimal       ;DecimalPlaces=0:5;
                                                   Description==CountingUnit * Quantity, used on Booking Overview }
    { 100 ;   ;Salesperson Code    ;Code10        ;TableRelation=Salesperson/Purchaser;
                                                   Editable=No }
    { 101 ;   ;Sell-to Customer No.;Code20        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Ads. Booking Header"."Sell-to Customer No." WHERE (No.=FIELD(Booking No.)));
                                                   TableRelation=Customer;
                                                   CaptionML=[ENU=Sell-to Customer No.;
                                                              THA=ขายให้ลูกค้าหมายเลข];
                                                   Editable=No }
    { 102 ;   ;Bill-to Customer No.;Code20        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Ads. Booking Header"."Bill-to Customer No." WHERE (No.=FIELD(Booking No.)));
                                                   TableRelation=Customer;
                                                   OnValidate=VAR
                                                                TempDocDim@1000 : TEMPORARY Record 357;
                                                              BEGIN
                                                              END;

                                                   CaptionML=[ENU=Bill-to Customer No.;
                                                              THA=เก็บเงินจากลูกค้าหมายเลข];
                                                   Editable=No }
    { 120 ;   ;Ads. Product Description 2;Text50   }
    { 121 ;   ;Last Status Date    ;DateTime       }
    { 122 ;   ;Cancelled Date      ;DateTime      ;Editable=No }
    { 500 ;   ;Last Date Modified  ;DateTime      ;CaptionML=[ENU=Last Date Modified;
                                                              THA=วันที่แก้ไขล่าสุด];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Booking No.,Line No.                    ;Clustered=Yes }
    {    ;Magazine Code,Volume No.,Issue No.,Line Status,Booking Revenue Code,Ads. Size,Ads. Type,Ads. Position,Salesperson Code;
                                                   SumIndexFields=Total Counting Unit }
    {    ;Ads. Item No.,Line Status,Magazine Code ;SumIndexFields=Total Counting Unit }
    {    ;Ads. Item No.,Ads. Position,Line Status,Waiting List No. }
    {    ;Ads. Item No.,Ads. Type,Ads. Position    }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      GLSetup@1000000007 : Record 98;
      AdsBookingHdr@1000000003 : Record 50037;
      AdsItem@1000000000 : Record 50036;
      AdsProduct@1000000001 : Record 50031;
      AdsPosition@1000000010 : Record 50029;
      AdsSize@1000000012 : Record 50028;
      Cust@1000000002 : Record 18;
      VATPostingSetup@1000000004 : Record 325;
      BookingRevType@1000000005 : Record 50027;
      UserSetup@1000000014 : Record 91;
      DimMgt@1000000006 : Codeunit 408;
      GLSetupShortcutDimCode@1000000008 : ARRAY [8] OF Code[20];
      Text000@1000000011 : TextConst 'ENU=You cannot rename a %1.;THA=คุณไม่สามารถเปลี่ยนชื่อ %1';
      Text001@1000000009 : TextConst 'ENU=%1 must be specify.';
      Text002@1000000013 : TextConst 'ENU=%1 must not be %2.';
      Text003@1000000015 : TextConst 'ENU=You do not have permission to %1 Ads. Booking Line.';
      Text004@1000000016 : TextConst 'ENU=Ads. Item No. %1 for Ads. Position %2 has been %3.';
      Text005@1000000017 : TextConst 'ENU=The %1 and %2 are not correct.';
      Text006@1000000018 : TextConst 'ENU=You cannot use booking revenue type %1 for magazine code %2.';
      Text007@1000000019 : TextConst 'ENU=The %1 is zero. Do you want to continue?';

    PROCEDURE GetAdsBookingHdr@1000000000();
    BEGIN
      IF NOT AdsBookingHdr.GET("Booking No.") THEN
        CLEAR(AdsBookingHdr);
    END;

    PROCEDURE LookupShortcutDimCode@18(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    BEGIN
      DimMgt.LookupDimValueCode(FieldNumber,ShortcutDimCode);
    END;

    PROCEDURE TestStatusOpen@1000000007();
    BEGIN
      IF NOT ("Line Status" IN ["Line Status"::Booking,"Line Status"::"Waiting List"]) THEN
        ERROR(Text002,FIELDCAPTION("Line Status"),"Line Status");
    END;

    PROCEDURE UpdateAmounts@3();
    BEGIN
      TESTFIELD("Ads. Item No.");

      IF Amount <> ROUND(Quantity * "Unit Price Excl. VAT") THEN
        Amount := ROUND(Quantity * "Unit Price Excl. VAT");
      UpdateVATAmounts;
    END;

    LOCAL PROCEDURE UpdateVATAmounts@38();
    VAR
      AdsBookingLine2@1000 : Record 50038;
      TotalAmount@1001 : Decimal;
      TotalAmountInclVAT@1002 : Decimal;
    BEGIN
      AdsBookingLine2.SETPERMISSIONFILTER;
      AdsBookingLine2.SETRANGE("Booking No.","Booking No.");
      AdsBookingLine2.SETFILTER("Line No.",'<>%1',"Line No.");
      IF Amount = 0 THEN
        IF xRec.Amount >= 0 THEN
          AdsBookingLine2.SETFILTER(Amount,'>%1',0)
        ELSE
          AdsBookingLine2.SETFILTER(Amount,'<%1',0)
      ELSE
        IF AdsBookingLine2.Amount > 0 THEN
          AdsBookingLine2.SETFILTER(Amount,'>%1',0)
        ELSE
          AdsBookingLine2.SETFILTER(Amount,'<%1',0);

      VATPostingSetup.GET("VAT Bus. Posting Group","VAT Prod. Posting Group");
      TotalAmount := 0;
      TotalAmountInclVAT := 0;
      IF (VATPostingSetup."VAT Calculation Type" = VATPostingSetup."VAT Calculation Type"::"Sales Tax") OR
         ((VATPostingSetup."VAT Calculation Type" IN
          [VATPostingSetup."VAT Calculation Type"::"Normal VAT",VATPostingSetup."VAT Calculation Type"::"Reverse Charge VAT"]) AND
          (VATPostingSetup."VAT %" <> 0))
      THEN BEGIN
        IF AdsBookingLine2.FIND('-') THEN
          REPEAT
            TotalAmount := TotalAmount + AdsBookingLine2.Amount;
            TotalAmountInclVAT := TotalAmountInclVAT + AdsBookingLine2."Amount Including VAT";
          UNTIL AdsBookingLine2.NEXT = 0;
      END;

        CASE VATPostingSetup."VAT Calculation Type" OF
          VATPostingSetup."VAT Calculation Type"::"Normal VAT",
          VATPostingSetup."VAT Calculation Type"::"Reverse Charge VAT":
            BEGIN
              "Amount Including VAT" :=
                TotalAmount + Amount +
                ROUND(
                  (TotalAmount + Amount) * VATPostingSetup."VAT %" / 100) -
                TotalAmountInclVAT;
            END;
          VATPostingSetup."VAT Calculation Type"::"Full VAT":
            BEGIN
              Amount := 0;
              "Amount Including VAT" := Amount;
            END;
          {
          VATPostingSetup."VAT Calculation Type"::"Sales Tax":
            BEGIN
              "Amount Including VAT" :=
                TotalAmount + Amount +
                ROUND(
                  SalesTaxCalculate.CalculateTax(
                    "Tax Area Code","Tax Group Code","Tax Liable",SalesHeader."Posting Date",
                    (TotalAmount + Amount),(TotalQuantityBase + "Quantity (Base)"),
                    SalesHeader."Currency Factor"),Currency."Amount Rounding Precision") -
                TotalAmountInclVAT;
              IF "VAT Base Amount" <> 0 THEN
                "VAT %" :=
                  ROUND(100 * ("Amount Including VAT" - "VAT Base Amount") / "VAT Base Amount",0.00001)
              ELSE
                "VAT %" := 0;
            END;
          }
        END;
    END;

    PROCEDURE CheckWaitingList@1000000004();
    VAR
      AdsBookingLine2@1000000000 : Record 50038;
    BEGIN
      IF "Ads. Item No." = '' THEN
        EXIT;
      IF "Ads. Position" = '' THEN
        EXIT;
      AdsBookingLine2.SETPERMISSIONFILTER;
      AdsBookingLine2.SETCURRENTKEY("Ads. Item No.","Ads. Position","Line Status","Waiting List No.");
      AdsBookingLine2.SETRANGE("Ads. Item No.","Ads. Item No.");
      AdsBookingLine2.SETRANGE("Ads. Position","Ads. Position");
      IF NOT AdsBookingLine2.FIND('-') THEN BEGIN
        "Line Status" := "Line Status"::Booking;
        "Last Status Date" := CURRENTDATETIME;//GKU:010
        "Last Date Modified" := CURRENTDATETIME; //18.06.2012
        "Waiting List No." := 0;
        EXIT;
      END;
      //case 1 Invoiced,Closed
      AdsBookingLine2.SETFILTER("Line Status",'%1|%2',
        AdsBookingLine2."Line Status"::Invoiced,
        AdsBookingLine2."Line Status"::Closed);
      IF AdsBookingLine2.FIND('-') THEN
        ERROR(Text004,"Ads. Item No.","Ads. Position","Line Status");
      //case 2 Waiting List (not include case 1)
      AdsBookingLine2.SETRANGE("Line Status",AdsBookingLine2."Line Status"::"Waiting List");
      IF AdsBookingLine2.FIND('+') THEN BEGIN
        "Line Status" := "Line Status"::"Waiting List";
        "Last Status Date" := CURRENTDATETIME;//GKU:010
        "Last Date Modified" := CURRENTDATETIME; //18.06.2012
        "Waiting List No." := AdsBookingLine2."Waiting List No." + 1;
        EXIT;
      END;
      //case Booking,Confirm,Approve,Hold (not include case 1,2)
      AdsBookingLine2.SETFILTER("Line Status",'%1|%2|%3|%4',
        AdsBookingLine2."Line Status"::Booking,
        AdsBookingLine2."Line Status"::Confirmed,
        AdsBookingLine2."Line Status"::Approved,
        AdsBookingLine2."Line Status"::Hold);
      IF AdsBookingLine2.FIND('-') THEN BEGIN
        "Line Status" := "Line Status"::"Waiting List";
        "Last Status Date" := CURRENTDATETIME;//GKU:010
        "Last Date Modified" := CURRENTDATETIME; //18.06.2012
        "Waiting List No." := 1;
        EXIT;
      END;
      //case Cancel (not include case 1,2,3)
      AdsBookingLine2.SETRANGE("Line Status",AdsBookingLine2."Line Status"::Cancelled);
      IF AdsBookingLine2.FIND('-') THEN BEGIN
        "Line Status" := "Line Status"::Booking;
        "Last Status Date" := CURRENTDATETIME;//GKU:010
        "Last Date Modified" := CURRENTDATETIME; //18.06.2012
        "Cancelled Date" := CURRENTDATETIME;//GKU:010
        EXIT;
      END;
    END;

    PROCEDURE ConfirmBooking@1000000001();
    BEGIN
      GetAdsBookingHdr;
      AdsBookingHdr.TESTFIELD("Ads. Sales Type");

      TESTFIELD("Ads. Item No.");
      TESTFIELD("Line Status","Line Status"::Booking);
      TESTFIELD(Quantity);
      IF "Booking Revenue Type" <> "Booking Revenue Type"::"Non-Billable" THEN BEGIN
        //TESTFIELD("Unit Price Excl. VAT");
        //KKE : #002 +
        IF "Unit Price Excl. VAT" = 0 THEN
          IF NOT CONFIRM(STRSUBSTNO(Text007,FIELDCAPTION("Unit Price Excl. VAT")),FALSE) THEN
            EXIT;
        //KKE : #002 -
      END;

      IF NOT UserSetup.GET(USERID) THEN
        CLEAR(UserSetup);
      IF NOT UserSetup."Allow Confirm Ads. Booking" THEN
        ERROR(Text003,'Confirm');

      IF "Create Sales Invoice" THEN BEGIN
        TESTFIELD("Bill Revenue G/L Account");
        //TESTFIELD("Cash Invoice Amount");
        //KKE : #002 +
        IF "Cash Invoice Amount" = 0 THEN
          IF NOT CONFIRM(STRSUBSTNO(Text007,FIELDCAPTION("Cash Invoice Amount")),FALSE) THEN
            EXIT;
        //KKE : #002 -
      END;
      IF "Barter Required Document" THEN BEGIN
        TESTFIELD("Barter G/L Account");
        //TESTFIELD("Barter Amount");
        //KKE : #002 +
        IF "Barter Amount" = 0 THEN
          IF NOT CONFIRM(STRSUBSTNO(Text007,FIELDCAPTION("Barter Amount")),FALSE) THEN
            EXIT;
        //KKE : #002 -
      END;
      IF "Create Sales Invoice" OR "Barter Required Document" THEN BEGIN
        //IF ("Cash Invoice Amount" + "Barter Amount") <> "Amount Including VAT" THEN
        IF ("Cash Invoice Amount" + "Barter Amount") <> Amount THEN
          ERROR(Text005,FIELDCAPTION("Cash Invoice Amount"),FIELDCAPTION("Barter Amount"));
      END;

      "Line Status" := "Line Status"::Confirmed;
      "Last Status Date" := CURRENTDATETIME;//GKU:010
      "Last Date Modified" := CURRENTDATETIME; //18.06.2012
      MODIFY;
    END;

    PROCEDURE ApproveBooking@1000000005();
    BEGIN
      TESTFIELD("Ads. Item No.");
      TESTFIELD("Line Status","Line Status"::Confirmed);

      IF NOT UserSetup.GET(USERID) THEN
        CLEAR(UserSetup);
      IF NOT UserSetup."Allow Approve Ads. Booking" THEN
        ERROR(Text003,'Approve');

      "Line Status" := "Line Status"::Approved;
      "Last Status Date" := CURRENTDATETIME;//GKU:010
      "Last Date Modified" := CURRENTDATETIME; //18.06.2012
      MODIFY;
    END;

    PROCEDURE UnApproveBooking@1000000012();
    BEGIN
      TESTFIELD("Ads. Item No.");
      TESTFIELD("Line Status","Line Status"::Approved);

      IF NOT UserSetup.GET(USERID) THEN
        CLEAR(UserSetup);
      UserSetup.TESTFIELD("Allow Approve Ads. Booking",TRUE);

      "Line Status" := "Line Status"::Confirmed;
      "Last Status Date" := CURRENTDATETIME;//GKU:010
      "Last Date Modified" := CURRENTDATETIME; //18.06.2012
      MODIFY;
    END;

    PROCEDURE RejectBooking@1000000010();
    BEGIN
      TESTFIELD("Ads. Item No.");
      TESTFIELD("Line Status","Line Status"::Confirmed);

      IF NOT UserSetup.GET(USERID) THEN
        CLEAR(UserSetup);
      IF NOT UserSetup."Allow Hold Ads. Booking" THEN
        ERROR(Text003,'Hold');

      "Line Status" := "Line Status"::Hold;
      "Last Status Date" := CURRENTDATETIME;//GKU:010
      "Last Date Modified" := CURRENTDATETIME; //18.06.2012
      MODIFY;
    END;

    PROCEDURE UnRejectBooking@1000000013();
    BEGIN
      TESTFIELD("Ads. Item No.");
      TESTFIELD("Line Status","Line Status"::Hold);

      IF NOT UserSetup.GET(USERID) THEN
        CLEAR(UserSetup);
      UserSetup.TESTFIELD("Allow Hold Ads. Booking",TRUE);

      "Line Status" := "Line Status"::Confirmed;
      "Last Status Date" := CURRENTDATETIME;//GKU:010
      "Last Date Modified" := CURRENTDATETIME; //18.06.2012
      MODIFY;
    END;

    PROCEDURE CancelBooking@1000000002();
    VAR
      SalesInvHdr@1000000000 : Record 112;
      SalesCreMemoHdr@1000000001 : Record 114;
    BEGIN
      TESTFIELD("Ads. Item No.");

      //KKE : #009 +
      IF "Line Status" = "Line Status"::Invoiced THEN BEGIN //check Credit Memo
        SalesInvHdr.SETRANGE("Pre-Assigned No.","Cash Invoice No.");
        IF SalesInvHdr.FIND('-') THEN BEGIN
          SalesCreMemoHdr.SETRANGE("Applied-to Tax Invoice",SalesInvHdr."No.");
          IF NOT SalesCreMemoHdr.FIND('-') THEN
            ERROR(Text002,FIELDCAPTION("Line Status"),"Line Status");
        END;
      END ELSE
      //KKE : #009 -

      IF "Line Status" IN
        ["Line Status"::Approved,"Line Status"::Hold,"Line Status"::Invoiced,"Line Status"::Closed]
      THEN
        ERROR(Text002,FIELDCAPTION("Line Status"),"Line Status");

      IF NOT UserSetup.GET(USERID) THEN
        CLEAR(UserSetup);
      IF NOT UserSetup."Allow Cancel Ads. Booking" THEN
        ERROR(Text003,'Cancel');

      "Line Status" := "Line Status"::Cancelled;
      "Last Status Date" := CURRENTDATETIME;//GKU:010
      "Last Date Modified" := CURRENTDATETIME; //18.06.2012
      "Cancelled Date" := CURRENTDATETIME;//GKU:010
      Closed := TRUE;
      MODIFY;
    END;

    PROCEDURE CloseBooking@1000000003();
    BEGIN
      //for Non-Bill and Barter Required Doc = No only
      TESTFIELD("Ads. Item No.");
      TESTFIELD("Line Status","Line Status"::Approved);
      TESTFIELD("Booking Revenue Type","Booking Revenue Type"::"Non-Billable");
      TESTFIELD("Barter Required Document",FALSE);

      IF NOT UserSetup.GET(USERID) THEN
        CLEAR(UserSetup);

      IF NOT UserSetup."Allow Close Ads. Booking" THEN
        ERROR(Text003,'Close');

      "Line Status" := "Line Status"::Closed;
      "Last Status Date" := CURRENTDATETIME;//GKU:010
      "Last Date Modified" := CURRENTDATETIME; //18.06.2012
      Closed := TRUE;
      MODIFY;
    END;

    PROCEDURE ReopenConfirm@1000000006();
    BEGIN
      TESTFIELD("Ads. Item No.");
      TESTFIELD("Line Status","Line Status"::Confirmed);

      IF NOT UserSetup.GET(USERID) THEN
        CLEAR(UserSetup);
      IF NOT UserSetup."Allow Confirm Ads. Booking" THEN
        ERROR(Text003,'Confirm');

      "Line Status" := "Line Status"::Booking;
      "Last Status Date" := CURRENTDATETIME;//GKU:010
      "Last Date Modified" := CURRENTDATETIME; //18.06.2012
      MODIFY;
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   30.03.2007   KKE   New table for "Ads. Booking Line" - Ads. Sales Module
      002   07.09.2007   KKE   Allow "Unit Price Excl. VAT" is zero.
      009   04.01.2008   KKE   If Ads. Invoiced has been cancelled by Credit Note, system must allow Cancel Ads booking line.
      010   19.10.2010   GKU   Add field "Status Date"
    }
    END.
  }
}

OBJECT Table 50039 Archived Ads. Booking Header
{
  OBJECT-PROPERTIES
  {
    Date=08/28/07;
    Time=10:58:06 AM;
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    OnDelete=BEGIN
               ArchivedAdsBookingLine.RESET;
               ArchivedAdsBookingLine.SETRANGE("Booking No.","No.");
               ArchivedAdsBookingLine.SETPERMISSIONFILTER;
               ArchivedAdsBookingLine.DELETEALL;
             END;

    OnRename=BEGIN
               ERROR(Text000,TABLECAPTION);
             END;

    LookupPageID=Page50053;
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20         }
    { 2   ;   ;Booking Date        ;Date           }
    { 3   ;   ;Salesperson Code    ;Code10        ;TableRelation=Salesperson/Purchaser }
    { 4   ;   ;Sell-to Customer No.;Code20        ;TableRelation=Customer;
                                                   CaptionML=[ENU=Sell-to Customer No.;
                                                              THA=ขายให้ลูกค้าหมายเลข] }
    { 5   ;   ;Bill-to Customer No.;Code20        ;TableRelation=Customer;
                                                   OnValidate=VAR
                                                                TempDocDim@1000 : TEMPORARY Record 357;
                                                              BEGIN
                                                              END;

                                                   CaptionML=[ENU=Bill-to Customer No.;
                                                              THA=เก็บเงินจากลูกค้าหมายเลข];
                                                   NotBlank=Yes }
    { 6   ;   ;Payment Terms Code  ;Code10        ;TableRelation="Payment Terms";
                                                   CaptionML=[ENU=Payment Terms Code;
                                                              THA=รหัสเงื่อนไขการชำระเงิน] }
    { 7   ;   ;Sell-to Customer Type;Code10       ;TableRelation="General Master Setup".Code WHERE (Type=CONST(Customer Type)) }
    { 8   ;   ;Bill-to Customer Type;Code10       ;TableRelation="General Master Setup".Code WHERE (Type=CONST(Customer Type)) }
    { 9   ;   ;Zone Area           ;Code20        ;TableRelation="Zone Area" }
    { 10  ;   ;Contact             ;Text50        ;CaptionML=[ENU=Contact;
                                                              THA=ผู้ติดต่อ] }
    { 11  ;   ;Phone No.           ;Text30        ;CaptionML=[ENU=Phone No.;
                                                              THA=หมายเลขโทรศัพท์] }
    { 12  ;   ;Fax No.             ;Text30        ;CaptionML=[ENU=Fax No.;
                                                              THA=หมายเลขแฟ็กซ์] }
    { 13  ;   ;Mobile No.          ;Text30         }
    { 14  ;   ;E-Mail              ;Text80        ;CaptionML=[ENU=E-Mail;
                                                              THA=อีเมล] }
    { 15  ;   ;Remark              ;Text50         }
    { 20  ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=No. Series;
                                                              THA=ชุดหมายเลข] }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1000000002 : TextConst 'ENU=You cannot rename a %1.;THA=คุณไม่สามารถเปลี่ยนชื่อ %1';
      ArchivedAdsBookingLine@1000000000 : Record 50040;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   30.03.2007   KKE   New table for "Archived Ads. Booking Header" - Ads. Sales Module
    }
    END.
  }
}

OBJECT Table 50040 Archived Ads. Booking Line
{
  OBJECT-PROPERTIES
  {
    Date=06/18/12;
    Time=11:04:51 AM;
    Modified=Yes;
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    LookupPageID=Page50101;
    DrillDownPageID=Page50101;
  }
  FIELDS
  {
    { 1   ;   ;Booking No.         ;Code20        ;TableRelation="Archived Ads. Booking Header" }
    { 2   ;   ;Line No.            ;Integer        }
    { 3   ;   ;Ads. Item No.       ;Code20        ;TableRelation="Ads. Item";
                                                   OnValidate=VAR
                                                                TempAdsBookingLine@1000000000 : Record 50038;
                                                              BEGIN
                                                              END;
                                                               }
    { 4   ;   ;Magazine Code       ;Code20        ;TableRelation=Magazine;
                                                   Editable=No }
    { 5   ;   ;Volume No.          ;Code20        ;TableRelation=Volume;
                                                   Editable=No }
    { 6   ;   ;Issue No.           ;Code20        ;TableRelation="Issue No.";
                                                   Editable=No }
    { 7   ;   ;Issue Date          ;Date          ;Editable=No }
    { 8   ;   ;Shortcut Dimension 5 Code;Code20   ;TableRelation="Dimension Value".Code;
                                                   OnLookup=BEGIN
                                                              LookupShortcutDimCode(5,"Shortcut Dimension 5 Code");
                                                            END;

                                                   CaptionML=[ENU=Shortcut Dimension 5 Code;
                                                              THA=รหัสมิติทางลัดหมายเลข 5];
                                                   CaptionClass='1,2,5' }
    { 9   ;   ;Ads. Closing Date   ;Date           }
    { 10  ;   ;Booking Revenue Code;Code20        ;TableRelation="Booking Revenue Type" }
    { 11  ;   ;Booking Revenue Type;Option        ;OptionString=Billable,Non-Billable,House-Ads. }
    { 12  ;   ;Ads. Size           ;Code20        ;TableRelation="Ads. Size" }
    { 13  ;   ;Ads. Type           ;Code20        ;TableRelation="Ads. Type" }
    { 14  ;   ;Ads. Sub-Type       ;Code20        ;TableRelation="Ads. Sub Type".Code WHERE (Ads. Type=FIELD(Ads. Type)) }
    { 15  ;   ;Ads. Position       ;Code20        ;TableRelation="Ads. Position" WHERE (Magazine Code=FIELD(Magazine Code)) }
    { 16  ;   ;Ads. Product        ;Code20        ;TableRelation="Ads. Product" }
    { 17  ;   ;Owner Customer      ;Code20        ;TableRelation=Customer }
    { 18  ;   ;Product Category    ;Code20        ;TableRelation="Product Category" }
    { 19  ;   ;Quantity            ;Decimal       ;InitValue=1;
                                                   DecimalPlaces=0:5 }
    { 20  ;   ;Unit Price Excl. VAT;Decimal       ;AutoFormatType=2 }
    { 21  ;   ;Amount              ;Decimal       ;AutoFormatType=1 }
    { 22  ;   ;Amount Including VAT;Decimal       ;AutoFormatType=1 }
    { 23  ;   ;VAT Bus. Posting Group;Code10      ;TableRelation="VAT Business Posting Group";
                                                   CaptionML=[ENU=VAT Bus. Posting Group;
                                                              THA=กลุ่มการลงรายการบัญชีธุรกิจที่ต้องเสีย VAT] }
    { 24  ;   ;VAT Prod. Posting Group;Code10     ;TableRelation="VAT Product Posting Group";
                                                   CaptionML=[ENU=VAT Prod. Posting Group;
                                                              THA=กลุ่มการลงรายการบัญชีผลิตภัณฑ์ที่ต้องเสีย VAT] }
    { 25  ;   ;Create Sales Invoice;Boolean       ;Editable=No }
    { 26  ;   ;Cash Invoice Amount ;Decimal       ;AutoFormatType=1 }
    { 27  ;   ;Bill Revenue G/L Account;Code20    ;TableRelation="G/L Account" }
    { 28  ;   ;Barter Amount       ;Decimal       ;AutoFormatType=1 }
    { 29  ;   ;Barter G/L Account  ;Code20        ;TableRelation="G/L Account" }
    { 30  ;   ;Barter Required Document;Boolean   ;Editable=No }
    { 31  ;   ;Line Status         ;Option        ;OptionString=[Booking,Waiting List,Confirmed,Approved,Hold,Cancelled,Invoiced,Closed, ];
                                                   Editable=No }
    { 32  ;   ;Waiting List No.    ;Integer       ;Editable=No }
    { 33  ;   ;Scheduled Invoice Date;Date         }
    { 34  ;   ;Cash Invoice No.    ;Code20        ;Editable=No }
    { 35  ;   ;Barter Invoice No.  ;Code20        ;Editable=No }
    { 36  ;   ;Closed              ;Boolean       ;Editable=No }
    { 37  ;   ;Base Unit of Measure;Code10        ;TableRelation="Unit of Measure";
                                                   CaptionML=[ENU=Base Unit of Measure;
                                                              THA=หน่วยวัดมูลฐาน] }
    { 38  ;   ;Booking Date        ;Date           }
    { 39  ;   ;Counting Unit       ;Decimal       ;DecimalPlaces=0:5 }
    { 40  ;   ;Require Contract    ;Boolean        }
    { 41  ;   ;Have Artwork        ;Boolean        }
    { 42  ;   ;Contact person for artwork;Text50   }
    { 43  ;   ;Total Number of Insertion;Integer   }
    { 44  ;   ;Actual Volume No.   ;Code20        ;TableRelation=Volume;
                                                   Editable=No }
    { 45  ;   ;Actual Issue No.    ;Code20        ;TableRelation="Issue No." }
    { 46  ;   ;Actual Page No.     ;Integer        }
    { 47  ;   ;Actual Sub Page No. ;Integer        }
    { 48  ;   ;Complimentary Offer ;Text50         }
    { 50  ;   ;Remark              ;Text100       ;Description=50-->100 }
    { 52  ;   ;Planning Status     ;Option        ;OptionString=[ ,Picked,Occupied,Approved];
                                                   Editable=No }
    { 60  ;   ;Total Counting Unit ;Decimal       ;DecimalPlaces=0:5;
                                                   Description==CountingUnit * Quantity, used on Booking Overview }
    { 100 ;   ;Salesperson Code    ;Code10        ;TableRelation=Salesperson/Purchaser;
                                                   Editable=No }
    { 101 ;   ;Sell-to Customer No.;Code20        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Ads. Booking Header"."Sell-to Customer No." WHERE (No.=FIELD(Booking No.)));
                                                   TableRelation=Customer;
                                                   CaptionML=[ENU=Sell-to Customer No.;
                                                              THA=ขายให้ลูกค้าหมายเลข];
                                                   Editable=No }
    { 102 ;   ;Bill-to Customer No.;Code20        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Ads. Booking Header"."Bill-to Customer No." WHERE (No.=FIELD(Booking No.)));
                                                   TableRelation=Customer;
                                                   OnValidate=VAR
                                                                TempDocDim@1000 : TEMPORARY Record 357;
                                                              BEGIN
                                                              END;

                                                   CaptionML=[ENU=Bill-to Customer No.;
                                                              THA=เก็บเงินจากลูกค้าหมายเลข];
                                                   Editable=No }
    { 120 ;   ;Ads. Product Description 2;Text50   }
    { 121 ;   ;Last Status Date    ;DateTime       }
    { 122 ;   ;Cancelled Date      ;DateTime      ;Editable=No }
    { 500 ;   ;Last Date Modified  ;DateTime      ;CaptionML=[ENU=Last Date Modified;
                                                              THA=วันที่แก้ไขล่าสุด];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Booking No.,Line No.                    ;Clustered=Yes }
    {    ;Ads. Item No.,Line Status,Magazine Code ;SumIndexFields=Total Counting Unit }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      DimMgt@1000000000 : Codeunit 408;

    PROCEDURE LookupShortcutDimCode@18(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    BEGIN
      DimMgt.LookupDimValueCode(FieldNumber,ShortcutDimCode);
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   09.05.2007   KKE   New table for "Archived Ads. Booking Line" - Ads. Sales Module
      002   19.10.2010   GKU   Add field "Status Date"
    }
    END.
  }
}

OBJECT Table 50041 Agent Customer Header
{
  OBJECT-PROPERTIES
  {
    Date=12/12/11;
    Time=[ 4:44:35 PM];
    Modified=Yes;
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               IF "No." = '' THEN BEGIN
                 MagazineSalesSetup.GET;
                 MagazineSalesSetup.TESTFIELD("Agent Customer Nos.");
                 NoSeriesMgt.InitSeries(MagazineSalesSetup."Agent Customer Nos.",xRec."No. Series",0D,"No.","No. Series");
               END;

               "Document Date" := WORKDATE;
             END;

    OnModify=BEGIN
               AgentCustLine.RESET;
               AgentCustLine.SETRANGE("Agent Customer No.","No.");
               AgentCustLine.SETRANGE("Delivered Flag",TRUE);
               IF AgentCustLine.FIND('-') THEN
                 ERROR(Text001);
             END;

    OnDelete=BEGIN
               AgentCustLine.RESET;
               AgentCustLine.SETRANGE("Agent Customer No.","No.");
               AgentCustLine.SETRANGE("Delivered Flag",TRUE);
               IF AgentCustLine.FIND('-') THEN
                 ERROR(Text001);

               AgentCustLine.RESET;
               AgentCustLine.SETRANGE("Agent Customer No.","No.");
               AgentCustLine.DELETEALL;
             END;

    OnRename=BEGIN
               ERROR(Text000,TABLECAPTION);
             END;

    LookupPageID=Page50056;
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20        ;OnValidate=BEGIN
                                                                IF "No." <> xRec."No." THEN BEGIN
                                                                  MagazineSalesSetup.GET;
                                                                  NoSeriesMgt.TestManual(MagazineSalesSetup."Agent Customer Nos.");
                                                                  "No. Series" := '';
                                                                END;
                                                              END;
                                                               }
    { 2   ;   ;Document Date       ;Date           }
    { 3   ;   ;Magazine Item No.   ;Code20        ;TableRelation=Item WHERE (Item Type=CONST(Magazine));
                                                   OnValidate=BEGIN
                                                                IF NOT Item.GET("Magazine Item No.") THEN
                                                                  CLEAR(Item);

                                                                "Magazine Code" := Item."Magazine Code";
                                                                "Volume No." := Item."Volume No.";
                                                                "Issue No." := Item."Issue No.";
                                                                "Issue Date" := Item."Issue Date";
                                                                "Unit of Measure Code" := Item."Base Unit of Measure";
                                                              END;
                                                               }
    { 4   ;   ;Magazine Code       ;Code20        ;TableRelation=Magazine;
                                                   Editable=No }
    { 5   ;   ;Volume No.          ;Code20        ;TableRelation=Volume;
                                                   Editable=No }
    { 6   ;   ;Issue No.           ;Code20        ;TableRelation="Issue No.";
                                                   Editable=No }
    { 7   ;   ;Issue Date          ;Date          ;Editable=No }
    { 9   ;   ;Salesperson Code    ;Code10        ;TableRelation=Salesperson/Purchaser }
    { 10  ;   ;Location Code       ;Code10        ;TableRelation=Location }
    { 11  ;   ;Unit of Measure Code;Code10        ;TableRelation="Item Unit of Measure".Code WHERE (Item No.=FIELD(Magazine Item No.));
                                                   OnValidate=VAR
                                                                UnitOfMeasureTranslation@1000 : Record 5402;
                                                                ResUnitofMeasure@1001 : Record 205;
                                                              BEGIN
                                                              END;

                                                   CaptionML=[ENU=Unit of Measure Code;
                                                              THA=รหัสหน่วยวัด] }
    { 20  ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=No. Series;
                                                              THA=ชุดหมายเลข] }
    { 21  ;   ;Total Reserved Quantity;Decimal    ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Agent Customer Line".Quantity WHERE (Agent Customer No.=FIELD(No.)));
                                                   DecimalPlaces=0:5;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 22  ;   ;Total Reserved Amount;Decimal      ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Agent Customer Line"."Line Amount" WHERE (Agent Customer No.=FIELD(No.)));
                                                   Editable=No }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      MagazineSalesSetup@1000000001 : Record 50007;
      Item@1000000003 : Record 27;
      AgentCustLine@1000000004 : Record 50042;
      NoSeriesMgt@1000000000 : Codeunit 396;
      Text000@1000000002 : TextConst 'ENU=You cannot rename a %1.;THA=คุณไม่สามารถเปลี่ยนชื่อ %1';
      Text001@1000000005 : TextConst 'ENU=There was some agent customer line has been delivered.';

    PROCEDURE AssistEdit@2(OldAgentSalesHdr@1000 : Record 50041) : Boolean;
    VAR
      AgentSalesHdr@1001 : Record 50041;
    BEGIN
      WITH AgentSalesHdr DO BEGIN
        AgentSalesHdr := Rec;
        MagazineSalesSetup.GET;
        MagazineSalesSetup.TESTFIELD("Agent Customer Nos.");
        IF NoSeriesMgt.SelectSeries(MagazineSalesSetup."Agent Customer Nos.",OldAgentSalesHdr."No. Series","No. Series") THEN BEGIN
          NoSeriesMgt.SetSeries("No.");
          Rec := AgentSalesHdr;
          EXIT(TRUE);
        END;
      END;
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   30.03.2007   KKE   New table for "Agent Customer Header" - Circulation Module
    }
    END.
  }
}

OBJECT Table 50042 Agent Customer Line
{
  OBJECT-PROPERTIES
  {
    Date=05/08/07;
    Time=[ 6:00:00 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    OnModify=BEGIN
               TESTFIELD("Delivered Flag",FALSE);
             END;

    OnDelete=BEGIN
               TESTFIELD("Delivered Flag",FALSE);
             END;

    OnRename=BEGIN
               ERROR(Text000,TABLECAPTION);
             END;

  }
  FIELDS
  {
    { 1   ;   ;Agent Customer No.  ;Code20        ;TableRelation="Agent Customer Header" }
    { 2   ;   ;Line No.            ;Integer        }
    { 3   ;   ;Sell-to Customer No.;Code20        ;TableRelation=Customer;
                                                   OnValidate=BEGIN
                                                                IF NOT Cust.GET("Sell-to Customer No.") THEN
                                                                  CLEAR(Cust);
                                                                "Bill-to Customer No." := Cust."Bill-to Customer No.";
                                                                "Customer Posting Group" := Cust."Customer Posting Group";
                                                              END;

                                                   CaptionML=[ENU=Sell-to Customer No.;
                                                              THA=ขายให้ลูกค้าหมายเลข] }
    { 4   ;   ;Bill-to Customer No.;Code20        ;TableRelation=Customer;
                                                   OnValidate=VAR
                                                                TempDocDim@1000 : TEMPORARY Record 357;
                                                              BEGIN
                                                              END;

                                                   CaptionML=[ENU=Bill-to Customer No.;
                                                              THA=เก็บเงินจากลูกค้าหมายเลข];
                                                   NotBlank=Yes }
    { 5   ;   ;Ship-to Customer No.;Code20        ;TableRelation=Customer;
                                                   OnValidate=VAR
                                                                TempDocDim@1000 : TEMPORARY Record 357;
                                                              BEGIN
                                                              END;

                                                   CaptionML=ENU=Ship-to Customer No.;
                                                   NotBlank=Yes }
    { 6   ;   ;Quantity            ;Decimal       ;OnValidate=BEGIN
                                                                "Line Amount" := Quantity * "Unit Price" * (1 - "Discount %"/100);
                                                              END;

                                                   DecimalPlaces=0:5 }
    { 7   ;   ;Unit Price          ;Decimal       ;OnValidate=BEGIN
                                                                VALIDATE(Quantity);
                                                              END;

                                                   AutoFormatType=2 }
    { 8   ;   ;Discount %          ;Decimal       ;OnValidate=BEGIN
                                                                VALIDATE(Quantity);
                                                              END;

                                                   CaptionML=ENU=Discount %;
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   MaxValue=100 }
    { 11  ;   ;Line Amount         ;Decimal       ;Editable=No }
    { 15  ;   ;Customer Posting Group;Code10      ;TableRelation="Customer Posting Group";
                                                   CaptionML=[ENU=Customer Posting Group;
                                                              THA=กลุ่มการลงรายการบัญชีลูกค้า] }
    { 20  ;   ;Delivered Flag      ;Boolean       ;Editable=No }
    { 21  ;   ;Delivered Date      ;Date          ;Editable=No }
    { 22  ;   ;Delivered Document No.;Code20      ;Editable=No }
    { 23  ;   ;Delivered Document Line No.;Integer;Editable=No }
  }
  KEYS
  {
    {    ;Agent Customer No.,Line No.             ;SumIndexFields=Quantity,Line Amount;
                                                   Clustered=Yes }
    {    ;Sell-to Customer No.,Bill-to Customer No.;
                                                   SumIndexFields=Quantity,Line Amount }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Cust@1000000000 : Record 18;
      Text000@1000000001 : TextConst 'ENU=You cannot rename a %1.;THA=คุณไม่สามารถเปลี่ยนชื่อ %1';

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   30.03.2007   KKE   New table for "Agent Customer Line" - Circulation Module
    }
    END.
  }
}

OBJECT Table 50043 Circulation Receipt Header
{
  OBJECT-PROPERTIES
  {
    Date=12/12/11;
    Time=[ 4:50:08 PM];
    Modified=Yes;
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               IF "No." = '' THEN BEGIN
                 MagazineSalesSetup.GET;
                 MagazineSalesSetup.TESTFIELD("Circulation Receipt Nos.");
                 NoSeriesMgt.InitSeries(MagazineSalesSetup."Circulation Receipt Nos.",xRec."No. Series",0D,"No.","No. Series");
               END;

               "Document Date" := WORKDATE;
             END;

    OnDelete=BEGIN
               CirculationRecLine.RESET;
               CirculationRecLine.SETRANGE("Circulation Receipt No.","No.");
               IF CirculationRecLine.FINDSET THEN
                 REPEAT
                   CirculationRecLine.DELETE(TRUE);
                 UNTIL CirculationRecLine.NEXT=0;
             END;

    OnRename=BEGIN
               ERROR(Text000,TABLECAPTION);
             END;

    LookupPageID=Page50059;
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20        ;OnValidate=BEGIN
                                                                IF "No." <> xRec."No." THEN BEGIN
                                                                  MagazineSalesSetup.GET;
                                                                  NoSeriesMgt.TestManual(MagazineSalesSetup."Circulation Receipt Nos.");
                                                                  "No. Series" := '';
                                                                END;
                                                              END;
                                                               }
    { 2   ;   ;Document Date       ;Date           }
    { 3   ;   ;Customer No.        ;Code20        ;TableRelation=Customer;
                                                   OnValidate=BEGIN
                                                                IF NOT Cust.GET("Customer No.") THEN
                                                                  CLEAR(Cust);
                                                                Contact := Cust.Contact;
                                                              END;
                                                               }
    { 8   ;   ;Contact             ;Text50        ;CaptionML=[ENU=Contact;
                                                              THA=ผู้ติดต่อ] }
    { 20  ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=No. Series;
                                                              THA=ชุดหมายเลข] }
    { 21  ;   ;No. Printed         ;Integer       ;Editable=No }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      MagazineSalesSetup@1000000000 : Record 50007;
      Cust@1000000003 : Record 18;
      NoSeriesMgt@1000000001 : Codeunit 396;
      Text000@1000000002 : TextConst 'ENU=You cannot rename a %1.;THA=คุณไม่สามารถเปลี่ยนชื่อ %1';
      CustLedgEntry@1000000005 : Record 21;
      CreateCustLedgEntry@1000000004 : Record 21;
      Text001@1000000006 : TextConst 'ENU=Do you want to calculate payment amount?';
      Text002@1000000007 : TextConst 'ENU=Payment amount is zero.';
      CirculationRecLine@1000000008 : Record 50044;

    PROCEDURE AssistEdit@2(OldCirReceiptHdr@1000 : Record 50043) : Boolean;
    VAR
      CirReceiptHdr@1001 : Record 50043;
    BEGIN
      WITH OldCirReceiptHdr DO BEGIN
        OldCirReceiptHdr := Rec;
        MagazineSalesSetup.GET;
        MagazineSalesSetup.TESTFIELD("Circulation Receipt Nos.");
        IF NoSeriesMgt.SelectSeries(MagazineSalesSetup."Circulation Receipt Nos.",OldCirReceiptHdr."No. Series","No. Series") THEN BEGIN
          NoSeriesMgt.SetSeries("No.");
          Rec := CirReceiptHdr;
          EXIT(TRUE);
        END;
      END;
    END;

    PROCEDURE CalcPayment@1000000000();
    VAR
      CustLedgEntry2@1000000004 : Record 21;
      CirReceiptLine@1000000000 : Record 50044;
      CirReceiptLineTemp@1000000002 : TEMPORARY Record 50044;
      AppliedDocNo@1000000003 : Text[500];
      PaymentAmt@1000000001 : Decimal;
      LineNo@1000000005 : Integer;
    BEGIN
      //KKE: #002 +
      IF NOT CONFIRM(Text001,FALSE) THEN
        EXIT;
      LineNo := 0;
      PaymentAmt := 0;
      CirReceiptLineTemp.DELETEALL;
      CirReceiptLine.RESET;
      CirReceiptLine.SETRANGE("Circulation Receipt No.","No.");
      IF CirReceiptLine.FIND('+') THEN;
        LineNo := CirReceiptLine."Line No.";
      CirReceiptLine.SETRANGE("Document Type",CirReceiptLine."Document Type"::Invoice);
      IF CirReceiptLine.FIND('-') THEN
        REPEAT
          CirReceiptLineTemp.RESET;
          CirReceiptLineTemp.SETRANGE("Document No.",CirReceiptLine."Document No.");
          IF NOT CirReceiptLineTemp.FIND('-') THEN BEGIN
            CirReceiptLineTemp."Circulation Receipt No." := CirReceiptLine."Circulation Receipt No.";
            CirReceiptLineTemp."Line No." := CirReceiptLine."Line No.";
            CirReceiptLineTemp."Document No." := CirReceiptLine."Document No.";
            CirReceiptLineTemp.INSERT;
          END;
        UNTIL CirReceiptLine.NEXT=0;

      CirReceiptLineTemp.RESET;
      WITH CirReceiptLineTemp DO BEGIN
        IF NOT FIND('-') THEN
          ERROR(Text002);

        REPEAT
          CustLedgEntry2.RESET;
          CustLedgEntry2.SETCURRENTKEY("Document No.","Document Type","Customer No.");
          CustLedgEntry2.SETRANGE("Document Type",CustLedgEntry2."Document Type"::Invoice);
          CustLedgEntry2.SETRANGE("Document No.","Document No.");
          IF CustLedgEntry2.FIND('-') THEN BEGIN
            CustLedgEntry2.CALCFIELDS(Amount,"Remaining Amount");
            IF CustLedgEntry2.Amount <> CustLedgEntry2."Remaining Amount" THEN BEGIN
              CreateCustLedgEntry := CustLedgEntry2;
              FindApplnEntriesDtldtLedgEntry;

              CustLedgEntry.SETCURRENTKEY("Entry No.");
              CustLedgEntry.SETRANGE("Entry No.");

              IF CreateCustLedgEntry."Closed by Entry No." <> 0 THEN BEGIN
                CustLedgEntry."Entry No." := CreateCustLedgEntry."Closed by Entry No.";
                CustLedgEntry.MARK(TRUE);
              END;

              CustLedgEntry.SETCURRENTKEY("Closed by Entry No.");
              CustLedgEntry.SETRANGE("Closed by Entry No.",CreateCustLedgEntry."Entry No.");
              IF CustLedgEntry.FIND('-') THEN
                REPEAT
                  CustLedgEntry.MARK(TRUE);
                UNTIL CustLedgEntry.NEXT = 0;

              CustLedgEntry.SETCURRENTKEY("Entry No.");
              CustLedgEntry.SETRANGE("Closed by Entry No.");
            END;
          END;
        UNTIL NEXT=0;

        CustLedgEntry.MARKEDONLY(TRUE);
        //CustLedgEntry.SETRANGE("Document Type",CustLedgEntry."Document Type"::Payment);
        IF CustLedgEntry.FIND('-') THEN
          REPEAT
            IF CustLedgEntry."Document Type" = CustLedgEntry."Document Type"::Payment THEN BEGIN
            CustLedgEntry.CALCFIELDS(Amount);
            PaymentAmt += CustLedgEntry.Amount;
            END;
          UNTIL CustLedgEntry.NEXT=0;
        CustLedgEntry.RESET;
      END;

      IF PaymentAmt = 0 THEN
        ERROR(Text002);

      CirReceiptLine.RESET;
      CirReceiptLine.SETRANGE("Circulation Receipt No.","No.");
      CirReceiptLine.SETRANGE("Document Type",CirReceiptLine."Document Type"::Payment);
      IF CirReceiptLine.FIND('-') THEN BEGIN
        CirReceiptLine."Line Amount Incl. VAT" := PaymentAmt;
        CirReceiptLine.MODIFY;
      END ELSE BEGIN
        CirReceiptLine.INIT;
        CirReceiptLine."Circulation Receipt No." := "No.";
        CirReceiptLine."Line No." := LineNo + 10000;
        CirReceiptLine."Document Type" := CirReceiptLine."Document Type"::Payment;
        CirReceiptLine.Description := 'จำนวนเงินที่รับชำระแล้ว';
        CirReceiptLine."Line Amount Incl. VAT" := PaymentAmt;
        CirReceiptLine.INSERT;
      END;

      //KKE: #002 -
    END;

    LOCAL PROCEDURE FindApplnEntriesDtldtLedgEntry@1();
    VAR
      DtldCustLedgEntry1@1001 : Record 379;
      DtldCustLedgEntry2@1000 : Record 379;
    BEGIN
      //KKE: #002 +
      DtldCustLedgEntry1.SETCURRENTKEY("Cust. Ledger Entry No.");
      DtldCustLedgEntry1.SETRANGE("Cust. Ledger Entry No.",CreateCustLedgEntry."Entry No.");
      DtldCustLedgEntry1.SETRANGE(Unapplied,FALSE);
      IF DtldCustLedgEntry1.FIND('-') THEN BEGIN
        REPEAT
          IF DtldCustLedgEntry1."Cust. Ledger Entry No." =
            DtldCustLedgEntry1."Applied Cust. Ledger Entry No."
          THEN BEGIN
            DtldCustLedgEntry2.INIT;
            DtldCustLedgEntry2.SETCURRENTKEY("Applied Cust. Ledger Entry No.","Entry Type");
            DtldCustLedgEntry2.SETRANGE(
              "Applied Cust. Ledger Entry No.",DtldCustLedgEntry1."Applied Cust. Ledger Entry No.");
            DtldCustLedgEntry2.SETRANGE("Entry Type",DtldCustLedgEntry2."Entry Type"::Application);
            DtldCustLedgEntry2.SETRANGE(Unapplied,FALSE);
            IF DtldCustLedgEntry2.FIND('-') THEN BEGIN
              REPEAT
                IF DtldCustLedgEntry2."Cust. Ledger Entry No." <>
                  DtldCustLedgEntry2."Applied Cust. Ledger Entry No."
                THEN BEGIN
                  CustLedgEntry.SETCURRENTKEY("Entry No.");
                  CustLedgEntry.SETRANGE("Entry No.",DtldCustLedgEntry2."Cust. Ledger Entry No.");
                  IF CustLedgEntry.FIND('-') THEN
                    CustLedgEntry.MARK(TRUE);
                END;
              UNTIL DtldCustLedgEntry2.NEXT = 0;
            END;
          END ELSE BEGIN
            CustLedgEntry.SETCURRENTKEY("Entry No.");
            CustLedgEntry.SETRANGE("Entry No.",DtldCustLedgEntry1."Applied Cust. Ledger Entry No.");
            IF CustLedgEntry.FIND('-') THEN
              CustLedgEntry.MARK(TRUE);
          END;
        UNTIL DtldCustLedgEntry1.NEXT = 0;
      END;
      //KKE: #002 -
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   30.04.2007   KKE   New table for "Circulation Receipt Header" - Circulation Module
      002   18.09.2007   KKE   Add Calc. Payment
    }
    END.
  }
}

OBJECT Table 50044 Circulation Receipt Line
{
  OBJECT-PROPERTIES
  {
    Date=09/18/07;
    Time=[ 6:24:50 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    Permissions=TableData 113=rm,
                TableData 115=rm;
    OnDelete=BEGIN
               CASE "Document Type" OF
                 "Document Type"::Invoice:
                   BEGIN
                     SalesInvLine.GET("Document No.","Document Line No.");
                     SalesInvLine."Circulation Receipt No." := '';
                     SalesInvLine.MODIFY;
                   END;
                 "Document Type"::"Credit Memo":
                   BEGIN
                     SalesCreMemoLine.GET("Document No.","Document Line No.");
                     SalesCreMemoLine."Circulation Receipt No." := '';
                     SalesCreMemoLine.MODIFY;
                   END;
               END;
             END;

    OnRename=BEGIN
               ERROR(Text000,TABLECAPTION);
             END;

  }
  FIELDS
  {
    { 1   ;   ;Circulation Receipt No.;Code20     ;TableRelation="Circulation Receipt Header" }
    { 2   ;   ;Line No.            ;Integer        }
    { 3   ;   ;Document Type       ;Option        ;OptionCaptionML=ENU=Invoice,Credit Memo,Payment;
                                                   OptionString=Invoice,Credit Memo,Payment }
    { 4   ;   ;Document No.        ;Code20        ;TableRelation=IF (Document Type=CONST(Invoice)) "Sales Invoice Header"
                                                                 ELSE IF (Document Type=CONST(Credit Memo)) "Sales Cr.Memo Header" }
    { 5   ;   ;Document Line No.   ;Integer        }
    { 6   ;   ;Posting Date        ;Date           }
    { 7   ;   ;Type                ;Option        ;CaptionML=[ENU=Type;
                                                              THA=ชนิด];
                                                   OptionCaptionML=[ENU=" ,G/L Account,Item,Resource,Fixed Asset,Charge (Item)";
                                                                    THA=" ,บัญชี G/L,สินค้า,ทรัพยากร,สินทรัพย์ถาวร,ค่าธรรมเนียม (สินค้า)"];
                                                   OptionString=[ ,G/L Account,Item,Resource,Fixed Asset,Charge (Item)] }
    { 8   ;   ;No.                 ;Code20        ;TableRelation=IF (Type=CONST(G/L Account)) "G/L Account"
                                                                 ELSE IF (Type=CONST(Item)) Item
                                                                 ELSE IF (Type=CONST(Resource)) Resource
                                                                 ELSE IF (Type=CONST(Fixed Asset)) "Fixed Asset"
                                                                 ELSE IF (Type=CONST("Charge (Item)")) "Item Charge";
                                                   CaptionML=[ENU=No.;
                                                              THA=หมายเลข] }
    { 9   ;   ;Description         ;Text50         }
    { 10  ;   ;Description 2       ;Text50         }
    { 11  ;   ;Quantity            ;Decimal       ;OnValidate=BEGIN
                                                                //"Line Amount" := Quantity * "Unit Price" * (1 - "Discount %"/100);
                                                              END;

                                                   DecimalPlaces=0:5 }
    { 12  ;   ;Unit Price          ;Decimal       ;OnValidate=BEGIN
                                                                //VALIDATE(Quantity);
                                                              END;

                                                   AutoFormatType=2 }
    { 13  ;   ;Discount            ;Decimal       ;OnValidate=BEGIN
                                                                //VALIDATE(Quantity);
                                                              END;

                                                   CaptionML=ENU=Discount }
    { 14  ;   ;Line Amount Incl. VAT;Decimal      ;CaptionML=[ENU=Line Amount Incl. VAT;
                                                              THA=ยอดเงินรวม VAT];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 15  ;   ;Deposit Amount      ;Decimal       ;AutoFormatType=1 }
  }
  KEYS
  {
    {    ;Circulation Receipt No.,Line No.        ;Clustered=Yes }
    {    ;Circulation Receipt No.,Document Type,Type,No.,Document No.;
                                                   SumIndexFields=Quantity,Line Amount Incl. VAT }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      SalesInvLine@1000000000 : Record 113;
      SalesCreMemoLine@1000000001 : Record 115;
      Text000@1000000002 : TextConst 'ENU=You cannot rename a %1.;THA=คุณไม่สามารถเปลี่ยนชื่อ %1';

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   30.04.2007   KKE   New table for "Circulation Receipt Header" - Circulation Module
      002   18.09.2007   KKE   Add Calc. Payment
    }
    END.
  }
}

OBJECT Table 50045 Archived Content Index Header
{
  OBJECT-PROPERTIES
  {
    Date=08/14/07;
    Time=[ 6:00:00 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    OnRename=BEGIN
               ERROR(Text000,TABLECAPTION);
             END;

    LookupPageID=Page50063;
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20         }
    { 2   ;   ;Creation Date       ;Date           }
    { 3   ;   ;Magazine Item No.   ;Code20        ;TableRelation=Item WHERE (Item Type=CONST(Magazine)) }
    { 5   ;   ;Magazine Code       ;Code20        ;TableRelation=Magazine;
                                                   Editable=No }
    { 10  ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=No. Series;
                                                              THA=ชุดหมายเลข] }
    { 20  ;   ;Close               ;Boolean       ;Editable=No }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1000000002 : TextConst 'ENU=You cannot rename a %1.;THA=คุณไม่สามารถเปลี่ยนชื่อ %1';

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   18.05.2007   KKE   New table for "Archived Content Index Header" - Editorial Module
    }
    END.
  }
}

OBJECT Table 50046 Archived Content Index Line
{
  OBJECT-PROPERTIES
  {
    Date=10/01/07;
    Time=[ 6:42:52 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    OnRename=BEGIN
               ERROR(Text000,TABLECAPTION);
             END;

  }
  FIELDS
  {
    { 1   ;   ;Content List No.    ;Code20        ;TableRelation="Archived Content Index Header" }
    { 2   ;   ;Content List Line No.;Integer       }
    { 4   ;   ;Content Code        ;Code20        ;TableRelation="Content Column" }
    { 5   ;   ;Description         ;Text50         }
    { 6   ;   ;No. of Page         ;Decimal       ;DecimalPlaces=0:5 }
    { 7   ;   ;Content Type        ;Code20        ;TableRelation="Content Group Setup" }
    { 8   ;   ;Content Sub Type    ;Code20        ;TableRelation="Content Sub Group Setup" }
    { 9   ;   ;Author Name         ;Text50         }
    { 10  ;   ;Description 2       ;Text50         }
    { 11  ;   ;Source of Information;Text50        }
    { 12  ;   ;Cost (LCY)          ;Decimal       ;Editable=No }
    { 13  ;   ;Content Receipt Date;Date           }
    { 14  ;   ;Status              ;Option        ;OptionString=[ ,Picked,Occupied,Approved,Cancelled];
                                                   Editable=No }
    { 15  ;   ;Actual Page No.     ;Integer       ;Editable=No }
    { 16  ;   ;Actual Sub Page No. ;Integer       ;Editable=No }
    { 17  ;   ;Actual Volume No.   ;Code20        ;TableRelation=Volume;
                                                   Editable=No }
    { 18  ;   ;Actual Issue No.    ;Code20        ;Editable=No }
    { 21  ;   ;Size                ;Code20        ;TableRelation="Ads. Size" }
    { 22  ;   ;Position            ;Code20        ;TableRelation="Ads. Position" WHERE (Magazine Code=FIELD(Magazine Code)) }
    { 23  ;   ;Column Name         ;Text50         }
    { 24  ;   ;Own Customer        ;Code20        ;TableRelation=Customer }
    { 25  ;   ;Quantity            ;Decimal       ;DecimalPlaces=0:5 }
    { 26  ;   ;Unit Price          ;Decimal       ;AutoFormatType=1 }
    { 100 ;   ;Magazine Item No.   ;Code20        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Content Index Header"."Magazine Item No." WHERE (No.=FIELD(Content List No.),
                                                                                                                        Magazine Code=FIELD(Magazine Code)));
                                                   TableRelation=Item WHERE (Item Type=CONST(Magazine));
                                                   Editable=No }
    { 101 ;   ;Magazine Code       ;Code20        ;TableRelation=Magazine;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Content List No.,Content List Line No.  ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1000000001 : TextConst 'ENU=You cannot rename a %1.;THA=คุณไม่สามารถเปลี่ยนชื่อ %1';

    PROCEDURE ShowPhotoExpense@1000000000();
    VAR
      PhotoExpense@1000000000 : Record 50021;
      formPhtoExpense@1000000001 : Page 50029;
    BEGIN
      PhotoExpense.SETRANGE("Content Index No.","Content List No.");
      PhotoExpense.SETRANGE("Content Index Line No.","Content List Line No.");
      formPhtoExpense.SETTABLEVIEW(PhotoExpense);
      formPhtoExpense.EDITABLE := FALSE;
      formPhtoExpense.RUNMODAL;
    END;

    PROCEDURE ShowContentCost@1000000001();
    VAR
      ContentCost@1000000000 : Record 50022;
      formContentCost@1000000001 : Page 50030;
    BEGIN
      ContentCost.SETRANGE("Content Index No.","Content List No.");
      ContentCost.SETRANGE("Content Index Line No.","Content List Line No.");
      formContentCost.SETTABLEVIEW(ContentCost);
      formContentCost.EDITABLE := FALSE;
      formContentCost.RUNMODAL;
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   18.05.2007   KKE   New table for "Archived Content Index Line" - Editorial Module
    }
    END.
  }
}

OBJECT Table 50047 Archived Dummy Plan
{
  OBJECT-PROPERTIES
  {
    Date=08/14/07;
    Time=[ 6:00:00 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    OnRename=BEGIN
               ERROR(Text000,TABLECAPTION);
             END;

    LookupPageID=Page50065;
  }
  FIELDS
  {
    { 1   ;   ;Dummy Plan No.      ;Code20         }
    { 2   ;   ;Magazine Item No.   ;Code20        ;TableRelation=Item WHERE (Item Type=CONST(Magazine)) }
    { 3   ;   ;Planning Status     ;Option        ;OptionString=Open,Released,Final Approve;
                                                   Editable=No }
    { 4   ;   ;Document Date       ;Date           }
    { 5   ;   ;No. of Page         ;Integer       ;OnValidate=VAR
                                                                BoxNo@1000000000 : Integer;
                                                              BEGIN
                                                              END;
                                                               }
    { 6   ;   ;Magazine Code       ;Code20        ;TableRelation=Magazine;
                                                   Editable=No }
    { 10  ;   ;User ID             ;Code20        ;TableRelation=User;
                                                   Editable=No }
    { 11  ;   ;Revision No.        ;Integer       ;Editable=No }
    { 12  ;   ;Revision Date/Time  ;DateTime      ;Editable=No }
    { 13  ;   ;No. Series          ;Code10        ;TableRelation="No. Series" }
  }
  KEYS
  {
    {    ;Dummy Plan No.,Revision No.             ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1000000002 : TextConst 'ENU=You cannot rename a %1.;THA=คุณไม่สามารถเปลี่ยนชื่อ %1';

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   18.05.2007   KKE   New table for "Archived Dummy Plan" - Editorial Module
    }
    END.
  }
}

OBJECT Table 50048 Archived Dummy Plan Line
{
  OBJECT-PROPERTIES
  {
    Date=07/04/07;
    Time=[ 6:00:00 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
  }
  FIELDS
  {
    { 1   ;   ;Dummy Plan No.      ;Code20        ;TableRelation="Archived Dummy Plan" }
    { 2   ;   ;Magazine Item No.   ;Code20        ;TableRelation=Item WHERE (Item Type=CONST(Magazine)) }
    { 3   ;   ;Page No.            ;Integer        }
    { 4   ;   ;Line No.            ;Integer        }
    { 5   ;   ;Content Code        ;Code20        ;TableRelation="Ads. Product" }
    { 6   ;   ;Content Type        ;Code20         }
    { 7   ;   ;Blackground Color   ;Option        ;OptionString=[ ,Black,Dark Red,Red,Pink,Rose,Brown,Orange,Light Orange,Gold,Tan,Olive Green,Dark Yellow,Lime,Yellow,Light Yellow,Dark Green,Green,Sea Green,Bright Green,Light Green,Dark Teal,Teal,Aqua,Turquoise,Light Turquoise,Dark Blue,Blue,Light Blue,Sky Blue,Pale Blue,Indigo,Blue-Gray,Violet,Plum,Lavender,Gray - 80%,Gray - 50%,Gray - 40%,Gray - 25%,White] }
    { 8   ;   ;Foreground Color    ;Option        ;OptionString=[ ,Black,Dark Red,Red,Pink,Rose,Brown,Orange,Light Orange,Gold,Tan,Olive Green,Dark Yellow,Lime,Yellow,Light Yellow,Dark Green,Green,Sea Green,Bright Green,Light Green,Dark Teal,Teal,Aqua,Turquoise,Light Turquoise,Dark Blue,Blue,Light Blue,Sky Blue,Pale Blue,Indigo,Blue-Gray,Violet,Plum,Lavender,Gray - 80%,Gray - 50%,Gray - 40%,Gray - 25%,White] }
    { 9   ;   ;Planning Status     ;Option        ;OptionString=[ ,Occupied,Confirmed];
                                                   Editable=No }
    { 10  ;   ;From Type           ;Option        ;OptionString=Ads,Content }
    { 11  ;   ;Booking No.         ;Code20         }
    { 12  ;   ;Booking Line No.    ;Integer        }
    { 13  ;   ;Column Name         ;Text50         }
    { 15  ;   ;Sub Page No.        ;Integer        }
    { 20  ;   ;Revision No.        ;Integer       ;Editable=No }
    { 24  ;   ;Counting Unit       ;Decimal       ;DecimalPlaces=0:5 }
    { 25  ;   ;From Ads. Item No.  ;Code20         }
    { 26  ;   ;RBG Foreground      ;Integer        }
    { 27  ;   ;Box No.             ;Integer       ;MinValue=1 }
    { 28  ;   ;CUnit Before Page   ;Decimal        }
    { 29  ;   ;RBG Blackground     ;Integer        }
    { 30  ;   ;Color Index Foreground;Integer      }
    { 31  ;   ;Color Index Blackground;Integer     }
    { 51  ;   ;Detail of Page      ;Text150        }
    { 52  ;   ;Detail of Page 2    ;Text150        }
  }
  KEYS
  {
    {    ;Dummy Plan No.,Revision No.,Page No.,Sub Page No.,Line No.;
                                                   SumIndexFields=Counting Unit;
                                                   Clustered=Yes }
    {    ;Dummy Plan No.,Revision No.,Box No.      }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   18.05.2007   KKE   New table for "Archived Dummy Plan Line" - Editorial Module
    }
    END.
  }
}

OBJECT Table 50049 Ads. Booking Overview Buffer
{
  OBJECT-PROPERTIES
  {
    Date=08/28/07;
    Time=12:26:40 PM;
    Version List=Burda1.00;
  }
  PROPERTIES
  {
  }
  FIELDS
  {
    { 1   ;   ;Issue No.           ;Code20        ;TableRelation="Issue No." }
    { 2   ;   ;Name                ;Text50        ;CaptionML=[ENU=Name;
                                                              THA=ชื่อ] }
    { 3   ;   ;Totaling            ;Text250       ;CaptionML=[ENU=Totaling;
                                                              THA=การรวมยอด] }
    { 6   ;   ;Visible             ;Boolean       ;InitValue=Yes;
                                                   CaptionML=[ENU=Visible;
                                                              THA=มองเห็นได้] }
    { 7   ;   ;Indentation         ;Integer       ;CaptionML=[ENU=Indentation;
                                                              THA=การย่อหน้า] }
    { 8   ;   ;Show in Bold        ;Boolean       ;CaptionML=[ENU=Show in Bold;
                                                              THA=แสดงเป็นตัวหนา] }
    { 9   ;   ;Quantity            ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Ads. Booking Line"."Total Counting Unit" WHERE (Booking Revenue Code=FIELD(FILTER(Booking Revenue Code Filter)),
                                                                                                                    Issue No.=FIELD(FILTER(Issue No. Filter)),
                                                                                                                    Ads. Size=FIELD(FILTER(Ads. Size Filter)),
                                                                                                                    Ads. Position=FIELD(FILTER(Ads. Position Filter)),
                                                                                                                    Magazine Code=FIELD(FILTER(Magazine Code Filter)),
                                                                                                                    Volume No.=FIELD(FILTER(Volume No. Filter)),
                                                                                                                    Line Status=FIELD(FILTER(Line Status Filter)),
                                                                                                                    Salesperson Code=FIELD(FILTER(Salesperson Filter)),
                                                                                                                    Ads. Type=FIELD(FILTER(Ads. Type Filter))));
                                                   CaptionML=[ENU=Quantity;
                                                              THA=จำนวน];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 10  ;   ;Ads. Position Filter;Code20        ;TableRelation="Ads. Position" }
    { 11  ;   ;Booking Revenue Code Filter;Code20 ;TableRelation="Booking Revenue Type" }
    { 12  ;   ;Issue No. Filter    ;Code20        ;TableRelation="Issue No." }
    { 13  ;   ;Ads. Size Filter    ;Code20        ;TableRelation="Ads. Size" }
    { 14  ;   ;Magazine Code Filter;Code20        ;FieldClass=FlowFilter;
                                                   TableRelation=Magazine }
    { 15  ;   ;Volume No. Filter   ;Code20        ;TableRelation=Volume }
    { 16  ;   ;Line Status Filter  ;Option        ;FieldClass=FlowFilter;
                                                   OptionString=[Booking,Waiting List,Confirmed,Approved,Hold,Cancelled,Invoiced,Closed, ] }
    { 17  ;   ;Code                ;Code20        ;CaptionML=[ENU=Code;
                                                              THA=รหัส] }
    { 18  ;   ;Status              ;Text150        }
    { 19  ;   ;Salesperson Filter  ;Code10        ;FieldClass=FlowFilter;
                                                   TableRelation=Salesperson/Purchaser }
    { 20  ;   ;Ads. Type Filter    ;Code20        ;TableRelation="Ads. Type" }
  }
  KEYS
  {
    {    ;Issue No.                               ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      AdsBuffer@1000000000 : Record 50049;
      IssueNo@1000000003 : Record 50009;
      EntryNo@1000000001 : Integer;
      V1Linestatus@1000000002 : Text[150];

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   04.05.2007   KKE   New table for "Ads. Booking Overview Buffer" - Ads. Sales Module
    }
    END.
  }
}

OBJECT Table 50050 Ads. Billing Header
{
  OBJECT-PROPERTIES
  {
    Date=11/28/11;
    Time=[ 4:14:37 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               AdsItemSetup.GET;

               IF "No." = '' THEN BEGIN
                 AdsItemSetup.TESTFIELD("Billing Nos.");
                 NoSeriesMgt.InitSeries(AdsItemSetup."Billing Nos.",xRec."No. Series",WORKDATE,"No.","No. Series");
               END;

               "Billing Date" := WORKDATE;
             END;

    OnModify=BEGIN
               TESTFIELD(Status,Status::Open);
             END;

    OnDelete=BEGIN
               TESTFIELD(Status,Status::Open);

               BillingLine.RESET;
               BillingLine.LOCKTABLE;

               BillingLine.SETRANGE("Billing No.","No.");
               BillingLine.DELETEALL;
             END;

    LookupPageID=Page50068;
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20         }
    { 2   ;   ;Billing Date        ;Date           }
    { 4   ;   ;Bill-to Customer No.;Code20        ;TableRelation=Customer;
                                                   OnValidate=VAR
                                                                TempDocDim@1000 : TEMPORARY Record 357;
                                                              BEGIN
                                                                TESTFIELD(Status,Status::Open);

                                                                IF NOT Cust.GET("Bill-to Customer No.") THEN
                                                                  CLEAR(Cust);

                                                                "Bill-to Name" := Cust.Name;
                                                                "Bill-to Address" := Cust.Address;
                                                                "Bill-to Address 2" := Cust."Address 2";
                                                                "Bill-to Address 3" := Cust."Address 3";
                                                                "Bill-to City" := Cust.City;
                                                                "Bill-to Post Code" := Cust."Post Code";
                                                                "Bill-to County" := Cust.County;
                                                                "Bill-to Country Code" := Cust."Country/Region Code";
                                                                "Bill-to Contact" := Cust.Contact;
                                                              END;

                                                   CaptionML=[ENU=Bill-to Customer No.;
                                                              THA=เก็บเงินจากลูกค้าหมายเลข];
                                                   NotBlank=Yes }
    { 5   ;   ;Bill-to Name        ;Text50        ;CaptionML=[ENU=Bill-to Name;
                                                              THA=เก็บเงินที่ชื่อ] }
    { 6   ;   ;Bill-to Name 2      ;Text50        ;CaptionML=[ENU=Bill-to Name;
                                                              THA=เก็บเงินที่ชื่อ] }
    { 7   ;   ;Bill-to Address     ;Text50        ;CaptionML=[ENU=Bill-to Address;
                                                              THA=เก็บเงินที่ที่อยู่] }
    { 8   ;   ;Bill-to Address 2   ;Text50        ;CaptionML=[ENU=Bill-to Address 2;
                                                              THA=เรียกเก็บเงินที่ที่อยู่ 2] }
    { 9   ;   ;Bill-to Address 3   ;Text30        ;CaptionML=[ENU=Bill-to Address 3;
                                                              THA=เรียกเก็บเงินที่ที่อยู่ 3] }
    { 10  ;   ;Bill-to City        ;Text30        ;OnValidate=BEGIN
                                                                PostCodeCheck.ValidateCity(
                                                                  CurrFieldNo,DATABASE::"Ads. Billing Header",Rec.GETPOSITION,1,
                                                                  "Bill-to Name","Bill-to Name 2","Bill-to Contact","Bill-to Address","Bill-to Address 2",
                                                                  "Bill-to City","Bill-to Post Code","Bill-to County","Bill-to Country Code");
                                                              END;

                                                   OnLookup=BEGIN
                                                              PostCodeCheck.LookUpCity(
                                                                CurrFieldNo,DATABASE::"Ads. Billing Header",Rec.GETPOSITION,1,
                                                                "Bill-to Name","Bill-to Name 2","Bill-to Contact","Bill-to Address","Bill-to Address 2",
                                                                "Bill-to City","Bill-to Post Code","Bill-to County","Bill-to Country Code",TRUE);
                                                            END;

                                                   CaptionML=[ENU=Bill-to City;
                                                              THA=เก็บเงินที่เมือง] }
    { 11  ;   ;Bill-to Contact     ;Text50        ;CaptionML=[ENU=Bill-to Contact;
                                                              THA=ผู้ติดต่อในการเก็บเงิน] }
    { 12  ;   ;Bill-to Post Code   ;Code20        ;TableRelation="Post Code";
                                                   OnValidate=BEGIN
                                                                PostCodeCheck.ValidatePostCode(
                                                                  CurrFieldNo,DATABASE::"Ads. Billing Header",Rec.GETPOSITION,1,
                                                                  "Bill-to Name","Bill-to Name 2","Bill-to Contact","Bill-to Address","Bill-to Address 2",
                                                                  "Bill-to City","Bill-to Post Code","Bill-to County","Bill-to Country Code");
                                                              END;

                                                   OnLookup=BEGIN
                                                              PostCodeCheck.LookUpPostCode(
                                                                CurrFieldNo,DATABASE::"Ads. Billing Header",Rec.GETPOSITION,1,
                                                                "Bill-to Name","Bill-to Name 2","Bill-to Contact","Bill-to Address","Bill-to Address 2",
                                                                "Bill-to City","Bill-to Post Code","Bill-to County","Bill-to Country Code",TRUE);
                                                            END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Bill-to Post Code;
                                                              THA=เก็บเงินที่รหัสไปรษณีย์] }
    { 13  ;   ;Bill-to County      ;Text30        ;CaptionML=[ENU=Bill-to County;
                                                              THA=เก็บเงินที่เขต] }
    { 14  ;   ;Bill-to Country Code;Code10        ;TableRelation=Country/Region;
                                                   CaptionML=[ENU=Bill-to Country Code;
                                                              THA=เก็บเงินที่รหัสประเทศ] }
    { 15  ;   ;Expected Receipt Date;Date         ;CaptionML=[ENU=Expected Receipt Date;
                                                              THA=วันที่ลูกค้านัดรับเงิน] }
    { 16  ;   ;Due Date            ;Date           }
    { 20  ;   ;Status              ;Option        ;OptionString=Open,Release;
                                                   Editable=No }
    { 21  ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=No. Series;
                                                              THA=ชุดหมายเลข];
                                                   Editable=No }
    { 22  ;   ;Remark              ;Text100        }
    { 23  ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Sales Comment Line" WHERE (Document Type=CONST(Ads. Billing),
                                                                                                 No.=FIELD(No.)));
                                                   CaptionML=[ENU=Comment;
                                                              THA=ข้อคิดเห็น];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      AdsItemSetup@1000000001 : Record 50026;
      BillingHeader@1000000002 : Record 50050;
      BillingLine@1000000005 : Record 50051;
      Cust@1000000000 : Record 18;
      NoSeriesMgt@1000000003 : Codeunit 396;
      Text001@1000000004 : TextConst 'ENU=The Billing No. %1 already exists.;THA=ใบขอซื้อ %1 มีอยู่แล้ว';
      PostCodeCheck@1000000006 : Codeunit 28000;
      Text002@1000000007 : TextConst 'ENU=Do you want to reopen ads. billing %1?';
      Text003@1000000008 : TextConst 'ENU=Do you want to archived ads. billing %1?';
      Text004@1000000009 : TextConst 'ENU=Ads. Billing %1 has been archived.';

    PROCEDURE AssistEdit@1(OldBillingHeader@1000 : Record 50050) : Boolean;
    VAR
      BillingHeader2@1001 : Record 50050;
    BEGIN
      WITH BillingHeader DO BEGIN
        BillingHeader.COPY(Rec);
        AdsItemSetup.GET;
        AdsItemSetup.TESTFIELD("Billing Nos.");
        IF NoSeriesMgt.SelectSeries(AdsItemSetup."Billing Nos.",OldBillingHeader."No. Series","No. Series") THEN BEGIN
          NoSeriesMgt.SetSeries("No.");
          IF BillingHeader2.GET("No.") THEN
            ERROR(Text001,LOWERCASE("No."));
          Rec := BillingHeader;
          EXIT(TRUE);
        END;
      END;
    END;

    PROCEDURE SuggestBillingLines@1000000000(AdsBillingHeader@1000000000 : Record 50050);
    VAR
      CustLedgEntry@1000000001 : Record 21;
      AdsBillingLine@1000000002 : Record 50051;
      LineNo@1000000003 : Integer;
      FormGetInvoice@1000000004 : Page 50113;
    BEGIN
      TESTFIELD(Status,Status::Open);
      AdsItemSetup.GET;
      AdsBillingLine.RESET;
      AdsBillingLine.SETRANGE("Billing No.",AdsBillingHeader."No.");
      IF AdsBillingLine.FINDLAST THEN
        LineNo := AdsBillingLine."Line No." ;

      CustLedgEntry.RESET;
      CustLedgEntry.SETCURRENTKEY("Customer No.",Open,Positive,"Due Date","Currency Code");
      CustLedgEntry.FILTERGROUP(2);
      CustLedgEntry.SETRANGE("Customer No.",AdsBillingHeader."Bill-to Customer No.");
      CustLedgEntry.SETRANGE(Open,TRUE);
      IF AdsBillingHeader."Due Date" <> 0D THEN
        CustLedgEntry.SETFILTER("Due Date",'<=%1',AdsBillingHeader."Due Date");
      CustLedgEntry.FILTERGROUP(0);
      IF  CustLedgEntry.FIND('-') THEN BEGIN
        FormGetInvoice.LOOKUPMODE := TRUE;
        FormGetInvoice.SETTABLEVIEW(CustLedgEntry);
        FormGetInvoice.InitRequest(AdsBillingHeader."No.",LineNo);
        FormGetInvoice.RUNMODAL;
        CLEAR(FormGetInvoice);
      END;
      {
        REPEAT
          CustLedgEntry.CALCFIELDS("Remaining Amount","Remaining Amt. (LCY)");
          LineNo += 10000;
          AdsBillingLine.INIT;
          AdsBillingLine."Billing No." := AdsBillingHeader."No.";
          AdsBillingLine."Line No." := LineNo ;
          AdsBillingLine."Bill-to Customer No." := CustLedgEntry."Customer No.";
          AdsBillingLine."Cust. Ledger Entry No." := CustLedgEntry."Entry No.";
          IF NOT AdsBillingLine.CheckDupCustEntryNo THEN BEGIN
            AdsBillingLine.VALIDATE("Cust. Ledger Entry No.",CustLedgEntry."Entry No.");
            AdsBillingLine.INSERT;
          END;
        UNTIL CustLedgEntry.NEXT = 0 ;
      }
    END;

    PROCEDURE Reopen@1000000001();
    BEGIN
      IF NOT CONFIRM(STRSUBSTNO(Text002,"No."),FALSE) THEN
        EXIT;

      Status := Status::Open;
      MODIFY;
    END;

    PROCEDURE ArchivedAdsBilling@1000000002();
    VAR
      AdsBillingLine@1000000000 : Record 50051;
      ArchAdsBillingHdr@1000000001 : Record 50052;
      ArchAdsBillingLine@1000000002 : Record 50053;
    BEGIN
      IF NOT CONFIRM(STRSUBSTNO(Text003,"No."),FALSE) THEN
        EXIT;

      TESTFIELD(Status,Status::Release);

      ArchAdsBillingHdr.INIT;
      ArchAdsBillingHdr.TRANSFERFIELDS(Rec);
      ArchAdsBillingHdr.INSERT;

      AdsBillingLine.RESET;
      AdsBillingLine.SETRANGE("Billing No.","No.");
      IF AdsBillingLine.FIND('-') THEN
        REPEAT
          ArchAdsBillingLine.INIT;
          ArchAdsBillingLine.TRANSFERFIELDS(AdsBillingLine);
          ArchAdsBillingLine.INSERT;
        UNTIL AdsBillingLine.NEXT=0;

      DELETE;
      AdsBillingLine.DELETEALL;

      MESSAGE(Text004,"No.");
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   25.05.2007   KKE   New table for "Ads. Billing Note Header" - Ads. Sales Module
    }
    END.
  }
}

OBJECT Table 50051 Ads. Billing Line
{
  OBJECT-PROPERTIES
  {
    Date=08/20/07;
    Time=[ 2:04:15 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               AdsBillingHeader.GET("Billing No.");
               AdsBillingHeader.TESTFIELD(Status,AdsBillingHeader.Status::Open);
             END;

    OnModify=BEGIN
               AdsBillingHeader.GET("Billing No.");
               AdsBillingHeader.TESTFIELD(Status,AdsBillingHeader.Status::Open);
             END;

    OnDelete=BEGIN
               AdsBillingHeader.GET("Billing No.");
               AdsBillingHeader.TESTFIELD(Status,AdsBillingHeader.Status::Open);
             END;

  }
  FIELDS
  {
    { 1   ;   ;Billing No.         ;Code20        ;TableRelation="Ads. Billing Header" }
    { 2   ;   ;Line No.            ;Integer        }
    { 3   ;   ;Bill-to Customer No.;Code20        ;TableRelation=Customer;
                                                   CaptionML=[ENU=Bill-to Customer No.;
                                                              THA=เก็บเงินจากลูกค้าหมายเลข];
                                                   Editable=No }
    { 4   ;   ;Document Type       ;Option        ;CaptionML=[ENU=Document Type;
                                                              THA=ชนิดเอกสาร];
                                                   OptionCaptionML=[ENU=" ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund";
                                                                    THA=" ,การชำระเงิน,ใบส่งของ,ใบลดหนี้,บันทึกค่าธรรมเนียมทางการเงิน,จดหมายเตือนชำระเงิน,คืนเงิน"];
                                                   OptionString=[ ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund];
                                                   Editable=No }
    { 5   ;   ;Document No.        ;Code20        ;TableRelation=IF (Document Type=CONST(Invoice)) "Sales Invoice Header" WHERE (Bill-to Customer No.=FIELD(Bill-to Customer No.))
                                                                 ELSE IF (Document Type=CONST(Credit Memo)) "Sales Cr.Memo Header" WHERE (Bill-to Customer No.=FIELD(Bill-to Customer No.));
                                                   Editable=No }
    { 6   ;   ;Due Date            ;Date          ;Editable=No }
    { 7   ;   ;Document Date       ;Date           }
    { 8   ;   ;Cust. Ledger Entry No.;Integer     ;TableRelation="Cust. Ledger Entry" WHERE (Customer No.=FIELD(Bill-to Customer No.),
                                                                                             Open=CONST(Yes));
                                                   OnValidate=BEGIN
                                                                AdsBillingHeader.GET("Billing No.");
                                                                AdsBillingHeader.TESTFIELD(Status,AdsBillingHeader.Status::Open);

                                                                TempAdsBillingLine := Rec;

                                                                INIT;
                                                                "Billing No." := TempAdsBillingLine."Billing No.";
                                                                "Line No." := TempAdsBillingLine."Line No.";
                                                                "Cust. Ledger Entry No." := TempAdsBillingLine."Cust. Ledger Entry No.";
                                                                IF "Cust. Ledger Entry No." = 0 THEN
                                                                  EXIT;

                                                                IF CheckDupCustEntryNo THEN
                                                                  ERROR(Text001);
                                                                IF CustLedgEntry.GET("Cust. Ledger Entry No.") THEN BEGIN
                                                                  CustLedgEntry.CALCFIELDS(Amount,"Amount (LCY)","Remaining Amount","Remaining Amt. (LCY)");
                                                                  "Bill-to Customer No." := CustLedgEntry."Customer No.";
                                                                  "Document Type" := CustLedgEntry."Document Type";
                                                                  "Document No." := CustLedgEntry."Document No.";
                                                                  "Document Date" := CustLedgEntry."Document Date";
                                                                  "Due Date" := CustLedgEntry."Due Date";
                                                                  Description := CustLedgEntry.Description;
                                                                  "Salesperson Code" := CustLedgEntry."Salesperson Code";
                                                                  "Currency Code" := CustLedgEntry."Currency Code";
                                                                  "Original Amount" := CustLedgEntry.Amount;
                                                                  "Original Amount (LCY)" := CustLedgEntry."Amount (LCY)";
                                                                  "Remaining Amount" := CustLedgEntry."Remaining Amount";
                                                                  "Remaining Amt. (LCY)" := CustLedgEntry."Remaining Amt. (LCY)";
                                                                  "Billing Amount" := CustLedgEntry."Remaining Amount";

                                                                  CASE "Document Type" OF
                                                                    "Document Type"::Invoice:
                                                                      BEGIN
                                                                        IF SalesInvHeader.GET("Document No.") THEN BEGIN
                                                                          "Zone Area" := SalesInvHeader."Zone Area";
                                                                          "Sale Type" := SalesInvHeader."Ads. Sales Type";
                                                                        END;
                                                                      END;
                                                                    "Document Type"::"Credit Memo":
                                                                      BEGIN
                                                                        IF SalesCrMemoHeader.GET("Document No.") THEN BEGIN
                                                                          "Zone Area" := SalesCrMemoHeader."Zone Area";
                                                                          "Sale Type" := SalesCrMemoHeader."Ads. Sales Type";
                                                                        END;
                                                                      END;
                                                                  END;
                                                                END;
                                                              END;

                                                   TestTableRelation=No }
    { 9   ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   CaptionML=[ENU=Currency Code;
                                                              THA=รหัสสกุลเงิน];
                                                   Editable=No }
    { 10  ;   ;Salesperson Code    ;Code10        ;TableRelation=Salesperson/Purchaser }
    { 11  ;   ;Zone Area           ;Code20        ;TableRelation="Zone Area" }
    { 12  ;   ;Sale Type           ;Code10        ;TableRelation="General Master Setup".Code WHERE (Type=CONST(Customer Type)) }
    { 13  ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              THA=คำอธิบาย] }
    { 20  ;   ;Original Amount     ;Decimal       ;Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 21  ;   ;Original Amount (LCY);Decimal      ;Editable=No;
                                                   AutoFormatType=1 }
    { 22  ;   ;Remaining Amount    ;Decimal       ;CaptionML=[ENU=Remaining Amount;
                                                              THA=จำนวนที่เหลือ];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 23  ;   ;Remaining Amt. (LCY);Decimal       ;CaptionML=[ENU=Remaining Amt. (LCY);
                                                              THA=ยอดเงินที่เหลือ (LCY)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 24  ;   ;Billing Amount      ;Decimal       ;AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
  }
  KEYS
  {
    {    ;Billing No.,Line No.                    ;Clustered=Yes }
    {    ;Cust. Ledger Entry No.                   }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      AdsItemSetup@1000000003 : Record 50026;
      SalesInvHeader@1000000000 : Record 112;
      SalesCrMemoHeader@1000000001 : Record 114;
      CustLedgEntry@1000000002 : Record 21;
      Text001@1000000004 : TextConst 'ENU=System does not allow to insert duplicate cust. ledger entry no.';
      AdsBillingHeader@1000000007 : Record 50050;
      AdsBillingLine@1000000005 : Record 50051;
      TempAdsBillingLine@1000000006 : Record 50051;

    PROCEDURE GetCurrencyCode@1() : Code[10];
    BEGIN
      CASE "Document Type" OF
        "Document Type"::Invoice:
          BEGIN
            IF ("Document No." = SalesInvHeader."No.") THEN
              EXIT(SalesInvHeader."Currency Code")
            ELSE
              IF SalesInvHeader.GET("Document No.") THEN
                EXIT(SalesInvHeader."Currency Code")
              ELSE
                EXIT('');
          END;
        "Document Type"::"Credit Memo":
          BEGIN
            IF ("Document No." = SalesCrMemoHeader."No.") THEN
              EXIT(SalesCrMemoHeader."Currency Code")
            ELSE
              IF SalesCrMemoHeader.GET("Document No.") THEN
                EXIT(SalesCrMemoHeader."Currency Code")
              ELSE
                EXIT('');
          END;
      END;
    END;

    PROCEDURE CheckDupCustEntryNo@1000000000() : Boolean;
    BEGIN
      //When suggest line in same cust. ledger entry more than 1 time, system allow insert duplicate entry no.
      //but user have to check data by themself.
      AdsItemSetup.GET;
      IF NOT AdsItemSetup."Allow Duplicate Billing Line" THEN BEGIN
        AdsBillingLine.RESET;
        AdsBillingLine.SETCURRENTKEY("Cust. Ledger Entry No.");
        AdsBillingLine.SETRANGE("Cust. Ledger Entry No.","Cust. Ledger Entry No.");
      //  AdsBillingLine.SETFILTER("Line No.",'<>%1',"Line No.");
        IF AdsBillingLine.FIND('-') THEN
          EXIT(TRUE);
      END;
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   25.05.2007   KKE   New table for "Ads. Billing Note Header" - Ads. Sales Module
    }
    END.
  }
}

OBJECT Table 50052 Archived Ads. Billing Header
{
  OBJECT-PROPERTIES
  {
    Date=06/01/07;
    Time=[ 6:00:00 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    LookupPageID=Page50105;
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20         }
    { 2   ;   ;Billing Date        ;Date           }
    { 4   ;   ;Bill-to Customer No.;Code20        ;TableRelation=Customer;
                                                   OnValidate=VAR
                                                                TempDocDim@1000 : TEMPORARY Record 357;
                                                              BEGIN
                                                              END;

                                                   CaptionML=[ENU=Bill-to Customer No.;
                                                              THA=เก็บเงินจากลูกค้าหมายเลข];
                                                   NotBlank=Yes }
    { 5   ;   ;Bill-to Name        ;Text50        ;CaptionML=[ENU=Bill-to Name;
                                                              THA=เก็บเงินที่ชื่อ] }
    { 6   ;   ;Bill-to Name 2      ;Text50        ;CaptionML=[ENU=Bill-to Name;
                                                              THA=เก็บเงินที่ชื่อ] }
    { 7   ;   ;Bill-to Address     ;Text50        ;CaptionML=[ENU=Bill-to Address;
                                                              THA=เก็บเงินที่ที่อยู่] }
    { 8   ;   ;Bill-to Address 2   ;Text50        ;CaptionML=[ENU=Bill-to Address 2;
                                                              THA=เรียกเก็บเงินที่ที่อยู่ 2] }
    { 9   ;   ;Bill-to Address 3   ;Text30        ;CaptionML=[ENU=Bill-to Address 3;
                                                              THA=เรียกเก็บเงินที่ที่อยู่ 3] }
    { 10  ;   ;Bill-to City        ;Text30        ;CaptionML=[ENU=Bill-to City;
                                                              THA=เก็บเงินที่เมือง] }
    { 11  ;   ;Bill-to Contact     ;Text50        ;CaptionML=[ENU=Bill-to Contact;
                                                              THA=ผู้ติดต่อในการเก็บเงิน] }
    { 12  ;   ;Bill-to Post Code   ;Code20        ;TableRelation="Post Code";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Bill-to Post Code;
                                                              THA=เก็บเงินที่รหัสไปรษณีย์] }
    { 13  ;   ;Bill-to County      ;Text30        ;CaptionML=[ENU=Bill-to County;
                                                              THA=เก็บเงินที่เขต] }
    { 14  ;   ;Bill-to Country Code;Code10        ;TableRelation=Country/Region;
                                                   CaptionML=[ENU=Bill-to Country Code;
                                                              THA=เก็บเงินที่รหัสประเทศ] }
    { 15  ;   ;Expected Receipt Date;Date         ;CaptionML=[ENU=Expected Receipt Date;
                                                              THA=วันที่ลูกค้านัดรับเงิน] }
    { 16  ;   ;Due Date            ;Date           }
    { 20  ;   ;Status              ;Option        ;OptionString=Open,Release;
                                                   Editable=No }
    { 21  ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=No. Series;
                                                              THA=ชุดหมายเลข];
                                                   Editable=No }
    { 22  ;   ;Remark              ;Text100        }
    { 23  ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Sales Comment Line" WHERE (Document Type=CONST(Ads. Billing),
                                                                                                 No.=FIELD(No.)));
                                                   CaptionML=[ENU=Comment;
                                                              THA=ข้อคิดเห็น];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   01.06.2007   KKE   New table for "Archived Ads. Billing Header" - Ads. Sales Module
    }
    END.
  }
}

OBJECT Table 50053 Archived Ads. Billing Line
{
  OBJECT-PROPERTIES
  {
    Date=08/20/07;
    Time=[ 2:04:24 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
  }
  FIELDS
  {
    { 1   ;   ;Billing No.         ;Code20        ;TableRelation="Archived Ads. Billing Header" }
    { 2   ;   ;Line No.            ;Integer        }
    { 3   ;   ;Bill-to Customer No.;Code20        ;TableRelation=Customer;
                                                   CaptionML=[ENU=Bill-to Customer No.;
                                                              THA=เก็บเงินจากลูกค้าหมายเลข];
                                                   Editable=No }
    { 4   ;   ;Document Type       ;Option        ;CaptionML=[ENU=Document Type;
                                                              THA=ชนิดเอกสาร];
                                                   OptionCaptionML=[ENU=" ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund";
                                                                    THA=" ,การชำระเงิน,ใบส่งของ,ใบลดหนี้,บันทึกค่าธรรมเนียมทางการเงิน,จดหมายเตือนชำระเงิน,คืนเงิน"];
                                                   OptionString=[ ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund];
                                                   Editable=No }
    { 5   ;   ;Document No.        ;Code20        ;TableRelation=IF (Document Type=CONST(Invoice)) "Sales Invoice Header" WHERE (Bill-to Customer No.=FIELD(Bill-to Customer No.))
                                                                 ELSE IF (Document Type=CONST(Credit Memo)) "Sales Cr.Memo Header" WHERE (Bill-to Customer No.=FIELD(Bill-to Customer No.));
                                                   Editable=No }
    { 6   ;   ;Due Date            ;Date          ;Editable=No }
    { 7   ;   ;Document Date       ;Date           }
    { 8   ;   ;Cust. Ledger Entry No.;Integer     ;TableRelation="Cust. Ledger Entry" WHERE (Customer No.=FIELD(Bill-to Customer No.),
                                                                                             Open=CONST(Yes));
                                                   TestTableRelation=No }
    { 9   ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   CaptionML=[ENU=Currency Code;
                                                              THA=รหัสสกุลเงิน];
                                                   Editable=No }
    { 10  ;   ;Salesperson Code    ;Code10        ;TableRelation=Salesperson/Purchaser }
    { 11  ;   ;Zone Area           ;Code20        ;TableRelation="Zone Area" }
    { 12  ;   ;Sale Type           ;Code10        ;TableRelation="General Master Setup".Code WHERE (Type=CONST(Customer Type)) }
    { 13  ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              THA=คำอธิบาย] }
    { 20  ;   ;Original Amount     ;Decimal       ;Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 21  ;   ;Original Amount (LCY);Decimal      ;Editable=No;
                                                   AutoFormatType=1 }
    { 22  ;   ;Remaining Amount    ;Decimal       ;CaptionML=[ENU=Remaining Amount;
                                                              THA=จำนวนที่เหลือ];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 23  ;   ;Remaining Amt. (LCY);Decimal       ;CaptionML=[ENU=Remaining Amt. (LCY);
                                                              THA=ยอดเงินที่เหลือ (LCY)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 24  ;   ;Billing Amount      ;Decimal       ;AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
  }
  KEYS
  {
    {    ;Billing No.,Line No.                    ;Clustered=Yes }
    {    ;Cust. Ledger Entry No.                   }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    PROCEDURE GetCurrencyCode@1() : Code[10];
    VAR
      SalesInvHeader@1000 : Record 112;
      SalesCrMemoHeader@1000000000 : Record 114;
    BEGIN
      CASE "Document Type" OF
        "Document Type"::Invoice:
          BEGIN
            IF ("Document No." = SalesInvHeader."No.") THEN
              EXIT(SalesInvHeader."Currency Code")
            ELSE
              IF SalesInvHeader.GET("Document No.") THEN
                EXIT(SalesInvHeader."Currency Code")
              ELSE
                EXIT('');
          END;
        "Document Type"::"Credit Memo":
          BEGIN
            IF ("Document No." = SalesCrMemoHeader."No.") THEN
              EXIT(SalesCrMemoHeader."Currency Code")
            ELSE
              IF SalesCrMemoHeader.GET("Document No.") THEN
                EXIT(SalesCrMemoHeader."Currency Code")
              ELSE
                EXIT('');
          END;
      END;
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   01.06.2007   KKE   New table for "Archived Ads. Billing Header" - Ads. Sales Module
    }
    END.
  }
}

OBJECT Table 50054 Sales Tax Invoice/Rec. Header
{
  OBJECT-PROPERTIES
  {
    Date=12/22/11;
    Time=12:28:27 PM;
    Modified=Yes;
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    Permissions=TableData 113=m,
                TableData 115=m;
    DataCaptionFields=No.,Sell-to Customer Name;
    OnInsert=BEGIN
               SalesSetup.GET;

               IF "No." = '' THEN BEGIN
                 SalesSetup.TESTFIELD("Sales Tax Invoice Nos.");
                 NoSeriesMgt.InitSeries(SalesSetup."Sales Tax Invoice Nos.",xRec."No. Series","Posting Date","No.","No. Series");
               END;
             END;

    OnModify=BEGIN
               IF ("Sell-to Customer No." <> xRec."Sell-to Customer No.") OR
                  ("Bill-to Customer No." <> xRec."Bill-to Customer No.")
               THEN BEGIN
                 TESTFIELD("Issued Tax Invoice/Receipt",FALSE);
                 TESTFIELD("Cancel Tax Invoice",FALSE);
               END;
             END;

    OnDelete=BEGIN
               TESTFIELD("Issued Tax Invoice/Receipt",FALSE);
               TESTFIELD("Cancel Tax Invoice",FALSE);
               LOCKTABLE;

               SalesTaxInvLine.RESET;
               SalesTaxInvLine.LOCKTABLE;
               SalesTaxInvLine.SETRANGE("Document No.","No.");
               IF SalesTaxInvLine.FIND('-') THEN
                 REPEAT
                   SalesTaxInvLine.DELETE(TRUE);
                 UNTIL SalesTaxInvLine.NEXT=0;

               SalesCommentLine.SETRANGE("Document Type",SalesCommentLine."Document Type"::"Issued Tax Invoice");
               SalesCommentLine.SETRANGE("No.","No.");
               SalesCommentLine.DELETEALL;

               DimMgt.DeletePostedDocDim(DATABASE::"Sales Tax Invoice/Rec. Header","No.",0);
             END;

    OnRename=BEGIN
               TESTFIELD("Issued Tax Invoice/Receipt",FALSE);
               TESTFIELD("Cancel Tax Invoice",FALSE);
             END;

    CaptionML=ENU=Sales Tax Invoice/Rec. Header;
    LookupPageID=Page50108;
    DrillDownPageID=Page50108;
  }
  FIELDS
  {
    { 2   ;   ;Sell-to Customer No.;Code20        ;TableRelation=Customer;
                                                   OnValidate=BEGIN
                                                                TESTFIELD("Issued Tax Invoice/Receipt",FALSE);
                                                                TESTFIELD("Cancel Tax Invoice",FALSE);
                                                                IF ("Sell-to Customer No." <> xRec."Sell-to Customer No.") AND
                                                                   (xRec."Sell-to Customer No." <> '')
                                                                THEN BEGIN
                                                                  IF HideValidationDialog THEN
                                                                    Confirmed := TRUE
                                                                  ELSE
                                                                    Confirmed := CONFIRM(Text001,FALSE,FIELDCAPTION("Sell-to Customer No."));
                                                                  IF Confirmed THEN BEGIN
                                                                    SalesTaxInvLine.SETRANGE("Document No.","No.");
                                                                    IF "Sell-to Customer No." = '' THEN BEGIN
                                                                      IF SalesTaxInvLine.FIND('-') THEN
                                                                        ERROR(
                                                                          Text002,
                                                                          FIELDCAPTION("Sell-to Customer No."));
                                                                      DimMgt.DeletePostedDocDim(DATABASE::"Sales Tax Invoice/Rec. Header","No.",0);

                                                                      INIT;
                                                                      SalesSetup.GET;
                                                                      "No. Series" := xRec."No. Series";
                                                                      InitRecord;
                                                                      EXIT;
                                                                    END;
                                                                  END ELSE BEGIN
                                                                    Rec := xRec;
                                                                    EXIT;
                                                                  END;
                                                                END;

                                                                Cust.GET("Sell-to Customer No.");

                                                                Cust.TESTFIELD("Gen. Bus. Posting Group");
                                                                "Sell-to Customer Name" := Cust.Name;
                                                                "Sell-to Customer Name 2" := Cust."Name 2";
                                                                "Sell-to Name (Thai)" := COPYSTR(Cust."Name (Thai)",1,50);
                                                                "Sell-to Address (Thai)" := COPYSTR(Cust."Address (Thai)",1,50);
                                                                "Sell-to Address 3" := Cust."Address 3";
                                                                "Sell-to Address" := Cust.Address;
                                                                "Sell-to Address 2" := Cust."Address 2";
                                                                "Sell-to City" := Cust.City;
                                                                "Sell-to Post Code" := Cust."Post Code";
                                                                "Sell-to County" := Cust.County;
                                                                "Sell-to Country Code" := Cust."Country/Region Code";
                                                                "Sell-to Contact" := Cust.Contact;
                                                                "Gen. Bus. Posting Group" := Cust."Gen. Bus. Posting Group";
                                                                "VAT Bus. Posting Group" := Cust."VAT Bus. Posting Group";
                                                                "WHT Business Posting Group" := Cust."WHT Business Posting Group";
                                                                "Tax Area Code" := Cust."Tax Area Code";
                                                                "Tax Liable" := Cust."Tax Liable";
                                                                "VAT Registration No." := Cust."VAT Registration No.";
                                                                "Responsibility Center" := UserMgt.GetRespCenter(0,Cust."Responsibility Center");
                                                                VALIDATE("Location Code",UserMgt.GetLocation(0,Cust."Location Code","Responsibility Center"));

                                                                IF Cust."Bill-to Customer No." <> '' THEN
                                                                  VALIDATE("Bill-to Customer No.",Cust."Bill-to Customer No.")
                                                                ELSE
                                                                  VALIDATE("Bill-to Customer No.","Sell-to Customer No.");
                                                                VALIDATE("Ship-to Code",'');

                                                                IF (xRec."Sell-to Customer No." <> "Sell-to Customer No.") OR
                                                                   (xRec."Currency Code" <> "Currency Code") OR
                                                                   (xRec."Gen. Bus. Posting Group" <> "Gen. Bus. Posting Group") OR
                                                                   (xRec."VAT Bus. Posting Group" <> "VAT Bus. Posting Group")
                                                                THEN
                                                                  RecreateSalesLines(FIELDCAPTION("Sell-to Customer No."));
                                                              END;

                                                   CaptionML=[ENU=Sell-to Customer No.;
                                                              THA=ขายให้ลูกค้าหมายเลข] }
    { 3   ;   ;No.                 ;Code20        ;CaptionML=[ENU=No.;
                                                              THA=หมายเลข] }
    { 4   ;   ;Bill-to Customer No.;Code20        ;TableRelation=Customer;
                                                   OnValidate=BEGIN
                                                                TESTFIELD("Issued Tax Invoice/Receipt",FALSE);
                                                                TESTFIELD("Cancel Tax Invoice",FALSE);
                                                                IF (xRec."Bill-to Customer No." <> "Bill-to Customer No.") AND
                                                                   (xRec."Bill-to Customer No." <> '')
                                                                THEN BEGIN
                                                                  IF HideValidationDialog THEN
                                                                    Confirmed := TRUE
                                                                  ELSE
                                                                    Confirmed := CONFIRM(Text004,FALSE,FIELDCAPTION("Bill-to Customer No."));
                                                                  IF NOT Confirmed THEN BEGIN
                                                                    "Bill-to Customer No." := xRec."Bill-to Customer No.";
                                                                    IF "Customer Posting Group" <> '' THEN
                                                                      EXIT;
                                                                  END;
                                                                END;

                                                                Cust.GET("Bill-to Customer No.");
                                                                Cust.TESTFIELD("Customer Posting Group");

                                                                "Bill-to Name" := Cust.Name;
                                                                "Bill-to Name 2" := Cust."Name 2";
                                                                "Bill-to Address" := Cust.Address;
                                                                "Bill-to Address 2" := Cust."Address 2";
                                                                "Bill-to Name (Thai)" := Cust."Name (Thai)";
                                                                "Bill-to Address (Thai)" := Cust."Address (Thai)";
                                                                "Bill-to Address 3" := Cust."Address 3";
                                                                "Bill-to City" := Cust.City;
                                                                "Bill-to Post Code" := Cust."Post Code";
                                                                "Bill-to County" := Cust.County;
                                                                "Bill-to Country Code" := Cust."Country/Region Code";
                                                                "Bill-to Contact" := Cust.Contact;
                                                                "Payment Terms Code" := Cust."Payment Terms Code";
                                                                "Payment Method Code" := Cust."Payment Method Code";

                                                                "Gen. Bus. Posting Group" := Cust."Gen. Bus. Posting Group";
                                                                "VAT Bus. Posting Group" := Cust."VAT Bus. Posting Group";
                                                                "WHT Business Posting Group" := Cust."WHT Business Posting Group";
                                                                "Customer Posting Group" := Cust."Customer Posting Group";
                                                                "Currency Code" := Cust."Currency Code";
                                                                "Customer Price Group" := Cust."Customer Price Group";
                                                                "Prices Including VAT" := Cust."Prices Including VAT";
                                                                "Allow Line Disc." := Cust."Allow Line Disc.";
                                                                "Invoice Disc. Code" := Cust."Invoice Disc. Code";
                                                                "Customer Disc. Group" := Cust."Customer Disc. Group";
                                                                "Language Code" := Cust."Language Code";
                                                                "Salesperson Code" := Cust."Salesperson Code";
                                                                "VAT Registration No." := Cust."VAT Registration No.";

                                                                CreateDim(
                                                                  DATABASE::Customer,"Bill-to Customer No.",
                                                                  DATABASE::Job,"Job No.",
                                                                  DATABASE::"Salesperson/Purchaser","Salesperson Code",
                                                                  DATABASE::Campaign,"Campaign No.",
                                                                  DATABASE::"Responsibility Center","Responsibility Center",
                                                                  DATABASE::"Customer Template",'');

                                                                VALIDATE("Payment Terms Code");
                                                                VALIDATE("Payment Method Code");
                                                                VALIDATE("Currency Code");

                                                                IF (xRec."Sell-to Customer No." = "Sell-to Customer No.") AND
                                                                   (xRec."Bill-to Customer No." <> "Bill-to Customer No.")
                                                                THEN
                                                                  RecreateSalesLines(FIELDCAPTION("Bill-to Customer No."));
                                                              END;

                                                   CaptionML=[ENU=Bill-to Customer No.;
                                                              THA=เก็บเงินจากลูกค้าหมายเลข];
                                                   NotBlank=Yes }
    { 5   ;   ;Bill-to Name        ;Text50        ;CaptionML=[ENU=Bill-to Name;
                                                              THA=เก็บเงินที่ชื่อ] }
    { 6   ;   ;Bill-to Name 2      ;Text50        ;CaptionML=[ENU=Bill-to Name 2;
                                                              THA=เก็บเงินที่ชื่อ 2] }
    { 7   ;   ;Bill-to Address     ;Text50        ;CaptionML=[ENU=Bill-to Address;
                                                              THA=เก็บเงินที่ที่อยู่] }
    { 8   ;   ;Bill-to Address 2   ;Text50        ;CaptionML=[ENU=Bill-to Address 2;
                                                              THA=เรียกเก็บเงินที่ที่อยู่ 2] }
    { 9   ;   ;Bill-to City        ;Text30        ;CaptionML=[ENU=Bill-to City;
                                                              THA=เก็บเงินที่เมือง] }
    { 10  ;   ;Bill-to Contact     ;Text50        ;CaptionML=[ENU=Bill-to Contact;
                                                              THA=ผู้ติดต่อในการเก็บเงิน] }
    { 11  ;   ;Your Reference      ;Text30        ;CaptionML=[ENU=Your Reference;
                                                              THA=ข้อมูลอ้างอิงของคุณ] }
    { 12  ;   ;Ship-to Code        ;Code10        ;TableRelation="Ship-to Address".Code WHERE (Customer No.=FIELD(Sell-to Customer No.));
                                                   CaptionML=[ENU=Ship-to Code;
                                                              THA=รหัสปลายทาง] }
    { 13  ;   ;Ship-to Name        ;Text50        ;CaptionML=[ENU=Ship-to Name;
                                                              THA=จัดส่งที่ชื่อ] }
    { 14  ;   ;Ship-to Name 2      ;Text50        ;CaptionML=[ENU=Ship-to Name 2;
                                                              THA=จัดส่งที่ชื่อ 2] }
    { 15  ;   ;Ship-to Address     ;Text50        ;CaptionML=[ENU=Ship-to Address;
                                                              THA=จัดส่งที่ที่อยู่] }
    { 16  ;   ;Ship-to Address 2   ;Text50        ;CaptionML=[ENU=Ship-to Address 2;
                                                              THA=จัดส่งไปยังที่อยู่ 2] }
    { 17  ;   ;Ship-to City        ;Text30        ;CaptionML=[ENU=Ship-to City;
                                                              THA=จัดส่งที่เมือง] }
    { 18  ;   ;Ship-to Contact     ;Text50        ;CaptionML=[ENU=Ship-to Contact;
                                                              THA=ผู้ติดต่อในการจัดส่ง] }
    { 19  ;   ;Order Date          ;Date          ;CaptionML=[ENU=Order Date;
                                                              THA=วันที่ในใบสั่ง] }
    { 20  ;   ;Posting Date        ;Date          ;CaptionML=[ENU=Posting Date;
                                                              THA=วันที่ลงรายการบัญชี] }
    { 21  ;   ;Shipment Date       ;Date          ;CaptionML=[ENU=Shipment Date;
                                                              THA=วันที่จัดส่ง] }
    { 22  ;   ;Posting Description ;Text50        ;CaptionML=[ENU=Posting Description;
                                                              THA=คำอธิบายการลงรายการบัญชี] }
    { 23  ;   ;Payment Terms Code  ;Code10        ;TableRelation="Payment Terms";
                                                   CaptionML=[ENU=Payment Terms Code;
                                                              THA=รหัสเงื่อนไขการชำระเงิน] }
    { 24  ;   ;Due Date            ;Date          ;CaptionML=[ENU=Due Date;
                                                              THA=วันที่ครบกำหนด] }
    { 25  ;   ;Payment Discount %  ;Decimal       ;CaptionML=[ENU=Payment Discount %;
                                                              THA=% ส่วนลดในการชำระเงิน];
                                                   DecimalPlaces=0:5 }
    { 26  ;   ;Pmt. Discount Date  ;Date          ;CaptionML=[ENU=Pmt. Discount Date;
                                                              THA=วันที่ให้ส่วนลดในการชำระเงิน] }
    { 27  ;   ;Shipment Method Code;Code10        ;TableRelation="Shipment Method";
                                                   CaptionML=[ENU=Shipment Method Code;
                                                              THA=รหัสวิธีการจัดส่ง] }
    { 28  ;   ;Location Code       ;Code10        ;TableRelation=Location WHERE (Use As In-Transit=CONST(No));
                                                   CaptionML=[ENU=Location Code;
                                                              THA=รหัสที่ตั้ง] }
    { 29  ;   ;Shortcut Dimension 1 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionML=[ENU=Shortcut Dimension 1 Code;
                                                              THA=รหัสมิติทางลัดหมายเลข 1];
                                                   CaptionClass='1,2,1' }
    { 30  ;   ;Shortcut Dimension 2 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   CaptionML=[ENU=Shortcut Dimension 2 Code;
                                                              THA=รหัสมิติทางลัดหมายเลข 2];
                                                   CaptionClass='1,2,2' }
    { 31  ;   ;Customer Posting Group;Code10      ;TableRelation="Customer Posting Group";
                                                   CaptionML=[ENU=Customer Posting Group;
                                                              THA=กลุ่มการลงรายการบัญชีลูกค้า];
                                                   Editable=No }
    { 32  ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   CaptionML=[ENU=Currency Code;
                                                              THA=รหัสสกุลเงิน];
                                                   Editable=No }
    { 33  ;   ;Currency Factor     ;Decimal       ;CaptionML=[ENU=Currency Factor;
                                                              THA=ปัจจัยด้านสกุลเงิน];
                                                   DecimalPlaces=0:15;
                                                   MinValue=0 }
    { 34  ;   ;Customer Price Group;Code10        ;TableRelation="Customer Price Group";
                                                   CaptionML=[ENU=Customer Price Group;
                                                              THA=กลุ่มราคาของลูกค้า] }
    { 35  ;   ;Prices Including VAT;Boolean       ;CaptionML=[ENU=Prices Including VAT;
                                                              THA=ราคารวม VAT] }
    { 37  ;   ;Invoice Disc. Code  ;Code20        ;CaptionML=[ENU=Invoice Disc. Code;
                                                              THA=รหัสส่วนลดในใบส่งของ] }
    { 40  ;   ;Customer Disc. Group;Code10        ;TableRelation="Customer Discount Group";
                                                   CaptionML=[ENU=Customer Disc. Group;
                                                              THA=กลุ่มส่วนลดสำหรับลูกค้า] }
    { 41  ;   ;Language Code       ;Code10        ;TableRelation=Language;
                                                   CaptionML=[ENU=Language Code;
                                                              THA=รหัสภาษา] }
    { 43  ;   ;Salesperson Code    ;Code10        ;TableRelation=Salesperson/Purchaser;
                                                   CaptionML=[ENU=Salesperson Code;
                                                              THA=รหัสพนักงานขาย] }
    { 44  ;   ;Order No.           ;Code20        ;CaptionML=[ENU=Order No.;
                                                              THA=หมายเลขใบสั่ง] }
    { 46  ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Sales Comment Line" WHERE (Document Type=CONST(Issued Tax Invoice),
                                                                                                 No.=FIELD(No.)));
                                                   CaptionML=[ENU=Comment;
                                                              THA=ข้อคิดเห็น];
                                                   Editable=No }
    { 47  ;   ;No. Printed         ;Integer       ;CaptionML=[ENU=No. Printed;
                                                              THA=หมายเลขที่พิมพ์];
                                                   Editable=No }
    { 51  ;   ;On Hold             ;Code3         ;CaptionML=[ENU=On Hold;
                                                              THA=คงค้าง] }
    { 52  ;   ;Applies-to Doc. Type;Option        ;CaptionML=[ENU=Applies-to Doc. Type;
                                                              THA=ใช้กับชนิดเอกสาร];
                                                   OptionCaptionML=[ENU=" ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund";
                                                                    THA=" ,การชำระเงิน,ใบส่งของ,ใบลดหนี้,บันทึกค่าธรรมเนียมทางการเงิน,จดหมายเตือนชำระเงิน,คืนเงิน"];
                                                   OptionString=[ ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund] }
    { 53  ;   ;Applies-to Doc. No. ;Code20        ;CaptionML=[ENU=Applies-to Doc. No.;
                                                              THA=ใช้กับหมายเลขเอกสาร] }
    { 55  ;   ;Bal. Account No.    ;Code20        ;TableRelation=IF (Bal. Account Type=CONST(G/L Account)) "G/L Account"
                                                                 ELSE IF (Bal. Account Type=CONST(Bank Account)) "Bank Account";
                                                   CaptionML=[ENU=Bal. Account No.;
                                                              THA=หมายเลขบัญชีดุล] }
    { 56  ;   ;Job No.             ;Code20        ;TableRelation=Job;
                                                   CaptionML=[ENU=Job No.;
                                                              THA=หมายเลขงาน] }
    { 60  ;   ;Amount              ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Sales Tax Invoice/Rec. Line".Amount WHERE (Document No.=FIELD(No.)));
                                                   CaptionML=[ENU=Amount;
                                                              THA=จำนวน];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 61  ;   ;Amount Including VAT;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Sales Tax Invoice/Rec. Line"."Amount Including VAT" WHERE (Document No.=FIELD(No.)));
                                                   CaptionML=[ENU=Amount Including VAT;
                                                              THA=ยอดเงินรวม VAT];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 70  ;   ;VAT Registration No.;Text20        ;CaptionML=[ENU=VAT Registration No.;
                                                              THA=หมายเลขการลงทะเบียน VAT] }
    { 73  ;   ;Reason Code         ;Code10        ;TableRelation="Reason Code";
                                                   CaptionML=[ENU=Reason Code;
                                                              THA=รหัสเหตุผล] }
    { 74  ;   ;Gen. Bus. Posting Group;Code10     ;TableRelation="Gen. Business Posting Group";
                                                   CaptionML=[ENU=Gen. Bus. Posting Group;
                                                              THA=กลุ่มการลงรายการบัญชีธุรกิจทั่วไป] }
    { 75  ;   ;EU 3-Party Trade    ;Boolean       ;CaptionML=[ENU=EU 3-Party Trade;
                                                              THA=การค้า 3 ฝ่ายกับ EU] }
    { 76  ;   ;Transaction Type    ;Code10        ;TableRelation="Transaction Type";
                                                   CaptionML=[ENU=Transaction Type;
                                                              THA=ชนิดธุรกรรม] }
    { 77  ;   ;Transport Method    ;Code10        ;TableRelation="Transport Method";
                                                   CaptionML=[ENU=Transport Method;
                                                              THA=วิธีการขนส่ง] }
    { 78  ;   ;VAT Country Code    ;Code10        ;TableRelation=Country/Region;
                                                   CaptionML=[ENU=VAT Country Code;
                                                              THA=รหัสประเทศที่ใช้ VAT] }
    { 79  ;   ;Sell-to Customer Name;Text50       ;CaptionML=[ENU=Sell-to Customer Name;
                                                              THA=ขายให้ลูกค้าชื่อ] }
    { 80  ;   ;Sell-to Customer Name 2;Text50     ;CaptionML=[ENU=Sell-to Customer Name 2;
                                                              THA=ขายให้ลูกค้าชื่อ 2] }
    { 81  ;   ;Sell-to Address     ;Text50        ;CaptionML=[ENU=Sell-to Address;
                                                              THA=ขายไปที่ที่อยู่] }
    { 82  ;   ;Sell-to Address 2   ;Text50        ;CaptionML=[ENU=Sell-to Address 2;
                                                              THA=ขายไปที่ที่อยู่ 2] }
    { 83  ;   ;Sell-to City        ;Text30        ;CaptionML=[ENU=Sell-to City;
                                                              THA=ขายไปที่เมือง] }
    { 84  ;   ;Sell-to Contact     ;Text50        ;CaptionML=[ENU=Sell-to Contact;
                                                              THA=ผู้ติดต่อในการขาย] }
    { 85  ;   ;Bill-to Post Code   ;Code20        ;TableRelation="Post Code";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Bill-to Post Code;
                                                              THA=เก็บเงินที่รหัสไปรษณีย์] }
    { 86  ;   ;Bill-to County      ;Text30        ;CaptionML=[ENU=Bill-to County;
                                                              THA=เก็บเงินที่เขต] }
    { 87  ;   ;Bill-to Country Code;Code10        ;TableRelation=Country/Region;
                                                   CaptionML=[ENU=Bill-to Country Code;
                                                              THA=เก็บเงินที่รหัสประเทศ] }
    { 88  ;   ;Sell-to Post Code   ;Code20        ;TableRelation="Post Code";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Sell-to Post Code;
                                                              THA=ขายไปที่รหัสไปรษณีย์] }
    { 89  ;   ;Sell-to County      ;Text30        ;CaptionML=[ENU=Sell-to County;
                                                              THA=ขายไปที่เขต] }
    { 90  ;   ;Sell-to Country Code;Code10        ;TableRelation=Country/Region;
                                                   CaptionML=[ENU=Sell-to Country Code;
                                                              THA=ขายไปที่รหัสประเทศ] }
    { 91  ;   ;Ship-to Post Code   ;Code20        ;TableRelation="Post Code";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Ship-to Post Code;
                                                              THA=จัดส่งที่รหัสไปรษณีย์] }
    { 92  ;   ;Ship-to County      ;Text30        ;CaptionML=[ENU=Ship-to County;
                                                              THA=จัดส่งที่เขต] }
    { 93  ;   ;Ship-to Country Code;Code10        ;TableRelation=Country/Region;
                                                   CaptionML=[ENU=Ship-to Country Code;
                                                              THA=จัดส่งที่รหัสประเทศ] }
    { 94  ;   ;Bal. Account Type   ;Option        ;CaptionML=[ENU=Bal. Account Type;
                                                              THA=ประเภทบัญชีดุล];
                                                   OptionCaptionML=[ENU=G/L Account,Bank Account;
                                                                    THA=บัญชี G/L,บัญชีธนาคาร];
                                                   OptionString=G/L Account,Bank Account }
    { 97  ;   ;Exit Point          ;Code10        ;TableRelation="Entry/Exit Point";
                                                   CaptionML=[ENU=Exit Point;
                                                              THA=จุดจัดส่งสินค้า] }
    { 98  ;   ;Correction          ;Boolean       ;CaptionML=[ENU=Correction;
                                                              THA=การแก้ไข] }
    { 99  ;   ;Document Date       ;Date          ;CaptionML=[ENU=Document Date;
                                                              THA=วันที่ในเอกสาร] }
    { 100 ;   ;External Document No.;Code20       ;CaptionML=[ENU=External Document No.;
                                                              THA=หมายเลขเอกสารภายนอก] }
    { 101 ;   ;Area                ;Code10        ;TableRelation=Area;
                                                   CaptionML=[ENU=Area;
                                                              THA=พื้นที่] }
    { 102 ;   ;Transaction Specification;Code10   ;TableRelation="Transaction Specification";
                                                   CaptionML=[ENU=Transaction Specification;
                                                              THA=ข้อมูลจำเพาะเกี่ยวกับธุรกรรม] }
    { 104 ;   ;Payment Method Code ;Code10        ;TableRelation="Payment Method";
                                                   CaptionML=[ENU=Payment Method Code;
                                                              THA=รหัสวิธีการชำระเงิน] }
    { 105 ;   ;Shipping Agent Code ;Code10        ;TableRelation="Shipping Agent";
                                                   CaptionML=[ENU=Shipping Agent Code;
                                                              THA=รหัสของบริษัทตัวแทนการจัดส่ง] }
    { 106 ;   ;Package Tracking No.;Text30        ;CaptionML=[ENU=Package Tracking No.;
                                                              THA=หมายเลขการติดตามบรรจุภัณฑ์] }
    { 107 ;   ;Pre-Assigned No. Series;Code10     ;TableRelation="No. Series";
                                                   CaptionML=[ENU=Pre-Assigned No. Series;
                                                              THA=ชุดหมายเลขที่กำหนดล่วงหน้า] }
    { 108 ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=No. Series;
                                                              THA=ชุดหมายเลข];
                                                   Editable=No }
    { 110 ;   ;Order No. Series    ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=Order No. Series;
                                                              THA=ชุดหมายเลขใบสั่ง] }
    { 111 ;   ;Pre-Assigned No.    ;Code20        ;CaptionML=[ENU=Pre-Assigned No.;
                                                              THA=หมายเลขที่กำหนดล่วงหน้า] }
    { 112 ;   ;User ID             ;Code20        ;TableRelation=User;
                                                   OnLookup=VAR
                                                              LoginMgt@1000 : Codeunit 418;
                                                            BEGIN
                                                            END;

                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=User ID;
                                                              THA=ID ผู้ใช้] }
    { 113 ;   ;Source Code         ;Code10        ;TableRelation="Source Code";
                                                   CaptionML=[ENU=Source Code;
                                                              THA=รหัสแหล่งที่มา] }
    { 114 ;   ;Tax Area Code       ;Code20        ;TableRelation="Tax Area";
                                                   CaptionML=[ENU=Tax Area Code;
                                                              THA=รหัสพื้นที่จัดเก็บภาษี] }
    { 115 ;   ;Tax Liable          ;Boolean       ;CaptionML=[ENU=Tax Liable;
                                                              THA=ภาษีค้างจ่าย] }
    { 116 ;   ;VAT Bus. Posting Group;Code10      ;TableRelation="VAT Business Posting Group";
                                                   CaptionML=[ENU=VAT Bus. Posting Group;
                                                              THA=กลุ่มการลงรายการบัญชีธุรกิจที่ต้องเสีย VAT] }
    { 119 ;   ;VAT Base Discount % ;Decimal       ;CaptionML=[ENU=VAT Base Discount %;
                                                              THA=% ส่วนลดตามจำนวน VAT];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   MaxValue=100 }
    { 5050;   ;Campaign No.        ;Code20        ;TableRelation=Campaign;
                                                   CaptionML=[ENU=Campaign No.;
                                                              THA="หมายเลขแคมเปญ "] }
    { 5052;   ;Sell-to Contact No. ;Code20        ;TableRelation=Contact;
                                                   CaptionML=[ENU=Sell-to Contact No.;
                                                              THA=หมายเลขผู้ติดต่อในการขาย] }
    { 5053;   ;Bill-to Contact No. ;Code20        ;TableRelation=Contact;
                                                   CaptionML=[ENU=Bill-to Contact No.;
                                                              THA=หมายเลขผู้ติดต่อในการเก็บเงิน] }
    { 5700;   ;Responsibility Center;Code10       ;TableRelation="Responsibility Center";
                                                   CaptionML=[ENU=Responsibility Center;
                                                              THA=ศูนย์ความรับผิดชอบ] }
    { 5900;   ;Service Mgt. Document;Boolean      ;CaptionML=[ENU=Service Mgt. Document;
                                                              THA=เอกสารการจัดการบริการ] }
    { 7001;   ;Allow Line Disc.    ;Boolean       ;CaptionML=[ENU=Allow Line Disc.;
                                                              THA=ใช้ส่วนลดในบรรทัดได้] }
    { 7200;   ;Get Shipment Used   ;Boolean       ;CaptionML=[ENU=Get Shipment Used;
                                                              THA=การจัดส่งที่ใช้] }
    { 17110;  ;S/T Type            ;Option        ;CaptionML=[ENU=S/T Type;
                                                              THA=ชนิด S/T];
                                                   OptionCaptionML=[ENU=" ,Annual,Confirmation";
                                                                    THA=" ,รายปี,การยืนยัน"];
                                                   OptionString=[ ,Annual,Confirmation] }
    { 17111;  ;S/T Expiry Date     ;Date          ;CaptionML=[ENU=S/T Expiry Date;
                                                              THA=วันที่หมดอายุ S/T] }
    { 28040;  ;WHT Business Posting Group;Code10  ;TableRelation="WHT Business Posting Group";
                                                   CaptionML=[ENU=WHT Business Posting Group;
                                                              THA=กลุ่มการลงรายการบัญชีธุรกิจ WHT] }
    { 50001;  ;Sell-to Name (Thai) ;Text50        ;CaptionML=[ENU=Sell-to Name (Thai);
                                                              THA=ขายให้ลูกค้าชื่อ (ไทย)];
                                                   Description=Reduce Size 120->50 }
    { 50002;  ;Sell-to Address (Thai);Text50      ;CaptionML=[ENU=Sell-to Address (Thai);
                                                              THA=ขายไปที่ที่อยู่ (ไทย)];
                                                   Description=Reduce Size 200->50 }
    { 50003;  ;Sell-to Address 3   ;Text30        ;CaptionML=[ENU=Sell-to Address 3;
                                                              THA=ขายไปที่ที่อยู่ 3] }
    { 50004;  ;Bill-to Name (Thai) ;Text120       ;CaptionML=[ENU=Bill-to Name (Thai);
                                                              THA=เก็บเงินที่ชื่อ (ไทย)] }
    { 50005;  ;Bill-to Address (Thai);Text200     ;CaptionML=[ENU=Bill-to Address (Thai);
                                                              THA=เรียกเก็บเงินที่ที่อยู่ (ไทย)] }
    { 50006;  ;Bill-to Address 3   ;Text30        ;CaptionML=[ENU=Bill-to Address 3;
                                                              THA=เรียกเก็บเงินที่ที่อยู่ 3] }
    { 50007;  ;Ship-to Name (Thai) ;Text120       ;CaptionML=[ENU=Ship-to Name (Thai);
                                                              THA=จัดส่งที่ชื่อ (ไทย)] }
    { 50008;  ;Ship-to Address (Thai);Text200     ;CaptionML=[ENU=Ship-to Address (Thai);
                                                              THA=จัดส่งไปยังที่อยู่ (ไทย)] }
    { 50009;  ;Ship-to Address 3   ;Text30        ;CaptionML=[ENU=Ship-to Address 3;
                                                              THA=จัดส่งไปยังที่อยู่ 3] }
    { 50050;  ;Invoice Description ;Text100        }
    { 50051;  ;Issued Tax Invoice/Receipt;Boolean ;Editable=No }
    { 50052;  ;Issued Tax Invoice/Receipt No.;Code20;
                                                   Editable=No }
    { 50053;  ;Issued Date / Time  ;DateTime      ;Editable=No }
    { 50054;  ;Issued by           ;Code20        ;Editable=No }
    { 50055;  ;Cancel Tax Invoice  ;Boolean       ;Editable=No }
    { 50056;  ;Cancelled Date / Time;DateTime     ;Editable=No }
    { 50057;  ;Cancelled by        ;Code20        ;Editable=No }
    { 50058;  ;Prepaid WHT         ;Decimal       ;AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 99008509;;Date Sent          ;Date          ;CaptionML=[ENU=Date Sent;
                                                              THA=วันที่ส่ง] }
    { 99008510;;Time Sent          ;Time          ;CaptionML=[ENU=Time Sent;
                                                              THA=เวลาที่ส่ง] }
    { 99008516;;BizTalk Sales Invoice;Boolean     ;CaptionML=[ENU=BizTalk Sales Invoice;
                                                              THA=ใบส่งของการขาย BizTalk] }
    { 99008519;;Customer Order No. ;Code20        ;CaptionML=[ENU=Customer Order No.;
                                                              THA=หมายเลขใบสั่งของลูกค้า] }
    { 99008521;;BizTalk Document Sent;Boolean     ;CaptionML=[ENU=BizTalk Document Sent;
                                                              THA=ส่งเอกสาร BizTalk] }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
    {    ;Issued Tax Invoice/Receipt No.           }
    {    ;Cancel Tax Invoice,Issued Tax Invoice/Receipt No. }
    {    ;Service Mgt. Document                    }
    {    ;Sell-to Customer No.,External Document No. }
    {    ;Sell-to Customer No.,Order Date          }
    {    ;Sell-to Customer No.,No.                 }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      SalesTaxInvHeader@1000000000 : Record 50054;
      SalesTaxInvLine@1000000005 : Record 50055;
      SalesSetup@1000000001 : Record 311;
      Cust@1000000015 : Record 18;
      SalesCommentLine@1000000003 : Record 44;
      DimMgt@1000000004 : Codeunit 408;
      UserMgt@1000000010 : Codeunit 5700;
      NoSeriesMgt@1000000002 : Codeunit 396;
      HideValidationDialog@1000000006 : Boolean;
      Confirmed@1000000007 : Boolean;
      Text001@1000000009 : TextConst 'ENU=Do you want to change %1?;THA=คุณต้องการเปลี่ยน %1 หรือ?';
      Text002@1000000008 : TextConst 'ENU=You cannot reset %1 because the document still has one or more lines.;THA=คุณไม่สามารถรีเซ็ต %1 เนื่องจากเอกสารยังมีบรรทัดอยู่หนึ่งหรือหลายบรรทัด';
      Text003@1000000012 : TextConst 'ENU=If you change %1, the existing sales tax invoice lines will be deleted.\\;THA=ถ้าคุณเปลี่ยน %1, บรรทัดการขายที่มีอยู่จะถูกลบออก และจะมีการสร้างบรรทัดการขายใหม่โดยใช้รายละเอียดใหม่ในหัวข้อ\\';
      Text004@1000000013 : TextConst 'ENU=Do you want to change %1?;THA=คุณต้องการเปลี่ยน %1 หรือ?';
      Text005@1000000014 : TextConst 'ENU=You must delete the existing sales tax invoice lines before you can change %1.;THA=คุณต้องลบบรรทัดการขายที่มีอยู่ก่อน จึงจะสามารถเปลี่ยน %1 ได้';
      Text006@1000000016 : TextConst 'ENU=Do you want to cancel tax invoice?';
      Text007@1000000011 : TextConst 'ENU=The sales tax invoice/receipt have been cancelled!';

    PROCEDURE AssistEdit@1(OldTaxInvHeader@1000 : Record 50054) : Boolean;
    BEGIN
      WITH SalesTaxInvHeader DO BEGIN
        SalesTaxInvHeader := Rec;
        SalesSetup.GET;
        SalesSetup.TESTFIELD("Sales Tax Invoice Nos.");
        IF NoSeriesMgt.SelectSeries(SalesSetup."Sales Tax Invoice Nos.",OldTaxInvHeader."No. Series","No. Series") THEN BEGIN
          SalesSetup.GET;
          NoSeriesMgt.SetSeries("No.");
          Rec := SalesTaxInvHeader;
          EXIT(TRUE);
        END;
      END;
    END;

    PROCEDURE InitRecord@10();
    BEGIN
      "Shipment Date" := WORKDATE;
      "Order Date":= WORKDATE;
      "Posting Date" := WORKDATE;
      "Document Date" := WORKDATE;

      VALIDATE("Location Code",UserMgt.GetLocation(0,Cust."Location Code","Responsibility Center"));

      "Posting Description" := 'Sales Tax Invoice ' + "No.";
    END;

    PROCEDURE RecreateSalesLines@4(ChangedFieldName@1000 : Text[100]);
    VAR
      SalesTaxInvLineTmp@1001 : TEMPORARY Record 50055;
      ItemChargeAssgntSales@1004 : Record 5809;
      TempItemChargeAssgntSales@1003 : TEMPORARY Record 5809;
      TempInteger@1006 : TEMPORARY Record 2000000026;
      ExtendedTextAdded@1002 : Boolean;
    BEGIN
      IF SalesLinesExist THEN BEGIN
        IF HideValidationDialog THEN
          Confirmed := TRUE
        ELSE
          Confirmed :=
            CONFIRM(
              Text003 +
              Text004,FALSE,ChangedFieldName);
        {===
        IF Confirmed THEN BEGIN
          SalesTaxInvLine.LOCKTABLE;
          MODIFY;

          SalesTaxInvLine.RESET;
          SalesTaxInvLine.SETRANGE("Document No.","No.");
          IF SalesTaxInvLine.FIND('-') THEN BEGIN
            REPEAT
              SalesTaxInvLineTmp := SalesTaxInvLine;
              SalesTaxInvLineTmp.INSERT;
            UNTIL SalesTaxInvLine.NEXT = 0;

            SalesTaxInvLine.DELETEALL(TRUE);
            SalesTaxInvLine.INIT;
            SalesTaxInvLine."Line No." := 0;
            SalesTaxInvLineTmp.FIND('-');
            REPEAT
              SalesTaxInvLine.INIT;
              SalesTaxInvLine."Line No." := SalesTaxInvLine."Line No." + 10000;
              SalesTaxInvLine.VALIDATE(Type,SalesTaxInvLineTmp.Type);
              SalesTaxInvLine.VALIDATE("No.",SalesTaxInvLineTmp."No.");
              SalesTaxInvLine.VALIDATE(Description,SalesTaxInvLineTmp.Description);
              SalesTaxInvLine.VALIDATE("Description 2",SalesTaxInvLineTmp."Description 2");

              SalesTaxInvLine.VALIDATE("Gen. Prod. Posting Group",SalesTaxInvLineTmp."Gen. Prod. Posting Group");
              SalesTaxInvLine.VALIDATE("VAT Prod. Posting Group",SalesTaxInvLineTmp."VAT Prod. Posting Group");
              SalesTaxInvLine.VALIDATE("WHT Product Posting Group",SalesTaxInvLineTmp."WHT Product Posting Group");
              IF SalesTaxInvLine.Type <> SalesTaxInvLine.Type::" " THEN BEGIN
                SalesTaxInvLine.VALIDATE("Unit of Measure Code",SalesTaxInvLineTmp."Unit of Measure Code");
                SalesTaxInvLine.VALIDATE("Variant Code",SalesTaxInvLineTmp."Variant Code");
                SalesTaxInvLine.VALIDATE("Location Code",SalesTaxInvLineTmp."Location Code");
                IF SalesTaxInvLineTmp.Quantity <> 0 THEN
                  SalesTaxInvLine.VALIDATE(Quantity,SalesTaxInvLineTmp.Quantity);
                SalesTaxInvLine.VALIDATE("Unit Price",SalesTaxInvLineTmp."Unit Price");
                IF SalesTaxInvLineTmp."Line Discount %" <> 0 THEN
                  SalesTaxInvLine.VALIDATE("Line Discount %",SalesTaxInvLineTmp."Line Discount %");
                IF SalesTaxInvLineTmp."Line Discount Amount" <> 0 THEN
                  SalesTaxInvLine.VALIDATE("Line Discount Amount",SalesTaxInvLineTmp."Line Discount Amount");
              END;

              SalesTaxInvLine.INSERT;
            UNTIL SalesTaxInvLineTmp.NEXT = 0;

            SalesTaxInvLineTmp.SETRANGE(Type);
            SalesTaxInvLineTmp.DELETEALL;
          END;
        END ELSE
        ===}
          ERROR(
            Text005,ChangedFieldName);
      END;
    END;

    PROCEDURE SalesLinesExist@3() : Boolean;
    BEGIN
      SalesTaxInvLine.RESET;
      SalesTaxInvLine.SETRANGE("Document No.","No.");
      EXIT(SalesTaxInvLine.FIND('-'));
    END;

    PROCEDURE CreateDim@16(Type1@1000 : Integer;No1@1001 : Code[20];Type2@1002 : Integer;No2@1003 : Code[20];Type3@1004 : Integer;No3@1005 : Code[20];Type4@1006 : Integer;No4@1007 : Code[20];Type5@1008 : Integer;No5@1009 : Code[20];Type6@1014 : Integer;No6@1013 : Code[20]);
    VAR
      SourceCodeSetup@1010 : Record 242;
      TableID@1011 : ARRAY [10] OF Integer;
      No@1012 : ARRAY [10] OF Code[20];
    BEGIN
      SourceCodeSetup.GET;
      TableID[1] := Type1;
      No[1] := No1;
      TableID[2] := Type2;
      No[2] := No2;
      TableID[3] := Type3;
      No[3] := No3;
      TableID[4] := Type4;
      No[4] := No4;
      TableID[5] := Type5;
      No[5] := No5;
      TableID[6] := Type6;
      No[6] := No6;
      "Shortcut Dimension 1 Code" := '';
      "Shortcut Dimension 2 Code" := '';
      DimMgt.GetDefaultDim(
        TableID,No,SourceCodeSetup.Sales,
        "Shortcut Dimension 1 Code","Shortcut Dimension 2 Code");
      IF "No." <> '' THEN
        DimMgt.UpdatePostedDocDefaultDim(
          DATABASE::"Sales Tax Invoice/Rec. Header","No.",0,
          "Shortcut Dimension 1 Code","Shortcut Dimension 2 Code");
    END;

    PROCEDURE CancelTaxInvoice@1000000001();
    VAR
      SalesInvLine@1000000000 : Record 113;
      SalesCrMemoLine@1000000002 : Record 115;
      SalesTaxInvLine@1000000001 : Record 50055;
    BEGIN
      TESTFIELD("Issued Tax Invoice/Receipt",TRUE);
      IF "Cancel Tax Invoice" THEN
        ERROR(Text007);
      IF NOT CONFIRM(Text006,FALSE) THEN
        EXIT;

      SalesTaxInvLine.RESET;
      SalesTaxInvLine.SETRANGE("Document No.","No.");
      IF SalesTaxInvLine.FIND('-') THEN
        REPEAT
          CASE SalesTaxInvLine."Posted Document Type" OF
            SalesTaxInvLine."Posted Document Type"::Invoice:
              BEGIN
                SalesInvLine.RESET;
                SalesInvLine.SETRANGE("Document No.",SalesTaxInvLine."Posted Document No.");
                SalesInvLine.SETRANGE("Sales Tax Invoice/Receipt No.",SalesTaxInvLine."Document No.");
                SalesInvLine.SETRANGE("Sales Tax Invoice/Receipt Line",SalesTaxInvLine."Line No.");
                IF SalesInvLine.FIND('-') THEN
                  REPEAT
                    SalesInvLine."Sales Tax Invoice/Receipt No." := '';
                    SalesInvLine."Sales Tax Invoice/Receipt Line" := 0;
                    SalesInvLine.MODIFY;
                  UNTIL SalesInvLine.NEXT=0;
              END;
            SalesTaxInvLine."Posted Document Type"::"Credit Memo":
              BEGIN
                SalesCrMemoLine.RESET;
                SalesCrMemoLine.SETRANGE("Document No.",SalesTaxInvLine."Posted Document No.");
                SalesCrMemoLine.SETRANGE("Sales Tax Invoice/Receipt No.",SalesTaxInvLine."Document No.");
                SalesCrMemoLine.SETRANGE("Sales Tax Invoice/Receipt Line",SalesTaxInvLine."Line No.");
                IF SalesCrMemoLine.FIND('-') THEN
                  REPEAT
                    SalesCrMemoLine."Sales Tax Invoice/Receipt No." := '';
                    SalesCrMemoLine."Sales Tax Invoice/Receipt Line" := 0;
                    SalesCrMemoLine.MODIFY;
                  UNTIL SalesCrMemoLine.NEXT=0;
              END;
          END;
        UNTIL SalesTaxInvLine.NEXT=0;

      "Cancel Tax Invoice" := TRUE;
      "Cancelled Date / Time" := CURRENTDATETIME;
      "Cancelled by" := USERID;
      MODIFY(TRUE);
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   15.05.2007   KKE   New table for "Sales Tax Invoice/Receipt Header" - Ads. Sales Module
    }
    END.
  }
}

OBJECT Table 50055 Sales Tax Invoice/Rec. Line
{
  OBJECT-PROPERTIES
  {
    Date=11/28/11;
    Time=12:22:55 PM;
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    OnInsert=VAR
               DocDim@1000 : Record 357;
             BEGIN
               TestStatusOpen;
               DocDim.LOCKTABLE;
               LOCKTABLE;
               SalesTaxInvHeader."No." := '';

               DimMgt.UpdatePostedDocDefaultDim(
                 DATABASE::"Sales Tax Invoice/Rec. Line","Document No.","Line No.",
                 "Shortcut Dimension 1 Code","Shortcut Dimension 2 Code");
             END;

    OnModify=BEGIN
               TestStatusOpen;
             END;

    OnDelete=VAR
               DocDim@1001 : Record 357;
               CapableToPromise@1000 : Codeunit 99000886;
               SalesInvLine@1000000000 : Record 113;
               SalesCrMemoLine@1000000001 : Record 115;
             BEGIN
               TestStatusOpen;
               SalesPost.UpdateSalesTaxInvoice(Rec);
               {---
               SalesInvLine.SETCURRENTKEY("Sales Tax Invoice/Receipt No.","Sales Tax Invoice/Receipt Line");
               SalesInvLine.SETRANGE("Sales Tax Invoice/Receipt No.","Document No.");
               SalesInvLine.SETRANGE("Sales Tax Invoice/Receipt Line","Line No.");
               IF SalesInvLine.FIND('-') THEN
                 REPEAT
                   SalesInvLine."Sales Tax Invoice/Receipt No." := '';
                   SalesInvLine."Sales Tax Invoice/Receipt Line" := 0;
                   SalesInvLine.MODIFY;
                 UNTIL SalesInvLine.NEXT=0;

               SalesCrMemoLine.SETCURRENTKEY("Sales Tax Invoice/Receipt No.","Sales Tax Invoice/Receipt Line");
               SalesCrMemoLine.SETRANGE("Sales Tax Invoice/Receipt No.","Document No.");
               SalesCrMemoLine.SETRANGE("Sales Tax Invoice/Receipt Line","Line No.");
               IF SalesCrMemoLine.FIND('-') THEN
                 REPEAT
                   SalesCrMemoLine."Sales Tax Invoice/Receipt No." := '';
                   SalesCrMemoLine."Sales Tax Invoice/Receipt Line" := 0;
                   SalesCrMemoLine.MODIFY;
                 UNTIL SalesCrMemoLine.NEXT=0;
               ---}
               DimMgt.DeletePostedDocDim(DATABASE::"Sales Tax Invoice/Rec. Line","Document No.","Line No.");
             END;

    OnRename=BEGIN
               ERROR(Text001,TABLECAPTION);
             END;

    CaptionML=ENU=Sales Tax Invoice/Rec. Line;
    PasteIsValid=No;
  }
  FIELDS
  {
    { 2   ;   ;Sell-to Customer No.;Code20        ;TableRelation=Customer;
                                                   CaptionML=[ENU=Sell-to Customer No.;
                                                              THA=ขายให้ลูกค้าหมายเลข];
                                                   Editable=No }
    { 3   ;   ;Document No.        ;Code20        ;TableRelation="Sales Tax Invoice/Rec. Header";
                                                   CaptionML=[ENU=Document No.;
                                                              THA=หมายเลขเอกสาร] }
    { 4   ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              THA=หมายเลขบรรทัด] }
    { 5   ;   ;Type                ;Option        ;OnValidate=BEGIN
                                                                TestStatusOpen;
                                                                GetSalesHeader;
                                                                TESTFIELD("Posted Document No.",'');

                                                                TempSalesLine := Rec;
                                                                DimMgt.DeletePostedDocDim(DATABASE::"Sales Tax Invoice/Rec. Line","Document No.","Line No.");
                                                                INIT;
                                                                Type := TempSalesLine.Type;
                                                              END;

                                                   CaptionML=[ENU=Type;
                                                              THA=ชนิด];
                                                   OptionCaptionML=[ENU=" ,G/L Account,Item,Resource,Fixed Asset,Charge (Item)";
                                                                    THA=" ,บัญชี G/L,สินค้า,ทรัพยากร,สินทรัพย์ถาวร,ค่าธรรมเนียม (สินค้า)"];
                                                   OptionString=[ ,G/L Account,Item,Resource,Fixed Asset,Charge (Item)] }
    { 6   ;   ;No.                 ;Code20        ;TableRelation=IF (Type=CONST(" ")) "Standard Text"
                                                                 ELSE IF (Type=CONST(G/L Account)) "G/L Account"
                                                                 ELSE IF (Type=CONST(Item)) Item
                                                                 ELSE IF (Type=CONST(Resource)) Resource
                                                                 ELSE IF (Type=CONST(Fixed Asset)) "Fixed Asset"
                                                                 ELSE IF (Type=CONST("Charge (Item)")) "Item Charge";
                                                   OnValidate=VAR
                                                                ICPartner@1000 : Record 413;
                                                                ItemCrossReference@1001 : Record 5717;
                                                              BEGIN
                                                                TestStatusOpen;
                                                                TESTFIELD("Posted Document No.",'');

                                                                TempSalesLine := Rec;
                                                                INIT;
                                                                Type := TempSalesLine.Type;
                                                                "No." := TempSalesLine."No.";
                                                                IF "No." = '' THEN
                                                                  EXIT;
                                                                IF Type <> Type::" " THEN
                                                                  Quantity := TempSalesLine.Quantity;

                                                                GetSalesHeader;
                                                                SalesTaxInvHeader.TESTFIELD("Sell-to Customer No.");

                                                                "Sell-to Customer No." := SalesTaxInvHeader."Sell-to Customer No.";
                                                                "Job No." := SalesTaxInvHeader."Job No.";
                                                                "Location Code" := SalesTaxInvHeader."Location Code";
                                                                "Customer Price Group" := SalesTaxInvHeader."Customer Price Group";
                                                                "Customer Disc. Group" := SalesTaxInvHeader."Customer Disc. Group";
                                                                "Allow Line Disc." := SalesTaxInvHeader."Allow Line Disc.";
                                                                "Transaction Type" := SalesTaxInvHeader."Transaction Type";
                                                                "Transport Method" := SalesTaxInvHeader."Transport Method";
                                                                "Bill-to Customer No." := SalesTaxInvHeader."Bill-to Customer No.";
                                                                "Gen. Bus. Posting Group" := SalesTaxInvHeader."Gen. Bus. Posting Group";
                                                                "WHT Business Posting Group" := SalesTaxInvHeader."WHT Business Posting Group";
                                                                "VAT Bus. Posting Group" := SalesTaxInvHeader."VAT Bus. Posting Group";
                                                                "Exit Point" := SalesTaxInvHeader."Exit Point";
                                                                Area := SalesTaxInvHeader.Area;
                                                                "Transaction Specification" := SalesTaxInvHeader."Transaction Specification";
                                                                "Tax Area Code" := SalesTaxInvHeader."Tax Area Code";
                                                                "Tax Liable" := SalesTaxInvHeader."Tax Liable";
                                                                "Responsibility Center" := SalesTaxInvHeader."Responsibility Center";

                                                                CASE Type OF
                                                                  Type::" ":
                                                                    BEGIN
                                                                      StdTxt.GET("No.");
                                                                      Description := StdTxt.Description;
                                                                    END;
                                                                  Type::"G/L Account":
                                                                    BEGIN
                                                                      GLAcc.GET("No.");
                                                                      GLAcc.CheckGLAcc;
                                                                      IF NOT "System-Created Entry" THEN
                                                                        GLAcc.TESTFIELD("Direct Posting",TRUE);
                                                                      Description := GLAcc.Name;
                                                                      "Gen. Prod. Posting Group" := GLAcc."Gen. Prod. Posting Group";
                                                                      "VAT Prod. Posting Group" := GLAcc."VAT Prod. Posting Group";
                                                                      "WHT Product Posting Group" := GLAcc."WHT Product Posting Group";
                                                                      "Tax Group Code" := GLAcc."Tax Group Code";
                                                                      "Allow Invoice Disc." := FALSE;
                                                                    END;
                                                                  Type::Item:
                                                                    BEGIN
                                                                      GetItem;
                                                                      Item.TESTFIELD(Blocked,FALSE);
                                                                      Item.TESTFIELD("Inventory Posting Group");
                                                                      Item.TESTFIELD("Gen. Prod. Posting Group");

                                                                      "Posting Group" := Item."Inventory Posting Group";
                                                                      Description := Item.Description;
                                                                      "Description 2" := Item."Description 2";
                                                                      GetUnitCost;
                                                                      "Allow Invoice Disc." := Item."Allow Invoice Disc.";
                                                                      "Units per Parcel" := Item."Units per Parcel";
                                                                      "Gen. Prod. Posting Group" := Item."Gen. Prod. Posting Group";
                                                                      "VAT Prod. Posting Group" := Item."VAT Prod. Posting Group";
                                                                      "WHT Product Posting Group" := Item."WHT Product Posting Group";
                                                                      "Tax Group Code" := Item."Tax Group Code";
                                                                       "Item Category Code" := Item."Item Category Code";
                                                                      "Product Group Code" := Item."Product Group Code";
                                                                      Nonstock := Item."Created From Nonstock Item";

                                                                      IF SalesTaxInvHeader."Language Code" <> '' THEN
                                                                        GetItemTranslation;

                                                                      "Unit of Measure Code" := Item."Sales Unit of Measure";
                                                                    END;
                                                                  Type::Resource:
                                                                    BEGIN
                                                                      Res.GET("No.");
                                                                      Res.TESTFIELD(Blocked,FALSE);
                                                                      Res.TESTFIELD("Gen. Prod. Posting Group");
                                                                      Description := Res.Name;
                                                                      "Unit of Measure Code" := Res."Base Unit of Measure";
                                                                      "Unit Cost (LCY)" := Res."Unit Cost";
                                                                      "Gen. Prod. Posting Group" := Res."Gen. Prod. Posting Group";
                                                                      "VAT Prod. Posting Group" := Res."VAT Prod. Posting Group";
                                                                      "WHT Product Posting Group" := Res."WHT Product Posting Group";
                                                                      "Tax Group Code" := Res."Tax Group Code";
                                                                      FindResUnitCost;
                                                                    END;
                                                                  Type::"Fixed Asset":
                                                                    BEGIN
                                                                      FA.GET("No.");
                                                                      FA.TESTFIELD(Inactive,FALSE);
                                                                      FA.TESTFIELD(Blocked,FALSE);
                                                                      GetFAPostingGroup;
                                                                      Description := FA.Description;
                                                                      "Description 2" := FA."Description 2";
                                                                      "Allow Invoice Disc." := FALSE;
                                                                    END;
                                                                  Type::"Charge (Item)":
                                                                    BEGIN
                                                                      ItemCharge.GET("No.");
                                                                      Description := ItemCharge.Description;
                                                                      "Gen. Prod. Posting Group" := ItemCharge."Gen. Prod. Posting Group";
                                                                      "VAT Prod. Posting Group" := ItemCharge."VAT Prod. Posting Group";
                                                                      "WHT Product Posting Group" := ItemCharge."WHT Product Posting Group";
                                                                      "Tax Group Code" := ItemCharge."Tax Group Code";
                                                                      "Allow Invoice Disc." := FALSE;
                                                                    END;
                                                                END;

                                                                IF Type <> Type::" " THEN BEGIN
                                                                  IF Type <> Type::"Fixed Asset" THEN
                                                                    VALIDATE("VAT Prod. Posting Group");
                                                                  VALIDATE("WHT Product Posting Group");
                                                                  VALIDATE("Unit of Measure Code");
                                                                END;

                                                                CreateDim(
                                                                  DimMgt.TypeToTableID3(Type),"No.",
                                                                  DATABASE::Job,"Job No.",
                                                                  DATABASE::"Responsibility Center","Responsibility Center");
                                                              END;

                                                   CaptionML=[ENU=No.;
                                                              THA=หมายเลข] }
    { 7   ;   ;Location Code       ;Code10        ;TableRelation=Location WHERE (Use As In-Transit=CONST(No));
                                                   OnValidate=BEGIN
                                                                TestStatusOpen;

                                                                GetSalesHeader;

                                                                IF Type = Type::Item THEN
                                                                  GetUnitCost;
                                                              END;

                                                   CaptionML=[ENU=Location Code;
                                                              THA=รหัสที่ตั้ง] }
    { 8   ;   ;Posting Group       ;Code10        ;TableRelation=IF (Type=CONST(Item)) "Inventory Posting Group"
                                                                 ELSE IF (Type=CONST(Fixed Asset)) "FA Posting Group";
                                                   CaptionML=[ENU=Posting Group;
                                                              THA=กลุ่มการลงรายการบัญชี];
                                                   Editable=No }
    { 10  ;   ;Shipment Date       ;Date          ;OnValidate=VAR
                                                                CheckDateConflict@1000 : Codeunit 99000815;
                                                              BEGIN
                                                              END;

                                                   CaptionML=[ENU=Shipment Date;
                                                              THA=วันที่จัดส่ง] }
    { 11  ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              THA=คำอธิบาย] }
    { 12  ;   ;Description 2       ;Text50        ;CaptionML=[ENU=Description 2;
                                                              THA=คำอธิบาย 2] }
    { 13  ;   ;Unit of Measure     ;Text10        ;CaptionML=[ENU=Unit of Measure;
                                                              THA=หน่วยวัด] }
    { 15  ;   ;Quantity            ;Decimal       ;OnValidate=BEGIN
                                                                TestStatusOpen;

                                                                "Quantity (Base)" := CalcBaseQty(Quantity);

                                                                VALIDATE("Line Discount %");

                                                                IF (xRec.Quantity <> Quantity) AND (Quantity = 0) AND
                                                                  ((Amount<>0) OR ("Amount Including VAT"<>0) OR ("VAT Base Amount"<>0))
                                                                THEN BEGIN
                                                                  Amount := 0;
                                                                  "Amount Including VAT" := 0;
                                                                  "VAT Base Amount" := 0;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Quantity;
                                                              THA=ปริมาณ];
                                                   DecimalPlaces=0:5 }
    { 22  ;   ;Unit Price          ;Decimal       ;OnValidate=BEGIN
                                                                TestStatusOpen;
                                                                VALIDATE("Line Discount %");
                                                              END;

                                                   CaptionML=[ENU=Unit Price;
                                                              THA=ราคาต่อหน่วย];
                                                   AutoFormatType=2;
                                                   AutoFormatExpr=GetCurrencyCode;
                                                   CaptionClass=GetCaptionClass(FIELDNO("Unit Price")) }
    { 23  ;   ;Unit Cost (LCY)     ;Decimal       ;OnValidate=BEGIN
                                                                GetSalesHeader;
                                                                "Unit Cost" := "Unit Cost (LCY)";
                                                              END;

                                                   CaptionML=[ENU=Unit Cost (LCY);
                                                              THA=ต้นทุนต่อหน่วย (LCY)];
                                                   AutoFormatType=2 }
    { 25  ;   ;VAT %               ;Decimal       ;CaptionML=[ENU=VAT %;
                                                              THA=VAT %];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 27  ;   ;Line Discount %     ;Decimal       ;OnValidate=BEGIN
                                                                TestStatusOpen;
                                                                "Line Discount Amount" :=
                                                                  ROUND(
                                                                    ROUND(Quantity * "Unit Price",Currency."Amount Rounding Precision") *
                                                                    "Line Discount %" / 100,Currency."Amount Rounding Precision");
                                                                "Inv. Discount Amount" := 0;
                                                                UpdateAmounts;
                                                              END;

                                                   CaptionML=[ENU=Line Discount %;
                                                              THA=% ส่วนลดในบรรทัด];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   MaxValue=100 }
    { 28  ;   ;Line Discount Amount;Decimal       ;OnValidate=BEGIN
                                                                TestStatusOpen;
                                                                TESTFIELD(Quantity);
                                                                IF ROUND(Quantity * "Unit Price",Currency."Amount Rounding Precision") <> 0 THEN
                                                                  "Line Discount %" :=
                                                                    ROUND(
                                                                     "Line Discount Amount" / ROUND(Quantity * "Unit Price",Currency."Amount Rounding Precision") * 100,
                                                                      0.00001)
                                                                ELSE
                                                                  "Line Discount %" := 0;
                                                                "Inv. Discount Amount" := 0;
                                                                UpdateAmounts;
                                                              END;

                                                   CaptionML=[ENU=Line Discount Amount;
                                                              THA=ยอดส่วนลดในบรรทัด];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 29  ;   ;Amount              ;Decimal       ;CaptionML=[ENU=Amount;
                                                              THA=จำนวน];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 30  ;   ;Amount Including VAT;Decimal       ;CaptionML=[ENU=Amount Including VAT;
                                                              THA=ยอดเงินรวม VAT];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 32  ;   ;Allow Invoice Disc. ;Boolean       ;InitValue=Yes;
                                                   OnValidate=BEGIN
                                                                TestStatusOpen;
                                                                IF ("Allow Invoice Disc." <> xRec."Allow Invoice Disc.") AND
                                                                   (NOT "Allow Invoice Disc.")
                                                                THEN BEGIN
                                                                  "Inv. Discount Amount" := 0;
                                                                  UpdateAmounts;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Allow Invoice Disc.;
                                                              THA=ใช้ส่วนลดในใบส่งของได้] }
    { 34  ;   ;Gross Weight        ;Decimal       ;CaptionML=[ENU=Gross Weight;
                                                              THA=น้ำหนักรวม];
                                                   DecimalPlaces=0:5 }
    { 35  ;   ;Net Weight          ;Decimal       ;CaptionML=[ENU=Net Weight;
                                                              THA=น้ำหนักสุทธิ];
                                                   DecimalPlaces=0:5 }
    { 36  ;   ;Units per Parcel    ;Decimal       ;CaptionML=[ENU=Units per Parcel;
                                                              THA=หน่วยต่อหีบห่อ];
                                                   DecimalPlaces=0:5 }
    { 37  ;   ;Unit Volume         ;Decimal       ;CaptionML=[ENU=Unit Volume;
                                                              THA=ปริมาตรต่อหน่วย];
                                                   DecimalPlaces=0:5 }
    { 38  ;   ;Appl.-to Item Entry ;Integer       ;OnValidate=VAR
                                                                ItemLedgEntry@1000 : Record 32;
                                                              BEGIN
                                                              END;

                                                   CaptionML=[ENU=Appl.-to Item Entry;
                                                              THA=ใช้กับรายการสินค้า] }
    { 40  ;   ;Shortcut Dimension 1 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(1,"Shortcut Dimension 1 Code");
                                                              END;

                                                   CaptionML=[ENU=Shortcut Dimension 1 Code;
                                                              THA=รหัสมิติทางลัดหมายเลข 1];
                                                   CaptionClass='1,2,1' }
    { 41  ;   ;Shortcut Dimension 2 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(2,"Shortcut Dimension 2 Code");
                                                              END;

                                                   CaptionML=[ENU=Shortcut Dimension 2 Code;
                                                              THA=รหัสมิติทางลัดหมายเลข 2];
                                                   CaptionClass='1,2,2' }
    { 42  ;   ;Customer Price Group;Code10        ;TableRelation="Customer Price Group";
                                                   CaptionML=[ENU=Customer Price Group;
                                                              THA=กลุ่มราคาของลูกค้า];
                                                   Editable=No }
    { 45  ;   ;Job No.             ;Code20        ;TableRelation=Job;
                                                   CaptionML=[ENU=Job No.;
                                                              THA=หมายเลขงาน] }
    { 46  ;   ;Appl.-to Job Entry  ;Integer       ;CaptionML=[ENU=Appl.-to Job Entry;
                                                              THA=ใช้กับรายการงาน] }
    { 47  ;   ;Phase Code          ;Code10        ;TableRelation=Table161;
                                                   CaptionML=[ENU=Phase Code;
                                                              THA=รหัสแสดงระยะ] }
    { 48  ;   ;Task Code           ;Code10        ;TableRelation=Table162;
                                                   CaptionML=[ENU=Task Code;
                                                              THA=รหัสภารกิจ] }
    { 49  ;   ;Step Code           ;Code10        ;TableRelation=Table163;
                                                   CaptionML=[ENU=Step Code;
                                                              THA=รหัสขั้นตอน] }
    { 50  ;   ;Job Applies-to ID   ;Code20        ;CaptionML=[ENU=Job Applies-to ID;
                                                              THA=ID การใช้กับงาน] }
    { 51  ;   ;Apply and Close (Job);Boolean      ;CaptionML=[ENU=Apply and Close (Job);
                                                              THA=ใช้และปิด (งาน)] }
    { 52  ;   ;Work Type Code      ;Code10        ;TableRelation="Work Type";
                                                   CaptionML=[ENU=Work Type Code;
                                                              THA=รหัสชนิดงาน] }
    { 63  ;   ;Shipment No.        ;Code20        ;CaptionML=[ENU=Shipment No.;
                                                              THA=หมายเลขการจัดส่ง];
                                                   Editable=No }
    { 64  ;   ;Shipment Line No.   ;Integer       ;CaptionML=[ENU=Shipment Line No.;
                                                              THA=หมายเลขบรรทัดการจัดส่ง];
                                                   Editable=No }
    { 68  ;   ;Bill-to Customer No.;Code20        ;TableRelation=Customer;
                                                   CaptionML=[ENU=Bill-to Customer No.;
                                                              THA=เก็บเงินจากลูกค้าหมายเลข];
                                                   Editable=No }
    { 69  ;   ;Inv. Discount Amount;Decimal       ;OnValidate=BEGIN
                                                                TESTFIELD(Quantity);
                                                                UpdateAmounts;
                                                              END;

                                                   CaptionML=[ENU=Inv. Discount Amount;
                                                              THA=ยอดเงินส่วนลดในใบส่งของ];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 73  ;   ;Drop Shipment       ;Boolean       ;CaptionML=[ENU=Drop Shipment;
                                                              THA=การฝากส่ง];
                                                   Editable=Yes }
    { 74  ;   ;Gen. Bus. Posting Group;Code10     ;TableRelation="Gen. Business Posting Group";
                                                   OnValidate=BEGIN
                                                                IF xRec."Gen. Bus. Posting Group" <> "Gen. Bus. Posting Group" THEN
                                                                  IF GenBusPostingGrp.ValidateVatBusPostingGroup(GenBusPostingGrp,"Gen. Bus. Posting Group") THEN
                                                                    VALIDATE("VAT Bus. Posting Group",GenBusPostingGrp."Def. VAT Bus. Posting Group");
                                                              END;

                                                   CaptionML=[ENU=Gen. Bus. Posting Group;
                                                              THA=กลุ่มการลงรายการบัญชีธุรกิจทั่วไป] }
    { 75  ;   ;Gen. Prod. Posting Group;Code10    ;TableRelation="Gen. Product Posting Group";
                                                   OnValidate=BEGIN
                                                                TestStatusOpen;
                                                                IF xRec."Gen. Prod. Posting Group" <> "Gen. Prod. Posting Group" THEN
                                                                  IF GenProdPostingGrp.ValidateVatProdPostingGroup(GenProdPostingGrp,"Gen. Prod. Posting Group") THEN
                                                                    VALIDATE("VAT Prod. Posting Group",GenProdPostingGrp."Def. VAT Prod. Posting Group");
                                                              END;

                                                   CaptionML=[ENU=Gen. Prod. Posting Group;
                                                              THA=กลุ่มการลงรายการบัญชีผลิตภัณฑ์ทั่วไป] }
    { 77  ;   ;VAT Calculation Type;Option        ;CaptionML=[ENU=VAT Calculation Type;
                                                              THA=ชนิดการคำนวณ VAT];
                                                   OptionCaptionML=[ENU=Normal VAT,Reverse Charge VAT,Full VAT,Sales Tax;
                                                                    THA=VAT ปกติ,VAT คิดย้อนหลัง,VAT เต็มจำนวน,ภาษีขาย];
                                                   OptionString=Normal VAT,Reverse Charge VAT,Full VAT,Sales Tax;
                                                   Editable=No }
    { 78  ;   ;Transaction Type    ;Code10        ;TableRelation="Transaction Type";
                                                   CaptionML=[ENU=Transaction Type;
                                                              THA=ชนิดธุรกรรม] }
    { 79  ;   ;Transport Method    ;Code10        ;TableRelation="Transport Method";
                                                   CaptionML=[ENU=Transport Method;
                                                              THA=วิธีการขนส่ง] }
    { 81  ;   ;Exit Point          ;Code10        ;TableRelation="Entry/Exit Point";
                                                   CaptionML=[ENU=Exit Point;
                                                              THA=จุดจัดส่งสินค้า] }
    { 82  ;   ;Area                ;Code10        ;TableRelation=Area;
                                                   CaptionML=[ENU=Area;
                                                              THA=พื้นที่] }
    { 83  ;   ;Transaction Specification;Code10   ;TableRelation="Transaction Specification";
                                                   CaptionML=[ENU=Transaction Specification;
                                                              THA=ข้อมูลจำเพาะเกี่ยวกับธุรกรรม] }
    { 85  ;   ;Tax Area Code       ;Code20        ;TableRelation="Tax Area";
                                                   OnValidate=BEGIN
                                                                UpdateAmounts;
                                                              END;

                                                   CaptionML=[ENU=Tax Area Code;
                                                              THA=รหัสพื้นที่จัดเก็บภาษี] }
    { 86  ;   ;Tax Liable          ;Boolean       ;OnValidate=BEGIN
                                                                UpdateAmounts;
                                                              END;

                                                   CaptionML=[ENU=Tax Liable;
                                                              THA=ภาษีค้างจ่าย] }
    { 87  ;   ;Tax Group Code      ;Code10        ;TableRelation="Tax Group";
                                                   OnValidate=BEGIN
                                                                TestStatusOpen;
                                                                UpdateAmounts;
                                                              END;

                                                   CaptionML=[ENU=Tax Group Code;
                                                              THA=รหัสกลุ่มการจัดเก็บภาษี] }
    { 89  ;   ;VAT Bus. Posting Group;Code10      ;TableRelation="VAT Business Posting Group";
                                                   OnValidate=BEGIN
                                                                VALIDATE("VAT Prod. Posting Group");
                                                              END;

                                                   CaptionML=[ENU=VAT Bus. Posting Group;
                                                              THA=กลุ่มการลงรายการบัญชีธุรกิจที่ต้องเสีย VAT] }
    { 90  ;   ;VAT Prod. Posting Group;Code10     ;TableRelation="VAT Product Posting Group";
                                                   OnValidate=BEGIN
                                                                TestStatusOpen;
                                                                VATPostingSetup.GET("VAT Bus. Posting Group","VAT Prod. Posting Group");
                                                                "VAT Difference" := 0;
                                                                "VAT %" := VATPostingSetup."VAT %";
                                                                "VAT Calculation Type" := VATPostingSetup."VAT Calculation Type";
                                                                "VAT Identifier" := VATPostingSetup."VAT Identifier";
                                                                CASE "VAT Calculation Type" OF
                                                                  "VAT Calculation Type"::"Reverse Charge VAT",
                                                                  "VAT Calculation Type"::"Sales Tax":
                                                                    "VAT %" := 0;
                                                                  "VAT Calculation Type"::"Full VAT":
                                                                    BEGIN
                                                                      TESTFIELD(Type,Type::"G/L Account");
                                                                      VATPostingSetup.TESTFIELD("Sales VAT Account");
                                                                      TESTFIELD("No.",VATPostingSetup."Sales VAT Account");
                                                                    END;
                                                                END;
                                                                IF SalesTaxInvHeader."Prices Including VAT" AND (Type IN [Type::Item,Type::Resource]) THEN
                                                                  "Unit Price" :=
                                                                    ROUND(
                                                                      "Unit Price" * (100 + "VAT %") / (100 + xRec."VAT %"),
                                                                      Currency."Unit-Amount Rounding Precision");
                                                                UpdateAmounts;
                                                              END;

                                                   CaptionML=[ENU=VAT Prod. Posting Group;
                                                              THA=กลุ่มการลงรายการบัญชีผลิตภัณฑ์ที่ต้องเสีย VAT] }
    { 99  ;   ;VAT Base Amount     ;Decimal       ;CaptionML=[ENU=VAT Base Amount;
                                                              THA=ยอดเงินตามจำนวน VAT];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 100 ;   ;Unit Cost           ;Decimal       ;CaptionML=[ENU=Unit Cost;
                                                              THA=ราคาต่อหน่วย];
                                                   Editable=No;
                                                   AutoFormatType=2;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 101 ;   ;System-Created Entry;Boolean       ;CaptionML=[ENU=System-Created Entry;
                                                              THA=รายการที่ระบบสร้างขึ้น];
                                                   Editable=No }
    { 103 ;   ;Line Amount         ;Decimal       ;OnValidate=BEGIN
                                                                TESTFIELD(Type);
                                                                TESTFIELD(Quantity);
                                                                TESTFIELD("Unit Price");
                                                                GetSalesHeader;
                                                                "Line Amount" := ROUND("Line Amount",Currency."Amount Rounding Precision");
                                                                VALIDATE(
                                                                  "Line Discount Amount",ROUND(Quantity * "Unit Price",Currency."Amount Rounding Precision") - "Line Amount");
                                                              END;

                                                   CaptionML=[ENU=Line Amount;
                                                              THA=ยอดเงินในบรรทัด];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode;
                                                   CaptionClass=GetCaptionClass(FIELDNO("Line Amount")) }
    { 104 ;   ;VAT Difference      ;Decimal       ;CaptionML=[ENU=VAT Difference;
                                                              THA=ส่วนต่างของ VAT];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 106 ;   ;VAT Identifier      ;Code10        ;CaptionML=[ENU=VAT Identifier;
                                                              THA=ตัวบ่งชี้ VAT];
                                                   Editable=No }
    { 107 ;   ;IC Partner Ref. Type;Option        ;OnValidate=BEGIN
                                                                IF "IC Partner Ref. Type" <> xRec."IC Partner Ref. Type" THEN
                                                                  "IC Partner Reference" := '';
                                                                IF "IC Partner Ref. Type" = "IC Partner Ref. Type"::"Common Item No." THEN
                                                                  BEGIN
                                                                    IF Item."No." <> "No." THEN
                                                                      Item.GET("No.");
                                                                    "IC Partner Reference" := Item."Common Item No.";
                                                                  END;
                                                              END;

                                                   CaptionML=[ENU=IC Partner Ref. Type;
                                                              THA=ชนิดการอ้างอิงบริษัทในเครือ IC];
                                                   OptionCaptionML=[ENU=" ,G/L Account,Item,,,Charge (Item),Cross Reference,Common Item No.";
                                                                    THA=" ,บัญชี G/L,สินค้า,,,ค่าธรรมเนียม (สินค้า),การอ้างอิงไขว้,หมายเลขสินค้าทั่วไป"];
                                                   OptionString=[ ,G/L Account,Item,,,Charge (Item),Cross Reference,Common Item No.] }
    { 108 ;   ;IC Partner Reference;Code20        ;OnLookup=VAR
                                                              ICGLAccount@1000 : Record 410;
                                                              ItemCrossReference@1001 : Record 5717;
                                                            BEGIN
                                                              IF "No." <> '' THEN
                                                                CASE "IC Partner Ref. Type" OF
                                                                  "IC Partner Ref. Type"::"G/L Account":
                                                                    IF PAGE.RUNMODAL(PAGE::"IC G/L Account List",ICGLAccount) = ACTION::LookupOK THEN
                                                                      VALIDATE("IC Partner Reference",ICGLAccount."No.");
                                                                  "IC Partner Ref. Type"::Item:
                                                                    IF PAGE.RUNMODAL(PAGE::"Item List",Item) = ACTION::LookupOK THEN
                                                                      VALIDATE("IC Partner Reference",Item."No.");
                                                                  "IC Partner Ref. Type"::"Cross Reference":
                                                                    BEGIN
                                                                      ItemCrossReference.RESET;
                                                                      ItemCrossReference.SETCURRENTKEY("Cross-Reference Type","Cross-Reference Type No.");
                                                                      ItemCrossReference.SETFILTER(
                                                                        "Cross-Reference Type",'%1|%2',
                                                                        ItemCrossReference."Cross-Reference Type"::Customer,
                                                                        ItemCrossReference."Cross-Reference Type"::" ");
                                                                      ItemCrossReference.SETFILTER("Cross-Reference Type No.",'%1|%2',"Sell-to Customer No.",'');
                                                                      IF PAGE.RUNMODAL(PAGE::"Cross Reference List",ItemCrossReference) = ACTION::LookupOK THEN
                                                                      VALIDATE("IC Partner Reference",ItemCrossReference."Cross-Reference No.");
                                                                    END;
                                                                END;
                                                            END;

                                                   CaptionML=[ENU=IC Partner Reference;
                                                              THA=การอ้างอิงบริษัทในเครือ IC] }
    { 5402;   ;Variant Code        ;Code10        ;TableRelation=IF (Type=CONST(Item)) "Item Variant".Code WHERE (Item No.=FIELD(No.));
                                                   OnValidate=BEGIN
                                                                IF "Variant Code" <> '' THEN
                                                                  TESTFIELD(Type,Type::Item);
                                                                TestStatusOpen;

                                                                IF Type = Type::Item THEN BEGIN
                                                                  GetUnitCost;
                                                                  //UpdateUnitPrice((FIELDNO("Variant Code")));
                                                                END;

                                                                IF "Variant Code" = '' THEN BEGIN
                                                                  IF Type = Type::Item THEN BEGIN
                                                                    Item.GET("No.");
                                                                    Description := Item.Description;
                                                                    "Description 2" := Item."Description 2";
                                                                    GetItemTranslation;
                                                                  END;
                                                                  EXIT;
                                                                END;

                                                                ItemVariant.GET("No.","Variant Code");
                                                                Description := ItemVariant.Description;
                                                                "Description 2" := ItemVariant."Description 2";

                                                                GetSalesHeader;
                                                                IF SalesTaxInvHeader."Language Code" <> '' THEN
                                                                  GetItemTranslation;
                                                              END;

                                                   CaptionML=[ENU=Variant Code;
                                                              THA=รหัสตัวแปร] }
    { 5404;   ;Qty. per Unit of Measure;Decimal   ;InitValue=1;
                                                   CaptionML=[ENU=Qty. per Unit of Measure;
                                                              THA=ปริมาณต่อหน่วยวัด];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 5407;   ;Unit of Measure Code;Code10        ;TableRelation=IF (Type=CONST(Item)) "Item Unit of Measure".Code WHERE (Item No.=FIELD(No.))
                                                                 ELSE IF (Type=CONST(Resource)) "Resource Unit of Measure".Code WHERE (Resource No.=FIELD(No.))
                                                                 ELSE "Unit of Measure";
                                                   OnValidate=VAR
                                                                UnitOfMeasureTranslation@1000 : Record 5402;
                                                                ResUnitofMeasure@1001 : Record 205;
                                                              BEGIN
                                                                TestStatusOpen;

                                                                IF "Unit of Measure Code" = '' THEN
                                                                  "Unit of Measure" := ''
                                                                ELSE BEGIN
                                                                  IF NOT UnitOfMeasure.GET("Unit of Measure Code") THEN
                                                                    UnitOfMeasure.INIT;
                                                                  "Unit of Measure" := UnitOfMeasure.Description;
                                                                  GetSalesHeader;
                                                                  IF SalesTaxInvHeader."Language Code" <> '' THEN BEGIN
                                                                    UnitOfMeasureTranslation.SETRANGE(Code,"Unit of Measure Code");
                                                                    UnitOfMeasureTranslation.SETRANGE("Language Code",SalesTaxInvHeader."Language Code");
                                                                    IF UnitOfMeasureTranslation.FIND('-') THEN
                                                                      "Unit of Measure" := UnitOfMeasureTranslation.Description;
                                                                  END;
                                                                END;
                                                                VALIDATE(Quantity);
                                                              END;

                                                   CaptionML=[ENU=Unit of Measure Code;
                                                              THA=รหัสหน่วยวัด] }
    { 5415;   ;Quantity (Base)     ;Decimal       ;OnValidate=BEGIN
                                                                TESTFIELD("Qty. per Unit of Measure",1);
                                                                VALIDATE(Quantity,"Quantity (Base)");
                                                              END;

                                                   CaptionML=[ENU=Quantity (Base);
                                                              THA=ปริมาณ (ฐาน)];
                                                   DecimalPlaces=0:5 }
    { 5600;   ;FA Posting Date     ;Date          ;CaptionML=[ENU=FA Posting Date;
                                                              THA=วันที่ลงรายการบัญชี FA] }
    { 5602;   ;Depreciation Book Code;Code10      ;TableRelation="Depreciation Book";
                                                   OnValidate=BEGIN
                                                                GetFAPostingGroup;
                                                              END;

                                                   CaptionML=[ENU=Depreciation Book Code;
                                                              THA=รหัสสมุดบัญชีค่าเสื่อมราคา] }
    { 5605;   ;Depr. until FA Posting Date;Boolean;CaptionML=[ENU=Depr. until FA Posting Date;
                                                              THA=ค่าเสื่อมราคาจนถึงวันที่ลงรายการบัญชี FA] }
    { 5612;   ;Duplicate in Depreciation Book;Code10;
                                                   TableRelation="Depreciation Book";
                                                   OnValidate=BEGIN
                                                                "Use Duplication List" := FALSE;
                                                              END;

                                                   CaptionML=[ENU=Duplicate in Depreciation Book;
                                                              THA=รายการซ้ำในสมุดบัญชีค่าเสื่อมราคา] }
    { 5613;   ;Use Duplication List;Boolean       ;OnValidate=BEGIN
                                                                "Duplicate in Depreciation Book" := '';
                                                              END;

                                                   CaptionML=[ENU=Use Duplication List;
                                                              THA=ใช้รายการทำสำเนา] }
    { 5700;   ;Responsibility Center;Code10       ;TableRelation="Responsibility Center";
                                                   OnValidate=BEGIN
                                                                CreateDim(
                                                                  DATABASE::"Responsibility Center","Responsibility Center",
                                                                  DimMgt.TypeToTableID3(Type),"No.",
                                                                  DATABASE::Job,"Job No.");
                                                              END;

                                                   CaptionML=[ENU=Responsibility Center;
                                                              THA=ศูนย์ความรับผิดชอบ];
                                                   Editable=No }
    { 5705;   ;Cross-Reference No. ;Code20        ;OnValidate=VAR
                                                                ReturnedCrossRef@1000 : Record 5717;
                                                              BEGIN
                                                              END;

                                                   CaptionML=[ENU=Cross-Reference No.;
                                                              THA=หมายเลขการอ้างอิงไขว้] }
    { 5706;   ;Unit of Measure (Cross Ref.);Code10;TableRelation=IF (Type=CONST(Item)) "Item Unit of Measure".Code WHERE (Item No.=FIELD(No.));
                                                   CaptionML=[ENU=Unit of Measure (Cross Ref.);
                                                              THA=หน่วยวัด (อ้างอิงไขว้)] }
    { 5707;   ;Cross-Reference Type;Option        ;CaptionML=[ENU=Cross-Reference Type;
                                                              THA=ชนิดการอ้างอิงไขว้];
                                                   OptionCaptionML=[ENU=" ,Customer,Vendor,Bar Code";
                                                                    THA=" ,ลูกค้า,ผู้ขาย,บาร์โคด"];
                                                   OptionString=[ ,Customer,Vendor,Bar Code] }
    { 5708;   ;Cross-Reference Type No.;Code30    ;CaptionML=[ENU=Cross-Reference Type No.;
                                                              THA=หมายเลขชนิดการอ้างอิงไขว้] }
    { 5709;   ;Item Category Code  ;Code10        ;TableRelation="Item Category";
                                                   CaptionML=[ENU=Item Category Code;
                                                              THA=รหัสประเภทสินค้า] }
    { 5710;   ;Nonstock            ;Boolean       ;CaptionML=[ENU=Nonstock;
                                                              THA=ไม่มีในสต็อก];
                                                   Editable=No }
    { 5712;   ;Product Group Code  ;Code10        ;TableRelation="Product Group".Code WHERE (Item Category Code=FIELD(Item Category Code));
                                                   CaptionML=[ENU=Product Group Code;
                                                              THA=รหัสกลุ่มผลิตภัณฑ์] }
    { 7001;   ;Allow Line Disc.    ;Boolean       ;InitValue=Yes;
                                                   CaptionML=[ENU=Allow Line Disc.;
                                                              THA=ใช้ส่วนลดในบรรทัดได้] }
    { 7002;   ;Customer Disc. Group;Code10        ;TableRelation="Customer Discount Group";
                                                   CaptionML=[ENU=Customer Disc. Group;
                                                              THA=กลุ่มส่วนลดสำหรับลูกค้า] }
    { 17110;  ;S/T Exempt          ;Boolean       ;CaptionML=[ENU=S/T Exempt;
                                                              THA=ยกเว้น S/T] }
    { 28040;  ;WHT Business Posting Group;Code10  ;TableRelation="WHT Business Posting Group";
                                                   CaptionML=[ENU=WHT Business Posting Group;
                                                              THA=กลุ่มการลงรายการบัญชีธุรกิจ WHT] }
    { 28041;  ;WHT Product Posting Group;Code10   ;TableRelation="WHT Product Posting Group";
                                                   CaptionML=[ENU=WHT Product Posting Group;
                                                              THA=กลุ่มการลงรายการผลิตภัณฑ์ WHT] }
    { 28042;  ;WHT Absorb Base     ;Decimal       ;CaptionML=[ENU=WHT Absorb Base;
                                                              THA=อัตราพื้นฐานภาษีหัก ณ ที่จ่าย] }
    { 50058;  ;Posted Document Type;Option        ;OptionCaptionML=ENU=Invoice,Credit Memo;
                                                   OptionString=Invoice,Credit Memo;
                                                   Editable=No }
    { 50059;  ;Posted Document No. ;Code20        ;TableRelation=IF (Posted Document Type=CONST(Invoice)) "Sales Invoice Header"
                                                                 ELSE IF (Posted Document Type=CONST(Credit Memo)) "Sales Cr.Memo Header";
                                                   CaptionML=ENU=Posted Document No.;
                                                   Editable=No }
    { 50060;  ;Posted Document Line No.;Integer   ;TableRelation=IF (Posted Document Type=CONST(Invoice)) "Sales Invoice Line"."Line No." WHERE (Document No.=FIELD(Posted Document No.))
                                                                 ELSE IF (Posted Document Type=CONST(Credit Memo)) "Sales Cr.Memo Line"."Line No." WHERE (Document No.=FIELD(Posted Document No.));
                                                   CaptionML=ENU=Posted Document No.;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Document No.,Line No.                   ;SumIndexFields=Amount,Amount Including VAT;
                                                   Clustered=Yes }
    {    ;Sell-to Customer No.                     }
    {    ;Sell-to Customer No.,Type,Document No.   }
    {    ;Shipment No.,Shipment Line No.           }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=You cannot delete the order line because it is associated with purchase order %1 line %2.;THA=คุณไม่สามารถลบบรรทัดใบสั่งเนื่องจากบรรทัดนี้เชื่อมโยงกับใบสั่งซื้อ %1บรรทัด %2';
      Text001@1001 : TextConst 'ENU=You cannot rename a %1.;THA=คุณไม่สามารถเปลี่ยนชื่อ %1';
      Text002@1002 : TextConst 'ENU=You cannot change %1 because the order line is associated with purchase order %2 line %3.;THA=คุณไม่สามารถเปลี่ยน %1 เนื่องจากบรรทัดใบสั่งนี้เชื่อมโยงกับใบสั่งซื้อ %2 บรรทัด %3';
      Text003@1003 : TextConst 'ENU=must not be less than %1;THA=ต้องไม่น้อยกว่า %1';
      Text005@1004 : TextConst 'ENU=You cannot invoice more than %1 units.;THA=คุณไม่สามารถออกใบส่งของมากกว่า %1 หน่วย';
      Text006@1005 : TextConst 'ENU=You cannot invoice more than %1 base units.;THA=คุณไม่สามารถออกใบส่งของมากกว่า %1 หน่วยพื้นฐาน';
      Text007@1006 : TextConst 'ENU=You cannot ship more than %1 units.;THA=คุณไม่สามารถจัดส่งได้มากกว่า %1 หน่วย';
      Text008@1007 : TextConst 'ENU=You cannot ship more than %1 base units.;THA=คุณจะจัดส่งมากกว่า %1 หน่วยพื้นฐานไม่ได้';
      Text009@1008 : TextConst 'ENU=" must be 0 when %1 is %2.";THA=" ต้องเป็น 0 หาก %1 เป็น %2"';
      Text011@1010 : TextConst 'ENU=Automatic reservation is not possible.\Reserve items manually?;THA=ไม่สามารถสำรองโดยอัตโนมัติได้\สำรองสินค้าด้วยตนเองหรือ?';
      Text012@1011 : TextConst 'ENU=Change %1 from %2 to %3?;THA=เปลี่ยน %1 จาก %2 เป็น %3 หรือ?';
      Text014@1013 : TextConst 'ENU=%1 %2 is before Work Date %3;THA=%1 %2 เป็นวันก่อนวันที่ทำงาน %3';
      Text016@1040 : TextConst 'ENU="%1 is required for %2 = %3.";THA="จำเป็นต้องใช้ %1 เพื่อให้  %2 = %3"';
      Text017@1044 : TextConst 'ENU=\The entered information will be disregarded by warehouse operations.;THA=\การดำเนินงานคลังสินค้าจะข้ามรายละเอียดที่ป้อน';
      Text018@1017 : TextConst 'ENU="must not be specified when %1 = %2";THA="ต้องไม่ระบุหาก %1 = %2"';
      Text020@1019 : TextConst 'ENU=You cannot return more than %1 units.;THA=คุณจะส่งคืนมากกว่า %1 หน่วยไม่ได้';
      Text021@1020 : TextConst 'ENU=You cannot return more than %1 base units.;THA=คุณจะส่งคืนมากกว่า %1 หน่วยพื้นฐานไม่ได้';
      Text023@1022 : TextConst 'ENU=%1 %2 cannot be found in the %3 or %4 table.;THA=ไม่พบ %1 %2 ในตาราง %3 หรือ %4';
      Text024@1023 : TextConst 'ENU=%1 and %2 cannot both be empty when %3 is used.;THA=ทั้ง %1 และ %2 จะว่างเปล่าไม่ได้หากมีการใช้ %3';
      Text025@1024 : TextConst 'ENU=No %1 has been posted for %2 %3 and %4 %5.;THA=ไม่มีการลงรายการบัญชี %1 สำหรับ %2 %3 และ %4 %5';
      Text026@1025 : TextConst 'ENU=You cannot change %1 if the item charge has already been posted.;THA=คุณไม่สามารถเปลี่ยน %1 หากมีการลงรายการบัญชีค่าธรรมเนียมสินค้าแล้ว';
      Text028@1098 : TextConst 'ENU=You cannot change the %1 when the %2 has been filled in.;THA=คุณไม่สามารถเปลี่ยน %1 เมื่อมีการกรอกข้อมูลใน %2';
      Text029@1021 : TextConst 'ENU=must be positive;THA=ต้องเป็นค่าบวก';
      Text030@1042 : TextConst 'ENU=must be negative;THA=ต้องเป็นค่าลบ';
      Text031@1093 : TextConst 'ENU=You must either specify %1 or %2.;THA=คุณต้องระบุ %1 หรือ %2 อย่างใดอย่างหนึ่ง';
      Text032@1041 : TextConst 'ENU=You must select a %1 that applies to a range of entries when the related service contract is %2.;THA=คุณต้องเลือก %1 ที่จะใช้กับช่วงรายการบัญชี เมื่อสัญญาการให้บริการที่เกี่ยวข้องเป็น %2';
      Text033@1072 : TextConst 'ENU=You cannot modify the %1 field if the %2 and/or %3 fields are empty.;THA=คุณไม่สามารถดัดแปลงฟิลด์ %1 ถ้าฟิลด์ %2 และ/หรือ %3 เป็นค่าว่าง';
      Text034@1084 : TextConst 'ENU=The value of %1 field must be a whole number for the item included in the service item group if the %2 field in the Service Item Groups window contains a check mark.;THA=ค่าของฟิลด์ %1 ต้องเป็นจำนวนเต็มสำหรับสินค้าที่รวมอยู่ในกลุ่มสินค้ารับบริการหากกาเครื่องหมายถูกที่ฟิลด์ %2 ในหน้าต่างกลุ่มสินค้ารับบริการ';
      Text035@1083 : TextConst 'ENU="Warehouse ";THA=คลังสินค้า';
      Text036@1090 : TextConst 'ENU="Inventory ";THA="สินค้าคงคลัง "';
      SalesTaxInvHeader@1000000001 : Record 50054;
      SalesTaxInvLine2@1000000003 : Record 50055;
      TempSalesLine@1000000004 : Record 50055;
      StdTxt@1000000005 : Record 7;
      GLAcc@1000000006 : Record 15;
      Currency@1000000016 : Record 4;
      GenBusPostingGrp@1000000018 : Record 250;
      GenProdPostingGrp@1000000017 : Record 251;
      VATPostingSetup@1000000019 : Record 325;
      Item@1000000007 : Record 27;
      ItemCharge@1000000015 : Record 5800;
      ItemVariant@1000000021 : Record 5401;
      SKU@1000000009 : Record 5700;
      ItemTranslation@1000000010 : Record 30;
      UnitOfMeasure@1000000020 : Record 204;
      FA@1000000014 : Record 5600;
      Res@1000000011 : Record 156;
      ResCost@1000000012 : Record 202;
      ResFindUnitCost@1000000013 : Codeunit 220;
      DimMgt@1000000008 : Codeunit 408;
      UOMMgt@1000000002 : Codeunit 5402;
      SalesPost@1000000000 : Codeunit 80;

    PROCEDURE GetCurrencyCode@1() : Code[10];
    VAR
      SalesTaxInvHeader@1000 : Record 50054;
    BEGIN
      IF ("Document No." = SalesTaxInvHeader."No.") THEN
        EXIT(SalesTaxInvHeader."Currency Code")
      ELSE
        IF SalesTaxInvHeader.GET("Document No.") THEN
          EXIT(SalesTaxInvHeader."Currency Code")
        ELSE
          EXIT('');
    END;

    PROCEDURE ShowDimensions@25();
    VAR
      PostedDocDim@1000 : Record 359;
      PostedDocDimensions@1001 : Page 547;
    BEGIN
      TESTFIELD("No.");
      TESTFIELD("Line No.");
      PostedDocDim.SETRANGE("Table ID",DATABASE::"Sales Tax Invoice/Rec. Line");
      PostedDocDim.SETRANGE("Document No.","Document No.");
      PostedDocDim.SETRANGE("Line No.","Line No.");
      PostedDocDimensions.SETTABLEVIEW(PostedDocDim);
      PostedDocDimensions.RUNMODAL;
    END;

    PROCEDURE CalcVATAmountLines@2(VAR SalesInvHeader@1000 : Record 50054;VAR VATAmountLine@1001 : Record 290);
    BEGIN
      VATAmountLine.DELETEALL;
      SETRANGE("Document No.",SalesInvHeader."No.");
      IF FIND('-') THEN
        REPEAT
          VATAmountLine.INIT;
          VATAmountLine."VAT Identifier" := "VAT Identifier";
          VATAmountLine."VAT Calculation Type" := "VAT Calculation Type";
          VATAmountLine."Tax Group Code" := "Tax Group Code";
          VATAmountLine."VAT %" := "VAT %";
          VATAmountLine."VAT Base" := Amount;
          VATAmountLine."VAT Amount" := "Amount Including VAT" - Amount + "VAT Difference";
          VATAmountLine."Amount Including VAT" := "Amount Including VAT" + "VAT Difference";
          VATAmountLine."Line Amount" := "Line Amount";
          IF "Allow Invoice Disc." THEN
            VATAmountLine."Inv. Disc. Base Amount" := "Line Amount";
          VATAmountLine."Invoice Discount Amount" := "Inv. Discount Amount";
          VATAmountLine.Quantity := "Quantity (Base)";
          VATAmountLine."Calculated VAT Amount" := "Amount Including VAT" - Amount;
          VATAmountLine."VAT Difference" := "VAT Difference";
          VATAmountLine.InsertLine;
        UNTIL NEXT = 0;
    END;

    LOCAL PROCEDURE GetFieldCaption@31(FieldNumber@1000 : Integer) : Text[100];
    VAR
      Field@1001 : Record 2000000041;
    BEGIN
      Field.GET(DATABASE::"Sales Tax Invoice/Rec. Line",FieldNumber);
      EXIT(Field."Field Caption");
    END;

    LOCAL PROCEDURE GetCaptionClass@34(FieldNumber@1000 : Integer) : Text[80];
    VAR
      SalesInvHeader@1001 : Record 50054;
    BEGIN
      IF NOT SalesInvHeader.GET("Document No.") THEN
        SalesInvHeader.INIT;
      IF SalesInvHeader."Prices Including VAT" THEN
        EXIT('2,1,' + GetFieldCaption(FieldNumber))
      ELSE
        EXIT('2,0,' + GetFieldCaption(FieldNumber));
    END;

    LOCAL PROCEDURE TestStatusOpen@33();
    BEGIN
      GetSalesHeader;
      SalesTaxInvHeader.TESTFIELD("Issued Tax Invoice/Receipt",FALSE);
      SalesTaxInvHeader.TESTFIELD("Cancel Tax Invoice",FALSE);
    END;

    PROCEDURE GetSalesHeader@1000000000();
    BEGIN
      SalesTaxInvHeader.GET("Document No.");
    END;

    LOCAL PROCEDURE GetItem@9();
    BEGIN
      TESTFIELD("No.");
      IF "No." <> Item."No." THEN
        Item.GET("No.");
    END;

    LOCAL PROCEDURE GetUnitCost@5808();
    BEGIN
      TESTFIELD(Type,Type::Item);
      TESTFIELD("No.");
      GetItem;
      "Qty. per Unit of Measure" := UOMMgt.GetQtyPerUnitOfMeasure(Item,"Unit of Measure Code");
      IF GetSKU THEN
        VALIDATE("Unit Cost (LCY)",SKU."Unit Cost" * "Qty. per Unit of Measure")
      ELSE
        VALIDATE("Unit Cost (LCY)",Item."Unit Cost" * "Qty. per Unit of Measure");
    END;

    LOCAL PROCEDURE GetSKU@5806() : Boolean;
    BEGIN
      IF (SKU."Location Code" = "Location Code") AND
         (SKU."Item No." = "No.") AND
         (SKU."Variant Code" = "Variant Code")
      THEN
        EXIT(TRUE);
      IF SKU.GET("Location Code","No.","Variant Code") THEN
        EXIT(TRUE)
      ELSE
        EXIT(FALSE);
    END;

    PROCEDURE GetItemTranslation@42();
    BEGIN
      GetSalesHeader;
      IF ItemTranslation.GET("No.","Variant Code",SalesTaxInvHeader."Language Code") THEN BEGIN
        Description := ItemTranslation.Description;
        "Description 2" := ItemTranslation."Description 2";
      END;
    END;

    LOCAL PROCEDURE FindResUnitCost@5();
    BEGIN
      ResCost.INIT;
      ResCost.Code := "No.";
      ResCost."Work Type Code" := "Work Type Code";
      ResFindUnitCost.RUN(ResCost);
      VALIDATE("Unit Cost (LCY)",ResCost."Unit Cost" * "Qty. per Unit of Measure");
    END;

    LOCAL PROCEDURE GetFAPostingGroup@6();
    VAR
      LocalGLAcc@1000 : Record 15;
      FASetup@1001 : Record 5603;
      FAPostingGr@1002 : Record 5606;
      FADeprBook@1003 : Record 5612;
    BEGIN
      IF (Type <> Type::"Fixed Asset") OR ("No." = '') THEN
        EXIT;
      IF "Depreciation Book Code" = '' THEN BEGIN
        FASetup.GET;
        "Depreciation Book Code" := FASetup."Default Depr. Book";
        IF NOT FADeprBook.GET("No.","Depreciation Book Code") THEN
          "Depreciation Book Code" := '';
        IF "Depreciation Book Code" = '' THEN
          EXIT;
      END;
      FADeprBook.GET("No.","Depreciation Book Code");
      FADeprBook.TESTFIELD("FA Posting Group");
      FAPostingGr.GET(FADeprBook."FA Posting Group");
      FAPostingGr.TESTFIELD("Acq. Cost Acc. on Disposal");
      LocalGLAcc.GET(FAPostingGr."Acq. Cost Acc. on Disposal");
      LocalGLAcc.CheckGLAcc;
      LocalGLAcc.TESTFIELD("Gen. Prod. Posting Group");
      "Posting Group" := FADeprBook."FA Posting Group";
      "Gen. Prod. Posting Group" := LocalGLAcc."Gen. Prod. Posting Group";
      "Tax Group Code" := LocalGLAcc."Tax Group Code";
      VALIDATE("VAT Prod. Posting Group",LocalGLAcc."VAT Prod. Posting Group");
    END;

    PROCEDURE CreateDim@26(Type1@1000 : Integer;No1@1001 : Code[20];Type2@1002 : Integer;No2@1003 : Code[20];Type3@1004 : Integer;No3@1005 : Code[20]);
    VAR
      SourceCodeSetup@1006 : Record 242;
      TableID@1007 : ARRAY [10] OF Integer;
      No@1008 : ARRAY [10] OF Code[20];
    BEGIN
      SourceCodeSetup.GET;
      TableID[1] := Type1;
      No[1] := No1;
      TableID[2] := Type2;
      No[2] := No2;
      TableID[3] := Type3;
      No[3] := No3;
      "Shortcut Dimension 1 Code" := '';
      "Shortcut Dimension 2 Code" := '';
      {
      DimMgt.GetPreviousDocDefaultDim(
        DATABASE::"Sales Header","Document Type","Document No.",0,
        DATABASE::Customer,"Shortcut Dimension 1 Code","Shortcut Dimension 2 Code");
      }
      DimMgt.GetPreviousPostedDocDefaultDim(
        DATABASE::"Sales Tax Invoice/Rec. Header","Document No.",0,
        DATABASE::Customer,"Shortcut Dimension 1 Code","Shortcut Dimension 2 Code");
      DimMgt.GetDefaultDim(
        TableID,No,SourceCodeSetup.Sales,
        "Shortcut Dimension 1 Code","Shortcut Dimension 2 Code");
      IF "Line No." <> 0 THEN
        DimMgt.UpdatePostedDocDefaultDim(
          DATABASE::"Sales Tax Invoice/Rec. Line","Document No.","Line No.",
          "Shortcut Dimension 1 Code","Shortcut Dimension 2 Code");
    END;

    LOCAL PROCEDURE CalcBaseQty@14(Qty@1000 : Decimal) : Decimal;
    BEGIN
      TESTFIELD("Qty. per Unit of Measure");
      EXIT(ROUND(Qty * "Qty. per Unit of Measure",0.00001));
    END;

    PROCEDURE UpdateAmounts@1000000003();
    BEGIN
      IF CurrFieldNo <> FIELDNO("Allow Invoice Disc.") THEN
        TESTFIELD(Type);
      GetSalesHeader;

      IF "Line Amount" <> ROUND(Quantity * "Unit Price",Currency."Amount Rounding Precision") - "Line Discount Amount" THEN BEGIN
        "Line Amount" := ROUND(Quantity * "Unit Price",Currency."Amount Rounding Precision") - "Line Discount Amount";
        "VAT Difference" := 0;
      END;
      CalcAmountLines;
    END;

    PROCEDURE ValidateShortcutDimCode@29(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    BEGIN
      DimMgt.ValidateDimValueCode(FieldNumber,ShortcutDimCode);
      {
      IF "Line No." <> 0 THEN
        DimMgt.SaveDocDim(
          DATABASE::"Sales Line","Document Type","Document No.",
          "Line No.",FieldNumber,ShortcutDimCode)
      ELSE
        DimMgt.SaveTempDim(FieldNumber,ShortcutDimCode);
      }
    END;

    PROCEDURE LookupShortcutDimCode@28(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    BEGIN
    END;

    PROCEDURE ShowShortcutDimCode@27(VAR ShortcutDimCode@1000 : ARRAY [8] OF Code[20]);
    BEGIN
    END;

    PROCEDURE CalcAmountLines@35();
    VAR
      PrevVatAmountLine@1007 : Record 290;
      Currency@1004 : Record 4;
      SalesTaxCalculate@1005 : Codeunit 398;
      QtyFactor@1006 : Decimal;
      VATAmount@1000000000 : Decimal;
    BEGIN
      IF SalesTaxInvHeader."Prices Including VAT" THEN BEGIN
        CASE "VAT Calculation Type" OF
          "VAT Calculation Type"::"Normal VAT",
          "VAT Calculation Type"::"Reverse Charge VAT":
            BEGIN
              "VAT Base Amount" :=
                 ROUND(
                   ("Line Amount" - "Inv. Discount Amount") / (1 + "VAT %" / 100),
                   Currency."Amount Rounding Precision") - "VAT Difference";
              Amount :=
                 ROUND("VAT Base Amount" *
                   (1 - SalesTaxInvHeader."VAT Base Discount %" / 100),
                   Currency."Amount Rounding Precision",Currency.VATRoundingDirection);
              "Amount Including VAT" := "VAT Base Amount" + Amount;
            END;
          "VAT Calculation Type"::"Full VAT":
            BEGIN
              "VAT Base Amount" := 0;
              Amount := "VAT Difference" + "Line Amount" - "Inv. Discount Amount";
              "Amount Including VAT" := Amount;
            END;
          "VAT Calculation Type"::"Sales Tax":
            BEGIN
              "Amount Including VAT" := "Line Amount" - "Inv. Discount Amount";
              {
              "VAT Base amount" :=
                 ROUND(
                   SalesTaxCalculate.ReverseCalculateTax(
                   SalesHeader."Tax Area Code","Tax Group Code",SalesHeader."Tax Liable",
                   SalesHeader."Posting Date","Amount Including VAT",Quantity,SalesHeader."Currency Factor"),
                   Currency."Amount Rounding Precision");
              "VAT Amount" := "VAT Difference" + "Amount Including VAT" - "VAT Base amount";
              IF "VAT Base amount" = 0 THEN
                "VAT %" := 0
              ELSE
                "VAT %" := ROUND(100 * "VAT Amount" / "VAT Base amount",0.00001);
              }
            END;
        END;
      END ELSE BEGIN
        CASE "VAT Calculation Type" OF
          "VAT Calculation Type"::"Normal VAT",
          "VAT Calculation Type"::"Reverse Charge VAT":
            BEGIN
              "VAT Base Amount" := "Line Amount" - "Inv. Discount Amount";
              VATAmount :=
                 "VAT Difference" +
                 ROUND(
                   "VAT Base Amount" * "VAT %" / 100 * (1 - SalesTaxInvHeader."VAT Base Discount %" / 100),
                   Currency."Amount Rounding Precision",Currency.VATRoundingDirection);
              "Amount Including VAT" := "Line Amount" - "Inv. Discount Amount" + VATAmount;
              Amount := "Line Amount" - "Inv. Discount Amount";
            END;
            {
          "VAT Calculation Type"::"Full VAT":
            BEGIN
              "VAT Base amount" := 0;
              "Amount" := "VAT Difference" + "Line Amount" - "Invoice Discount Amount";
              "Amount Including VAT" := "Amount";
            END;
          "VAT Calculation Type"::"Sales Tax":
            BEGIN
              "VAT Base" := "Line Amount" - "Invoice Discount Amount";
              "VAT Amount" :=
                  SalesTaxCalculate.CalculateTax(
                    SalestaxinvHeader."Tax Area Code","Tax Group Code",SalestaxinvHeader."Tax Liable",
                    SalestaxinvHeader."Posting Date","VAT Base",Quantity,SalestaxinvHeader."Currency Factor");
              IF "VAT Base" = 0 THEN
                  "VAT %" := 0
              ELSE
                  "VAT %" := ROUND(100 * "VAT Amount" / "VAT Base",0.00001);
              "VAT Amount" :=
                "VAT Difference" +
                ROUND("VAT Amount",Currency."Amount Rounding Precision",Currency.VATRoundingDirection);
                "Amount Including VAT" := "VAT Base" + "VAT Amount";
            END;
          }
        END;
      END;
    END;

    PROCEDURE UpdateVATOnLines@36(QtyType@1000 : 'General,Invoicing,Shipping';VAR SalesTaxInvHeader@1001 : Record 50054;VAR SalesTaxInvLine@1002 : Record 50055;VAR VATAmountLine@1003 : Record 290);
    VAR
      TempVATAmountLineRemainder@1004 : TEMPORARY Record 290;
      Currency@1005 : Record 4;
      RecRef@1015 : RecordRef;
      xRecRef@1014 : RecordRef;
      ChangeLogMgt@1013 : Codeunit 423;
      NewAmount@1006 : Decimal;
      NewAmountIncludingVAT@1007 : Decimal;
      NewVATBaseAmount@1008 : Decimal;
      VATAmount@1009 : Decimal;
      VATDifference@1010 : Decimal;
      InvDiscAmount@1011 : Decimal;
      LineAmountToInvoice@1012 : Decimal;
    BEGIN
      IF SalesTaxInvHeader."Currency Code" = '' THEN
        Currency.InitRoundingPrecision
      ELSE
        Currency.GET(SalesTaxInvHeader."Currency Code");

      TempVATAmountLineRemainder.DELETEALL;

      WITH SalesTaxInvLine DO BEGIN
        SETRANGE("Document No.",SalesTaxInvHeader."No.");
        SETFILTER(Type,'>0');
        SETFILTER(Quantity,'<>0');
        LOCKTABLE;
        IF FIND('-') THEN
          REPEAT
            VATAmountLine.GET("VAT Identifier","VAT Calculation Type","Tax Group Code",FALSE,"Line Amount" >= 0);
            IF VATAmountLine.Modified THEN BEGIN
              xRecRef.GETTABLE(SalesTaxInvLine);
              IF NOT TempVATAmountLineRemainder.GET(
                "VAT Identifier","VAT Calculation Type","Tax Group Code",FALSE,"Line Amount" >= 0)
              THEN BEGIN
                TempVATAmountLineRemainder := VATAmountLine;
                TempVATAmountLineRemainder.INIT;
                TempVATAmountLineRemainder.INSERT;
              END;

              LineAmountToInvoice := "Line Amount";

              IF "Allow Invoice Disc." THEN BEGIN
                IF VATAmountLine."Inv. Disc. Base Amount" = 0 THEN
                  InvDiscAmount := 0
                ELSE BEGIN
                  TempVATAmountLineRemainder."Invoice Discount Amount" :=
                    TempVATAmountLineRemainder."Invoice Discount Amount" +
                    VATAmountLine."Invoice Discount Amount" * LineAmountToInvoice /
                    VATAmountLine."Inv. Disc. Base Amount";
                  InvDiscAmount :=
                    ROUND(
                      TempVATAmountLineRemainder."Invoice Discount Amount",Currency."Amount Rounding Precision");
                  TempVATAmountLineRemainder."Invoice Discount Amount" :=
                    TempVATAmountLineRemainder."Invoice Discount Amount" - InvDiscAmount;
                END;
                IF QtyType = QtyType::General THEN BEGIN
                  "Inv. Discount Amount" := InvDiscAmount;
                  //CalcInvDiscToInvoice;
                END;// ELSE
                  //"Inv. Disc. Amount to Invoice" := InvDiscAmount;
              END ELSE
                InvDiscAmount := 0;

              IF QtyType = QtyType::General THEN
                IF SalesTaxInvHeader."Prices Including VAT" THEN BEGIN
                  IF (VATAmountLine."Line Amount" - VATAmountLine."Invoice Discount Amount" = 0) OR
                     ("Line Amount" = 0)
                  THEN BEGIN
                    VATAmount := 0;
                    NewAmountIncludingVAT := 0;
                  END ELSE BEGIN
                    VATAmount :=
                      TempVATAmountLineRemainder."VAT Amount" +
                      VATAmountLine."VAT Amount" *
                      ("Line Amount" - "Inv. Discount Amount") /
                      (VATAmountLine."Line Amount" - VATAmountLine."Invoice Discount Amount");
                    NewAmountIncludingVAT :=
                      TempVATAmountLineRemainder."Amount Including VAT" +
                      VATAmountLine."Amount Including VAT" *
                      ("Line Amount" - "Inv. Discount Amount") /
                      (VATAmountLine."Line Amount" - VATAmountLine."Invoice Discount Amount");
                  END;
                  NewAmount :=
                    ROUND(NewAmountIncludingVAT,Currency."Amount Rounding Precision") -
                    ROUND(VATAmount,Currency."Amount Rounding Precision");
                  NewVATBaseAmount :=
                    ROUND(
                      NewAmount * (1 - SalesTaxInvHeader."VAT Base Discount %" / 100),
                      Currency."Amount Rounding Precision");
                END ELSE BEGIN
                  IF "VAT Calculation Type" = "VAT Calculation Type"::"Full VAT" THEN BEGIN
                    VATAmount := "Line Amount" - "Inv. Discount Amount";
                    NewAmount := 0;
                    NewVATBaseAmount := 0;
                  END ELSE BEGIN
                    NewAmount := "Line Amount" - "Inv. Discount Amount";
                    NewVATBaseAmount :=
                      ROUND(
                        NewAmount * (1 - SalesTaxInvHeader."VAT Base Discount %" / 100),
                        Currency."Amount Rounding Precision");
                    IF VATAmountLine."VAT Base" = 0 THEN
                      VATAmount := 0
                    ELSE
                      VATAmount :=
                        TempVATAmountLineRemainder."VAT Amount" +
                        VATAmountLine."VAT Amount" * NewAmount / VATAmountLine."VAT Base";
                  END;
                  NewAmountIncludingVAT := NewAmount + ROUND(VATAmount,Currency."Amount Rounding Precision");
                END
              ELSE BEGIN
                IF (VATAmountLine."Line Amount" - VATAmountLine."Invoice Discount Amount") = 0 THEN
                  VATDifference := 0
                ELSE
                  VATDifference :=
                    TempVATAmountLineRemainder."VAT Difference" +
                    VATAmountLine."VAT Difference" * (LineAmountToInvoice - InvDiscAmount) /
                    (VATAmountLine."Line Amount" - VATAmountLine."Invoice Discount Amount");
                IF LineAmountToInvoice = 0 THEN
                  "VAT Difference" := 0
                ELSE
                  "VAT Difference" := ROUND(VATDifference,Currency."Amount Rounding Precision");
              END;
              {
              IF (QtyType = QtyType::General) AND (SalesTaxInvHeader.Status = SalesTaxInvHeader.Status::Released) THEN BEGIN
                Amount := NewAmount;
                "Amount Including VAT" := ROUND(NewAmountIncludingVAT,Currency."Amount Rounding Precision");
                "VAT Base Amount" := NewVATBaseAmount;
              END;
              }
              //SalesTaxInvLine.InitOutstanding;
              MODIFY;
              RecRef.GETTABLE(SalesTaxInvLine);
              ChangeLogMgt.LogModification(RecRef,xRecRef);

              TempVATAmountLineRemainder."Amount Including VAT" :=
                NewAmountIncludingVAT - ROUND(NewAmountIncludingVAT,Currency."Amount Rounding Precision");
              TempVATAmountLineRemainder."VAT Amount" := VATAmount - NewAmountIncludingVAT + NewAmount;
              TempVATAmountLineRemainder."VAT Difference" := VATDifference - "VAT Difference";
              TempVATAmountLineRemainder.MODIFY;
            END;
          UNTIL NEXT = 0;
        SETRANGE(Type);
        SETRANGE(Quantity);
      END;
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   15.05.2007   KKE   New table for "Sales Tax Invoice/Receipt Line" - Ads. Sales Module
    }
    END.
  }
}

OBJECT Table 50056 Average VAT Setup
{
  OBJECT-PROPERTIES
  {
    Date=08/20/07;
    Time=10:57:57 PM;
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               "User ID" := USERID ;
             END;

    LookupPageID=Page50043;
    DrillDownPageID=Page50043;
  }
  FIELDS
  {
    { 1   ;   ;Year                ;Integer        }
    { 2   ;   ;From Date           ;Date           }
    { 3   ;   ;To Date             ;Date           }
    { 4   ;   ;VAT Claim %         ;Decimal       ;DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   MaxValue=100 }
    { 5   ;   ;VAT Unclaim %       ;Decimal       ;DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   MaxValue=100 }
    { 6   ;   ;User ID             ;Code10        ;TableRelation=User;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Year                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    BEGIN
    END.
  }
}

OBJECT Table 50057 Complaint
{
  OBJECT-PROPERTIES
  {
    Date=07/02/08;
    Time=[ 6:33:33 PM];
    Version List=;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               SubscriptionSetup.GET;
               IF "Complaint No." = '' THEN BEGIN
                 SubscriptionSetup.TESTFIELD("Complaint Nos.");
                 NoSeriesMgt.InitSeries(SubscriptionSetup."Complaint Nos.", xRec."No. Series", 0D, "Complaint No.", "No. Series");
               END;

               "Complaint Date" := TODAY;
               "Last Update by" := USERID;
               "Update Date" := TODAY;
               "Start Time" := TIME;
             END;

    OnModify=BEGIN
               IF "End Time" = 0T THEN
                 "End Time" := TIME;
               "Usage Time"  := "End Time"-"Start Time";

               "Last Update by" := USERID;
               "Update Date" := TODAY;
             END;

  }
  FIELDS
  {
    { 1   ;   ;Complaint No.       ;Code20         }
    { 2   ;   ;Complaint Date      ;Date           }
    { 3   ;   ;Type                ;Option        ;OptionString=[ ,Member,Non-Member] }
    { 4   ;   ;Subscriber No.      ;Code20        ;TableRelation=Subscriber.No.;
                                                   OnValidate=BEGIN
                                                                GetSubscriber("Subscriber No.");
                                                                "Customer No." := Subscriber."Customer No.";
                                                                "Subscriber Name" := Subscriber.Name;
                                                                "Address-1" := Subscriber."Address 1";
                                                                "Address-2" := Subscriber."Address 2";
                                                                "Address-3" := Subscriber."Address 3";
                                                                "Phone No." := Subscriber."Phone No.";
                                                                "Mobile No." := Subscriber."Mobile No.";
                                                                "Fax No." := Subscriber."Fax No.";
                                                              END;
                                                               }
    { 5   ;   ;Customer No.        ;Code20        ;TableRelation=Customer }
    { 6   ;   ;Subscriber Name     ;Text50         }
    { 7   ;   ;Address-1           ;Text50         }
    { 8   ;   ;Address-2           ;Text50         }
    { 9   ;   ;Address-3           ;Text50         }
    { 10  ;   ;Phone No.           ;Text30         }
    { 11  ;   ;Mobile No.          ;Text30         }
    { 12  ;   ;Fax No.             ;Text30         }
    { 13  ;   ;Call Category       ;Code10        ;TableRelation="General Master Setup".Code WHERE (Type=FILTER(Call Category)) }
    { 14  ;   ;Magazine Code       ;Code20        ;TableRelation=Magazine }
    { 15  ;   ;Start Time          ;Time          ;Editable=No }
    { 16  ;   ;End Time            ;Time          ;Editable=No }
    { 17  ;   ;Usage Time          ;Integer       ;Editable=No;
                                                   AutoFormatType=2 }
    { 18  ;   ;Message-1           ;Text100        }
    { 19  ;   ;Message-2           ;Text100        }
    { 20  ;   ;Message-3           ;Text100        }
    { 21  ;   ;Complaint Topic     ;Code10        ;TableRelation="General Master Setup".Code WHERE (Type=FILTER(Complaint Topic)) }
    { 22  ;   ;Last Update by      ;Code10         }
    { 23  ;   ;Update Date         ;Date           }
    { 99  ;   ;No. Series          ;Code10        ;TableRelation="No. Series" }
  }
  KEYS
  {
    {    ;Complaint No.                           ;Clustered=Yes }
    {    ;Complaint Date,Complaint No.             }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      SubscriptionSetup@1000000001 : Record 50000;
      Subscriber@1000000003 : Record 50001;
      NoSeriesMgt@1000000000 : Codeunit 396;
      Complain@1000000002 : Record 50057;

    PROCEDURE AssistEdit@1000000003(OldComplaint@1000000000 : Record 50057) : Boolean;
    VAR
      Complaint2@1000000001 : Record 50057;
    BEGIN
      WITH Complain DO BEGIN
        Complain := Rec;
        SubscriptionSetup.GET;
        SubscriptionSetup.TESTFIELD("Complaint Nos.");
        IF NoSeriesMgt.SelectSeries(SubscriptionSetup."Complaint Nos.",OldComplaint."No. Series","No. Series") THEN BEGIN
            NoSeriesMgt.SetSeries("Complaint No.");
            Rec := Complain;
            EXIT(TRUE);
          END;
      END;
    END;

    PROCEDURE GetSubscriber@1000000001(No@1000000000 : Code[20]);
    BEGIN
      IF No <> Subscriber."No." THEN
        Subscriber.GET(No);
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      PTH : Phitsanu Thoranasoonthorn

      No.   Date         Sign  Description
      ----------------------------------------
      001   02.07.2008   PTH   Complaint
    }
    END.
  }
}

OBJECT Table 50090 Item VAT Announce Price
{
  OBJECT-PROPERTIES
  {
    Date=03/01/06;
    Time=[ 6:00:00 PM];
    Version List=AVATHA4.01;
  }
  PROPERTIES
  {
  }
  FIELDS
  {
    { 1   ;   ;Item No.            ;Code20        ;TableRelation=Item }
    { 2   ;   ;VAT Type            ;Option        ;OptionString=Input VAT,Output VAT }
    { 3   ;   ;Starting Date       ;Date           }
    { 4   ;   ;Ending Date         ;Date           }
    { 5   ;   ;Announce Price      ;Decimal        }
  }
  KEYS
  {
    {    ;Item No.,VAT Type,Starting Date,Ending Date;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Localization TH
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   01.02.2006   KKE   LOC-VAT-001.
    }
    END.
  }
}

OBJECT Table 55000 Petty Cash Setup
{
  OBJECT-PROPERTIES
  {
    Date=11/17/06;
    Time=[ 6:00:00 PM];
    Version List=AVATHA4.40;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Petty Cash Setup;
               THA=เซ็ตอัพเงินสดย่อย];
  }
  FIELDS
  {
    { 1   ;   ;Primary Key         ;Code10        ;CaptionML=[ENU=Primary Key;
                                                              THA=คีย์หลัก] }
    { 2   ;   ;Petty Cash Nos.     ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=Petty Cash Nos.;
                                                              THA=ชุดหมายเลขเงินสดย่อย] }
    { 3   ;   ;Bank Account No.    ;Code20        ;TableRelation="Bank Account";
                                                   CaptionML=[ENU=Bank Account No.;
                                                              THA=หมายเลขบัญชีธนาคาร] }
    { 4   ;   ;Petty Cash Account No.;Code20      ;TableRelation="G/L Account";
                                                   CaptionML=[ENU=Petty Cash Account No.;
                                                              THA=หมายเลขบัญชีเงินสดย่อย] }
    { 5   ;   ;Allow VAT Difference;Boolean       ;CaptionML=[ENU=Allow VAT Difference;
                                                              THA=ใช้ส่วนต่าง VAT ได้] }
    { 6   ;   ;Settle Petty Cash Nos.;Code10      ;TableRelation="No. Series";
                                                   CaptionML=[ENU=Settle Petty Cash Nos.;
                                                              THA=ชุดหมายเลขการเบิกชดเชยเงินสดย่อย] }
  }
  KEYS
  {
    {    ;Primary Key                             ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Localization TH
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   24.08.2006   KKE   Petty Cash.
    }
    END.
  }
}

OBJECT Table 55001 Petty Cash Header
{
  OBJECT-PROPERTIES
  {
    Date=11/28/11;
    Time=[ 4:14:49 PM];
    Version List=AVATHA4.40;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               PettyCashSetup.GET;

               IF "No." = '' THEN BEGIN
                 PettyCashSetup.TESTFIELD("Petty Cash Nos.");
                 NoSeriesMgt.InitSeries(PettyCashSetup."Petty Cash Nos.",xRec."No. Series","Posting Date","No.","No. Series");
               END;

               InitRecord;

               "Posting Date" := WORKDATE;
               "Document Date" := WORKDATE;
             END;

    OnModify=BEGIN
               TESTFIELD(Status,Status::Open);
             END;

    OnDelete=BEGIN
               DimMgt.DeleteDocDim(DATABASE::"Petty Cash Header",DocDim."Document Type"::Invoice,"No.",0);

               PettyCashLine.LOCKTABLE;
               PettyCashLine.SETRANGE("Document No.","No.");
               PettyCashLine.DELETEALL;

               PettyCashCmtLine.SETRANGE("Document Type",PettyCashCmtLine."Document Type"::Invoice);
               PettyCashCmtLine.SETRANGE("No.","No.");
               PettyCashCmtLine.DELETEALL;

               PostCodeCheck.DeleteAllAddressID(DATABASE::"Petty Cash Header",Rec.GETPOSITION);
             END;

    CaptionML=[ENU=Petty Cash Header;
               THA=หัวข้อเงินสดย่อย];
    LookupPageID=Page50073;
    DrillDownPageID=Page50073;
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20        ;CaptionML=[ENU=No.;
                                                              THA=หมายเลข] }
    { 2   ;   ;Petty Cash Vendor No.;Code20       ;TableRelation=Vendor WHERE (Petty Cash=CONST(Yes));
                                                   OnValidate=BEGIN
                                                                TESTFIELD(Status,Status::Open);
                                                                IF ("Petty Cash Vendor No." <> xRec."Petty Cash Vendor No.") AND
                                                                   (xRec."Petty Cash Vendor No." <> '')
                                                                THEN BEGIN
                                                                  IF HideValidationDialog THEN
                                                                    Confirmed :=TRUE
                                                                  ELSE
                                                                    Confirmed := CONFIRM(Text001,FALSE,FIELDCAPTION("Petty Cash Vendor No."));
                                                                  IF Confirmed THEN BEGIN
                                                                    PettyCashLine.SETRANGE("Document No.","No.");
                                                                    IF "Petty Cash Vendor No." = '' THEN BEGIN
                                                                      IF PettyCashLine.FIND('-') THEN
                                                                        ERROR(
                                                                          Text004,
                                                                          FIELDCAPTION("Petty Cash Vendor No."));
                                                                      INIT;
                                                                      "No. Series" := xRec."No. Series";
                                                                      InitRecord;
                                                                      EXIT;
                                                                    END;
                                                                    PettyCashLine.RESET;
                                                                  END ELSE BEGIN
                                                                    Rec := xRec;
                                                                    EXIT;
                                                                  END;
                                                                END;

                                                                GetVend("Petty Cash Vendor No.");
                                                                Vend.CheckBlockedVendOnDocs(Vend,FALSE);
                                                                Vend.CheckVendorPettyCash;
                                                                Vend.TESTFIELD("Gen. Bus. Posting Group");
                                                                Name := Vend.Name;
                                                                "Name 2" := Vend."Name 2";
                                                                Address := Vend.Address;
                                                                "Address 2" := Vend."Address 2";
                                                                "Address 3" := Vend."Address 3";
                                                                "Name (Thai)" := Vend."Name (Thai)";
                                                                "Address (Thai)" := Vend."Address (Thai)";
                                                                City := Vend.City;
                                                                "Post Code" := Vend."Post Code";
                                                                County := Vend.County;
                                                                "Country Code" := Vend."Country/Region Code";
                                                                IF NOT SkipPayToContact THEN
                                                                  Contact := Vend.Contact;

                                                                VALIDATE("Location Code",Vend."Location Code");
                                                                VALIDATE("Currency Code",Vend."Currency Code");
                                                                "Petty Cash Amount" := Vend."Petty Cash Amount";
                                                                VALIDATE("Gen. Bus. Posting Group",Vend."Gen. Bus. Posting Group");
                                                                VALIDATE("VAT Bus. Posting Group",Vend."VAT Bus. Posting Group");
                                                                VALIDATE("WHT Business Posting Group",Vend."WHT Business Posting Group");
                                                              END;

                                                   CaptionML=[ENU=Petty Cash Vendor No.;
                                                              THA=หมายเลขผู้ขายเงินสดย่อย] }
    { 3   ;   ;Name                ;Text50        ;CaptionML=[ENU=Name;
                                                              THA=ชื่อ] }
    { 4   ;   ;Posting Date        ;Date          ;CaptionML=[ENU=Posting Date;
                                                              THA=วันที่ตั้งหนี้] }
    { 5   ;   ;Document Date       ;Date          ;CaptionML=[ENU=Document Date;
                                                              THA=วันที่เบิก] }
    { 6   ;   ;Location Code       ;Code20        ;TableRelation=Location;
                                                   CaptionML=[ENU=Location Code;
                                                              THA=รหัสที่ตั้ง] }
    { 7   ;   ;Petty Cash Amount   ;Decimal       ;CaptionML=[ENU=Petty Cash Amount;
                                                              THA=วงเงินสดย่อย];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 8   ;   ;Balance Amount      ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Vendor Ledg. Entry".Amount WHERE (Vendor No.=FIELD(Petty Cash Vendor No.),
                                                                                                               Posting Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Balance Amount;
                                                              THA=ดุล];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 9   ;   ;Invoice Description ;Text50        ;CaptionML=[ENU=Invoice Description;
                                                              THA=คำอธิบายใบแจ้งหนี้] }
    { 10  ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=No. Series;
                                                              THA=ชุดหมายเลข] }
    { 11  ;   ;Status              ;Option        ;CaptionML=[ENU=Status;
                                                              THA=สถานะ];
                                                   OptionCaptionML=[ENU=Open,Released;
                                                                    THA=เปิด,นำออกใช้];
                                                   OptionString=Open,Released;
                                                   Editable=No }
    { 15  ;   ;Shortcut Dimension 1 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(1,"Shortcut Dimension 1 Code");
                                                              END;

                                                   CaptionML=[ENU=Shortcut Dimension 1 Code;
                                                              THA=รหัสมิติทางลัดหมายเลข 1];
                                                   CaptionClass='1,2,1' }
    { 16  ;   ;Shortcut Dimension 2 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(2,"Shortcut Dimension 2 Code");
                                                              END;

                                                   CaptionML=[ENU=Shortcut Dimension 2 Code;
                                                              THA=รหัสมิติทางลัดหมายเลข 2];
                                                   CaptionClass='1,2,2' }
    { 20  ;   ;Gen. Bus. Posting Group;Code10     ;TableRelation="Gen. Business Posting Group";
                                                   OnValidate=BEGIN
                                                                TESTFIELD(Status,Status::Open);
                                                                IF (xRec."Petty Cash Vendor No." = "Petty Cash Vendor No.") AND
                                                                   (xRec."Gen. Bus. Posting Group" <> "Gen. Bus. Posting Group")
                                                                THEN
                                                                  IF GenBusPostingGrp.ValidateVatBusPostingGroup(GenBusPostingGrp,"Gen. Bus. Posting Group") THEN BEGIN
                                                                    "VAT Bus. Posting Group" := GenBusPostingGrp."Def. VAT Bus. Posting Group";
                                                                    RecreatePettyCashLines(FIELDCAPTION("Gen. Bus. Posting Group"));
                                                                  END;
                                                              END;

                                                   CaptionML=[ENU=Gen. Bus. Posting Group;
                                                              THA=กลุ่มการลงรายการบัญชีธุรกิจทั่วไป] }
    { 21  ;   ;VAT Bus. Posting Group;Code10      ;TableRelation="VAT Business Posting Group";
                                                   OnValidate=BEGIN
                                                                TESTFIELD(Status,Status::Open);
                                                                IF (xRec."Petty Cash Vendor No." = "Petty Cash Vendor No.") AND
                                                                   (xRec."VAT Bus. Posting Group" <> "VAT Bus. Posting Group")
                                                                THEN
                                                                  RecreatePettyCashLines(FIELDCAPTION("VAT Bus. Posting Group"));
                                                              END;

                                                   CaptionML=[ENU=VAT Bus. Posting Group;
                                                              THA=กลุ่มการลงรายการบัญชีธุรกิจที่ต้องเสีย VAT] }
    { 22  ;   ;WHT Business Posting Group;Code10  ;TableRelation="WHT Business Posting Group";
                                                   CaptionML=[ENU=WHT Business Posting Group;
                                                              THA=กลุ่มการลงรายการบัญชีธุรกิจ WHT] }
    { 25  ;   ;Printing WHT Slip (Doc:WHT);Option ;CaptionML=[ENU=Printing WHT Slip (Doc:WHT);
                                                              THA=พิมพ์ใบหักภาษี ณ ที่จ่าย (หนึ่งเอกสารต่อใบหักภาษี ณ ที่จ่าย)];
                                                   OptionString=1:1,1:N }
    { 30  ;   ;Name 2              ;Text50        ;CaptionML=[ENU=Name 2;
                                                              THA=ชื่อ 2] }
    { 31  ;   ;Address             ;Text50        ;CaptionML=[ENU=Address;
                                                              THA=ที่อยู่] }
    { 32  ;   ;Address 2           ;Text50        ;CaptionML=[ENU=Address 2;
                                                              THA=ที่อยู่ 2] }
    { 33  ;   ;Address 3           ;Text30        ;CaptionML=[ENU=Address 3;
                                                              THA=ที่อยู่ 3] }
    { 34  ;   ;Name (Thai)         ;Text120       ;CaptionML=[ENU=Name (Thai);
                                                              THA=ชื่อ (ไทย)] }
    { 35  ;   ;Address (Thai)      ;Text200       ;CaptionML=[ENU=Address (Thai);
                                                              THA=ที่อยู่ (ไทย)] }
    { 36  ;   ;City                ;Text30        ;OnValidate=BEGIN
                                                                PostCodeCheck.ValidateCity(
                                                                  CurrFieldNo,DATABASE::"Petty Cash Header",Rec.GETPOSITION,4,
                                                                  Name,"Name 2",Contact,Address,"Address 2",
                                                                  City,"Post Code",County,"Country Code");
                                                              END;

                                                   OnLookup=BEGIN
                                                              PostCodeCheck.LookUpCity(
                                                                CurrFieldNo,DATABASE::"Petty Cash Header",Rec.GETPOSITION,4,
                                                                Name,"Name 2",Contact,Address,"Address 2",
                                                                City,"Post Code",County,"Country Code",TRUE);
                                                            END;

                                                   CaptionML=[ENU=City;
                                                              THA=เมือง] }
    { 37  ;   ;Contact             ;Text50        ;CaptionML=[ENU=Contact;
                                                              THA=ผู้ติดต่อ] }
    { 38  ;   ;Post Code           ;Code20        ;TableRelation="Post Code";
                                                   OnValidate=BEGIN
                                                                PostCodeCheck.ValidatePostCode(
                                                                  CurrFieldNo,DATABASE::"Petty Cash Header",Rec.GETPOSITION,4,
                                                                  Name,"Name 2",Contact,Address,"Address 2",
                                                                  City,"Post Code",County,"Country Code");
                                                              END;

                                                   OnLookup=BEGIN
                                                              PostCodeCheck.LookUpPostCode(
                                                                CurrFieldNo,DATABASE::"Petty Cash Header",Rec.GETPOSITION,4,
                                                                Name,"Name 2",Contact,Address,"Address 2",
                                                                City,"Post Code",County,"Country Code",TRUE);
                                                            END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Post Code;
                                                              THA=รหัสไปรษณีย์] }
    { 39  ;   ;County              ;Text30        ;CaptionML=[ENU=County;
                                                              THA=เขต] }
    { 40  ;   ;Country Code        ;Code10        ;TableRelation=Country/Region;
                                                   CaptionML=[ENU=Country Code;
                                                              THA=รหัสประเทศ] }
    { 46  ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Petty Cash Comment Line" WHERE (Document Type=CONST(Invoice),
                                                                                                      No.=FIELD(No.)));
                                                   CaptionML=[ENU=Comment;
                                                              THA=ข้อคิดเห็น];
                                                   Editable=No }
    { 47  ;   ;User ID             ;Code20        ;TableRelation=User;
                                                   OnLookup=VAR
                                                              LoginMgt@1000 : Codeunit 418;
                                                            BEGIN
                                                              LoginMgt.LookupUserID("User ID");
                                                            END;

                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=User ID;
                                                              THA=ID ผู้ใช้] }
    { 48  ;   ;Source Code         ;Code10        ;TableRelation="Source Code";
                                                   CaptionML=[ENU=Source Code;
                                                              THA=รหัสแหล่งที่มา] }
    { 50  ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   OnValidate=BEGIN
                                                                IF NOT (CurrFieldNo IN [0,FIELDNO("Posting Date")]) THEN
                                                                  TESTFIELD(Status,Status::Open);
                                                                IF CurrFieldNo <> FIELDNO("Currency Code") THEN
                                                                  UpdateCurrencyFactor
                                                                ELSE BEGIN
                                                                  IF "Currency Code" <> xRec."Currency Code" THEN BEGIN
                                                                    UpdateCurrencyFactor;
                                                                    RecreatePettyCashLines(FIELDCAPTION("Currency Code"));
                                                                  END ELSE
                                                                    IF "Currency Code" <> '' THEN BEGIN
                                                                      UpdateCurrencyFactor;
                                                                      IF "Currency Factor" <> xRec."Currency Factor" THEN
                                                                        ConfirmUpdateCurrencyFactor;
                                                                    END;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Currency Code;
                                                              THA=รหัสสกุลเงิน] }
    { 51  ;   ;Currency Factor     ;Decimal       ;OnValidate=BEGIN
                                                                IF "Currency Factor" <> xRec."Currency Factor" THEN
                                                                  UpdatePettyCashLines(FIELDCAPTION("Currency Factor"));
                                                              END;

                                                   CaptionML=[ENU=Currency Factor;
                                                              THA=ปัจจัยด้านสกุลเงิน];
                                                   DecimalPlaces=0:15;
                                                   MinValue=0;
                                                   Editable=No }
    { 52  ;   ;Date Filter         ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Date Filter;
                                                              THA=ตัวกรองวันที่] }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      PettyCashHeader@1000000000 : Record 55001;
      PettyCashLine@1000000003 : Record 55002;
      PettyCashSetup@1000000001 : Record 55000;
      PettyCashCmtLine@1000000023 : Record 55003;
      GenBusPostingGrp@1000000010 : Record 250;
      Vend@1000000011 : Record 23;
      SourceCodeSetup@1000000025 : Record 242;
      DocDim@1000000008 : Record 357;
      GLSetup@1000000013 : Record 98;
      CurrExchRate@1000000015 : Record 330;
      NoSeriesMgt@1000000002 : Codeunit 396;
      Text001@1000000005 : TextConst 'ENU=Do you want to change %1?;THA=คุณต้องการเปลี่ยน %1 หรือ?';
      Text002@1000000004 : TextConst 'ENU=If you change %1, the existing petty cash invoice lines will be deleted and new petty cash invoice lines based on the new information in the header will be created.\\;THA=ถ้าคุณเปลี่ยน %1, บรรทัดการซื้อที่มีอยู่จะถูกลบออก และจะมีการสร้างบรรทัดการซื้อใหม่โดยใช้รายละเอียดใหม่ในหัวข้อ\\';
      DimMgt@1000000020 : Codeunit 408;
      PostCodeCheck@1000000021 : Codeunit 28000;
      HideValidationDialog@1000000007 : Boolean;
      Confirmed@1000000006 : Boolean;
      Text003@1000000009 : TextConst 'ENU=You must delete the existing petty cash invoice lines before you can change %1.;THA=คุณต้องลบบรรทัดการซื้อที่มีอยู่ก่อน จึงจะสามารถเปลี่ยน %1 ได้';
      Text004@1000000012 : TextConst 'ENU=You cannot reset %1 because the document still has one or more lines.;THA=คุณไม่สามารถรีเซ็ต %1 เนื่องจากเอกสารยังมีบรรทัดอยู่หนึ่งหรือหลายบรรทัด';
      CurrencyDate@1000000014 : Date;
      Text005@1000000016 : TextConst 'ENU=Do you want to update the exchange rate?;THA=คุณต้องการปรับปรุงอัตราแลกเปลี่ยนหรือ?';
      Text025@1000000019 : TextConst 'ENU="You have modified the %1 field. Note that the recalculation of VAT may cause penny differences, so you must check the amounts afterwards. ";THA=คุณได้แก้ไขฟิลด์ %1 แล้ว  หมายเหตุว่า การคำนวณ VAT ใหม่อาจทำให้เกิดผลต่างเศษสตางค์ได้ ดังนั้นคุณจึงต้องตรวจสอบยอดเงินหลังจากนั้น';
      Text027@1000000018 : TextConst 'ENU=Do you want to update the %2 field on the lines to reflect the new value of %1?;THA=คุณต้องการปรับปรุงฟิลด์ %2 ในบรรทัดเพื่อให้เห็นค่าใหม่ของ %1 หรือ?';
      SkipPayToContact@1000000022 : Boolean;
      Text028@1000000017 : TextConst 'ENU=There is nothing to release for %1.;THA=ไม่มีข้อมูลที่จะนำออกแสดงสำหรับ %1 %2';
      Text029@1000000026 : TextConst 'ENU=The WHT Absorb Base must be positive.;THA=ไม่มีข้อมูลที่จะนำออกแสดงสำหรับ %1 %2';
      Text030@1000000024 : TextConst 'ENU=Actual Vendor No. on Petty Cash Line must be the same.';

    PROCEDURE InitRecord@10();
    BEGIN
      IF ("Posting Date" = 0D)
      THEN
        "Posting Date" := WORKDATE;
      "Document Date" := WORKDATE;

      SourceCodeSetup.GET;
      SourceCodeSetup.TESTFIELD("Petty Cash");
      "Source Code" := SourceCodeSetup."Petty Cash";
    END;

    PROCEDURE AssistEdit@1(OldPettyCashHeader@1000 : Record 55001) : Boolean;
    BEGIN
      PettyCashSetup.GET;
      PettyCashSetup.TESTFIELD("Petty Cash Nos.");
      IF NoSeriesMgt.SelectSeries(PettyCashSetup."Petty Cash Nos.",OldPettyCashHeader."No. Series","No. Series") THEN BEGIN
        NoSeriesMgt.SetSeries("No.");
        EXIT(TRUE);
      END;
    END;

    PROCEDURE RecreatePettyCashLines@4(ChangedFieldName@1000 : Text[100]);
    VAR
      PettyCashLineTmp@1001 : TEMPORARY Record 55002;
    BEGIN
      IF PettyCashLinesExist THEN BEGIN
        IF HideValidationDialog THEN
          Confirmed :=TRUE
        ELSE
          Confirmed :=
            CONFIRM(
              Text002 +
               Text001,FALSE,ChangedFieldName);
        IF Confirmed THEN BEGIN
          DocDim.LOCKTABLE;
          PettyCashLine.LOCKTABLE;
          MODIFY;

          PettyCashLine.RESET;
          PettyCashLine.SETRANGE("Document No.","No.");
          IF PettyCashLine.FIND('-') THEN BEGIN
            REPEAT
              PettyCashLineTmp := PettyCashLine;
              PettyCashLine.MODIFY;
              PettyCashLineTmp.INSERT;
            UNTIL PettyCashLine.NEXT = 0;

            PettyCashLine.DELETEALL(TRUE);

            PettyCashLine.INIT;
            PettyCashLine."Line No." := 0;
            PettyCashLineTmp.FIND('-');
            REPEAT
              PettyCashLine.INIT;
              PettyCashLine."Line No." := PettyCashLine."Line No." + 10000;
              PettyCashLine.VALIDATE(Type,PettyCashLineTmp.Type);
              IF PettyCashLineTmp."No." = '' THEN BEGIN
                PettyCashLine.VALIDATE(Description,PettyCashLineTmp.Description);
                PettyCashLine.VALIDATE("Description 2",PettyCashLineTmp."Description 2");
              END ELSE BEGIN
                PettyCashLine.VALIDATE("No.",PettyCashLineTmp."No.");
                IF PettyCashLine.Type <> PettyCashLine.Type::" " THEN BEGIN
                  PettyCashLine.VALIDATE("Amount Incl. VAT",PettyCashLineTmp."Amount Incl. VAT");
                 END;
               END;
              PettyCashLine.INSERT;
            UNTIL PettyCashLineTmp.NEXT = 0;

            PettyCashLineTmp.RESET;
            PettyCashLineTmp.DELETEALL;
          END;
        END ELSE
          ERROR(
            Text003,ChangedFieldName);
      END;
    END;

    PROCEDURE PettyCashLinesExist@3() : Boolean;
    BEGIN
      PettyCashLine.RESET;
      PettyCashLine.SETRANGE("Document No.","No.");
      EXIT(PettyCashLine.FIND('-'));
    END;

    LOCAL PROCEDURE GetVend@1000000000(VendNo@1000 : Code[20]);
    BEGIN
      IF VendNo <> Vend."No." THEN
        Vend.GET(VendNo);
    END;

    LOCAL PROCEDURE UpdateCurrencyFactor@12();
    BEGIN
      IF "Currency Code" <> '' THEN BEGIN
        GLSetup.GET;
        CurrencyDate := "Posting Date";

        "Currency Factor" := CurrExchRate.ExchangeRate(CurrencyDate,"Currency Code");
      END ELSE
        "Currency Factor" := 0;
    END;

    LOCAL PROCEDURE ConfirmUpdateCurrencyFactor@13();
    BEGIN
      IF HideValidationDialog THEN
        Confirmed :=TRUE
      ELSE
        Confirmed := CONFIRM(Text005,FALSE);
      IF Confirmed THEN
        VALIDATE("Currency Factor")
      ELSE
        "Currency Factor" := xRec."Currency Factor";
    END;

    PROCEDURE UpdatePettyCashLines@15(ChangedFieldName@1000 : Text[100]);
    VAR
      xPettyCashLine@1000000000 : Record 55002;
      UpdateConfirmed@1002 : Boolean;
    BEGIN
      IF PettyCashLinesExist THEN BEGIN

        IF NOT GUIALLOWED THEN
          UpdateConfirmed := TRUE;

        DocDim.LOCKTABLE;
        PettyCashLine.LOCKTABLE;
        MODIFY;

        REPEAT
          xPettyCashLine := PettyCashLine;
          CASE ChangedFieldName OF
            FIELDCAPTION("Currency Factor") :
              IF PettyCashLine.Type <> PettyCashLine.Type::" " THEN
                PettyCashLine.VALIDATE("Amount Incl. VAT");
          END;
          PettyCashLine.MODIFY(TRUE);
        UNTIL PettyCashLine.NEXT = 0;
      END;
    END;

    PROCEDURE ShowDocDim@32();
    VAR
      DocDim@1000 : Record 357;
      DocDims@1001 : Page 546;
    BEGIN
      DocDim.SETRANGE("Table ID",DATABASE::"Petty Cash Header");
      DocDim.SETRANGE("Document Type",DocDim."Document Type"::Invoice);
      DocDim.SETRANGE("Document No.","No.");
      DocDim.SETRANGE("Line No.",0);
      DocDims.SETTABLEVIEW(DocDim);
      DocDims.RUNMODAL;
      GET("No.");
    END;

    PROCEDURE ValidateShortcutDimCode@19(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    BEGIN
      DimMgt.ValidateDimValueCode(FieldNumber,ShortcutDimCode);
      IF "No." <> '' THEN BEGIN
        DimMgt.SaveDocDim(
          DATABASE::"Petty Cash Header",DocDim."Document Type"::Invoice,"No.",0,FieldNumber,ShortcutDimCode);
        MODIFY;
      END ELSE
        DimMgt.SaveTempDim(FieldNumber,ShortcutDimCode);
    END;

    PROCEDURE Release@1000000003();
    VAR
      xPettyCashLine@1000000001 : Record 55002;
    BEGIN
      IF Status = Status::Released THEN
        EXIT;

      TESTFIELD("Petty Cash Vendor No.");
      TESTFIELD("Posting Date");

      GetVend("Petty Cash Vendor No.");
      Vend.CheckVendorPettyCash;

      CheckPettyCashLine;

      xPettyCashLine.RESET;
      xPettyCashLine.SETRANGE("Document No.","No.");
      xPettyCashLine.SETFILTER(Type,'>0');
      xPettyCashLine.SETFILTER("Amount Incl. VAT",'<>0');
      IF NOT xPettyCashLine.FIND('-') THEN
        ERROR(Text028,"No.");

      xPettyCashLine.SETFILTER("WHT Absorb Base",'<%1',0);
      IF xPettyCashLine.FIND('-') THEN
        ERROR(Text029);

      Status := Status::Released;
      MODIFY;
    END;

    PROCEDURE Reopen@1000000001();
    BEGIN
      IF Status = Status::Open THEN
        EXIT;

      Status := Status::Open;
      MODIFY;
    END;

    PROCEDURE CheckPettyCashLine@1000000002();
    VAR
      PettyCashLine2@1000000000 : Record 55002;
      WHTPostingSetup@1000000001 : Record 28043;
      ActualVendNo@1000000002 : Code[20];
    BEGIN
      ActualVendNo := '';
      PettyCashLine2.RESET;
      PettyCashLine2.SETRANGE("Document No.","No.");
      PettyCashLine2.SETFILTER("Amount (LCY) Incl. VAT",'<>0');
      IF PettyCashLine2.FIND('-') THEN
        REPEAT
          PettyCashLine2.TESTFIELD(Type,PettyCashLine2.Type::"G/L Account");

          IF PettyCashLine2."VAT %" <> 0 THEN
            PettyCashLine2.TESTFIELD("Actual Vendor No.");
          IF NOT PettyCashLine2."Skip WHT" THEN BEGIN
            WHTPostingSetup.GET(PettyCashLine2."WHT Business Posting Group",PettyCashLine2."WHT Product Posting Group");
            IF WHTPostingSetup."WHT %" <> 0 THEN BEGIN
              PettyCashLine2.TESTFIELD("Actual Vendor No.");
              IF "Printing WHT Slip (Doc:WHT)" = "Printing WHT Slip (Doc:WHT)"::"1:1" THEN BEGIN
                IF ActualVendNo = '' THEN
                  ActualVendNo := PettyCashLine2."Actual Vendor No."
                ELSE
                  IF ActualVendNo <> PettyCashLine2."Actual Vendor No." THEN
                    ERROR(Text030);
              END;
            END;
          END;
        UNTIL PettyCashLine2.NEXT=0;
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Localization TH
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   24.08.2006   KKE   Petty Cash.
    }
    END.
  }
}

OBJECT Table 55002 Petty Cash Line
{
  OBJECT-PROPERTIES
  {
    Date=09/20/07;
    Time=[ 7:31:05 PM];
    Version List=AVATHA4.40;
  }
  PROPERTIES
  {
    OnInsert=VAR
               DocDim@1000000000 : Record 357;
             BEGIN
               TestStatusOpen;

               DocDim.LOCKTABLE;
               LOCKTABLE;
               PettyCashHdr."No." := '';

               DimMgt.InsertDocDim(
                 DATABASE::"Petty Cash Line",DocDim."Document Type"::Invoice,"Document No.","Line No.",
                 "Shortcut Dimension 1 Code","Shortcut Dimension 2 Code");
             END;

    OnModify=BEGIN
               TestStatusOpen;
             END;

    OnDelete=BEGIN
               TestStatusOpen;
               TESTFIELD("Certificate Printed",FALSE);
             END;

    CaptionML=[ENU=Petty Cash Line;
               THA=บรรทัดเงินสดย่อย];
  }
  FIELDS
  {
    { 1   ;   ;Document No.        ;Code20        ;TableRelation="Petty Cash Header";
                                                   CaptionML=[ENU=Document No.;
                                                              THA=หมายเลขเอกสาร] }
    { 2   ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              THA=หมายเลขบรรทัด] }
    { 3   ;   ;Petty Cash Vendor No.;Code20       ;TableRelation=Vendor WHERE (Petty Cash=CONST(Yes));
                                                   CaptionML=[ENU=Petty Cash Vendor No.;
                                                              THA=หมายเลขผู้ขายเงินสดย่อย] }
    { 5   ;   ;Type                ;Option        ;InitValue=G/L Account;
                                                   CaptionML=[ENU=Type;
                                                              THA=ชนิด];
                                                   OptionCaptionML=[ENU=" ,G/L Account,Item,,Fixed Asset,Charge (Item)";
                                                                    THA=" ,บัญชี G/L,สินค้า,,สินทรัพย์ถาวร,เปลี่ยนแปลง (สินค้า)"];
                                                   OptionString=[ ,G/L Account,Item,,Fixed Asset,Charge (Item)] }
    { 6   ;   ;No.                 ;Code20        ;TableRelation=IF (Type=CONST(" ")) "Standard Text"
                                                                 ELSE IF (Type=CONST(G/L Account)) "G/L Account"
                                                                 ELSE IF (Type=CONST(Item)) Item
                                                                 ELSE IF (Type=CONST(3)) Resource
                                                                 ELSE IF (Type=CONST(Fixed Asset)) "Fixed Asset"
                                                                 ELSE IF (Type=CONST("Charge (Item)")) "Item Charge";
                                                   OnValidate=VAR
                                                                ICPartner@1000 : Record 413;
                                                                ItemCrossReference@1001 : Record 5717;
                                                              BEGIN
                                                                TestStatusOpen;
                                                                TempPettyCashLine := Rec;
                                                                INIT;
                                                                Type := TempPettyCashLine.Type;
                                                                "No." := TempPettyCashLine."No.";
                                                                IF "No." = '' THEN
                                                                  EXIT;
                                                                GetPettyCashHdr;
                                                                PettyCashHdr.TESTFIELD("Petty Cash Vendor No.");

                                                                "Petty Cash Vendor No." := PettyCashHdr."Petty Cash Vendor No.";
                                                                "Currency Code" := PettyCashHdr."Currency Code";
                                                                "Shortcut Dimension 1 Code" := PettyCashHdr."Shortcut Dimension 1 Code";
                                                                "Shortcut Dimension 2 Code" := PettyCashHdr."Shortcut Dimension 2 Code";
                                                                Vendor.GET("Petty Cash Vendor No.");
                                                                IF Vendor."Name (Thai)" <> '' THEN
                                                                  "Real Customer/Vendor Name" := Vendor."Name (Thai)"
                                                                ELSE
                                                                  "Real Customer/Vendor Name" := Vendor.Name + ' ' + Vendor."Name 2";
                                                                "Gen. Bus. Posting Group" := PettyCashHdr."Gen. Bus. Posting Group";
                                                                "VAT Bus. Posting Group" := PettyCashHdr."VAT Bus. Posting Group";
                                                                "WHT Business Posting Group" := PettyCashHdr."WHT Business Posting Group";

                                                                TESTFIELD(Type,Type::"G/L Account");
                                                                GLAcc.GET("No.");
                                                                GLAcc.CheckGLAcc;
                                                                GLAcc.TESTFIELD("Direct Posting",TRUE);
                                                                Description := GLAcc.Name;
                                                                "Gen. Prod. Posting Group" := GLAcc."Gen. Prod. Posting Group";
                                                                "VAT Prod. Posting Group" := GLAcc."VAT Prod. Posting Group";
                                                                "WHT Product Posting Group" := GLAcc."WHT Product Posting Group";
                                                                VALIDATE("VAT Prod. Posting Group");

                                                                CreateDim(
                                                                  DimMgt.TypeToTableID3(Type),"No.");
                                                              END;

                                                   CaptionML=[ENU=No.;
                                                              THA=หมายเลข] }
    { 7   ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              THA=คำอธิบาย] }
    { 8   ;   ;Description 2       ;Text50        ;CaptionML=[ENU=Description 2;
                                                              THA=คำอธิบาย 2] }
    { 10  ;   ;Amount Incl. VAT    ;Decimal       ;OnValidate=BEGIN
                                                                GetPettyCashHdr;
                                                                {
                                                                GLSetup.GET;
                                                                Amount := ROUND(Amount,Currency."Amount Rounding Precision");
                                                                CASE "VAT Calculation Type" OF
                                                                  "VAT Calculation Type"::"Normal VAT",
                                                                  "VAT Calculation Type"::"Reverse Charge VAT":
                                                                    BEGIN
                                                                      "VAT Base Amount" :=
                                                                         ROUND(Amount,Currency."Amount Rounding Precision");
                                                                      {
                                                                      "VAT Base Amount (LCY)" :=
                                                                         ROUND(
                                                                           CurrExchRate.ExchangeAmtLCYToFCY(
                                                                             PettyCashHdr."Posting Date",GLSetup."Additional Reporting Currency",
                                                                           ROUND(CurrExchRate.ExchangeAmtFCYToLCY(
                                                                             PettyCashHdr."Posting Date","Currency Code","VAT Base Amount",
                                                                             PettyCashHdr."Currency Factor"),Currency."Amount Rounding Precision"),CurrencyFactor),
                                                                             AddCurrency."Amount Rounding Precision");
                                                                      }
                                                                    END;
                                                                  "VAT Calculation Type"::"Full VAT":
                                                                    IF Amount <> 0 THEN
                                                                      FIELDERROR(Amount,
                                                                        STRSUBSTNO(
                                                                          Text001,FIELDCAPTION("VAT Calculation Type"),
                                                                          "VAT Calculation Type"));
                                                                  "VAT Calculation Type"::"Sales Tax":
                                                                    BEGIN
                                                                      "VAT Base Amount" := Amount;
                                                                    END;
                                                                END;

                                                                }
                                                                GetCurrency;
                                                                IF "Currency Code" = '' THEN
                                                                  "Amount (LCY) Incl. VAT" := "Amount Incl. VAT"
                                                                ELSE
                                                                  "Amount (LCY) Incl. VAT" := ROUND(
                                                                    CurrExchRate.ExchangeAmtFCYToLCY(
                                                                      PettyCashHdr."Posting Date","Currency Code",
                                                                      "Amount Incl. VAT",PettyCashHdr."Currency Factor"));

                                                                "Amount Incl. VAT" := ROUND("Amount Incl. VAT",Currency."Amount Rounding Precision");

                                                                VALIDATE("VAT %");
                                                              END;

                                                   CaptionML=[ENU=Amount Incl. VAT;
                                                              THA=จำนวนรวม VAT];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 11  ;   ;Amount (LCY) Incl. VAT;Decimal     ;OnValidate=BEGIN
                                                                IF "Currency Code" = '' THEN BEGIN
                                                                  "Amount Incl. VAT" := "Amount (LCY) Incl. VAT";
                                                                  VALIDATE("Amount Incl. VAT");
                                                                END ELSE BEGIN
                                                                  IF CheckFixedCurrency THEN BEGIN
                                                                    GetCurrency;
                                                                    "Amount Incl. VAT" := ROUND(
                                                                      CurrExchRate.ExchangeAmtLCYToFCY(
                                                                        PettyCashHdr."Posting Date","Currency Code",
                                                                        "Amount (LCY) Incl. VAT",PettyCashHdr."Currency Factor"),
                                                                        Currency."Amount Rounding Precision")
                                                                  END ELSE BEGIN
                                                                    TESTFIELD("Amount (LCY) Incl. VAT");
                                                                    TESTFIELD("Amount Incl. VAT");
                                                                    PettyCashHdr."Currency Factor" := "Amount Incl. VAT" / "Amount (LCY) Incl. VAT";
                                                                  END;

                                                                  VALIDATE("VAT %");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Amount (LCY) Incl. VAT;
                                                              THA=ยอดเงิน (LCY) รวม VAT];
                                                   AutoFormatType=1 }
    { 12  ;   ;VAT %               ;Decimal       ;OnValidate=BEGIN
                                                                GetPettyCashHdr;
                                                                GetCurrency;
                                                                CASE "VAT Calculation Type" OF
                                                                  "VAT Calculation Type"::"Normal VAT",
                                                                  "VAT Calculation Type"::"Reverse Charge VAT":
                                                                    BEGIN
                                                                      "VAT Base Amount" :=
                                                                        ROUND("Amount Incl. VAT" / (1 + "VAT %" / 100),Currency."Amount Rounding Precision");
                                                                      "VAT Amount" :=
                                                                        ROUND("Amount Incl. VAT" - "VAT Base Amount",Currency."Amount Rounding Precision",Currency.VATRoundingDirection);
                                                                    END;
                                                                  "VAT Calculation Type"::"Full VAT":
                                                                    "VAT Amount" := "Amount Incl. VAT";
                                                                  "VAT Calculation Type"::"Sales Tax":
                                                                    {
                                                                    IF ("Gen. Posting Type" = "Gen. Posting Type"::Purchase) AND
                                                                    THEN BEGIN
                                                                      "VAT Amount" := 0;
                                                                      "VAT %" := 0;
                                                                    END ELSE BEGIN
                                                                      "VAT Amount" :=
                                                                        Amount -
                                                                        SalesTaxCalculate.ReverseCalculateTax(
                                                                          "Tax Area Code","Tax Group Code","Tax Liable",
                                                                          "Posting Date",Amount,Quantity,"Currency Factor");
                                                                      IF Amount - "VAT Amount" <> 0 THEN
                                                                        "VAT %" := ROUND(100 * "VAT Amount" / (Amount - "VAT Amount"),0.00001)
                                                                      ELSE
                                                                        "VAT %" := 0;
                                                                      "VAT Amount" :=
                                                                        ROUND("VAT Amount",Currency."Amount Rounding Precision");
                                                                    END;
                                                                    }
                                                                    ;
                                                                END;
                                                                "VAT Base Amount" := "Amount Incl. VAT" - "VAT Amount";
                                                                "VAT Difference" := 0;

                                                                IF "Currency Code" = '' THEN
                                                                  "VAT Amount (LCY)" := "VAT Amount"
                                                                ELSE
                                                                  "VAT Amount (LCY)" :=
                                                                    ROUND(
                                                                      CurrExchRate.ExchangeAmtFCYToLCY(
                                                                        PettyCashHdr."Posting Date","Currency Code",
                                                                        "VAT Amount",PettyCashHdr."Currency Factor"));
                                                                "VAT Base Amount (LCY)" := "Amount (LCY) Incl. VAT" - "VAT Amount (LCY)";

                                                                //KKE : #002 +
                                                                "VAT Claim %" := 0;
                                                                "VAT Unclaim %" := 0;
                                                                "Avg. VAT Amount" := 0;
                                                                "Average VAT Year" := 0;
                                                                GetGLSetup;
                                                                IF GLSetup."Enable VAT Average" THEN BEGIN
                                                                  IF NOT VATProdPostingGrp.GET("VAT Prod. Posting Group") THEN
                                                                    VATProdPostingGrp.INIT;
                                                                  IF VATProdPostingGrp."Average VAT" THEN BEGIN
                                                                    AverageVATSetup.RESET;
                                                                    AverageVATSetup.SETFILTER("From Date",'<=%1',PettyCashHdr."Posting Date");
                                                                    AverageVATSetup.SETFILTER("To Date",'>=%1',PettyCashHdr."Posting Date");
                                                                    IF AverageVATSetup.FIND('+') THEN BEGIN
                                                                      AverageVATSetup.TESTFIELD("VAT Claim %");
                                                                      "VAT Claim %" := AverageVATSetup."VAT Claim %";
                                                                      "VAT Unclaim %" := AverageVATSetup."VAT Unclaim %";
                                                                      "Avg. VAT Amount" :=
                                                                        ROUND(("Amount Incl. VAT" - "VAT Base Amount") * "VAT Claim %"/100,
                                                                        Currency."Amount Rounding Precision",Currency.VATRoundingDirection);
                                                                        "Average VAT Year" := AverageVATSetup.Year;
                                                                    END;
                                                                  END;
                                                                END;
                                                                //KKE : #002 -
                                                              END;

                                                   CaptionML=[ENU=VAT %;
                                                              THA=VAT %];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 13  ;   ;VAT Base Amount     ;Decimal       ;CaptionML=[ENU=VAT Base Amount;
                                                              THA=ยอดเงินตามจำนวน VAT];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 14  ;   ;VAT Amount          ;Decimal       ;OnValidate=BEGIN
                                                                PettyCashSetup.GET;
                                                                PettyCashSetup.TESTFIELD("Allow VAT Difference",TRUE);
                                                                IF NOT ("VAT Calculation Type" IN
                                                                  ["VAT Calculation Type"::"Normal VAT","VAT Calculation Type"::"Reverse Charge VAT"])
                                                                THEN
                                                                  ERROR(
                                                                    Text010,FIELDCAPTION("VAT Calculation Type"),
                                                                    "VAT Calculation Type"::"Normal VAT","VAT Calculation Type"::"Reverse Charge VAT");
                                                                IF "VAT Amount" <> 0 THEN BEGIN
                                                                  TESTFIELD("VAT %");
                                                                  TESTFIELD("Amount Incl. VAT");
                                                                END;

                                                                GetCurrency;
                                                                "VAT Amount" := ROUND("VAT Amount",Currency."Amount Rounding Precision",Currency.VATRoundingDirection);

                                                                IF "VAT Amount" * "Amount Incl. VAT" < 0 THEN
                                                                  IF "VAT Amount" > 0 THEN
                                                                    ERROR(Text011,FIELDCAPTION("VAT Amount"))
                                                                  ELSE
                                                                    ERROR(Text012,FIELDCAPTION("VAT Amount"));

                                                                "VAT Base Amount" := "Amount Incl. VAT" - "VAT Amount";

                                                                "VAT Difference" :=
                                                                  "VAT Amount" -
                                                                  ROUND(
                                                                    "Amount Incl. VAT" * "VAT %" / (100 + "VAT %"),
                                                                    Currency."Amount Rounding Precision",Currency.VATRoundingDirection);
                                                                IF ABS("VAT Difference") > Currency."Max. VAT Difference Allowed" THEN
                                                                  ERROR(Text013,FIELDCAPTION("VAT Difference"),Currency."Max. VAT Difference Allowed");

                                                                IF "Currency Code" = '' THEN
                                                                  "VAT Amount (LCY)" := "VAT Amount"
                                                                ELSE
                                                                  "VAT Amount (LCY)" :=
                                                                    ROUND(
                                                                      CurrExchRate.ExchangeAmtFCYToLCY(
                                                                        PettyCashHdr."Posting Date","Currency Code",
                                                                        "VAT Amount",PettyCashHdr."Currency Factor"));
                                                                "VAT Base Amount (LCY)" := "Amount (LCY) Incl. VAT" - "VAT Amount (LCY)";
                                                              END;

                                                   CaptionML=[ENU=VAT Amount;
                                                              THA=จำนวน VAT];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 15  ;   ;Shortcut Dimension 1 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(1,"Shortcut Dimension 1 Code");
                                                              END;

                                                   CaptionML=[ENU=Shortcut Dimension 1 Code;
                                                              THA=รหัสมิติทางลัดหมายเลข 1];
                                                   CaptionClass='1,2,1' }
    { 16  ;   ;Shortcut Dimension 2 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(2,"Shortcut Dimension 2 Code");
                                                              END;

                                                   CaptionML=[ENU=Shortcut Dimension 2 Code;
                                                              THA=รหัสมิติทางลัดหมายเลข 2];
                                                   CaptionClass='1,2,2' }
    { 20  ;   ;Gen. Bus. Posting Group;Code10     ;TableRelation="Gen. Business Posting Group";
                                                   OnValidate=BEGIN
                                                                IF xRec."Gen. Bus. Posting Group" <> "Gen. Bus. Posting Group" THEN
                                                                  IF GenBusPostingGrp.ValidateVatBusPostingGroup(GenBusPostingGrp,"Gen. Bus. Posting Group") THEN
                                                                    VALIDATE("VAT Bus. Posting Group",GenBusPostingGrp."Def. VAT Bus. Posting Group");
                                                              END;

                                                   CaptionML=[ENU=Gen. Bus. Posting Group;
                                                              THA=กลุ่มการลงรายการบัญชีธุรกิจทั่วไป] }
    { 21  ;   ;Gen. Prod. Posting Group;Code10    ;TableRelation="Gen. Product Posting Group";
                                                   OnValidate=BEGIN
                                                                TestStatusOpen;
                                                                IF xRec."Gen. Prod. Posting Group" <> "Gen. Prod. Posting Group" THEN
                                                                  IF GenProdPostingGrp.ValidateVatProdPostingGroup(GenProdPostingGrp,"Gen. Prod. Posting Group") THEN
                                                                    VALIDATE("VAT Prod. Posting Group",GenProdPostingGrp."Def. VAT Prod. Posting Group");
                                                              END;

                                                   CaptionML=[ENU=Gen. Prod. Posting Group;
                                                              THA=กลุ่มการลงรายการบัญชีผลิตภัณฑ์ทั่วไป] }
    { 22  ;   ;VAT Bus. Posting Group;Code10      ;TableRelation="VAT Business Posting Group";
                                                   OnValidate=BEGIN
                                                                VALIDATE("VAT Prod. Posting Group");
                                                              END;

                                                   CaptionML=[ENU=VAT Bus. Posting Group;
                                                              THA=กลุ่มการลงรายการบัญชีธุรกิจที่ต้องเสีย VAT] }
    { 23  ;   ;VAT Prod. Posting Group;Code10     ;TableRelation="VAT Product Posting Group";
                                                   OnValidate=BEGIN
                                                                TestStatusOpen;
                                                                VATPostingSetup.GET("VAT Bus. Posting Group","VAT Prod. Posting Group");
                                                                "VAT Difference" := 0;
                                                                "VAT %" := VATPostingSetup."VAT %";
                                                                "VAT Calculation Type" := VATPostingSetup."VAT Calculation Type";
                                                                CASE "VAT Calculation Type" OF
                                                                  "VAT Calculation Type"::"Reverse Charge VAT",
                                                                  "VAT Calculation Type"::"Sales Tax":
                                                                    "VAT %" := 0;
                                                                  "VAT Calculation Type"::"Full VAT":
                                                                    BEGIN
                                                                      TESTFIELD(Type,Type::"G/L Account");
                                                                      VATPostingSetup.TESTFIELD("Purchase VAT Account");
                                                                      TESTFIELD("No.",VATPostingSetup."Purchase VAT Account");
                                                                    END;
                                                                END;
                                                                VALIDATE("VAT %");
                                                                //UpdateAmounts;
                                                              END;

                                                   CaptionML=[ENU=VAT Prod. Posting Group;
                                                              THA=กลุ่มการลงรายการบัญชีผลิตภัณฑ์ที่ต้องเสีย VAT] }
    { 24  ;   ;WHT Business Posting Group;Code10  ;TableRelation="WHT Business Posting Group";
                                                   CaptionML=[ENU=WHT Business Posting Group;
                                                              THA=กลุ่มการลงรายการบัญชีธุรกิจ WHT] }
    { 25  ;   ;WHT Product Posting Group;Code10   ;TableRelation="WHT Product Posting Group";
                                                   CaptionML=[ENU=WHT Product Posting Group;
                                                              THA=กลุ่มการลงรายการผลิตภัณฑ์ WHT] }
    { 26  ;   ;WHT Absorb Base     ;Decimal       ;CaptionML=[ENU=WHT Absorb Base;
                                                              THA=อัตราพื้นฐานภาษีหัก ณ ที่จ่าย] }
    { 30  ;   ;Real Customer/Vendor Name;Text120  ;CaptionML=[ENU=Real Customer/Vendor Name;
                                                              THA=ชื่อผู้ซื้อ/ผู้ขายจริง] }
    { 31  ;   ;Actual Vendor No.   ;Code20        ;TableRelation=Vendor;
                                                   OnValidate=BEGIN
                                                                IF Vendor.GET("Actual Vendor No.") THEN
                                                                  IF Vendor."Name (Thai)" <> '' THEN
                                                                    "Real Customer/Vendor Name" := Vendor."Name (Thai)"
                                                                  ELSE
                                                                    "Real Customer/Vendor Name" := Vendor.Name + ' ' + Vendor."Name 2";
                                                              END;

                                                   CaptionML=[ENU=Actual Vendor No.;
                                                              THA=หมายเลขผู้ขายจริง] }
    { 32  ;   ;Skip WHT            ;Boolean       ;OnValidate=BEGIN
                                                                IF "Skip WHT" THEN
                                                                  TESTFIELD("Certificate Printed",FALSE);
                                                              END;

                                                   CaptionML=[ENU=Skip WHT;
                                                              THA=ข้าม WHT] }
    { 33  ;   ;WHT Certificate No. ;Code20        ;CaptionML=[ENU=WHT Certificate No.;
                                                              THA=หมายเลขหนังสือรับรอง WHT] }
    { 34  ;   ;Certificate Printed ;Boolean       ;CaptionML=[ENU=Certificate Printed;
                                                              THA=พิมพ์หนังสือรับรองแล้ว];
                                                   Editable=No }
    { 35  ;   ;WHT Entry No.       ;Integer       ;CaptionML=[ENU=WHT Entry No.;
                                                              THA=หมายเลขรายการ] }
    { 40  ;   ;Tax Invoice No.     ;Code20        ;CaptionML=[ENU=Tax Invoice No.;
                                                              THA=เลขที่ใบกำกับภาษี] }
    { 41  ;   ;Tax Invoice Date    ;Date          ;CaptionML=[ENU=Tax Invoice Date;
                                                              THA=วันที่ออกใบกำกับภาษี] }
    { 42  ;   ;External Document No.;Code20       ;CaptionML=[ENU=External Document No.;
                                                              THA=หมายเลขเอกสารภายนอก] }
    { 50  ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   CaptionML=[ENU=Currency Code;
                                                              THA=รหัสสกุลเงิน];
                                                   Editable=No }
    { 77  ;   ;VAT Calculation Type;Option        ;CaptionML=[ENU=VAT Calculation Type;
                                                              THA=ชนิดการคำนวณ VAT];
                                                   OptionCaptionML=[ENU=Normal VAT,Reverse Charge VAT,Full VAT,Sales Tax;
                                                                    THA=VAT ปกติ,VAT คิดย้อนหลัง,VAT เต็มจำนวน,ภาษีขาย];
                                                   OptionString=Normal VAT,Reverse Charge VAT,Full VAT,Sales Tax;
                                                   Editable=No }
    { 78  ;   ;VAT Amount (LCY)    ;Decimal       ;CaptionML=[ENU=VAT Amount (LCY);
                                                              THA=ยอด VAT (LCY)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 79  ;   ;VAT Base Amount (LCY);Decimal      ;CaptionML=[ENU=VAT Base Amount (LCY);
                                                              THA=จำนวนฐาน VAT (LCY)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 85  ;   ;Use Tax             ;Boolean       ;OnValidate=BEGIN
                                                                VALIDATE("VAT %");
                                                              END;

                                                   CaptionML=[ENU=Use Tax;
                                                              THA=ใช้ภาษี] }
    { 104 ;   ;VAT Difference      ;Decimal       ;CaptionML=[ENU=VAT Difference;
                                                              THA=ส่วนต่างของ VAT];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 50020;  ;VAT Claim %         ;Decimal       ;DecimalPlaces=0:2;
                                                   MinValue=0;
                                                   MaxValue=100;
                                                   Description=Burda1.00;
                                                   Editable=No }
    { 50021;  ;VAT Unclaim %       ;Decimal       ;MinValue=0;
                                                   MaxValue=100;
                                                   Description=Burda1.00;
                                                   Editable=No }
    { 50022;  ;Avg. VAT Amount     ;Decimal       ;Description=Burda1.00;
                                                   Editable=No }
    { 50024;  ;Average VAT Year    ;Integer       ;TableRelation="Average VAT Setup";
                                                   Description=Burda1.00 }
  }
  KEYS
  {
    {    ;Document No.,Line No.                   ;SumIndexFields=Amount Incl. VAT,Amount (LCY) Incl. VAT;
                                                   Clustered=Yes }
    {    ;Actual Vendor No.,WHT Business Posting Group,WHT Product Posting Group }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      PettyCashSetup@1000000017 : Record 55000;
      PettyCashHdr@1000000002 : Record 55001;
      TempPettyCashLine@1000000003 : Record 55002;
      GenBusPostingGrp@1000000000 : Record 250;
      GenProdPostingGrp@1000000001 : Record 251;
      Vendor@1000000004 : Record 23;
      GLAcc@1000000005 : Record 15;
      GLSetup@1000000012 : Record 98;
      VATPostingSetup@1000000010 : Record 325;
      VATProdPostingGrp@1000000022 : Record 324;
      AverageVATSetup@1000000023 : Record 50056;
      Currency@1000000007 : Record 4;
      AddCurrency@1000000014 : Record 4;
      CurrExchRate@1000000008 : Record 330;
      Text000@1000000009 : TextConst 'ENU=cannot be specified without %1;THA=ระบุไม่ได้หากไม่มี %1';
      DimMgt@1000000011 : Codeunit 408;
      SalesTaxCalculate@1000000016 : Codeunit 398;
      CurrencyCode@1000000006 : Code[10];
      CurrencyFactor@1000000013 : Decimal;
      Text001@1000000015 : TextConst 'ENU=" must be 0 when %1 is %2.";THA=" ต้องเป็น 0 หาก %1 เป็น %2"';
      Text010@1000000018 : TextConst 'ENU=%1 must be %2 or %3.;THA=%1 ต้องเป็น %2 หรือ %3';
      Text011@1000000020 : TextConst 'ENU=%1 must be negative.;THA=%1 ต้องเป็นค่าลบ';
      Text012@1000000019 : TextConst 'ENU=%1 must be positive.;THA=%1 ต้องเป็นค่าบวก';
      Text013@1000000021 : TextConst 'ENU=The %1 must not be more than %2.;THA=%1 ต้องไม่เกิน %2';

    PROCEDURE GetPettyCashHdr@1000000000();
    BEGIN
      TESTFIELD("Document No.");
      IF "Document No." <> PettyCashHdr."No." THEN BEGIN
        PettyCashHdr.GET("Document No.");
        IF PettyCashHdr."Currency Code" = '' THEN
          Currency.InitRoundingPrecision
        ELSE BEGIN
          PettyCashHdr.TESTFIELD("Currency Factor");
          Currency.GET(PettyCashHdr."Currency Code");
          Currency.TESTFIELD("Amount Rounding Precision");
        END;
        GetGLSetup;
        CLEAR(CurrencyFactor);
        IF GLSetup."Additional Reporting Currency" <>'' THEN BEGIN
          AddCurrency.GET(GLSetup."Additional Reporting Currency");
          CurrencyFactor :=
            CurrExchRate.ExchangeRate(
              PettyCashHdr."Posting Date",GLSetup."Additional Reporting Currency");
        END;
      END;
    END;

    LOCAL PROCEDURE TestStatusOpen@37();
    BEGIN
      GetPettyCashHdr;
      PettyCashHdr.TESTFIELD(Status,PettyCashHdr.Status::Open);
    END;

    LOCAL PROCEDURE GetCurrency@3();
    BEGIN
      CurrencyCode := "Currency Code";

      IF CurrencyCode = '' THEN BEGIN
        CLEAR(Currency);
        Currency.InitRoundingPrecision
      END ELSE
        IF CurrencyCode <> Currency.Code THEN BEGIN
          Currency.GET(CurrencyCode);
          Currency.TESTFIELD("Amount Rounding Precision");
        END;
    END;

    PROCEDURE CheckFixedCurrency@12() : Boolean;
    VAR
      CurrExchRate@1000 : Record 330;
    BEGIN
      CurrExchRate.SETRANGE("Currency Code","Currency Code");
      CurrExchRate.SETRANGE("Starting Date",0D,PettyCashHdr."Posting Date");

      IF NOT CurrExchRate.FIND('+') THEN
        EXIT(FALSE);

      IF CurrExchRate."Relational Currency Code" = '' THEN
        EXIT(
          CurrExchRate."Fix Exchange Rate Amount" =
          CurrExchRate."Fix Exchange Rate Amount"::Both);

      IF CurrExchRate."Fix Exchange Rate Amount" <>
        CurrExchRate."Fix Exchange Rate Amount"::Both
      THEN
        EXIT(FALSE);

      CurrExchRate.SETRANGE("Currency Code",CurrExchRate."Relational Currency Code");
      IF CurrExchRate.FIND('+') THEN
        EXIT(
          CurrExchRate."Fix Exchange Rate Amount" =
          CurrExchRate."Fix Exchange Rate Amount"::Both);

      EXIT(FALSE);
    END;

    PROCEDURE ShowDimensions@25();
    VAR
      DocDim@1000 : Record 357;
      DocDimensions@1001 : Page 546;
    BEGIN
      TESTFIELD("Document No.");
      TESTFIELD("Line No.");
      DocDim.SETRANGE("Table ID",DATABASE::"Petty Cash Line");
      DocDim.SETRANGE("Document Type",DocDim."Document Type"::Invoice);
      DocDim.SETRANGE("Document No.","Document No.");
      DocDim.SETRANGE("Line No.","Line No.");
      DocDimensions.SETTABLEVIEW(DocDim);
      DocDimensions.RUNMODAL;
    END;

    LOCAL PROCEDURE GetGLSetup@45();
    BEGIN
      GLSetup.GET;
    END;

    PROCEDURE SetPettyCashHeader@1000000001(NewPettyCashHeader@1000 : Record 55001);
    BEGIN
      PettyCashHdr := NewPettyCashHeader;

      IF PettyCashHdr."Currency Code" = '' THEN
        Currency.InitRoundingPrecision
      ELSE BEGIN
        PettyCashHdr.TESTFIELD("Currency Factor");
        Currency.GET(PettyCashHdr."Currency Code");
        Currency.TESTFIELD("Amount Rounding Precision");
      END;
    END;

    PROCEDURE CreateDim@26(Type1@1000 : Integer;No1@1001 : Code[20]);
    VAR
      SourceCodeSetup@1008 : Record 242;
      DocDim@1000000001 : Record 357;
      TableID@1009 : ARRAY [10] OF Integer;
      No@1010 : ARRAY [10] OF Code[20];
    BEGIN
      SourceCodeSetup.GET;
      TableID[1] := Type1;
      No[1] := No1;
      "Shortcut Dimension 1 Code" := '';
      "Shortcut Dimension 2 Code" := '';
      DimMgt.GetPreviousDocDefaultDim(
        DATABASE::"Petty Cash Header",DocDim."Document Type"::Invoice,"Document No.",0,
        DATABASE::Vendor,"Shortcut Dimension 1 Code","Shortcut Dimension 2 Code");
      DimMgt.GetDefaultDim(
        TableID,No,SourceCodeSetup."Petty Cash",
        "Shortcut Dimension 1 Code","Shortcut Dimension 2 Code");
      IF "Line No." <> 0 THEN
        DimMgt.UpdateDocDefaultDim(
          DATABASE::"Petty Cash Line",DocDim."Document Type"::Invoice,"Document No.","Line No.",
          "Shortcut Dimension 1 Code","Shortcut Dimension 2 Code");
    END;

    PROCEDURE ValidateShortcutDimCode@29(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    VAR
      DocDim@1000000000 : Record 357;
    BEGIN
      DimMgt.ValidateDimValueCode(FieldNumber,ShortcutDimCode);
      IF "Line No." <> 0 THEN BEGIN
        DimMgt.SaveDocDim(
          DATABASE::"Petty Cash Line",DocDim."Document Type"::Invoice,"Document No.",
          "Line No.",FieldNumber,ShortcutDimCode);
        MODIFY;
      END ELSE
        DimMgt.SaveTempDim(FieldNumber,ShortcutDimCode);
    END;

    PROCEDURE LookupShortcutDimCode@30(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    VAR
      DocDim@1000000000 : Record 357;
    BEGIN
      DimMgt.LookupDimValueCode(FieldNumber,ShortcutDimCode);
      IF "Line No." <> 0 THEN BEGIN
        DimMgt.SaveDocDim(
          DATABASE::"Petty Cash Line",DocDim."Document Type"::Invoice,"Document No.",
          "Line No.",FieldNumber,ShortcutDimCode);
        MODIFY;
      END ELSE
        DimMgt.SaveTempDim(FieldNumber,ShortcutDimCode);
    END;

    PROCEDURE ShowShortcutDimCode@27(VAR ShortcutDimCode@1000 : ARRAY [8] OF Code[20]);
    VAR
      DocDim@1000000000 : Record 357;
    BEGIN
      IF "Line No." <> 0 THEN
        DimMgt.ShowDocDim(
          DATABASE::"Petty Cash Line",DocDim."Document Type"::Invoice,"Document No.",
          "Line No.",ShortcutDimCode)
      ELSE
        DimMgt.ShowTempDim(ShortcutDimCode);
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Localization TH
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   24.08.2006   KKE   Petty Cash.
      Burda
      002   14.08.2007   KKE   Average VAT.
    }
    END.
  }
}

OBJECT Table 55003 Petty Cash Comment Line
{
  OBJECT-PROPERTIES
  {
    Date=02/21/07;
    Time=[ 6:00:00 PM];
    Version List=AVATHA4.40;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Petty Cash Comment Line;
               THA=บรรทัดข้อคิดเห็นเกี่ยวกับเงินสดย่อย];
  }
  FIELDS
  {
    { 1   ;   ;Document Type       ;Option        ;CaptionML=[ENU=Document Type;
                                                              THA=ชนิดเอกสาร];
                                                   OptionCaptionML=[ENU=Invoice,Posted Invoice,Settle;
                                                                    THA=ใบแจ้งหนี้,ใบแจ้งหนี้ที่ลงรายการบัญชี,เบิกชดเชย];
                                                   OptionString=Invoice,Posted Invoice,Settle }
    { 2   ;   ;No.                 ;Code20        ;CaptionML=[ENU=No.;
                                                              THA=หมายเลข] }
    { 3   ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              THA=หมายเลขบรรทัด] }
    { 4   ;   ;Date                ;Date          ;CaptionML=[ENU=Date;
                                                              THA=วันที่] }
    { 5   ;   ;Code                ;Code10        ;CaptionML=[ENU=Code;
                                                              THA=รหัส] }
    { 6   ;   ;Comment             ;Text80        ;CaptionML=[ENU=Comment;
                                                              THA=ข้อคิดเห็น] }
  }
  KEYS
  {
    {    ;Document Type,No.,Line No.              ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    PROCEDURE SetUpNewLine@1();
    VAR
      PettyCashCommentLine@1000 : Record 55003;
    BEGIN
      PettyCashCommentLine.SETRANGE("Document Type",PettyCashCommentLine."Document Type"::Invoice);
      PettyCashCommentLine.SETRANGE("No.","No.");
      PettyCashCommentLine.SETRANGE(Date,WORKDATE);
      IF NOT PettyCashCommentLine.FIND('-') THEN
        Date := WORKDATE;
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Localization TH
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   24.08.2006   KKE   Petty Cash.
    }
    END.
  }
}

OBJECT Table 55004 Petty Cash Invoice Header
{
  OBJECT-PROPERTIES
  {
    Date=08/20/07;
    Time=[ 1:46:31 PM];
    Version List=AVATHA4.40;
  }
  PROPERTIES
  {
    OnDelete=BEGIN
               DimMgt.DeletePostedDocDim(DATABASE::"Petty Cash Invoice Header","No.",0);

               PettyCashInvLine.LOCKTABLE;
               PettyCashInvLine.SETRANGE("Document No.","No.");
               PettyCashInvLine.DELETEALL;

               PettyCashCmtLine.SETRANGE("Document Type",PettyCashCmtLine."Document Type"::"Posted Invoice");
               PettyCashCmtLine.SETRANGE("No.","No.");
               PettyCashCmtLine.DELETEALL;

               PostCodeCheck.DeleteAllAddressID(DATABASE::"Petty Cash Invoice Header",Rec.GETPOSITION);
             END;

    CaptionML=[ENU=Petty Cash Invoice Header;
               THA=หัวข้อใบแจ้งหนี้เงินสดย่อย];
    LookupPageID=Page50077;
    DrillDownPageID=Page50077;
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20        ;CaptionML=[ENU=No.;
                                                              THA=หมายเลข] }
    { 2   ;   ;Petty Cash Vendor No.;Code20       ;TableRelation=Vendor WHERE (Petty Cash=CONST(Yes));
                                                   CaptionML=[ENU=Petty Cash Vendor No.;
                                                              THA=หมายเลขผู้ขายเงินสดย่อย] }
    { 3   ;   ;Name                ;Text50        ;CaptionML=[ENU=Name;
                                                              THA=ชื่อ] }
    { 4   ;   ;Posting Date        ;Date          ;CaptionML=[ENU=Posting Date;
                                                              THA=วันที่ตั้งหนี้] }
    { 5   ;   ;Document Date       ;Date          ;CaptionML=[ENU=Document Date;
                                                              THA=วันที่เบิก] }
    { 6   ;   ;Location Code       ;Code20        ;TableRelation=Location;
                                                   CaptionML=[ENU=Location Code;
                                                              THA=รหัสที่ตั้ง] }
    { 7   ;   ;Petty Cash Amount   ;Decimal       ;CaptionML=[ENU=Petty Cash Amount;
                                                              THA=วงเงินสดย่อย];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 9   ;   ;Invoice Description ;Text50        ;CaptionML=[ENU=Invoice Description;
                                                              THA=คำอธิบายใบแจ้งหนี้] }
    { 10  ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=No. Series;
                                                              THA=ชุดหมายเลข] }
    { 11  ;   ;Status              ;Option        ;CaptionML=[ENU=Status;
                                                              THA=สถานะ];
                                                   OptionCaptionML=[ENU=Open,Released;
                                                                    THA=เปิด,นำออกใช้];
                                                   OptionString=Open,Released;
                                                   Editable=No }
    { 15  ;   ;Shortcut Dimension 1 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionML=[ENU=Shortcut Dimension 1 Code;
                                                              THA=รหัสมิติทางลัดหมายเลข 1];
                                                   CaptionClass='1,2,1' }
    { 16  ;   ;Shortcut Dimension 2 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   CaptionML=[ENU=Shortcut Dimension 2 Code;
                                                              THA=รหัสมิติทางลัดหมายเลข 2];
                                                   CaptionClass='1,2,2' }
    { 20  ;   ;Gen. Bus. Posting Group;Code10     ;TableRelation="Gen. Business Posting Group";
                                                   CaptionML=[ENU=Gen. Bus. Posting Group;
                                                              THA=กลุ่มการลงรายการบัญชีธุรกิจทั่วไป] }
    { 21  ;   ;VAT Bus. Posting Group;Code10      ;TableRelation="VAT Business Posting Group";
                                                   CaptionML=[ENU=VAT Bus. Posting Group;
                                                              THA=กลุ่มการลงรายการบัญชีธุรกิจที่ต้องเสีย VAT] }
    { 22  ;   ;WHT Business Posting Group;Code10  ;TableRelation="WHT Business Posting Group";
                                                   CaptionML=[ENU=WHT Business Posting Group;
                                                              THA=กลุ่มการลงรายการบัญชีธุรกิจ WHT] }
    { 25  ;   ;Printing WHT Slip (Doc:WHT);Option ;CaptionML=[ENU=Printing WHT Slip (Doc:WHT);
                                                              THA=พิมพ์ใบหักภาษี ณ ที่จ่าย (หนึ่งเอกสารต่อใบหักภาษี ณ ที่จ่าย)];
                                                   OptionString=1:1,1:N }
    { 30  ;   ;Name 2              ;Text50        ;CaptionML=[ENU=Name 2;
                                                              THA=ชื่อ 2] }
    { 31  ;   ;Address             ;Text50        ;CaptionML=[ENU=Address;
                                                              THA=ที่อยู่] }
    { 32  ;   ;Address 2           ;Text50        ;CaptionML=[ENU=Address 2;
                                                              THA=ที่อยู่ 2] }
    { 33  ;   ;Address 3           ;Text30        ;CaptionML=[ENU=Address 3;
                                                              THA=ที่อยู่ 3] }
    { 34  ;   ;Name (Thai)         ;Text120       ;CaptionML=[ENU=Name (Thai);
                                                              THA=ชื่อ (ไทย)] }
    { 35  ;   ;Address (Thai)      ;Text200       ;CaptionML=[ENU=Address (Thai);
                                                              THA=ที่อยู่ (ไทย)] }
    { 36  ;   ;City                ;Text30        ;CaptionML=[ENU=City;
                                                              THA=เมือง] }
    { 37  ;   ;Contact             ;Text50        ;CaptionML=[ENU=Contact;
                                                              THA=ผู้ติดต่อ] }
    { 38  ;   ;Post Code           ;Code20        ;TableRelation="Post Code";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Post Code;
                                                              THA=รหัสไปรษณีย์] }
    { 39  ;   ;County              ;Text30        ;CaptionML=[ENU=County;
                                                              THA=เขต] }
    { 40  ;   ;Country Code        ;Code10        ;TableRelation=Country/Region;
                                                   CaptionML=[ENU=Country Code;
                                                              THA=รหัสประเทศ] }
    { 46  ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Petty Cash Comment Line" WHERE (Document Type=CONST(Posted Invoice),
                                                                                                      No.=FIELD(No.)));
                                                   CaptionML=[ENU=Comment;
                                                              THA=ข้อคิดเห็น];
                                                   Editable=No }
    { 47  ;   ;User ID             ;Code20        ;TableRelation=User;
                                                   OnLookup=VAR
                                                              LoginMgt@1000 : Codeunit 418;
                                                            BEGIN
                                                            END;

                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=User ID;
                                                              THA=ID ผู้ใช้] }
    { 48  ;   ;Source Code         ;Code10        ;TableRelation="Source Code";
                                                   CaptionML=[ENU=Source Code;
                                                              THA=รหัสแหล่งที่มา] }
    { 50  ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   CaptionML=[ENU=Currency Code;
                                                              THA=รหัสสกุลเงิน] }
    { 51  ;   ;Currency Factor     ;Decimal       ;CaptionML=[ENU=Currency Factor;
                                                              THA=ปัจจัยด้านสกุลเงิน];
                                                   DecimalPlaces=0:15;
                                                   MinValue=0;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      PettyCashInvLine@1000000000 : Record 55005;
      PettyCashCmtLine@1000000001 : Record 55003;
      DimMgt@1000000002 : Codeunit 408;
      PostCodeCheck@1000000004 : Codeunit 28000;

    PROCEDURE ShowDocDim@32();
    VAR
      DocDim@1000 : Record 357;
      DocDims@1001 : Page 546;
    BEGIN
      DocDim.SETRANGE("Table ID",DATABASE::"Petty Cash Invoice Header");
      DocDim.SETRANGE("Document Type",DocDim."Document Type"::Invoice);
      DocDim.SETRANGE("Document No.","No.");
      DocDim.SETRANGE("Line No.",0);
      DocDims.SETTABLEVIEW(DocDim);
      DocDims.RUNMODAL;
      GET("No.");
    END;

    PROCEDURE Navigate@2();
    VAR
      NavigateForm@1000 : Page 344;
    BEGIN
      NavigateForm.SetDoc("Posting Date","No.");
      NavigateForm.RUN;
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Localization TH
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   24.08.2006   KKE   Petty Cash.
    }
    END.
  }
}

OBJECT Table 55005 Petty Cash Invoice Line
{
  OBJECT-PROPERTIES
  {
    Date=08/20/07;
    Time=[ 1:57:37 PM];
    Version List=AVATHA4.40;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Petty Cash Invoice Line;
               THA=บรรทัดใบแจ้งหนี้เงินสดย่อย];
  }
  FIELDS
  {
    { 1   ;   ;Document No.        ;Code20        ;TableRelation="Petty Cash Invoice Header";
                                                   CaptionML=[ENU=Document No.;
                                                              THA=หมายเลขเอกสาร] }
    { 2   ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              THA=หมายเลขบรรทัด] }
    { 3   ;   ;Petty Cash Vendor No.;Code20       ;TableRelation=Vendor WHERE (Petty Cash=CONST(Yes));
                                                   CaptionML=[ENU=Petty Cash Vendor No.;
                                                              THA=หมายเลขผู้ขายเงินสดย่อย] }
    { 5   ;   ;Type                ;Option        ;InitValue=G/L Account;
                                                   CaptionML=[ENU=Type;
                                                              THA=ชนิด];
                                                   OptionCaptionML=[ENU=" ,G/L Account,Item,,Fixed Asset,Charge (Item)";
                                                                    THA=" ,บัญชี G/L,สินค้า,,สินทรัพย์ถาวร,เปลี่ยนแปลง (สินค้า)"];
                                                   OptionString=[ ,G/L Account,Item,,Fixed Asset,Charge (Item)] }
    { 6   ;   ;No.                 ;Code20        ;TableRelation=IF (Type=CONST(" ")) "Standard Text"
                                                                 ELSE IF (Type=CONST(G/L Account)) "G/L Account"
                                                                 ELSE IF (Type=CONST(Item)) Item
                                                                 ELSE IF (Type=CONST(3)) Resource
                                                                 ELSE IF (Type=CONST(Fixed Asset)) "Fixed Asset"
                                                                 ELSE IF (Type=CONST("Charge (Item)")) "Item Charge";
                                                   OnValidate=VAR
                                                                ICPartner@1000 : Record 413;
                                                                ItemCrossReference@1001 : Record 5717;
                                                              BEGIN
                                                              END;

                                                   CaptionML=[ENU=No.;
                                                              THA=หมายเลข] }
    { 7   ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              THA=คำอธิบาย] }
    { 8   ;   ;Description 2       ;Text50        ;CaptionML=[ENU=Description 2;
                                                              THA=คำอธิบาย 2] }
    { 10  ;   ;Amount Incl. VAT    ;Decimal       ;CaptionML=[ENU=Amount Incl. VAT;
                                                              THA=จำนวนรวม VAT];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 11  ;   ;Amount (LCY) Incl. VAT;Decimal     ;CaptionML=[ENU=Amount (LCY) Incl. VAT;
                                                              THA=ยอดเงิน (LCY) รวม VAT];
                                                   AutoFormatType=1 }
    { 12  ;   ;VAT %               ;Decimal       ;CaptionML=[ENU=VAT %;
                                                              THA=VAT %];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 13  ;   ;VAT Base Amount     ;Decimal       ;CaptionML=[ENU=VAT Base Amount;
                                                              THA=ยอดเงินตามจำนวน VAT];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 14  ;   ;VAT Amount          ;Decimal       ;CaptionML=[ENU=VAT Amount;
                                                              THA=จำนวน VAT];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 15  ;   ;Shortcut Dimension 1 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionML=[ENU=Shortcut Dimension 1 Code;
                                                              THA=รหัสมิติทางลัดหมายเลข 1];
                                                   CaptionClass='1,2,1' }
    { 16  ;   ;Shortcut Dimension 2 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   CaptionML=[ENU=Shortcut Dimension 2 Code;
                                                              THA=รหัสมิติทางลัดหมายเลข 2];
                                                   CaptionClass='1,2,2' }
    { 20  ;   ;Gen. Bus. Posting Group;Code10     ;TableRelation="Gen. Business Posting Group";
                                                   CaptionML=[ENU=Gen. Bus. Posting Group;
                                                              THA=กลุ่มการลงรายการบัญชีธุรกิจทั่วไป] }
    { 21  ;   ;Gen. Prod. Posting Group;Code10    ;TableRelation="Gen. Product Posting Group";
                                                   CaptionML=[ENU=Gen. Prod. Posting Group;
                                                              THA=กลุ่มการลงรายการบัญชีผลิตภัณฑ์ทั่วไป] }
    { 22  ;   ;VAT Bus. Posting Group;Code10      ;TableRelation="VAT Business Posting Group";
                                                   CaptionML=[ENU=VAT Bus. Posting Group;
                                                              THA=กลุ่มการลงรายการบัญชีธุรกิจที่ต้องเสีย VAT] }
    { 23  ;   ;VAT Prod. Posting Group;Code10     ;TableRelation="VAT Product Posting Group";
                                                   CaptionML=[ENU=VAT Prod. Posting Group;
                                                              THA=กลุ่มการลงรายการบัญชีผลิตภัณฑ์ที่ต้องเสีย VAT] }
    { 24  ;   ;WHT Business Posting Group;Code10  ;TableRelation="WHT Business Posting Group";
                                                   CaptionML=[ENU=WHT Business Posting Group;
                                                              THA=กลุ่มการลงรายการบัญชีธุรกิจ WHT] }
    { 25  ;   ;WHT Product Posting Group;Code10   ;TableRelation="WHT Product Posting Group";
                                                   CaptionML=[ENU=WHT Product Posting Group;
                                                              THA=กลุ่มการลงรายการผลิตภัณฑ์ WHT] }
    { 26  ;   ;WHT Absorb Base     ;Decimal       ;CaptionML=[ENU=WHT Absorb Base;
                                                              THA=อัตราพื้นฐานภาษีหัก ณ ที่จ่าย] }
    { 30  ;   ;Real Customer/Vendor Name;Text120  ;CaptionML=[ENU=Real Customer/Vendor Name;
                                                              THA=ชื่อผู้ซื้อ/ผู้ขายจริง] }
    { 31  ;   ;Actual Vendor No.   ;Code20        ;TableRelation=Vendor;
                                                   CaptionML=[ENU=Actual Vendor No.;
                                                              THA=หมายเลขผู้ขายจริง] }
    { 32  ;   ;Skip WHT            ;Boolean       ;CaptionML=[ENU=Skip WHT;
                                                              THA=ข้าม WHT] }
    { 33  ;   ;WHT Certificate No. ;Code20        ;CaptionML=[ENU=WHT Certificate No.;
                                                              THA=หมายเลขหนังสือรับรอง WHT] }
    { 34  ;   ;Certificate Printed ;Boolean       ;CaptionML=[ENU=Certificate Printed;
                                                              THA=พิมพ์หนังสือรับรองแล้ว];
                                                   Editable=No }
    { 35  ;   ;WHT Entry No.       ;Integer       ;CaptionML=[ENU=WHT Entry No.;
                                                              THA=หมายเลขรายการ] }
    { 40  ;   ;Tax Invoice No.     ;Code20        ;CaptionML=[ENU=Tax Invoice No.;
                                                              THA=เลขที่ใบกำกับภาษี] }
    { 41  ;   ;Tax Invoice Date    ;Date          ;CaptionML=[ENU=Tax Invoice Date;
                                                              THA=วันที่ออกใบกำกับภาษี] }
    { 42  ;   ;External Document No.;Code20       ;CaptionML=[ENU=External Document No.;
                                                              THA=หมายเลขเอกสารภายนอก] }
    { 50  ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   CaptionML=[ENU=Currency Code;
                                                              THA=รหัสสกุลเงิน];
                                                   Editable=No }
    { 77  ;   ;VAT Calculation Type;Option        ;CaptionML=[ENU=VAT Calculation Type;
                                                              THA=ชนิดการคำนวณ VAT];
                                                   OptionCaptionML=[ENU=Normal VAT,Reverse Charge VAT,Full VAT,Sales Tax;
                                                                    THA=VAT ปกติ,VAT คิดย้อนหลัง,VAT เต็มจำนวน,ภาษีขาย];
                                                   OptionString=Normal VAT,Reverse Charge VAT,Full VAT,Sales Tax;
                                                   Editable=No }
    { 78  ;   ;VAT Amount (LCY)    ;Decimal       ;CaptionML=[ENU=VAT Amount (LCY);
                                                              THA=ยอด VAT (LCY)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 79  ;   ;VAT Base Amount (LCY);Decimal      ;CaptionML=[ENU=VAT Base Amount (LCY);
                                                              THA=จำนวนฐาน VAT (LCY)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 85  ;   ;Use Tax             ;Boolean       ;CaptionML=[ENU=Use Tax;
                                                              THA=ใช้ภาษี] }
    { 104 ;   ;VAT Difference      ;Decimal       ;CaptionML=[ENU=VAT Difference;
                                                              THA=ส่วนต่างของ VAT];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 50020;  ;VAT Claim %         ;Decimal       ;DecimalPlaces=0:2;
                                                   MinValue=0;
                                                   MaxValue=100;
                                                   Description=Burda1.00;
                                                   Editable=No }
    { 50021;  ;VAT Unclaim %       ;Decimal       ;MinValue=0;
                                                   MaxValue=100;
                                                   Description=Burda1.00;
                                                   Editable=No }
    { 50022;  ;Avg. VAT Amount     ;Decimal       ;Description=Burda1.00;
                                                   Editable=No }
    { 50024;  ;Average VAT Year    ;Integer       ;TableRelation="Average VAT Setup";
                                                   Description=Burda1.00 }
  }
  KEYS
  {
    {    ;Document No.,Line No.                   ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    PROCEDURE ShowDimensions@1000000000();
    VAR
      PostedDocDim@1000 : Record 359;
      PostedDocDimensions@1001 : Page 547;
    BEGIN
      TESTFIELD("No.");
      TESTFIELD("Line No.");
      PostedDocDim.SETRANGE("Table ID",DATABASE::"Petty Cash Invoice Line");
      PostedDocDim.SETRANGE("Document No.","Document No.");
      PostedDocDim.SETRANGE("Line No.","Line No.");
      PostedDocDimensions.SETTABLEVIEW(PostedDocDim);
      PostedDocDimensions.RUNMODAL;
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Localization TH
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   24.08.2006   KKE   Petty Cash.
    }
    END.
  }
}

OBJECT Table 55006 Settle Petty Cash Header
{
  OBJECT-PROPERTIES
  {
    Date=02/23/07;
    Time=[ 6:00:00 PM];
    Version List=AVATHA4.40;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               PettyCashSetup.GET;

               IF "No." = '' THEN BEGIN
                 PettyCashSetup.TESTFIELD("Settle Petty Cash Nos.");
                 NoSeriesMgt.InitSeries(PettyCashSetup."Settle Petty Cash Nos.",xRec."No. Series","Posting Date","No.","No. Series");
               END;

               InitRecord;

               "Posting Date" := WORKDATE;
               "Document Date" := WORKDATE;
             END;

    OnModify=BEGIN
               TESTFIELD(Status,Status::Open);
               TESTFIELD("Cheque Printed",FALSE);
             END;

    OnDelete=BEGIN
               SettlePettyCashLine.LOCKTABLE;
               SettlePettyCashLine.SETRANGE("Settle Petty Cash No.","No.");
               SettlePettyCashLine.DELETEALL;
             END;

    CaptionML=[ENU=Settle Petty Cash Header;
               THA=หัวข้อการเบิกชดเชยเงินสดย่อย];
    LookupPageID=Page50082;
    DrillDownPageID=Page50082;
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20        ;CaptionML=[ENU=No.;
                                                              THA=หมายเลข] }
    { 2   ;   ;Petty Cash Vendor No.;Code20       ;TableRelation=Vendor WHERE (Petty Cash=CONST(Yes));
                                                   OnValidate=BEGIN
                                                                TESTFIELD(Status,Status::Open);
                                                                IF ("Petty Cash Vendor No." <> xRec."Petty Cash Vendor No.") AND
                                                                   (xRec."Petty Cash Vendor No." <> '')
                                                                THEN BEGIN
                                                                  IF HideValidationDialog THEN
                                                                    Confirmed :=TRUE
                                                                  ELSE
                                                                    Confirmed := CONFIRM(Text001,FALSE,FIELDCAPTION("Petty Cash Vendor No."));
                                                                  IF Confirmed THEN BEGIN
                                                                    SettlePettyCashLine.SETRANGE("Settle Petty Cash No.","No.");
                                                                    IF "Petty Cash Vendor No." = '' THEN BEGIN
                                                                      IF SettlePettyCashLine.FIND('-') THEN
                                                                        ERROR(
                                                                          Text004,
                                                                          FIELDCAPTION("Petty Cash Vendor No."));
                                                                      INIT;
                                                                      "No. Series" := xRec."No. Series";
                                                                      InitRecord;
                                                                      EXIT;
                                                                    END;
                                                                    SettlePettyCashLine.RESET;
                                                                  END ELSE BEGIN
                                                                    Rec := xRec;
                                                                    EXIT;
                                                                  END;
                                                                END;

                                                                GetVend("Petty Cash Vendor No.");
                                                                "Petty Cash Name" := Vend.Name;
                                                                VALIDATE("Location Code",Vend."Location Code");
                                                                VALIDATE("Currency Code",Vend."Currency Code");
                                                                "Petty Cash Amount" := Vend."Petty Cash Amount";
                                                              END;

                                                   CaptionML=[ENU=Petty Cash Vendor No.;
                                                              THA=หมายเลขผู้ขายเงินสดย่อย] }
    { 3   ;   ;Petty Cash Name     ;Text50        ;CaptionML=[ENU=Petty Cash Name;
                                                              THA=ชื่อผู้ขายเงินสดย่อย] }
    { 4   ;   ;Posting Date        ;Date          ;CaptionML=[ENU=Posting Date;
                                                              THA=วันที่ตั้งหนี้] }
    { 5   ;   ;Document Date       ;Date          ;CaptionML=[ENU=Document Date;
                                                              THA=วันที่เบิก] }
    { 6   ;   ;Petty Cash Amount   ;Decimal       ;CaptionML=[ENU=Petty Cash Amount;
                                                              THA=วงเงินสดย่อย];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 7   ;   ;Balance Amount      ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Detailed Vendor Ledg. Entry".Amount WHERE (Vendor No.=FIELD(Petty Cash Vendor No.),
                                                                                                                Posting Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Balance Amount;
                                                              THA=เงินดุล];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 8   ;   ;Balance Settle      ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Settle Petty Cash Line"."Amount (LCY) Incl. VAT" WHERE (Settle Petty Cash No.=FIELD(No.)));
                                                   CaptionML=[ENU=Balance Settle;
                                                              THA=ดุลเบิกชดเชย];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 9   ;   ;Payment Invoice Description;Text50 ;CaptionML=[ENU=Payment Invoice Description;
                                                              THA=คำอธิบายการชำระเงินใบแจ้งหนี้] }
    { 10  ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=No. Series;
                                                              THA=ชุดหมายเลข] }
    { 11  ;   ;Status              ;Option        ;CaptionML=[ENU=Status;
                                                              THA=สถานะ];
                                                   OptionCaptionML=[ENU=Open,Released;
                                                                    THA=เปิด,นำออกใช้];
                                                   OptionString=Open,Released;
                                                   Editable=No }
    { 12  ;   ;Settle Account Type ;Option        ;InitValue=Bank Account;
                                                   OnValidate=BEGIN
                                                                IF "Settle Account Type" <> xRec."Settle Account Type" THEN
                                                                  "Settle Account No." := '';
                                                              END;

                                                   CaptionML=[ENU=Settle Account Type;
                                                              THA=ประเภทบัญชีเบิกชดเชย];
                                                   OptionCaptionML=[ENU=G/L Account,Customer,Vendor,Bank Account,Fixed Asset,IC Partner;
                                                                    THA=บัญชี G/L,ลูกค้า,ผู้ขาย,บัญชีธนาคาร,สินทรัพย์ถาวร,บริษัทในเครือ IC];
                                                   OptionString=G/L Account,Customer,Vendor,Bank Account,Fixed Asset,IC Partner }
    { 13  ;   ;Settle Account No.  ;Code20        ;TableRelation=IF (Settle Account Type=CONST(G/L Account)) "G/L Account"
                                                                 ELSE IF (Settle Account Type=CONST(Customer)) Customer
                                                                 ELSE IF (Settle Account Type=CONST(Vendor)) Vendor
                                                                 ELSE IF (Settle Account Type=CONST(Bank Account)) "Bank Account"
                                                                 ELSE IF (Settle Account Type=CONST(Fixed Asset)) "Fixed Asset"
                                                                 ELSE IF (Settle Account Type=CONST(IC Partner)) "IC Partner";
                                                   CaptionML=[ENU=Settle Account No.;
                                                              THA=หมายเลขบัญชีเบิกชดเชย] }
    { 21  ;   ;Total WHT (LCY)     ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Settle Petty Cash Line"."WHT Amount (LCY)" WHERE (Settle Petty Cash No.=FIELD(No.)));
                                                   CaptionML=[ENU=Total WHT (LCY);
                                                              THA=ยอดรวม WHT (LCY)];
                                                   Editable=No }
    { 30  ;   ;Bank Payment Type   ;Option        ;OnValidate=BEGIN
                                                                IF ("Bank Payment Type" <> "Bank Payment Type"::" ") AND
                                                                   ("Settle Account Type" <> "Settle Account Type"::"Bank Account")
                                                                THEN
                                                                  ERROR(
                                                                    Text007,
                                                                    FIELDCAPTION("Settle Account Type"));
                                                                IF ("Settle Account Type" = "Settle Account Type"::"Fixed Asset") AND
                                                                   ("Bank Payment Type" <> "Bank Payment Type"::" ")
                                                                THEN
                                                                  FIELDERROR("Settle Account Type");
                                                              END;

                                                   CaptionML=[ENU=Bank Payment Type;
                                                              THA=รูปแบบการชำระเงินให้ธนาคาร];
                                                   OptionCaptionML=[ENU=" ,Computer Check,Manual Check";
                                                                    THA=" ,ตรวจสอบด้วยคอมพิวเตอร์,ตรวจสอบด้วยตนเอง"];
                                                   OptionString=[ ,Computer Check,Manual Check] }
    { 31  ;   ;Cheque Printed      ;Boolean       ;CaptionML=[ENU=Cheque Printed;
                                                              THA=เช็คที่พิมพ์];
                                                   Editable=No }
    { 32  ;   ;Cheque No.          ;Code20        ;CaptionML=[ENU=Cheque No.;
                                                              THA=หมายเลขเช็ค];
                                                   Editable=No }
    { 33  ;   ;Paid to Vendor Name ;Text120       ;CaptionML=[ENU=Paid to Vendor Name;
                                                              THA=จ่ายให้แก่ชื่อ] }
    { 46  ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Petty Cash Comment Line" WHERE (Document Type=CONST(Settle),
                                                                                                      No.=FIELD(No.)));
                                                   CaptionML=[ENU=Comment;
                                                              THA=ข้อคิดเห็น];
                                                   Editable=No }
    { 47  ;   ;User ID             ;Code20        ;TableRelation=User;
                                                   OnLookup=VAR
                                                              LoginMgt@1000 : Codeunit 418;
                                                            BEGIN
                                                              LoginMgt.LookupUserID("User ID");
                                                            END;

                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=User ID;
                                                              THA=ID ผู้ใช้] }
    { 48  ;   ;Source Code         ;Code10        ;TableRelation="Source Code";
                                                   CaptionML=[ENU=Source Code;
                                                              THA=รหัสแหล่งที่มา] }
    { 49  ;   ;Location Code       ;Code20        ;TableRelation=Location;
                                                   CaptionML=[ENU=Location Code;
                                                              THA=รหัสที่ตั้ง] }
    { 50  ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   OnValidate=BEGIN
                                                                IF NOT (CurrFieldNo IN [0,FIELDNO("Posting Date")]) THEN
                                                                  TESTFIELD(Status,Status::Open);
                                                                IF CurrFieldNo <> FIELDNO("Currency Code") THEN
                                                                  UpdateCurrencyFactor
                                                                ELSE BEGIN
                                                                  IF "Currency Code" <> xRec."Currency Code" THEN BEGIN
                                                                    UpdateCurrencyFactor;
                                                                    RecreateSettlePettyCashLines(FIELDCAPTION("Currency Code"));
                                                                  END ELSE
                                                                    IF "Currency Code" <> '' THEN BEGIN
                                                                      UpdateCurrencyFactor;
                                                                      IF "Currency Factor" <> xRec."Currency Factor" THEN
                                                                        ConfirmUpdateCurrencyFactor;
                                                                    END;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Currency Code;
                                                              THA=รหัสสกุลเงิน] }
    { 51  ;   ;Currency Factor     ;Decimal       ;OnValidate=BEGIN
                                                                IF "Currency Factor" <> xRec."Currency Factor" THEN
                                                                  UpdateSettlePettyCashLines(FIELDCAPTION("Currency Factor"));
                                                              END;

                                                   CaptionML=[ENU=Currency Factor;
                                                              THA=ปัจจัยด้านสกุลเงิน];
                                                   DecimalPlaces=0:15;
                                                   MinValue=0;
                                                   Editable=No }
    { 52  ;   ;Date Filter         ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Date Filter;
                                                              THA=ตัวกรองวันที่] }
    { 50000;  ;Cheque Date         ;Date          ;CaptionML=[ENU=Cheque Date;
                                                              THA=วันที่เช็ค] }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      SettlePettyCashHdr@1000000000 : Record 55006;
      SettlePettyCashLine@1000000003 : Record 55007;
      PettyCashSetup@1000000001 : Record 55000;
      PettyCashCmtLine@1000000023 : Record 55003;
      GenBusPostingGrp@1000000010 : Record 250;
      Vend@1000000011 : Record 23;
      SourceCodeSetup@1000000025 : Record 242;
      DocDim@1000000008 : Record 357;
      GLSetup@1000000013 : Record 98;
      CurrExchRate@1000000015 : Record 330;
      NoSeriesMgt@1000000002 : Codeunit 396;
      Text001@1000000005 : TextConst 'ENU=Do you want to change %1?;THA=คุณต้องการเปลี่ยน %1 หรือ?';
      Text002@1000000004 : TextConst 'ENU=If you change %1, the existing petty cash invoice lines will be deleted and new petty cash invoice lines based on the new information in the header will be created.\\;THA=ถ้าคุณเปลี่ยน %1, บรรทัดการซื้อที่มีอยู่จะถูกลบออก และจะมีการสร้างบรรทัดการซื้อใหม่โดยใช้รายละเอียดใหม่ในหัวข้อ\\';
      DimMgt@1000000020 : Codeunit 408;
      PostCodeCheck@1000000021 : Codeunit 28000;
      HideValidationDialog@1000000007 : Boolean;
      Confirmed@1000000006 : Boolean;
      Text003@1000000009 : TextConst 'ENU=You must delete the existing petty cash invoice lines before you can change %1.;THA=คุณต้องลบบรรทัดการซื้อที่มีอยู่ก่อน จึงจะสามารถเปลี่ยน %1 ได้';
      Text004@1000000012 : TextConst 'ENU=You cannot reset %1 because the document still has one or more lines.;THA=คุณไม่สามารถรีเซ็ต %1 เนื่องจากเอกสารยังมีบรรทัดอยู่หนึ่งหรือหลายบรรทัด';
      CurrencyDate@1000000014 : Date;
      Text005@1000000016 : TextConst 'ENU=Do you want to update the exchange rate?;THA=คุณต้องการปรับปรุงอัตราแลกเปลี่ยนหรือ?';
      Text006@1000000027 : TextConst 'ENU=Vendor ledger entries no. %1 has already applied by another docuement.';
      Text007@1000000026 : TextConst 'ENU=%1 must be a Bank Account.;THA=%1 หรือ %2 ต้องเป็นบัญชีธนาคาร';
      Text025@1000000019 : TextConst 'ENU="You have modified the %1 field. Note that the recalculation of VAT may cause penny differences, so you must check the amounts afterwards. ";THA=คุณได้แก้ไขฟิลด์ %1 แล้ว  หมายเหตุว่า การคำนวณ VAT ใหม่อาจทำให้เกิดผลต่างเศษสตางค์ได้ ดังนั้นคุณจึงต้องตรวจสอบยอดเงินหลังจากนั้น';
      Text027@1000000018 : TextConst 'ENU=Do you want to update the %2 field on the lines to reflect the new value of %1?;THA=คุณต้องการปรับปรุงฟิลด์ %2 ในบรรทัดเพื่อให้เห็นค่าใหม่ของ %1 หรือ?';
      SkipPayToContact@1000000022 : Boolean;
      Text028@1000000017 : TextConst 'ENU=There is nothing to release for %1.;THA=ไม่มีข้อมูลที่จะนำออกแสดงสำหรับ %1 %2';
      Text030@1000000024 : TextConst 'ENU=Actual Vendor No. on Petty Cash Line must not be difference.';

    PROCEDURE InitRecord@10();
    BEGIN
      IF ("Posting Date" = 0D)
      THEN
        "Posting Date" := WORKDATE;
      "Document Date" := WORKDATE;

      SourceCodeSetup.GET;
      SourceCodeSetup.TESTFIELD("Petty Cash");
      "Source Code" := SourceCodeSetup."Petty Cash";
    END;

    PROCEDURE AssistEdit@1(OldSettlePettyCashHdr@1000 : Record 55006) : Boolean;
    BEGIN
      PettyCashSetup.GET;
      PettyCashSetup.TESTFIELD("Settle Petty Cash Nos.");
      IF NoSeriesMgt.SelectSeries(PettyCashSetup."Settle Petty Cash Nos.",OldSettlePettyCashHdr."No. Series","No. Series") THEN BEGIN
        NoSeriesMgt.SetSeries("No.");
        EXIT(TRUE);
      END;
    END;

    PROCEDURE RecreateSettlePettyCashLines@4(ChangedFieldName@1000 : Text[100]);
    VAR
      SettlePettyCashLineTmp@1001 : TEMPORARY Record 55007;
    BEGIN
      IF SettlePettyCashLinesExist THEN BEGIN
        IF HideValidationDialog THEN
          Confirmed :=TRUE
        ELSE
          Confirmed :=
            CONFIRM(
              Text002 +
               Text001,FALSE,ChangedFieldName);
        IF Confirmed THEN BEGIN
          SettlePettyCashLine.LOCKTABLE;
          MODIFY;

          SettlePettyCashLine.RESET;
          SettlePettyCashLine.SETRANGE("Settle Petty Cash No.","No.");
          IF SettlePettyCashLine.FIND('-') THEN BEGIN
            REPEAT
              SettlePettyCashLineTmp := SettlePettyCashLine;
              SettlePettyCashLine.MODIFY;
              SettlePettyCashLineTmp.INSERT;
            UNTIL SettlePettyCashLine.NEXT = 0;

            SettlePettyCashLine.DELETEALL(TRUE);

            SettlePettyCashLine.INIT;
            SettlePettyCashLine."Line No." := 0;
            SettlePettyCashLineTmp.FIND('-');
            REPEAT
              SettlePettyCashLine.INIT;
              SettlePettyCashLine."Line No." := SettlePettyCashLine."Line No." + 10000;
              SettlePettyCashLine.VALIDATE("Entry No.",SettlePettyCashLineTmp."Entry No.");
              SettlePettyCashLine.INSERT;
            UNTIL SettlePettyCashLineTmp.NEXT = 0;

            SettlePettyCashLineTmp.RESET;
            SettlePettyCashLineTmp.DELETEALL;
          END;
        END ELSE
          ERROR(
            Text003,ChangedFieldName);
      END;
    END;

    PROCEDURE SettlePettyCashLinesExist@3() : Boolean;
    BEGIN
      SettlePettyCashLine.RESET;
      SettlePettyCashLine.SETRANGE("Settle Petty Cash No.","No.");
      EXIT(SettlePettyCashLine.FIND('-'));
    END;

    LOCAL PROCEDURE GetVend@1000000000(VendNo@1000 : Code[20]);
    BEGIN
      IF VendNo <> Vend."No." THEN
        Vend.GET(VendNo);
    END;

    LOCAL PROCEDURE UpdateCurrencyFactor@12();
    BEGIN
      IF "Currency Code" <> '' THEN BEGIN
        GLSetup.GET;
        CurrencyDate := "Posting Date";

        "Currency Factor" := CurrExchRate.ExchangeRate(CurrencyDate,"Currency Code");
      END ELSE
        "Currency Factor" := 0;
    END;

    LOCAL PROCEDURE ConfirmUpdateCurrencyFactor@13();
    BEGIN
      IF HideValidationDialog THEN
        Confirmed :=TRUE
      ELSE
        Confirmed := CONFIRM(Text005,FALSE);
      IF Confirmed THEN
        VALIDATE("Currency Factor")
      ELSE
        "Currency Factor" := xRec."Currency Factor";
    END;

    PROCEDURE UpdateSettlePettyCashLines@15(ChangedFieldName@1000 : Text[100]);
    VAR
      _SettlePettyCashLine@1000000000 : Record 55007;
      UpdateConfirmed@1002 : Boolean;
    BEGIN
      IF SettlePettyCashLinesExist THEN BEGIN

        IF NOT GUIALLOWED THEN
          UpdateConfirmed := TRUE;

        SettlePettyCashLine.LOCKTABLE;
        MODIFY;

        REPEAT
          _SettlePettyCashLine := SettlePettyCashLine;
          CASE ChangedFieldName OF
            FIELDCAPTION("Currency Factor") :
              IF SettlePettyCashLine."Entry No." <> 0 THEN
                SettlePettyCashLine.VALIDATE("Entry No.");
          END;
          SettlePettyCashLine.MODIFY(TRUE);
        UNTIL SettlePettyCashLine.NEXT = 0;
      END;
    END;

    PROCEDURE Release@1000000003();
    VAR
      SettlePettyCashLine2@1000000001 : Record 55007;
    BEGIN
      IF Status = Status::Released THEN
        EXIT;

      TESTFIELD("Petty Cash Vendor No.");
      TESTFIELD("Posting Date");
      TESTFIELD("Settle Account No.");
      TESTFIELD("Cheque Printed",FALSE);

      SettlePettyCashLine2.SETRANGE("Settle Petty Cash No.","No.");
      IF NOT SettlePettyCashLine2.FIND('-') THEN
        ERROR(Text028,"No.");

      CheckAppliedVendLedgEntry;

      SetVendApplId(FALSE);

      Status := Status::Released;
      MODIFY;
    END;

    PROCEDURE Reopen@1000000001();
    BEGIN
      IF Status = Status::Open THEN
        EXIT;

      TESTFIELD("Cheque Printed",FALSE);
      SetVendApplId(TRUE);

      IF CheckUnappliedVendLedgEntry THEN
        EXIT;

      Status := Status::Open;
      MODIFY;
    END;

    PROCEDURE CheckAppliedVendLedgEntry@1000000004();
    VAR
      VendLedgEntry@1000000000 : Record 25;
      SettlePettyCashLine2@1000000002 : Record 55007;
      GenJnlLine@1000000003 : Record 81;
    BEGIN
      SettlePettyCashLine2.SETRANGE("Settle Petty Cash No.","No.");
      IF SettlePettyCashLine2.FIND('-') THEN
        REPEAT
          VendLedgEntry.GET(SettlePettyCashLine2."Entry No.");
          IF VendLedgEntry."Applies-to ID" <> '' THEN
            ERROR(STRSUBSTNO(Text006,SettlePettyCashLine2."Entry No."));
          GenJnlLine.SETRANGE("Applies-to Doc. Type",SettlePettyCashLine2."Document Type");
          GenJnlLine.SETRANGE("Applies-to Doc. No.",SettlePettyCashLine2."Document No.");
          IF GenJnlLine.FIND('-') THEN
            ERROR(STRSUBSTNO(Text006,SettlePettyCashLine2."Entry No."));
        UNTIL SettlePettyCashLine2.NEXT=0;
    END;

    PROCEDURE CheckUnappliedVendLedgEntry@1000000006() : Boolean;
    VAR
      VendLedgEntry@1000000000 : Record 25;
      SettlePettyCashLine2@1000000002 : Record 55007;
      GenJnlLine@1000000003 : Record 81;
    BEGIN
      SettlePettyCashLine2.SETRANGE("Settle Petty Cash No.","No.");
      IF SettlePettyCashLine2.FIND('-') THEN
        REPEAT
          VendLedgEntry.GET(SettlePettyCashLine2."Entry No.");
          IF VendLedgEntry."Applies-to ID" <> '' THEN
            EXIT(TRUE);
        UNTIL SettlePettyCashLine2.NEXT=0;
      EXIT(FALSE);
    END;

    PROCEDURE SetVendApplId@1000000002(ResetAppliedID@1000000000 : Boolean);
    VAR
      VendLedgEntry@1000000001 : Record 25;
      VendLedgEntry2@1000000003 : Record 25;
      SettlePettyCashLine2@1000000004 : Record 55007;
      ApplyingVendLedgEntry@1000000007 : TEMPORARY Record 25;
      VendEntrySetApplID@1000000002 : Codeunit 111;
      AppliedAmount@1000000006 : Decimal;
      PmtDiscAmount@1000000005 : Decimal;
      RemBalanceSettle@1000000008 : Decimal;
    BEGIN
      IF ResetAppliedID THEN BEGIN
        VendLedgEntry.SETRANGE("Applies-to ID","No.");
        IF VendLedgEntry.FIND('-') THEN
          REPEAT
            VendLedgEntry.MARK(TRUE);
          UNTIL VendLedgEntry.NEXT=0;
      END ELSE BEGIN
        CALCFIELDS("Balance Settle");
        RemBalanceSettle := "Balance Settle";
        VendLedgEntry2.RESET;
        VendLedgEntry2.SETRANGE("Vendor No.","Petty Cash Vendor No.");
        VendLedgEntry2.SETRANGE("Document Type",VendLedgEntry2."Document Type"::Payment);
        VendLedgEntry2.SETRANGE(Open,TRUE);
        VendLedgEntry2.SETFILTER("Posting Date",'..%1',"Posting Date");
        VendLedgEntry2.SETCURRENTKEY("Vendor No.","Posting Date");
        IF VendLedgEntry2.FIND('-') THEN
          REPEAT
            VendLedgEntry2.CALCFIELDS("Remaining Amt. (LCY)");
            IF VendLedgEntry2."Remaining Amt. (LCY)" + RemBalanceSettle > 0 THEN
              RemBalanceSettle := 0
            ELSE
              RemBalanceSettle := VendLedgEntry2."Remaining Amt. (LCY)" + RemBalanceSettle;
            VendLedgEntry := VendLedgEntry2;
            VendLedgEntry.MARK(TRUE);
          UNTIL (VendLedgEntry2.NEXT=0) OR (RemBalanceSettle=0);

        SettlePettyCashLine2.SETRANGE("Settle Petty Cash No.","No.");
        IF SettlePettyCashLine2.FIND('-') THEN
        REPEAT
          VendLedgEntry.GET(SettlePettyCashLine2."Entry No.");
          IF VendLedgEntry.Open THEN
            VendLedgEntry.MARK(TRUE);
        UNTIL SettlePettyCashLine2.NEXT=0;
      END;

      VendLedgEntry.MARKEDONLY(TRUE);
      IF VendLedgEntry.COUNT = 0 THEN
        EXIT;
      VendEntrySetApplID.SetApplId(VendLedgEntry,ApplyingVendLedgEntry,AppliedAmount,PmtDiscAmount,"No.");
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Localization TH
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   24.08.2006   KKE   Petty Cash.
      002   22.01.2007   KKE   Add new field "Cheque Date" - Show on Print Cheque,Cheque ledger entries
    }
    END.
  }
}

OBJECT Table 55007 Settle Petty Cash Line
{
  OBJECT-PROPERTIES
  {
    Date=07/10/07;
    Time=[ 6:00:00 PM];
    Version List=AVATHA4.40;
  }
  PROPERTIES
  {
    OnInsert=VAR
               DocDim@1000000000 : Record 357;
             BEGIN
               TestStatusOpen;

               LOCKTABLE;
               SettlePettyCashHdr."No." := '';
               TESTFIELD("Entry No.");
             END;

    OnModify=BEGIN
               TestStatusOpen;
             END;

    OnDelete=BEGIN
               TestStatusOpen;
             END;

    CaptionML=[ENU=Settle Petty Cash Line;
               THA=บรรทัดการเบิกชดเชยเงินสดย่อย];
  }
  FIELDS
  {
    { 1   ;   ;Settle Petty Cash No.;Code20       ;TableRelation="Settle Petty Cash Header";
                                                   CaptionML=[ENU=Settle Petty Cash No.;
                                                              THA=หมายเลขใบเบิกชดเชยเงินสดย่อย] }
    { 2   ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              THA=หมายเลขบรรทัด] }
    { 3   ;   ;Petty Cash Vendor No.;Code20       ;TableRelation=Vendor WHERE (Petty Cash=CONST(Yes));
                                                   CaptionML=[ENU=Petty Cash Vendor No.;
                                                              THA=หมายเลขผู้ขายเงินสดย่อย] }
    { 4   ;   ;Entry No.           ;Integer       ;TableRelation="Vendor Ledger Entry" WHERE (Vendor No.=FIELD(Petty Cash Vendor No.),
                                                                                              Document Type=CONST(Invoice),
                                                                                              Open=CONST(Yes));
                                                   OnValidate=BEGIN
                                                                CheckExistVendLedgEntry("Entry No.");
                                                                UpdateSettleLine;
                                                              END;

                                                   CaptionML=[ENU=Entry No.;
                                                              THA=หมายเลขรายการ] }
    { 6   ;   ;Posting Date        ;Date          ;CaptionML=[ENU=Posting Date;
                                                              THA=วันที่ลงรายการบัญชี] }
    { 7   ;   ;Document Type       ;Option        ;CaptionML=[ENU=Document Type;
                                                              THA=ชนิดเอกสาร];
                                                   OptionCaptionML=[ENU=" ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund";
                                                                    THA=" ,การชำระเงิน,ใบแจ้งหนี้,ใบลดหนี้,บันทึกค่าธรรมเนียมทางการเงิน,จดหมายเตือนชำระเงิน,คืนเงิน"];
                                                   OptionString=[ ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund] }
    { 8   ;   ;Document No.        ;Code20        ;CaptionML=[ENU=Document No.;
                                                              THA=หมายเลขเอกสาร] }
    { 9   ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              THA=คำอธิบาย] }
    { 10  ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   CaptionML=[ENU=Currency Code;
                                                              THA=รหัสสกุลเงิน] }
    { 11  ;   ;Amount Incl. VAT    ;Decimal       ;CaptionML=[ENU=Amount Incl. VAT;
                                                              THA=จำนวนรวม VAT];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 12  ;   ;Amount (LCY) Incl. VAT;Decimal     ;CaptionML=[ENU=Amount (LCY) Incl. VAT;
                                                              THA=ยอดเงิน (LCY) รวม VAT];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 13  ;   ;WHT Amount (LCY)    ;Decimal       ;CaptionML=[ENU=WHT Amount (LCY);
                                                              THA=จำนวนเงิน WHT (LCY)];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Settle Petty Cash No.,Line No.          ;SumIndexFields=Amount Incl. VAT,Amount (LCY) Incl. VAT,WHT Amount (LCY);
                                                   Clustered=Yes }
    {    ;Entry No.                                }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      SettlePettyCashHdr@1000000000 : Record 55006;
      Text000@1000000001 : TextConst 'ENU=The vendor ledger entry no. %1 has already used by another document.';
      Text001@1000000002 : TextConst 'ENU=You are not allowed to apply and post an entry to an entry with an earlier posting date.';

    PROCEDURE GetSettlePettyCashHdr@1000000000();
    BEGIN
      TESTFIELD("Settle Petty Cash No.");
      IF "Settle Petty Cash No." <> SettlePettyCashHdr."No." THEN BEGIN
        SettlePettyCashHdr.GET("Settle Petty Cash No.");
      END;
    END;

    LOCAL PROCEDURE TestStatusOpen@37();
    BEGIN
      GetSettlePettyCashHdr;
      SettlePettyCashHdr.TESTFIELD(Status,SettlePettyCashHdr.Status::Open);
    END;

    PROCEDURE UpdateSettleLine@1000000001();
    VAR
      VendLedgEntry@1000000000 : Record 25;
    BEGIN
      GetSettlePettyCashHdr;
      VendLedgEntry.GET("Entry No.");
      IF VendLedgEntry."Posting Date" > SettlePettyCashHdr."Posting Date" THEN
        ERROR(Text001);
      "Posting Date" := VendLedgEntry."Posting Date";
      "Document Type" := VendLedgEntry."Document Type";
      "Document No." := VendLedgEntry."Document No.";
      Description := VendLedgEntry.Description;
      "Currency Code" := VendLedgEntry."Currency Code";
      VendLedgEntry.CALCFIELDS("Remaining Amount","Remaining Amt. (LCY)","WHT Amount (LCY)");
      "Amount Incl. VAT" := VendLedgEntry."Remaining Amount";
      "Amount (LCY) Incl. VAT" := VendLedgEntry."Remaining Amt. (LCY)";
      "WHT Amount (LCY)" := VendLedgEntry."WHT Amount (LCY)";
    END;

    PROCEDURE CheckExistVendLedgEntry@1000000003(EntryNo@1000000001 : Integer);
    VAR
      SettlePettyCashLine@1000000000 : Record 55007;
    BEGIN
      SettlePettyCashLine.RESET;
      SettlePettyCashLine.SETCURRENTKEY("Entry No.");
      SettlePettyCashLine.SETRANGE("Entry No.",EntryNo);
      IF SettlePettyCashLine.FINDFIRST THEN
        ERROR(STRSUBSTNO(Text000,EntryNo));
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Localization TH
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   24.08.2006   KKE   Petty Cash.
    }
    END.
  }
}

OBJECT Table 55050 Cash Advance Setup
{
  OBJECT-PROPERTIES
  {
    Date=11/19/06;
    Time=[ 6:00:00 PM];
    Version List=AVATHA4.40;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Cash Advance Setup;
               THA=เซ็ตอัพเงินทดรองจ่าย];
  }
  FIELDS
  {
    { 1   ;   ;Primary Key         ;Code10        ;CaptionML=[ENU=Primary Key;
                                                              THA=คีย์หลัก] }
    { 2   ;   ;Cash Advance Nos.   ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=Cash Advance Nos.;
                                                              THA=ชุดหมายเลขเงินทดรองจ่าย] }
    { 3   ;   ;Bank Account No.    ;Code20        ;TableRelation="Bank Account";
                                                   CaptionML=[ENU=Bank Account No.;
                                                              THA=หมายเลขบัญชีธนาคาร] }
    { 4   ;   ;Cash Advance Account No.;Code20    ;TableRelation="G/L Account";
                                                   CaptionML=[ENU=Cash Advance Account No.;
                                                              THA=หมายเลขบัญชีเงินทดรองจ่าย] }
    { 5   ;   ;Allow VAT Difference;Boolean       ;CaptionML=[ENU=Allow VAT Difference;
                                                              THA=ใช้ส่วนต่าง VAT ได้] }
    { 6   ;   ;Settle Cash Advance Nos.;Code10    ;TableRelation="No. Series";
                                                   CaptionML=[ENU=Settle Cash Advance Nos.;
                                                              THA=ชุดหมายเลขการเบิกชดเชยเงินทดรองจ่าย] }
  }
  KEYS
  {
    {    ;Primary Key                             ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Localization TH
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   30.08.2006   KKE   Cash Advance.
    }
    END.
  }
}

OBJECT Table 55051 Cash Advance Header
{
  OBJECT-PROPERTIES
  {
    Date=11/28/11;
    Time=[ 4:14:59 PM];
    Version List=AVATHA4.40;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               CashAdvSetup.GET;

               IF "No." = '' THEN BEGIN
                 CashAdvSetup.TESTFIELD("Cash Advance Nos.");
                 NoSeriesMgt.InitSeries(CashAdvSetup."Cash Advance Nos.",xRec."No. Series","Posting Date","No.","No. Series");
               END;

               InitRecord;

               "Posting Date" := WORKDATE;
               "Document Date" := WORKDATE;
             END;

    OnModify=BEGIN
               TESTFIELD(Status,Status::Open);
             END;

    OnDelete=BEGIN
               DimMgt.DeleteDocDim(DATABASE::"Cash Advance Header",DocDim."Document Type"::Invoice,"No.",0);

               CashAdvLine.LOCKTABLE;
               CashAdvLine.SETRANGE("Document No.","No.");
               CashAdvLine.DELETEALL;

               CashAdvCmtLine.SETRANGE("Document Type",CashAdvCmtLine."Document Type"::Invoice);
               CashAdvCmtLine.SETRANGE("No.","No.");
               CashAdvCmtLine.DELETEALL;

               PostCodeCheck.DeleteAllAddressID(DATABASE::"Cash Advance Header",Rec.GETPOSITION);
             END;

    CaptionML=[ENU=Cash Advance Header;
               THA=หัวข้อเงินทดรองจ่าย];
    LookupPageID=Page50088;
    DrillDownPageID=Page50088;
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20        ;CaptionML=[ENU=No.;
                                                              THA=หมายเลข] }
    { 2   ;   ;Cash Advance Vendor No.;Code20     ;TableRelation=Vendor WHERE (Cash Advance=CONST(Yes));
                                                   OnValidate=BEGIN
                                                                TESTFIELD(Status,Status::Open);
                                                                IF ("Cash Advance Vendor No." <> xRec."Cash Advance Vendor No.") AND
                                                                   (xRec."Cash Advance Vendor No." <> '')
                                                                THEN BEGIN
                                                                  IF HideValidationDialog THEN
                                                                    Confirmed :=TRUE
                                                                  ELSE
                                                                    Confirmed := CONFIRM(Text001,FALSE,FIELDCAPTION("Cash Advance Vendor No."));
                                                                  IF Confirmed THEN BEGIN
                                                                    CashAdvLine.SETRANGE("Document No.","No.");
                                                                    IF "Cash Advance Vendor No." = '' THEN BEGIN
                                                                      IF CashAdvLine.FIND('-') THEN
                                                                        ERROR(
                                                                          Text004,
                                                                          FIELDCAPTION("Cash Advance Vendor No."));
                                                                      INIT;
                                                                      "No. Series" := xRec."No. Series";
                                                                      InitRecord;
                                                                      EXIT;
                                                                    END;
                                                                    CashAdvLine.RESET;
                                                                  END ELSE BEGIN
                                                                    Rec := xRec;
                                                                    EXIT;
                                                                  END;
                                                                END;

                                                                GetVend("Cash Advance Vendor No.");
                                                                Vend.CheckBlockedVendOnDocs(Vend,FALSE);
                                                                Vend.CheckVendorCashAdvance;
                                                                Vend.TESTFIELD("Gen. Bus. Posting Group");
                                                                Name := Vend.Name;
                                                                "Name 2" := Vend."Name 2";
                                                                Address := Vend.Address;
                                                                "Address 2" := Vend."Address 2";
                                                                "Address 3" := Vend."Address 3";
                                                                "Name (Thai)" := Vend."Name (Thai)";
                                                                "Address (Thai)" := Vend."Address (Thai)";
                                                                City := Vend.City;
                                                                "Post Code" := Vend."Post Code";
                                                                County := Vend.County;
                                                                "Country Code" := Vend."Country/Region Code";
                                                                IF NOT SkipPayToContact THEN
                                                                  Contact := Vend.Contact;

                                                                VALIDATE("Location Code",Vend."Location Code");
                                                                VALIDATE("Currency Code",Vend."Currency Code");
                                                                VALIDATE("Gen. Bus. Posting Group",Vend."Gen. Bus. Posting Group");
                                                                VALIDATE("VAT Bus. Posting Group",Vend."VAT Bus. Posting Group");
                                                                VALIDATE("WHT Business Posting Group",Vend."WHT Business Posting Group");
                                                              END;

                                                   CaptionML=[ENU=Cash Advance Vendor No.;
                                                              THA=หมายเลขผู้ขายเงินทดรองจ่าย] }
    { 3   ;   ;Name                ;Text50        ;CaptionML=[ENU=Name;
                                                              THA=ชื่อ] }
    { 4   ;   ;Posting Date        ;Date          ;CaptionML=[ENU=Posting Date;
                                                              THA=วันที่ตั้งหนี้] }
    { 5   ;   ;Document Date       ;Date          ;CaptionML=[ENU=Document Date;
                                                              THA=วันที่เบิก] }
    { 6   ;   ;Location Code       ;Code20        ;TableRelation=Location;
                                                   CaptionML=[ENU=Location Code;
                                                              THA=รหัสที่ตั้ง] }
    { 7   ;   ;Balance Amount      ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Vendor Ledg. Entry".Amount WHERE (Vendor No.=FIELD(Cash Advance Vendor No.),
                                                                                                               Posting Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Balance Amount;
                                                              THA=ดุล];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 8   ;   ;Balance Amount Settle;Decimal      ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Cash Advance Line"."Balance Amount Settle" WHERE (Document No.=FIELD(No.)));
                                                   CaptionML=[ENU=Balance Amount Settle;
                                                              THA=ดุลเงินเบิกชดเชย];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 9   ;   ;Invoice Description ;Text50        ;CaptionML=[ENU=Invoice Description;
                                                              THA=คำอธิบายใบแจ้งหนี้] }
    { 10  ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=No. Series;
                                                              THA=ชุดหมายเลข] }
    { 11  ;   ;Status              ;Option        ;CaptionML=[ENU=Status;
                                                              THA=สถานะ];
                                                   OptionCaptionML=[ENU=Open,Released;
                                                                    THA=เปิด,นำออกใช้];
                                                   OptionString=Open,Released;
                                                   Editable=No }
    { 15  ;   ;Shortcut Dimension 1 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(1,"Shortcut Dimension 1 Code");
                                                              END;

                                                   CaptionML=[ENU=Shortcut Dimension 1 Code;
                                                              THA=รหัสมิติทางลัดหมายเลข 1];
                                                   CaptionClass='1,2,1' }
    { 16  ;   ;Shortcut Dimension 2 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(2,"Shortcut Dimension 2 Code");
                                                              END;

                                                   CaptionML=[ENU=Shortcut Dimension 2 Code;
                                                              THA=รหัสมิติทางลัดหมายเลข 2];
                                                   CaptionClass='1,2,2' }
    { 20  ;   ;Gen. Bus. Posting Group;Code10     ;TableRelation="Gen. Business Posting Group";
                                                   OnValidate=BEGIN
                                                                TESTFIELD(Status,Status::Open);
                                                                IF (xRec."Cash Advance Vendor No." = "Cash Advance Vendor No.") AND
                                                                   (xRec."Gen. Bus. Posting Group" <> "Gen. Bus. Posting Group")
                                                                THEN
                                                                  IF GenBusPostingGrp.ValidateVatBusPostingGroup(GenBusPostingGrp,"Gen. Bus. Posting Group") THEN BEGIN
                                                                    "VAT Bus. Posting Group" := GenBusPostingGrp."Def. VAT Bus. Posting Group";
                                                                    RecreateCashAdvLines(FIELDCAPTION("Gen. Bus. Posting Group"));
                                                                  END;
                                                              END;

                                                   CaptionML=[ENU=Gen. Bus. Posting Group;
                                                              THA=กลุ่มการลงรายการบัญชีธุรกิจทั่วไป] }
    { 21  ;   ;VAT Bus. Posting Group;Code10      ;TableRelation="VAT Business Posting Group";
                                                   OnValidate=BEGIN
                                                                TESTFIELD(Status,Status::Open);
                                                                IF (xRec."Cash Advance Vendor No." = "Cash Advance Vendor No.") AND
                                                                   (xRec."VAT Bus. Posting Group" <> "VAT Bus. Posting Group")
                                                                THEN
                                                                  RecreateCashAdvLines(FIELDCAPTION("VAT Bus. Posting Group"));
                                                              END;

                                                   CaptionML=[ENU=VAT Bus. Posting Group;
                                                              THA=กลุ่มการลงรายการบัญชีธุรกิจที่ต้องเสีย VAT] }
    { 22  ;   ;WHT Business Posting Group;Code10  ;TableRelation="WHT Business Posting Group";
                                                   CaptionML=[ENU=WHT Business Posting Group;
                                                              THA=กลุ่มการลงรายการบัญชีธุรกิจ WHT] }
    { 25  ;   ;Printing WHT Slip (Doc:WHT);Option ;CaptionML=[ENU=Printing WHT Slip (Doc:WHT);
                                                              THA=พิมพ์ใบหักภาษี ณ ที่จ่าย (หนึ่งเอกสารต่อใบหักภาษี ณ ที่จ่าย)];
                                                   OptionString=1:1,1:N }
    { 30  ;   ;Name 2              ;Text50        ;CaptionML=[ENU=Name 2;
                                                              THA=ชื่อ 2] }
    { 31  ;   ;Address             ;Text50        ;CaptionML=[ENU=Address;
                                                              THA=ที่อยู่] }
    { 32  ;   ;Address 2           ;Text50        ;CaptionML=[ENU=Address 2;
                                                              THA=ที่อยู่ 2] }
    { 33  ;   ;Address 3           ;Text30        ;CaptionML=[ENU=Address 3;
                                                              THA=ที่อยู่ 3] }
    { 34  ;   ;Name (Thai)         ;Text120       ;CaptionML=[ENU=Name (Thai);
                                                              THA=ชื่อ (ไทย)] }
    { 35  ;   ;Address (Thai)      ;Text200       ;CaptionML=[ENU=Address (Thai);
                                                              THA=ที่อยู่ (ไทย)] }
    { 36  ;   ;City                ;Text30        ;OnValidate=BEGIN
                                                                PostCodeCheck.ValidateCity(
                                                                  CurrFieldNo,DATABASE::"Cash Advance Header",Rec.GETPOSITION,4,
                                                                  Name,"Name 2",Contact,Address,"Address 2",
                                                                  City,"Post Code",County,"Country Code");
                                                              END;

                                                   OnLookup=BEGIN
                                                              PostCodeCheck.LookUpCity(
                                                                CurrFieldNo,DATABASE::"Cash Advance Header",Rec.GETPOSITION,4,
                                                                Name,"Name 2",Contact,Address,"Address 2",
                                                                City,"Post Code",County,"Country Code",TRUE);
                                                            END;

                                                   CaptionML=[ENU=City;
                                                              THA=เมือง] }
    { 37  ;   ;Contact             ;Text50        ;CaptionML=[ENU=Contact;
                                                              THA=ผู้ติดต่อ] }
    { 38  ;   ;Post Code           ;Code20        ;TableRelation="Post Code";
                                                   OnValidate=BEGIN
                                                                PostCodeCheck.ValidatePostCode(
                                                                  CurrFieldNo,DATABASE::"Cash Advance Header",Rec.GETPOSITION,4,
                                                                  Name,"Name 2",Contact,Address,"Address 2",
                                                                  City,"Post Code",County,"Country Code");
                                                              END;

                                                   OnLookup=BEGIN
                                                              PostCodeCheck.LookUpPostCode(
                                                                CurrFieldNo,DATABASE::"Cash Advance Header",Rec.GETPOSITION,4,
                                                                Name,"Name 2",Contact,Address,"Address 2",
                                                                City,"Post Code",County,"Country Code",TRUE);
                                                            END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Post Code;
                                                              THA=รหัสไปรษณีย์] }
    { 39  ;   ;County              ;Text30        ;CaptionML=[ENU=County;
                                                              THA=เขต] }
    { 40  ;   ;Country Code        ;Code10        ;TableRelation=Country/Region;
                                                   CaptionML=[ENU=Country Code;
                                                              THA=รหัสประเทศ] }
    { 46  ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Cash Advance Comment Line" WHERE (Document Type=CONST(Invoice),
                                                                                                        No.=FIELD(No.)));
                                                   CaptionML=[ENU=Comment;
                                                              THA=ข้อคิดเห็น];
                                                   Editable=No }
    { 47  ;   ;User ID             ;Code20        ;TableRelation=User;
                                                   OnLookup=VAR
                                                              LoginMgt@1000 : Codeunit 418;
                                                            BEGIN
                                                              LoginMgt.LookupUserID("User ID");
                                                            END;

                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=User ID;
                                                              THA=ID ผู้ใช้] }
    { 48  ;   ;Source Code         ;Code10        ;TableRelation="Source Code";
                                                   CaptionML=[ENU=Source Code;
                                                              THA=รหัสแหล่งที่มา] }
    { 50  ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   OnValidate=BEGIN
                                                                IF NOT (CurrFieldNo IN [0,FIELDNO("Posting Date")]) THEN
                                                                  TESTFIELD(Status,Status::Open);
                                                                IF CurrFieldNo <> FIELDNO("Currency Code") THEN
                                                                  UpdateCurrencyFactor
                                                                ELSE BEGIN
                                                                  IF "Currency Code" <> xRec."Currency Code" THEN BEGIN
                                                                    UpdateCurrencyFactor;
                                                                    RecreateCashAdvLines(FIELDCAPTION("Currency Code"));
                                                                  END ELSE
                                                                    IF "Currency Code" <> '' THEN BEGIN
                                                                      UpdateCurrencyFactor;
                                                                      IF "Currency Factor" <> xRec."Currency Factor" THEN
                                                                        ConfirmUpdateCurrencyFactor;
                                                                    END;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Currency Code;
                                                              THA=รหัสสกุลเงิน] }
    { 51  ;   ;Currency Factor     ;Decimal       ;OnValidate=BEGIN
                                                                IF "Currency Factor" <> xRec."Currency Factor" THEN
                                                                  UpdateCashAdvLines(FIELDCAPTION("Currency Factor"));
                                                              END;

                                                   CaptionML=[ENU=Currency Factor;
                                                              THA=ปัจจัยด้านสกุลเงิน];
                                                   DecimalPlaces=0:15;
                                                   MinValue=0;
                                                   Editable=No }
    { 52  ;   ;Date Filter         ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Date Filter;
                                                              THA=ตัวกรองวันที่] }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      CashAdvHeader@1000000000 : Record 55051;
      CashAdvLine@1000000003 : Record 55052;
      CashAdvSetup@1000000001 : Record 55050;
      CashAdvCmtLine@1000000023 : Record 55053;
      GenBusPostingGrp@1000000010 : Record 250;
      Vend@1000000011 : Record 23;
      VendLedgEntry@1000000027 : Record 25;
      SourceCodeSetup@1000000025 : Record 242;
      DocDim@1000000008 : Record 357;
      GLSetup@1000000013 : Record 98;
      CurrExchRate@1000000015 : Record 330;
      NoSeriesMgt@1000000002 : Codeunit 396;
      Text000@1000000026 : TextConst 'ENU=%1 must be G/L Account or Bank Account.;THA=%1 หรือ %2 ต้องเป็นบัญชี G/L หรือบัญชีธนาคาร';
      Text001@1000000005 : TextConst 'ENU=Do you want to change %1?;THA=คุณต้องการเปลี่ยน %1 หรือ?';
      Text002@1000000004 : TextConst 'ENU=If you change %1, the existing petty cash invoice lines will be deleted and new cash advance invoice lines based on the new information in the header will be created.\\;THA=ถ้าคุณเปลี่ยน %1, บรรทัดการซื้อที่มีอยู่จะถูกลบออก และจะมีการสร้างบรรทัดการซื้อใหม่โดยใช้รายละเอียดใหม่ในหัวข้อ\\';
      DimMgt@1000000020 : Codeunit 408;
      PostCodeCheck@1000000021 : Codeunit 28000;
      HideValidationDialog@1000000007 : Boolean;
      Confirmed@1000000006 : Boolean;
      Text003@1000000009 : TextConst 'ENU=You must delete the existing cash advance invoice lines before you can change %1.;THA=คุณต้องลบบรรทัดการซื้อที่มีอยู่ก่อน จึงจะสามารถเปลี่ยน %1 ได้';
      Text004@1000000012 : TextConst 'ENU=You cannot reset %1 because the document still has one or more lines.;THA=คุณไม่สามารถรีเซ็ต %1 เนื่องจากเอกสารยังมีบรรทัดอยู่หนึ่งหรือหลายบรรทัด';
      CurrencyDate@1000000014 : Date;
      Text005@1000000016 : TextConst 'ENU=Do you want to update the exchange rate?;THA=คุณต้องการปรับปรุงอัตราแลกเปลี่ยนหรือ?';
      Text025@1000000019 : TextConst 'ENU="You have modified the %1 field. Note that the recalculation of VAT may cause penny differences, so you must check the amounts afterwards. ";THA=คุณได้แก้ไขฟิลด์ %1 แล้ว  หมายเหตุว่า การคำนวณ VAT ใหม่อาจทำให้เกิดผลต่างเศษสตางค์ได้ ดังนั้นคุณจึงต้องตรวจสอบยอดเงินหลังจากนั้น';
      Text027@1000000018 : TextConst 'ENU=Do you want to update the %2 field on the lines to reflect the new value of %1?;THA=คุณต้องการปรับปรุงฟิลด์ %2 ในบรรทัดเพื่อให้เห็นค่าใหม่ของ %1 หรือ?';
      SkipPayToContact@1000000022 : Boolean;
      Text028@1000000017 : TextConst 'ENU=There is nothing to release for %1.;THA=ไม่มีข้อมูลที่จะนำออกแสดงสำหรับ %1 %2';
      Text029@1000000028 : TextConst 'ENU=The WHT Absorb Base must be positive.;THA=ไม่มีข้อมูลที่จะนำออกแสดงสำหรับ %1 %2';
      Text030@1000000024 : TextConst 'ENU=Actual Vendor No. on Cash Advance Line must be the same.';

    PROCEDURE InitRecord@10();
    BEGIN
      IF ("Posting Date" = 0D)
      THEN
        "Posting Date" := WORKDATE;
      "Document Date" := WORKDATE;

      SourceCodeSetup.GET;
      SourceCodeSetup.TESTFIELD("Cash Advance");
      "Source Code" := SourceCodeSetup."Cash Advance";
    END;

    PROCEDURE AssistEdit@1(OldCashAdvHeader@1000 : Record 55051) : Boolean;
    BEGIN
      CashAdvSetup.GET;
      CashAdvSetup.TESTFIELD("Cash Advance Nos.");
      IF NoSeriesMgt.SelectSeries(CashAdvSetup."Cash Advance Nos.",OldCashAdvHeader."No. Series","No. Series") THEN BEGIN
        NoSeriesMgt.SetSeries("No.");
        EXIT(TRUE);
      END;
    END;

    PROCEDURE RecreateCashAdvLines@4(ChangedFieldName@1000 : Text[100]);
    VAR
      CashAdvLineTmp@1001 : TEMPORARY Record 55052;
    BEGIN
      IF CashAdvLinesExist THEN BEGIN
        IF HideValidationDialog THEN
          Confirmed :=TRUE
        ELSE
          Confirmed :=
            CONFIRM(
              Text002 +
               Text001,FALSE,ChangedFieldName);
        IF Confirmed THEN BEGIN
          DocDim.LOCKTABLE;
          CashAdvLine.LOCKTABLE;
          MODIFY;

          CashAdvLine.RESET;
          CashAdvLine.SETRANGE("Document No.","No.");
          IF CashAdvLine.FIND('-') THEN BEGIN
            REPEAT
              CashAdvLineTmp := CashAdvLine;
              CashAdvLine.MODIFY;
              CashAdvLineTmp.INSERT;
            UNTIL CashAdvLine.NEXT = 0;

            CashAdvLine.DELETEALL(TRUE);

            CashAdvLine.INIT;
            CashAdvLine."Line No." := 0;
            CashAdvLineTmp.FIND('-');
            REPEAT
              CashAdvLine.INIT;
              CashAdvLine."Line No." := CashAdvLine."Line No." + 10000;
              CashAdvLine.VALIDATE(Type,CashAdvLineTmp.Type);
              IF CashAdvLineTmp."No." = '' THEN BEGIN
                CashAdvLine.VALIDATE(Description,CashAdvLineTmp.Description);
                CashAdvLine.VALIDATE("Description 2",CashAdvLineTmp."Description 2");
              END ELSE BEGIN
                CashAdvLine.VALIDATE("No.",CashAdvLineTmp."No.");
                IF CashAdvLine.Type <> CashAdvLine.Type::" " THEN BEGIN
                  CashAdvLine.VALIDATE("Amount Incl. VAT",CashAdvLineTmp."Amount Incl. VAT");
                 END;
               END;
              CashAdvLine.INSERT;
            UNTIL CashAdvLineTmp.NEXT = 0;

            CashAdvLineTmp.RESET;
            CashAdvLineTmp.DELETEALL;
          END;
        END ELSE
          ERROR(
            Text003,ChangedFieldName);
      END;
    END;

    PROCEDURE CashAdvLinesExist@3() : Boolean;
    BEGIN
      CashAdvLine.RESET;
      CashAdvLine.SETRANGE("Document No.","No.");
      EXIT(CashAdvLine.FIND('-'));
    END;

    LOCAL PROCEDURE GetVend@1000000000(VendNo@1000 : Code[20]);
    BEGIN
      IF VendNo <> Vend."No." THEN
        Vend.GET(VendNo);
    END;

    LOCAL PROCEDURE UpdateCurrencyFactor@12();
    BEGIN
      IF "Currency Code" <> '' THEN BEGIN
        GLSetup.GET;
        CurrencyDate := "Posting Date";

        "Currency Factor" := CurrExchRate.ExchangeRate(CurrencyDate,"Currency Code");
      END ELSE
        "Currency Factor" := 0;
    END;

    LOCAL PROCEDURE ConfirmUpdateCurrencyFactor@13();
    BEGIN
      IF HideValidationDialog THEN
        Confirmed :=TRUE
      ELSE
        Confirmed := CONFIRM(Text005,FALSE);
      IF Confirmed THEN
        VALIDATE("Currency Factor")
      ELSE
        "Currency Factor" := xRec."Currency Factor";
    END;

    PROCEDURE UpdateCashAdvLines@15(ChangedFieldName@1000 : Text[100]);
    VAR
      xCashAdvLine@1000000000 : Record 55052;
      UpdateConfirmed@1002 : Boolean;
    BEGIN
      IF CashAdvLinesExist THEN BEGIN

        IF NOT GUIALLOWED THEN
          UpdateConfirmed := TRUE;

        DocDim.LOCKTABLE;
        CashAdvLine.LOCKTABLE;
        MODIFY;

        REPEAT
          xCashAdvLine := CashAdvLine;
          CASE ChangedFieldName OF
            FIELDCAPTION("Currency Factor") :
              IF CashAdvLine.Type <> CashAdvLine.Type::" " THEN
                CashAdvLine.VALIDATE("Amount Incl. VAT");
          END;
          CashAdvLine.MODIFY(TRUE);
        UNTIL CashAdvLine.NEXT = 0;
      END;
    END;

    PROCEDURE ShowDocDim@32();
    VAR
      DocDim@1000 : Record 357;
      DocDims@1001 : Page 546;
    BEGIN
      DocDim.SETRANGE("Table ID",DATABASE::"Cash Advance Header");
      DocDim.SETRANGE("Document Type",DocDim."Document Type"::Invoice);
      DocDim.SETRANGE("Document No.","No.");
      DocDim.SETRANGE("Line No.",0);
      DocDims.SETTABLEVIEW(DocDim);
      DocDims.RUNMODAL;
      GET("No.");
    END;

    PROCEDURE ValidateShortcutDimCode@19(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    BEGIN
      DimMgt.ValidateDimValueCode(FieldNumber,ShortcutDimCode);
      IF "No." <> '' THEN BEGIN
        DimMgt.SaveDocDim(
          DATABASE::"Cash Advance Header",DocDim."Document Type"::Invoice,"No.",0,FieldNumber,ShortcutDimCode);
        MODIFY;
      END ELSE
        DimMgt.SaveTempDim(FieldNumber,ShortcutDimCode);
    END;

    PROCEDURE Release@1000000003();
    VAR
      xCashAdvLine@1000000001 : Record 55052;
    BEGIN
      IF Status = Status::Released THEN
        EXIT;

      TESTFIELD("Cash Advance Vendor No.");
      TESTFIELD("Posting Date");

      GetVend("Cash Advance Vendor No.");
      Vend.CheckVendorCashAdvance;

      CheckCashAdvLine;

      xCashAdvLine.RESET;
      xCashAdvLine.SETRANGE("Document No.","No.");
      xCashAdvLine.SETFILTER(Type,'>0');
      xCashAdvLine.SETFILTER("Amount Incl. VAT",'<>0');
      IF NOT xCashAdvLine.FIND('-') THEN
        ERROR(Text028,"No.");

      xCashAdvLine.SETFILTER("WHT Absorb Base",'<%1',0);
      IF xCashAdvLine.FIND('-') THEN
        ERROR(Text029);

      Status := Status::Released;
      MODIFY;
    END;

    PROCEDURE Reopen@1000000001();
    BEGIN
      IF Status = Status::Open THEN
        EXIT;

      Status := Status::Open;
      MODIFY;
    END;

    PROCEDURE CheckCashAdvLine@1000000002();
    VAR
      CashAdvLine2@1000000000 : Record 55052;
      WHTPostingSetup@1000000001 : Record 28043;
      ActualVendNo@1000000002 : Code[20];
    BEGIN
      ActualVendNo := '';
      CashAdvLine2.RESET;
      CashAdvLine2.SETRANGE("Document No.","No.");
      CashAdvLine2.SETFILTER("Amount (LCY) Incl. VAT",'<>0');
      IF CashAdvLine2.FIND('-') THEN
        REPEAT
          CashAdvLine2.TESTFIELD(Type,CashAdvLine2.Type::"G/L Account");

          IF CashAdvLine2."VAT %" <> 0 THEN
            CashAdvLine2.TESTFIELD("Actual Vendor No.");
          IF NOT CashAdvLine2."Skip WHT" THEN BEGIN
            WHTPostingSetup.GET(CashAdvLine2."WHT Business Posting Group",CashAdvLine2."WHT Product Posting Group");
            IF WHTPostingSetup."WHT %" <> 0 THEN BEGIN
              CashAdvLine2.TESTFIELD("Actual Vendor No.");
              IF "Printing WHT Slip (Doc:WHT)" = "Printing WHT Slip (Doc:WHT)"::"1:1" THEN BEGIN
                IF ActualVendNo = '' THEN
                  ActualVendNo := CashAdvLine2."Actual Vendor No."
                ELSE
                  IF ActualVendNo <> CashAdvLine2."Actual Vendor No." THEN
                    ERROR(Text030);
              END;
            END;
          END;
        UNTIL CashAdvLine2.NEXT=0;
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Localization TH
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   30.08.2006   KKE   Cash Advance.
    }
    END.
  }
}

OBJECT Table 55052 Cash Advance Line
{
  OBJECT-PROPERTIES
  {
    Date=09/24/07;
    Time=[ 2:41:17 PM];
    Version List=AVATHA4.40;
  }
  PROPERTIES
  {
    OnInsert=VAR
               DocDim@1000000000 : Record 357;
             BEGIN
               TestStatusOpen;

               DocDim.LOCKTABLE;
               LOCKTABLE;
               CashAdvHdr."No." := '';

               DimMgt.InsertDocDim(
                 DATABASE::"Cash Advance Line",DocDim."Document Type"::Invoice,"Document No.","Line No.",
                 "Shortcut Dimension 1 Code","Shortcut Dimension 2 Code");
             END;

    OnModify=BEGIN
               TestStatusOpen;
               CalcBalanceSettle;
             END;

    OnDelete=BEGIN
               TestStatusOpen;
               TESTFIELD("Certificate Printed",FALSE);
             END;

    CaptionML=[ENU=Cash Advance Line;
               THA=บรรทัดเงินทดรองจ่าย];
  }
  FIELDS
  {
    { 1   ;   ;Document No.        ;Code20        ;TableRelation="Cash Advance Header";
                                                   CaptionML=[ENU=Document No.;
                                                              THA=หมายเลขเอกสาร] }
    { 2   ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              THA=หมายเลขบรรทัด] }
    { 3   ;   ;Cash Advance Vendor No.;Code20     ;TableRelation=Vendor WHERE (Cash Advance=CONST(Yes));
                                                   CaptionML=[ENU=Cash Advance Vendor No.;
                                                              THA=หมายเลขผู้ขายเงินทดรองจ่าย] }
    { 5   ;   ;Type                ;Option        ;InitValue=G/L Account;
                                                   CaptionML=[ENU=Type;
                                                              THA=ชนิด];
                                                   OptionCaptionML=[ENU=" ,G/L Account,Item,,Fixed Asset,Charge (Item)";
                                                                    THA=" ,บัญชี G/L,สินค้า,,สินทรัพย์ถาวร,เปลี่ยนแปลง (สินค้า)"];
                                                   OptionString=[ ,G/L Account,Item,,Fixed Asset,Charge (Item)] }
    { 6   ;   ;No.                 ;Code20        ;TableRelation=IF (Type=CONST(" ")) "Standard Text"
                                                                 ELSE IF (Type=CONST(G/L Account)) "G/L Account"
                                                                 ELSE IF (Type=CONST(Item)) Item
                                                                 ELSE IF (Type=CONST(3)) Resource
                                                                 ELSE IF (Type=CONST(Fixed Asset)) "Fixed Asset"
                                                                 ELSE IF (Type=CONST("Charge (Item)")) "Item Charge";
                                                   OnValidate=VAR
                                                                ICPartner@1000 : Record 413;
                                                                ItemCrossReference@1001 : Record 5717;
                                                              BEGIN
                                                                TestStatusOpen;
                                                                TempCashAdvLine := Rec;
                                                                INIT;
                                                                Type := TempCashAdvLine.Type;
                                                                "No." := TempCashAdvLine."No.";
                                                                IF "No." = '' THEN
                                                                  EXIT;
                                                                GetCashAdvHdr;
                                                                CashAdvHdr.TESTFIELD("Cash Advance Vendor No.");

                                                                "Cash Advance Vendor No." := CashAdvHdr."Cash Advance Vendor No.";
                                                                "Currency Code" := CashAdvHdr."Currency Code";
                                                                "Shortcut Dimension 1 Code" := CashAdvHdr."Shortcut Dimension 1 Code";
                                                                "Shortcut Dimension 2 Code" := CashAdvHdr."Shortcut Dimension 2 Code";
                                                                Vendor.GET("Cash Advance Vendor No.");
                                                                IF Vendor."Name (Thai)" <> '' THEN
                                                                  "Real Customer/Vendor Name" := Vendor."Name (Thai)"
                                                                ELSE
                                                                  "Real Customer/Vendor Name" := Vendor.Name + ' ' + Vendor."Name 2";
                                                                "Gen. Bus. Posting Group" := CashAdvHdr."Gen. Bus. Posting Group";
                                                                "VAT Bus. Posting Group" := CashAdvHdr."VAT Bus. Posting Group";
                                                                "WHT Business Posting Group" := CashAdvHdr."WHT Business Posting Group";

                                                                TESTFIELD(Type,Type::"G/L Account");
                                                                GLAcc.GET("No.");
                                                                GLAcc.CheckGLAcc;
                                                                GLAcc.TESTFIELD("Direct Posting",TRUE);
                                                                Description := GLAcc.Name;
                                                                "Gen. Prod. Posting Group" := GLAcc."Gen. Prod. Posting Group";
                                                                "VAT Prod. Posting Group" := GLAcc."VAT Prod. Posting Group";
                                                                "WHT Product Posting Group" := GLAcc."WHT Product Posting Group";
                                                                VALIDATE("VAT Prod. Posting Group");

                                                                CreateDim(
                                                                  DimMgt.TypeToTableID3(Type),"No.");
                                                              END;

                                                   CaptionML=[ENU=No.;
                                                              THA=หมายเลข] }
    { 7   ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              THA=คำอธิบาย] }
    { 8   ;   ;Description 2       ;Text50        ;CaptionML=[ENU=Description 2;
                                                              THA=คำอธิบาย 2] }
    { 10  ;   ;Amount Incl. VAT    ;Decimal       ;OnValidate=BEGIN
                                                                GetCashAdvHdr;
                                                                GetCurrency;
                                                                IF "Currency Code" = '' THEN
                                                                  "Amount (LCY) Incl. VAT" := "Amount Incl. VAT"
                                                                ELSE
                                                                  "Amount (LCY) Incl. VAT" := ROUND(
                                                                    CurrExchRate.ExchangeAmtFCYToLCY(
                                                                      CashAdvHdr."Posting Date","Currency Code",
                                                                      "Amount Incl. VAT",CashAdvHdr."Currency Factor"));

                                                                "Amount Incl. VAT" := ROUND("Amount Incl. VAT",Currency."Amount Rounding Precision");

                                                                VALIDATE("VAT %");

                                                                CalcBalanceSettle;
                                                              END;

                                                   CaptionML=[ENU=Amount Incl. VAT;
                                                              THA=จำนวนรวม VAT];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 11  ;   ;Amount (LCY) Incl. VAT;Decimal     ;OnValidate=BEGIN
                                                                IF "Currency Code" = '' THEN BEGIN
                                                                  "Amount Incl. VAT" := "Amount (LCY) Incl. VAT";
                                                                  VALIDATE("Amount Incl. VAT");
                                                                END ELSE BEGIN
                                                                  IF CheckFixedCurrency THEN BEGIN
                                                                    GetCurrency;
                                                                    "Amount Incl. VAT" := ROUND(
                                                                      CurrExchRate.ExchangeAmtLCYToFCY(
                                                                        CashAdvHdr."Posting Date","Currency Code",
                                                                        "Amount (LCY) Incl. VAT",CashAdvHdr."Currency Factor"),
                                                                        Currency."Amount Rounding Precision")
                                                                  END ELSE BEGIN
                                                                    TESTFIELD("Amount (LCY) Incl. VAT");
                                                                    TESTFIELD("Amount Incl. VAT");
                                                                    CashAdvHdr."Currency Factor" := "Amount Incl. VAT" / "Amount (LCY) Incl. VAT";
                                                                  END;

                                                                  VALIDATE("VAT %");
                                                                END;
                                                                CalcBalanceSettle;
                                                              END;

                                                   CaptionML=[ENU=Amount (LCY) Incl. VAT;
                                                              THA=ยอดเงิน (LCY) รวม VAT];
                                                   AutoFormatType=1 }
    { 12  ;   ;VAT %               ;Decimal       ;OnValidate=BEGIN
                                                                GetCashAdvHdr;
                                                                GetCurrency;
                                                                CASE "VAT Calculation Type" OF
                                                                  "VAT Calculation Type"::"Normal VAT",
                                                                  "VAT Calculation Type"::"Reverse Charge VAT":
                                                                    BEGIN
                                                                      "VAT Base Amount" :=
                                                                        ROUND("Amount Incl. VAT" / (1 + "VAT %" / 100),Currency."Amount Rounding Precision");
                                                                      "VAT Amount" :=
                                                                        ROUND("Amount Incl. VAT" - "VAT Base Amount",Currency."Amount Rounding Precision",Currency.VATRoundingDirection);
                                                                    END;
                                                                  "VAT Calculation Type"::"Full VAT":
                                                                    "VAT Amount" := "Amount Incl. VAT";
                                                                  "VAT Calculation Type"::"Sales Tax":
                                                                    {
                                                                    IF ("Gen. Posting Type" = "Gen. Posting Type"::Purchase) AND
                                                                    THEN BEGIN
                                                                      "VAT Amount" := 0;
                                                                      "VAT %" := 0;
                                                                    END ELSE BEGIN
                                                                      "VAT Amount" :=
                                                                        Amount -
                                                                        SalesTaxCalculate.ReverseCalculateTax(
                                                                          "Tax Area Code","Tax Group Code","Tax Liable",
                                                                          "Posting Date",Amount,Quantity,"Currency Factor");
                                                                      IF Amount - "VAT Amount" <> 0 THEN
                                                                        "VAT %" := ROUND(100 * "VAT Amount" / (Amount - "VAT Amount"),0.00001)
                                                                      ELSE
                                                                        "VAT %" := 0;
                                                                      "VAT Amount" :=
                                                                        ROUND("VAT Amount",Currency."Amount Rounding Precision");
                                                                    END;
                                                                    }
                                                                    ;
                                                                END;
                                                                "VAT Base Amount" := "Amount Incl. VAT" - "VAT Amount";
                                                                "VAT Difference" := 0;

                                                                IF "Currency Code" = '' THEN
                                                                  "VAT Amount (LCY)" := "VAT Amount"
                                                                ELSE
                                                                  "VAT Amount (LCY)" :=
                                                                    ROUND(
                                                                      CurrExchRate.ExchangeAmtFCYToLCY(
                                                                        CashAdvHdr."Posting Date","Currency Code",
                                                                        "VAT Amount",CashAdvHdr."Currency Factor"));
                                                                "VAT Base Amount (LCY)" := "Amount (LCY) Incl. VAT" - "VAT Amount (LCY)";

                                                                //KKE : #002 +
                                                                "VAT Claim %" := 0;
                                                                "VAT Unclaim %" := 0;
                                                                "Avg. VAT Amount" := 0;
                                                                "Average VAT Year" := 0;
                                                                GetGLSetup;
                                                                IF GLSetup."Enable VAT Average" THEN BEGIN
                                                                  IF NOT VATProdPostingGrp.GET("VAT Prod. Posting Group") THEN
                                                                    VATProdPostingGrp.INIT;
                                                                  IF VATProdPostingGrp."Average VAT" THEN BEGIN
                                                                    AverageVATSetup.RESET;
                                                                    AverageVATSetup.SETFILTER("From Date",'<=%1',CashAdvHdr."Posting Date");
                                                                    AverageVATSetup.SETFILTER("To Date",'>=%1',CashAdvHdr."Posting Date");
                                                                    IF AverageVATSetup.FIND('+') THEN BEGIN
                                                                      AverageVATSetup.TESTFIELD("VAT Claim %");
                                                                      "VAT Claim %" := AverageVATSetup."VAT Claim %";
                                                                      "VAT Unclaim %" := AverageVATSetup."VAT Unclaim %";
                                                                      "Avg. VAT Amount" :=
                                                                        ROUND(("Amount Incl. VAT" - "VAT Base Amount") * "VAT Claim %"/100,
                                                                        Currency."Amount Rounding Precision",Currency.VATRoundingDirection);
                                                                      "Average VAT Year" := AverageVATSetup.Year;
                                                                    END;
                                                                  END;
                                                                END;
                                                                //KKE : #002 -
                                                              END;

                                                   CaptionML=[ENU=VAT %;
                                                              THA=VAT %];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 13  ;   ;VAT Base Amount     ;Decimal       ;CaptionML=[ENU=VAT Base Amount;
                                                              THA=ยอดเงินตามจำนวน VAT];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 14  ;   ;VAT Amount          ;Decimal       ;OnValidate=BEGIN
                                                                CashAdvanceSetup.GET;
                                                                CashAdvanceSetup.TESTFIELD("Allow VAT Difference",TRUE);
                                                                IF NOT ("VAT Calculation Type" IN
                                                                  ["VAT Calculation Type"::"Normal VAT","VAT Calculation Type"::"Reverse Charge VAT"])
                                                                THEN
                                                                  ERROR(
                                                                    Text010,FIELDCAPTION("VAT Calculation Type"),
                                                                    "VAT Calculation Type"::"Normal VAT","VAT Calculation Type"::"Reverse Charge VAT");
                                                                IF "VAT Amount" <> 0 THEN BEGIN
                                                                  TESTFIELD("VAT %");
                                                                  TESTFIELD("Amount Incl. VAT");
                                                                END;

                                                                GetCurrency;
                                                                "VAT Amount" := ROUND("VAT Amount",Currency."Amount Rounding Precision",Currency.VATRoundingDirection);

                                                                IF "VAT Amount" * "Amount Incl. VAT" < 0 THEN
                                                                  IF "VAT Amount" > 0 THEN
                                                                    ERROR(Text011,FIELDCAPTION("VAT Amount"))
                                                                  ELSE
                                                                    ERROR(Text012,FIELDCAPTION("VAT Amount"));

                                                                "VAT Base Amount" := "Amount Incl. VAT" - "VAT Amount";

                                                                "VAT Difference" :=
                                                                  "VAT Amount" -
                                                                  ROUND(
                                                                    "Amount Incl. VAT" * "VAT %" / (100 + "VAT %"),
                                                                    Currency."Amount Rounding Precision",Currency.VATRoundingDirection);
                                                                IF ABS("VAT Difference") > Currency."Max. VAT Difference Allowed" THEN
                                                                  ERROR(Text013,FIELDCAPTION("VAT Difference"),Currency."Max. VAT Difference Allowed");

                                                                IF "Currency Code" = '' THEN
                                                                  "VAT Amount (LCY)" := "VAT Amount"
                                                                ELSE
                                                                  "VAT Amount (LCY)" :=
                                                                    ROUND(
                                                                      CurrExchRate.ExchangeAmtFCYToLCY(
                                                                        CashAdvHdr."Posting Date","Currency Code",
                                                                        "VAT Amount",CashAdvHdr."Currency Factor"));
                                                                "VAT Base Amount (LCY)" := "Amount (LCY) Incl. VAT" - "VAT Amount (LCY)";
                                                              END;

                                                   CaptionML=[ENU=VAT Amount;
                                                              THA=จำนวน VAT];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 15  ;   ;Shortcut Dimension 1 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(1,"Shortcut Dimension 1 Code");
                                                              END;

                                                   CaptionML=[ENU=Shortcut Dimension 1 Code;
                                                              THA=รหัสมิติทางลัดหมายเลข 1];
                                                   CaptionClass='1,2,1' }
    { 16  ;   ;Shortcut Dimension 2 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(2,"Shortcut Dimension 2 Code");
                                                              END;

                                                   CaptionML=[ENU=Shortcut Dimension 2 Code;
                                                              THA=รหัสมิติทางลัดหมายเลข 2];
                                                   CaptionClass='1,2,2' }
    { 20  ;   ;Gen. Bus. Posting Group;Code10     ;TableRelation="Gen. Business Posting Group";
                                                   OnValidate=BEGIN
                                                                IF xRec."Gen. Bus. Posting Group" <> "Gen. Bus. Posting Group" THEN
                                                                  IF GenBusPostingGrp.ValidateVatBusPostingGroup(GenBusPostingGrp,"Gen. Bus. Posting Group") THEN
                                                                    VALIDATE("VAT Bus. Posting Group",GenBusPostingGrp."Def. VAT Bus. Posting Group");
                                                              END;

                                                   CaptionML=[ENU=Gen. Bus. Posting Group;
                                                              THA=กลุ่มการลงรายการบัญชีธุรกิจทั่วไป] }
    { 21  ;   ;Gen. Prod. Posting Group;Code10    ;TableRelation="Gen. Product Posting Group";
                                                   OnValidate=BEGIN
                                                                TestStatusOpen;
                                                                IF xRec."Gen. Prod. Posting Group" <> "Gen. Prod. Posting Group" THEN
                                                                  IF GenProdPostingGrp.ValidateVatProdPostingGroup(GenProdPostingGrp,"Gen. Prod. Posting Group") THEN
                                                                    VALIDATE("VAT Prod. Posting Group",GenProdPostingGrp."Def. VAT Prod. Posting Group");
                                                              END;

                                                   CaptionML=[ENU=Gen. Prod. Posting Group;
                                                              THA=กลุ่มการลงรายการบัญชีผลิตภัณฑ์ทั่วไป] }
    { 22  ;   ;VAT Bus. Posting Group;Code10      ;TableRelation="VAT Business Posting Group";
                                                   OnValidate=BEGIN
                                                                VALIDATE("VAT Prod. Posting Group");
                                                              END;

                                                   CaptionML=[ENU=VAT Bus. Posting Group;
                                                              THA=กลุ่มการลงรายการบัญชีธุรกิจที่ต้องเสีย VAT] }
    { 23  ;   ;VAT Prod. Posting Group;Code10     ;TableRelation="VAT Product Posting Group";
                                                   OnValidate=BEGIN
                                                                TestStatusOpen;
                                                                VATPostingSetup.GET("VAT Bus. Posting Group","VAT Prod. Posting Group");
                                                                "VAT Difference" := 0;
                                                                "VAT %" := VATPostingSetup."VAT %";
                                                                "VAT Calculation Type" := VATPostingSetup."VAT Calculation Type";
                                                                CASE "VAT Calculation Type" OF
                                                                  "VAT Calculation Type"::"Reverse Charge VAT",
                                                                  "VAT Calculation Type"::"Sales Tax":
                                                                    "VAT %" := 0;
                                                                  "VAT Calculation Type"::"Full VAT":
                                                                    BEGIN
                                                                      TESTFIELD(Type,Type::"G/L Account");
                                                                      VATPostingSetup.TESTFIELD("Purchase VAT Account");
                                                                      TESTFIELD("No.",VATPostingSetup."Purchase VAT Account");
                                                                    END;
                                                                END;
                                                                VALIDATE("VAT %");
                                                                //UpdateAmounts;
                                                              END;

                                                   CaptionML=[ENU=VAT Prod. Posting Group;
                                                              THA=กลุ่มการลงรายการบัญชีผลิตภัณฑ์ที่ต้องเสีย VAT] }
    { 24  ;   ;WHT Business Posting Group;Code10  ;TableRelation="WHT Business Posting Group";
                                                   CaptionML=[ENU=WHT Business Posting Group;
                                                              THA=กลุ่มการลงรายการบัญชีธุรกิจ WHT] }
    { 25  ;   ;WHT Product Posting Group;Code10   ;TableRelation="WHT Product Posting Group";
                                                   CaptionML=[ENU=WHT Product Posting Group;
                                                              THA=กลุ่มการลงรายการผลิตภัณฑ์ WHT] }
    { 26  ;   ;WHT Absorb Base     ;Decimal       ;OnValidate=BEGIN
                                                                CalcBalanceSettle;
                                                              END;

                                                   CaptionML=[ENU=WHT Absorb Base;
                                                              THA=อัตราพื้นฐานภาษีหัก ณ ที่จ่าย] }
    { 30  ;   ;Real Customer/Vendor Name;Text120  ;CaptionML=[ENU=Real Customer/Vendor Name;
                                                              THA=ชื่อผู้ซื้อ/ผู้ขายจริง] }
    { 31  ;   ;Actual Vendor No.   ;Code20        ;TableRelation=Vendor;
                                                   OnValidate=BEGIN
                                                                //KKE : #003 +
                                                                "Real Customer/Vendor Name" := '';
                                                                "Bank Code" := '';
                                                                "Bank Branch No." := '';
                                                                "Bank Account No." := '';
                                                                //KKE : #003 -
                                                                IF Vendor.GET("Actual Vendor No.") THEN BEGIN
                                                                  IF Vendor."Name (Thai)" <> '' THEN
                                                                    "Real Customer/Vendor Name" := Vendor."Name (Thai)"
                                                                  ELSE
                                                                    "Real Customer/Vendor Name" := Vendor.Name + ' ' + Vendor."Name 2";
                                                                  //KKE : #003 +
                                                                  IF VendBankAcc.GET(Vendor."No.",Vendor."No.") THEN BEGIN
                                                                    "Bank Code" := VendBankAcc.Name;
                                                                    "Bank Branch No." := VendBankAcc."Bank Branch No.";
                                                                    "Bank Account No." := VendBankAcc."Bank Account No.";
                                                                  END;
                                                                  //KKE : #003 -
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Actual Vendor No.;
                                                              THA=หมายเลขผู้ขายจริง] }
    { 32  ;   ;Skip WHT            ;Boolean       ;OnValidate=BEGIN
                                                                IF "Skip WHT" THEN
                                                                  TESTFIELD("Certificate Printed",FALSE);

                                                                CalcBalanceSettle;
                                                              END;

                                                   CaptionML=[ENU=Skip WHT;
                                                              THA=ข้าม WHT] }
    { 33  ;   ;WHT Certificate No. ;Code20        ;CaptionML=[ENU=WHT Certificate No.;
                                                              THA=หมายเลขหนังสือรับรอง WHT] }
    { 34  ;   ;Certificate Printed ;Boolean       ;CaptionML=[ENU=Certificate Printed;
                                                              THA=พิมพ์หนังสือรับรองแล้ว];
                                                   Editable=No }
    { 35  ;   ;WHT Entry No.       ;Integer       ;CaptionML=[ENU=WHT Entry No.;
                                                              THA=หมายเลขรายการ] }
    { 40  ;   ;Tax Invoice No.     ;Code20        ;CaptionML=[ENU=Tax Invoice No.;
                                                              THA=เลขที่ใบกำกับภาษี] }
    { 41  ;   ;Tax Invoice Date    ;Date          ;CaptionML=[ENU=Tax Invoice Date;
                                                              THA=วันที่ออกใบกำกับภาษี] }
    { 42  ;   ;External Document No.;Code20       ;CaptionML=[ENU=External Document No.;
                                                              THA=หมายเลขเอกสารภายนอก] }
    { 50  ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   CaptionML=[ENU=Currency Code;
                                                              THA=รหัสสกุลเงิน];
                                                   Editable=No }
    { 77  ;   ;VAT Calculation Type;Option        ;CaptionML=[ENU=VAT Calculation Type;
                                                              THA=ชนิดการคำนวณ VAT];
                                                   OptionCaptionML=[ENU=Normal VAT,Reverse Charge VAT,Full VAT,Sales Tax;
                                                                    THA=VAT ปกติ,VAT คิดย้อนหลัง,VAT เต็มจำนวน,ภาษีขาย];
                                                   OptionString=Normal VAT,Reverse Charge VAT,Full VAT,Sales Tax;
                                                   Editable=No }
    { 78  ;   ;VAT Amount (LCY)    ;Decimal       ;CaptionML=[ENU=VAT Amount (LCY);
                                                              THA=ยอด VAT (LCY)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 79  ;   ;VAT Base Amount (LCY);Decimal      ;CaptionML=[ENU=VAT Base Amount (LCY);
                                                              THA=จำนวนฐาน VAT (LCY)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 85  ;   ;Use Tax             ;Boolean       ;OnValidate=BEGIN
                                                                VALIDATE("VAT %");
                                                              END;

                                                   CaptionML=[ENU=Use Tax;
                                                              THA=ใช้ภาษี] }
    { 100 ;   ;Balance Amount Settle;Decimal      ;CaptionML=[ENU=Balance Amount Settle;
                                                              THA=ดุลเงินเบิกชดเชย];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 104 ;   ;VAT Difference      ;Decimal       ;CaptionML=[ENU=VAT Difference;
                                                              THA=ส่วนต่างของ VAT];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 50020;  ;VAT Claim %         ;Decimal       ;DecimalPlaces=0:2;
                                                   MinValue=0;
                                                   MaxValue=100;
                                                   Description=Burda1.00;
                                                   Editable=No }
    { 50021;  ;VAT Unclaim %       ;Decimal       ;MinValue=0;
                                                   MaxValue=100;
                                                   Description=Burda1.00;
                                                   Editable=No }
    { 50022;  ;Avg. VAT Amount     ;Decimal       ;Description=Burda1.00;
                                                   Editable=No }
    { 50024;  ;Average VAT Year    ;Integer       ;TableRelation="Average VAT Setup";
                                                   Description=Burda1.00 }
    { 50025;  ;Bank Code           ;Text30        ;Description=Burda1.00 }
    { 50026;  ;Bank Branch No.     ;Text20        ;CaptionML=[ENU=Bank Branch No.;
                                                              THA=หมายเลขสาขาของธนาคาร];
                                                   Description=Burda1.00 }
    { 50027;  ;Bank Account No.    ;Text30        ;CaptionML=[ENU=Bank Account No.;
                                                              THA=หมายเลขบัญชีธนาคาร];
                                                   Description=Burda1.00 }
  }
  KEYS
  {
    {    ;Document No.,Line No.                   ;SumIndexFields=Amount Incl. VAT,Amount (LCY) Incl. VAT,Balance Amount Settle;
                                                   Clustered=Yes }
    {    ;Actual Vendor No.,WHT Business Posting Group,WHT Product Posting Group }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      CashAdvanceSetup@1000000017 : Record 55050;
      CashAdvHdr@1000000002 : Record 55051;
      TempCashAdvLine@1000000003 : Record 55052;
      GenBusPostingGrp@1000000000 : Record 250;
      GenProdPostingGrp@1000000001 : Record 251;
      Vendor@1000000004 : Record 23;
      GLAcc@1000000005 : Record 15;
      GLSetup@1000000012 : Record 98;
      VATPostingSetup@1000000010 : Record 325;
      VATProdPostingGrp@1000000022 : Record 324;
      AverageVATSetup@1000000023 : Record 50056;
      Currency@1000000007 : Record 4;
      AddCurrency@1000000014 : Record 4;
      CurrExchRate@1000000008 : Record 330;
      Text000@1000000009 : TextConst 'ENU=cannot be specified without %1;THA=ระบุไม่ได้หากไม่มี %1';
      DimMgt@1000000011 : Codeunit 408;
      SalesTaxCalculate@1000000016 : Codeunit 398;
      CurrencyCode@1000000006 : Code[10];
      CurrencyFactor@1000000013 : Decimal;
      Text001@1000000015 : TextConst 'ENU=" must be 0 when %1 is %2.";THA=" ต้องเป็น 0 หาก %1 เป็น %2"';
      Text010@1000000018 : TextConst 'ENU=%1 must be %2 or %3.;THA=%1 ต้องเป็น %2 หรือ %3';
      Text011@1000000020 : TextConst 'ENU=%1 must be negative.;THA=%1 ต้องเป็นค่าลบ';
      Text012@1000000019 : TextConst 'ENU=%1 must be positive.;THA=%1 ต้องเป็นค่าบวก';
      Text013@1000000021 : TextConst 'ENU=The %1 must not be more than %2.;THA=%1 ต้องไม่เกิน %2';
      VendBankAcc@1000000024 : Record 288;

    PROCEDURE GetCashAdvHdr@1000000000();
    BEGIN
      TESTFIELD("Document No.");
      IF "Document No." <> CashAdvHdr."No." THEN BEGIN
        CashAdvHdr.GET("Document No.");
        IF CashAdvHdr."Currency Code" = '' THEN
          Currency.InitRoundingPrecision
        ELSE BEGIN
          CashAdvHdr.TESTFIELD("Currency Factor");
          Currency.GET(CashAdvHdr."Currency Code");
          Currency.TESTFIELD("Amount Rounding Precision");
        END;
        GetGLSetup;
        CLEAR(CurrencyFactor);
        IF GLSetup."Additional Reporting Currency" <>'' THEN BEGIN
          AddCurrency.GET(GLSetup."Additional Reporting Currency");
          CurrencyFactor :=
            CurrExchRate.ExchangeRate(
              CashAdvHdr."Posting Date",GLSetup."Additional Reporting Currency");
        END;
      END;
    END;

    LOCAL PROCEDURE TestStatusOpen@37();
    BEGIN
      GetCashAdvHdr;
      CashAdvHdr.TESTFIELD(Status,CashAdvHdr.Status::Open);
    END;

    LOCAL PROCEDURE GetCurrency@3();
    BEGIN
      CurrencyCode := "Currency Code";

      IF CurrencyCode = '' THEN BEGIN
        CLEAR(Currency);
        Currency.InitRoundingPrecision
      END ELSE
        IF CurrencyCode <> Currency.Code THEN BEGIN
          Currency.GET(CurrencyCode);
          Currency.TESTFIELD("Amount Rounding Precision");
        END;
    END;

    PROCEDURE CheckFixedCurrency@12() : Boolean;
    VAR
      CurrExchRate@1000 : Record 330;
    BEGIN
      CurrExchRate.SETRANGE("Currency Code","Currency Code");
      CurrExchRate.SETRANGE("Starting Date",0D,CashAdvHdr."Posting Date");

      IF NOT CurrExchRate.FIND('+') THEN
        EXIT(FALSE);

      IF CurrExchRate."Relational Currency Code" = '' THEN
        EXIT(
          CurrExchRate."Fix Exchange Rate Amount" =
          CurrExchRate."Fix Exchange Rate Amount"::Both);

      IF CurrExchRate."Fix Exchange Rate Amount" <>
        CurrExchRate."Fix Exchange Rate Amount"::Both
      THEN
        EXIT(FALSE);

      CurrExchRate.SETRANGE("Currency Code",CurrExchRate."Relational Currency Code");
      IF CurrExchRate.FIND('+') THEN
        EXIT(
          CurrExchRate."Fix Exchange Rate Amount" =
          CurrExchRate."Fix Exchange Rate Amount"::Both);

      EXIT(FALSE);
    END;

    PROCEDURE ShowDimensions@25();
    VAR
      DocDim@1000 : Record 357;
      DocDimensions@1001 : Page 546;
    BEGIN
      TESTFIELD("Document No.");
      TESTFIELD("Line No.");
      DocDim.SETRANGE("Table ID",DATABASE::"Cash Advance Line");
      DocDim.SETRANGE("Document Type",DocDim."Document Type"::Invoice);
      DocDim.SETRANGE("Document No.","Document No.");
      DocDim.SETRANGE("Line No.","Line No.");
      DocDimensions.SETTABLEVIEW(DocDim);
      DocDimensions.RUNMODAL;
    END;

    LOCAL PROCEDURE GetGLSetup@45();
    BEGIN
      GLSetup.GET;
    END;

    PROCEDURE SetCashAdvHeader@1000000001(NewCashAdvHeader@1000 : Record 55051);
    BEGIN
      CashAdvHdr := NewCashAdvHeader;

      IF CashAdvHdr."Currency Code" = '' THEN
        Currency.InitRoundingPrecision
      ELSE BEGIN
        CashAdvHdr.TESTFIELD("Currency Factor");
        Currency.GET(CashAdvHdr."Currency Code");
        Currency.TESTFIELD("Amount Rounding Precision");
      END;
    END;

    PROCEDURE CreateDim@26(Type1@1000 : Integer;No1@1001 : Code[20]);
    VAR
      SourceCodeSetup@1008 : Record 242;
      DocDim@1000000001 : Record 357;
      TableID@1009 : ARRAY [10] OF Integer;
      No@1010 : ARRAY [10] OF Code[20];
    BEGIN
      SourceCodeSetup.GET;
      TableID[1] := Type1;
      No[1] := No1;
      "Shortcut Dimension 1 Code" := '';
      "Shortcut Dimension 2 Code" := '';
      DimMgt.GetPreviousDocDefaultDim(
        DATABASE::"Cash Advance Header",DocDim."Document Type"::Invoice,"Document No.",0,
        DATABASE::Vendor,"Shortcut Dimension 1 Code","Shortcut Dimension 2 Code");
      DimMgt.GetDefaultDim(
        TableID,No,SourceCodeSetup."Cash Advance",
        "Shortcut Dimension 1 Code","Shortcut Dimension 2 Code");
      IF "Line No." <> 0 THEN
        DimMgt.UpdateDocDefaultDim(
          DATABASE::"Cash Advance Line",DocDim."Document Type"::Invoice,"Document No.","Line No.",
          "Shortcut Dimension 1 Code","Shortcut Dimension 2 Code");
    END;

    PROCEDURE ValidateShortcutDimCode@29(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    VAR
      DocDim@1000000000 : Record 357;
    BEGIN
      DimMgt.ValidateDimValueCode(FieldNumber,ShortcutDimCode);
      IF "Line No." <> 0 THEN BEGIN
        DimMgt.SaveDocDim(
          DATABASE::"Cash Advance Line",DocDim."Document Type"::Invoice,"Document No.",
          "Line No.",FieldNumber,ShortcutDimCode);
        MODIFY;
      END ELSE
        DimMgt.SaveTempDim(FieldNumber,ShortcutDimCode);
    END;

    PROCEDURE LookupShortcutDimCode@30(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    VAR
      DocDim@1000000000 : Record 357;
    BEGIN
      DimMgt.LookupDimValueCode(FieldNumber,ShortcutDimCode);
      IF "Line No." <> 0 THEN BEGIN
        DimMgt.SaveDocDim(
          DATABASE::"Cash Advance Line",DocDim."Document Type"::Invoice,"Document No.",
          "Line No.",FieldNumber,ShortcutDimCode);
        MODIFY;
      END ELSE
        DimMgt.SaveTempDim(FieldNumber,ShortcutDimCode);
    END;

    PROCEDURE ShowShortcutDimCode@27(VAR ShortcutDimCode@1000 : ARRAY [8] OF Code[20]);
    VAR
      DocDim@1000000000 : Record 357;
    BEGIN
      IF "Line No." <> 0 THEN
        DimMgt.ShowDocDim(
          DATABASE::"Cash Advance Line",DocDim."Document Type"::Invoice,"Document No.",
          "Line No.",ShortcutDimCode)
      ELSE
        DimMgt.ShowTempDim(ShortcutDimCode);
    END;

    PROCEDURE CalcBalanceSettle@1000000002();
    VAR
      WHTPostingSetup@1000000000 : Record 28043;
    BEGIN
      "Balance Amount Settle" := "Amount Incl. VAT";

      IF "Skip WHT" THEN
        EXIT;

      IF WHTPostingSetup.GET("WHT Business Posting Group","WHT Product Posting Group") THEN
        IF WHTPostingSetup."WHT %" <> 0 THEN
          IF "WHT Absorb Base" <> 0 THEN
            "Balance Amount Settle" := "Amount Incl. VAT" - "WHT Absorb Base" * WHTPostingSetup."WHT %" / 100
          ELSE
            "Balance Amount Settle" := "Amount Incl. VAT" - "VAT Base Amount (LCY)" * WHTPostingSetup."WHT %" / 100;
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Localization TH
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   30.08.2006   KKE   Cash Advance.
      Burda
      002   14.08.2007   KKE   Average VAT.
      003   30.08.2007   KKE   Add field for Detail of Bank.
    }
    END.
  }
}

OBJECT Table 55053 Cash Advance Comment Line
{
  OBJECT-PROPERTIES
  {
    Date=02/21/07;
    Time=[ 6:00:00 PM];
    Version List=AVATHA4.40;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Cash Advance Comment Line;
               THA=บรรทัดข้อคิดเห็นเกี่ยวกับเงินทดรองจ่าย];
  }
  FIELDS
  {
    { 1   ;   ;Document Type       ;Option        ;CaptionML=[ENU=Document Type;
                                                              THA=ชนิดเอกสาร];
                                                   OptionCaptionML=[ENU=Invoice,Posted Invoice,Settle;
                                                                    THA=ใบแจ้งหนี้,ใบแจ้งหนี้ที่ลงรายการบัญชี,เบิกชดเชย];
                                                   OptionString=Invoice,Posted Invoice,Settle }
    { 2   ;   ;No.                 ;Code20        ;CaptionML=[ENU=No.;
                                                              THA=หมายเลข] }
    { 3   ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              THA=หมายเลขบรรทัด] }
    { 4   ;   ;Date                ;Date          ;CaptionML=[ENU=Date;
                                                              THA=วันที่] }
    { 5   ;   ;Code                ;Code10        ;CaptionML=[ENU=Code;
                                                              THA=รหัส] }
    { 6   ;   ;Comment             ;Text80        ;CaptionML=[ENU=Comment;
                                                              THA=ข้อคิดเห็น] }
  }
  KEYS
  {
    {    ;Document Type,No.,Line No.              ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    PROCEDURE SetUpNewLine@1();
    VAR
      CashAdvCommentLine@1000 : Record 55053;
    BEGIN
      CashAdvCommentLine.SETRANGE("Document Type",CashAdvCommentLine."Document Type"::Invoice);
      CashAdvCommentLine.SETRANGE("No.","No.");
      CashAdvCommentLine.SETRANGE(Date,WORKDATE);
      IF NOT CashAdvCommentLine.FIND('-') THEN
        Date := WORKDATE;
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Localization TH
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   30.08.2006   KKE   Cash Advance.
    }
    END.
  }
}

OBJECT Table 55054 Cash Advance Invoice Header
{
  OBJECT-PROPERTIES
  {
    Date=08/20/07;
    Time=[ 1:46:21 PM];
    Version List=AVATHA4.40;
  }
  PROPERTIES
  {
    OnDelete=BEGIN
               DimMgt.DeletePostedDocDim(DATABASE::"Cash Advance Invoice Header","No.",0);

               CashAdvInvLine.LOCKTABLE;
               CashAdvInvLine.SETRANGE("Document No.","No.");
               CashAdvInvLine.DELETEALL;

               CashAdvCmtLine.SETRANGE("Document Type",CashAdvCmtLine."Document Type"::"Posted Invoice");
               CashAdvCmtLine.SETRANGE("No.","No.");
               CashAdvCmtLine.DELETEALL;

               PostCodeCheck.DeleteAllAddressID(DATABASE::"Cash Advance Invoice Header",Rec.GETPOSITION);
             END;

    CaptionML=[ENU=Cash Advance Invoice Header;
               THA=หัวข้อใบแจ้งหนี้เงินทดรองจ่าย];
    LookupPageID=Page50092;
    DrillDownPageID=Page50092;
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20        ;CaptionML=[ENU=No.;
                                                              THA=หมายเลข] }
    { 2   ;   ;Cash Advance Vendor No.;Code20     ;TableRelation=Vendor WHERE (Cash Advance=CONST(Yes));
                                                   CaptionML=[ENU=Cash Advance Vendor No.;
                                                              THA=หมายเลขผู้ขายเงินทดรองจ่าย] }
    { 3   ;   ;Name                ;Text50        ;CaptionML=[ENU=Name;
                                                              THA=ชื่อ] }
    { 4   ;   ;Posting Date        ;Date          ;CaptionML=[ENU=Posting Date;
                                                              THA=วันที่ตั้งหนี้] }
    { 5   ;   ;Document Date       ;Date          ;CaptionML=[ENU=Document Date;
                                                              THA=วันที่เบิก] }
    { 6   ;   ;Location Code       ;Code20        ;TableRelation=Location;
                                                   CaptionML=[ENU=Location Code;
                                                              THA=รหัสที่ตั้ง] }
    { 8   ;   ;Balance Amount Settle;Decimal      ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Cash Advance Invoice Line"."Balance Amount Settle" WHERE (Document No.=FIELD(No.)));
                                                   CaptionML=[ENU=Balance Amount Settle;
                                                              THA=ดุลเงินเบิกชดเชย];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 9   ;   ;Invoice Description ;Text50        ;CaptionML=[ENU=Invoice Description;
                                                              THA=คำอธิบายใบแจ้งหนี้] }
    { 10  ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=No. Series;
                                                              THA=ชุดหมายเลข] }
    { 15  ;   ;Shortcut Dimension 1 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionML=[ENU=Shortcut Dimension 1 Code;
                                                              THA=รหัสมิติทางลัดหมายเลข 1];
                                                   CaptionClass='1,2,1' }
    { 16  ;   ;Shortcut Dimension 2 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   CaptionML=[ENU=Shortcut Dimension 2 Code;
                                                              THA=รหัสมิติทางลัดหมายเลข 2];
                                                   CaptionClass='1,2,2' }
    { 20  ;   ;Gen. Bus. Posting Group;Code10     ;TableRelation="Gen. Business Posting Group";
                                                   CaptionML=[ENU=Gen. Bus. Posting Group;
                                                              THA=กลุ่มการลงรายการบัญชีธุรกิจทั่วไป] }
    { 21  ;   ;VAT Bus. Posting Group;Code10      ;TableRelation="VAT Business Posting Group";
                                                   CaptionML=[ENU=VAT Bus. Posting Group;
                                                              THA=กลุ่มการลงรายการบัญชีธุรกิจที่ต้องเสีย VAT] }
    { 22  ;   ;WHT Business Posting Group;Code10  ;TableRelation="WHT Business Posting Group";
                                                   CaptionML=[ENU=WHT Business Posting Group;
                                                              THA=กลุ่มการลงรายการบัญชีธุรกิจ WHT] }
    { 25  ;   ;Printing WHT Slip (Doc:WHT);Option ;CaptionML=[ENU=Printing WHT Slip (Doc:WHT);
                                                              THA=พิมพ์ใบหักภาษี ณ ที่จ่าย (หนึ่งเอกสารต่อใบหักภาษี ณ ที่จ่าย)];
                                                   OptionString=1:1,1:N }
    { 30  ;   ;Name 2              ;Text50        ;CaptionML=[ENU=Name 2;
                                                              THA=ชื่อ 2] }
    { 31  ;   ;Address             ;Text50        ;CaptionML=[ENU=Address;
                                                              THA=ที่อยู่] }
    { 32  ;   ;Address 2           ;Text50        ;CaptionML=[ENU=Address 2;
                                                              THA=ที่อยู่ 2] }
    { 33  ;   ;Address 3           ;Text30        ;CaptionML=[ENU=Address 3;
                                                              THA=ที่อยู่ 3] }
    { 34  ;   ;Name (Thai)         ;Text120       ;CaptionML=[ENU=Name (Thai);
                                                              THA=ชื่อ (ไทย)] }
    { 35  ;   ;Address (Thai)      ;Text200       ;CaptionML=[ENU=Address (Thai);
                                                              THA=ที่อยู่ (ไทย)] }
    { 36  ;   ;City                ;Text30        ;CaptionML=[ENU=City;
                                                              THA=เมือง] }
    { 37  ;   ;Contact             ;Text50        ;CaptionML=[ENU=Contact;
                                                              THA=ผู้ติดต่อ] }
    { 38  ;   ;Post Code           ;Code20        ;TableRelation="Post Code";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Post Code;
                                                              THA=รหัสไปรษณีย์] }
    { 39  ;   ;County              ;Text30        ;CaptionML=[ENU=County;
                                                              THA=เขต] }
    { 40  ;   ;Country Code        ;Code10        ;TableRelation=Country/Region;
                                                   CaptionML=[ENU=Country Code;
                                                              THA=รหัสประเทศ] }
    { 46  ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Cash Advance Comment Line" WHERE (Document Type=CONST(Posted Invoice),
                                                                                                        No.=FIELD(No.)));
                                                   CaptionML=[ENU=Comment;
                                                              THA=ข้อคิดเห็น];
                                                   Editable=No }
    { 47  ;   ;User ID             ;Code20        ;TableRelation=User;
                                                   OnLookup=VAR
                                                              LoginMgt@1000 : Codeunit 418;
                                                            BEGIN
                                                            END;

                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=User ID;
                                                              THA=ID ผู้ใช้] }
    { 48  ;   ;Source Code         ;Code10        ;TableRelation="Source Code";
                                                   CaptionML=[ENU=Source Code;
                                                              THA=รหัสแหล่งที่มา] }
    { 50  ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   CaptionML=[ENU=Currency Code;
                                                              THA=รหัสสกุลเงิน] }
    { 51  ;   ;Currency Factor     ;Decimal       ;CaptionML=[ENU=Currency Factor;
                                                              THA=ปัจจัยด้านสกุลเงิน];
                                                   DecimalPlaces=0:15;
                                                   MinValue=0;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      CashAdvInvLine@1000000003 : Record 55055;
      CashAdvCmtLine@1000000002 : Record 55053;
      DimMgt@1000000001 : Codeunit 408;
      PostCodeCheck@1000000000 : Codeunit 28000;

    PROCEDURE ShowDocDim@32();
    VAR
      DocDim@1000 : Record 357;
      DocDims@1001 : Page 546;
    BEGIN
      DocDim.SETRANGE("Table ID",DATABASE::"Cash Advance Invoice Header");
      DocDim.SETRANGE("Document Type",DocDim."Document Type"::Invoice);
      DocDim.SETRANGE("Document No.","No.");
      DocDim.SETRANGE("Line No.",0);
      DocDims.SETTABLEVIEW(DocDim);
      DocDims.RUNMODAL;
      GET("No.");
    END;

    PROCEDURE Navigate@2();
    VAR
      NavigateForm@1000 : Page 344;
    BEGIN
      NavigateForm.SetDoc("Posting Date","No.");
      NavigateForm.RUN;
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Localization TH
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   30.08.2006   KKE   Cash Advance.
    }
    END.
  }
}

OBJECT Table 55055 Cash Advance Invoice Line
{
  OBJECT-PROPERTIES
  {
    Date=08/30/07;
    Time=[ 5:21:15 PM];
    Version List=AVATHA4.40;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Cash Advance Invoice Line;
               THA=บรรทัดใบแจ้งหนี้เงินทดรองจ่าย];
  }
  FIELDS
  {
    { 1   ;   ;Document No.        ;Code20        ;TableRelation="Cash Advance Invoice Header";
                                                   CaptionML=[ENU=Document No.;
                                                              THA=หมายเลขเอกสาร] }
    { 2   ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              THA=หมายเลขบรรทัด] }
    { 3   ;   ;Cash Advance Vendor No.;Code20     ;TableRelation=Vendor WHERE (Cash Advance=CONST(Yes));
                                                   CaptionML=[ENU=Cash Advance Vendor No.;
                                                              THA=หมายเลขผู้ขายเงินทดรองจ่าย] }
    { 5   ;   ;Type                ;Option        ;InitValue=G/L Account;
                                                   CaptionML=[ENU=Type;
                                                              THA=ชนิด];
                                                   OptionCaptionML=[ENU=" ,G/L Account,Item,,Fixed Asset,Charge (Item)";
                                                                    THA=" ,บัญชี G/L,สินค้า,,สินทรัพย์ถาวร,เปลี่ยนแปลง (สินค้า)"];
                                                   OptionString=[ ,G/L Account,Item,,Fixed Asset,Charge (Item)] }
    { 6   ;   ;No.                 ;Code20        ;TableRelation=IF (Type=CONST(" ")) "Standard Text"
                                                                 ELSE IF (Type=CONST(G/L Account)) "G/L Account"
                                                                 ELSE IF (Type=CONST(Item)) Item
                                                                 ELSE IF (Type=CONST(3)) Resource
                                                                 ELSE IF (Type=CONST(Fixed Asset)) "Fixed Asset"
                                                                 ELSE IF (Type=CONST("Charge (Item)")) "Item Charge";
                                                   OnValidate=VAR
                                                                ICPartner@1000 : Record 413;
                                                                ItemCrossReference@1001 : Record 5717;
                                                              BEGIN
                                                              END;

                                                   CaptionML=[ENU=No.;
                                                              THA=หมายเลข] }
    { 7   ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              THA=คำอธิบาย] }
    { 8   ;   ;Description 2       ;Text50        ;CaptionML=[ENU=Description 2;
                                                              THA=คำอธิบาย 2] }
    { 10  ;   ;Amount Incl. VAT    ;Decimal       ;CaptionML=[ENU=Amount Incl. VAT;
                                                              THA=จำนวนรวม VAT];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 11  ;   ;Amount (LCY) Incl. VAT;Decimal     ;CaptionML=[ENU=Amount (LCY) Incl. VAT;
                                                              THA=ยอดเงิน (LCY) รวม VAT];
                                                   AutoFormatType=1 }
    { 12  ;   ;VAT %               ;Decimal       ;CaptionML=[ENU=VAT %;
                                                              THA=VAT %];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 13  ;   ;VAT Base Amount     ;Decimal       ;CaptionML=[ENU=VAT Base Amount;
                                                              THA=ยอดเงินตามจำนวน VAT];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 14  ;   ;VAT Amount          ;Decimal       ;CaptionML=[ENU=VAT Amount;
                                                              THA=จำนวน VAT];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 15  ;   ;Shortcut Dimension 1 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionML=[ENU=Shortcut Dimension 1 Code;
                                                              THA=รหัสมิติทางลัดหมายเลข 1];
                                                   CaptionClass='1,2,1' }
    { 16  ;   ;Shortcut Dimension 2 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   CaptionML=[ENU=Shortcut Dimension 2 Code;
                                                              THA=รหัสมิติทางลัดหมายเลข 2];
                                                   CaptionClass='1,2,2' }
    { 20  ;   ;Gen. Bus. Posting Group;Code10     ;TableRelation="Gen. Business Posting Group";
                                                   CaptionML=[ENU=Gen. Bus. Posting Group;
                                                              THA=กลุ่มการลงรายการบัญชีธุรกิจทั่วไป] }
    { 21  ;   ;Gen. Prod. Posting Group;Code10    ;TableRelation="Gen. Product Posting Group";
                                                   CaptionML=[ENU=Gen. Prod. Posting Group;
                                                              THA=กลุ่มการลงรายการบัญชีผลิตภัณฑ์ทั่วไป] }
    { 22  ;   ;VAT Bus. Posting Group;Code10      ;TableRelation="VAT Business Posting Group";
                                                   CaptionML=[ENU=VAT Bus. Posting Group;
                                                              THA=กลุ่มการลงรายการบัญชีธุรกิจที่ต้องเสีย VAT] }
    { 23  ;   ;VAT Prod. Posting Group;Code10     ;TableRelation="VAT Product Posting Group";
                                                   CaptionML=[ENU=VAT Prod. Posting Group;
                                                              THA=กลุ่มการลงรายการบัญชีผลิตภัณฑ์ที่ต้องเสีย VAT] }
    { 24  ;   ;WHT Business Posting Group;Code10  ;TableRelation="WHT Business Posting Group";
                                                   CaptionML=[ENU=WHT Business Posting Group;
                                                              THA=กลุ่มการลงรายการบัญชีธุรกิจ WHT] }
    { 25  ;   ;WHT Product Posting Group;Code10   ;TableRelation="WHT Product Posting Group";
                                                   CaptionML=[ENU=WHT Product Posting Group;
                                                              THA=กลุ่มการลงรายการผลิตภัณฑ์ WHT] }
    { 26  ;   ;WHT Absorb Base     ;Decimal       ;CaptionML=[ENU=WHT Absorb Base;
                                                              THA=อัตราพื้นฐานภาษีหัก ณ ที่จ่าย] }
    { 30  ;   ;Real Customer/Vendor Name;Text120  ;CaptionML=[ENU=Real Customer/Vendor Name;
                                                              THA=ชื่อผู้ซื้อ/ผู้ขายจริง] }
    { 31  ;   ;Actual Vendor No.   ;Code20        ;TableRelation=Vendor;
                                                   CaptionML=[ENU=Actual Vendor No.;
                                                              THA=หมายเลขผู้ขายจริง] }
    { 32  ;   ;Skip WHT            ;Boolean       ;CaptionML=[ENU=Skip WHT;
                                                              THA=ข้าม WHT] }
    { 33  ;   ;WHT Certificate No. ;Code20        ;CaptionML=[ENU=WHT Certificate No.;
                                                              THA=หมายเลขหนังสือรับรอง WHT] }
    { 34  ;   ;Certificate Printed ;Boolean       ;CaptionML=[ENU=Certificate Printed;
                                                              THA=พิมพ์หนังสือรับรองแล้ว];
                                                   Editable=No }
    { 35  ;   ;WHT Entry No.       ;Integer       ;CaptionML=[ENU=WHT Entry No.;
                                                              THA=หมายเลขรายการ] }
    { 40  ;   ;Tax Invoice No.     ;Code20        ;CaptionML=[ENU=Tax Invoice No.;
                                                              THA=เลขที่ใบกำกับภาษี] }
    { 41  ;   ;Tax Invoice Date    ;Date          ;CaptionML=[ENU=Tax Invoice Date;
                                                              THA=วันที่ออกใบกำกับภาษี] }
    { 42  ;   ;External Document No.;Code20       ;CaptionML=[ENU=External Document No.;
                                                              THA=หมายเลขเอกสารภายนอก] }
    { 50  ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   CaptionML=[ENU=Currency Code;
                                                              THA=รหัสสกุลเงิน];
                                                   Editable=No }
    { 77  ;   ;VAT Calculation Type;Option        ;CaptionML=[ENU=VAT Calculation Type;
                                                              THA=ชนิดการคำนวณ VAT];
                                                   OptionCaptionML=[ENU=Normal VAT,Reverse Charge VAT,Full VAT,Sales Tax;
                                                                    THA=VAT ปกติ,VAT คิดย้อนหลัง,VAT เต็มจำนวน,ภาษีขาย];
                                                   OptionString=Normal VAT,Reverse Charge VAT,Full VAT,Sales Tax;
                                                   Editable=No }
    { 78  ;   ;VAT Amount (LCY)    ;Decimal       ;CaptionML=[ENU=VAT Amount (LCY);
                                                              THA=ยอด VAT (LCY)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 79  ;   ;VAT Base Amount (LCY);Decimal      ;CaptionML=[ENU=VAT Base Amount (LCY);
                                                              THA=จำนวนฐาน VAT (LCY)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 85  ;   ;Use Tax             ;Boolean       ;CaptionML=[ENU=Use Tax;
                                                              THA=ใช้ภาษี] }
    { 100 ;   ;Balance Amount Settle;Decimal      ;CaptionML=[ENU=Balance Amount Settle;
                                                              THA=ดุลเงินเบิกชดเชย];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 104 ;   ;VAT Difference      ;Decimal       ;CaptionML=[ENU=VAT Difference;
                                                              THA=ส่วนต่างของ VAT];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 50020;  ;VAT Claim %         ;Decimal       ;DecimalPlaces=0:2;
                                                   MinValue=0;
                                                   MaxValue=100;
                                                   Description=Burda1.00;
                                                   Editable=No }
    { 50021;  ;VAT Unclaim %       ;Decimal       ;MinValue=0;
                                                   MaxValue=100;
                                                   Description=Burda1.00;
                                                   Editable=No }
    { 50022;  ;Avg. VAT Amount     ;Decimal       ;Description=Burda1.00;
                                                   Editable=No }
    { 50024;  ;Average VAT Year    ;Integer       ;TableRelation="Average VAT Setup";
                                                   Description=Burda1.00 }
    { 50025;  ;Bank Code           ;Text30        ;Description=Burda1.00 }
    { 50026;  ;Bank Branch No.     ;Text20        ;CaptionML=[ENU=Bank Branch No.;
                                                              THA=หมายเลขสาขาของธนาคาร];
                                                   Description=Burda1.00 }
    { 50027;  ;Bank Account No.    ;Text30        ;CaptionML=[ENU=Bank Account No.;
                                                              THA=หมายเลขบัญชีธนาคาร];
                                                   Description=Burda1.00 }
  }
  KEYS
  {
    {    ;Document No.,Line No.                   ;SumIndexFields=Amount Incl. VAT,Amount (LCY) Incl. VAT,Balance Amount Settle;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    PROCEDURE ShowDimensions@1000000000();
    VAR
      PostedDocDim@1000 : Record 359;
      PostedDocDimensions@1001 : Page 547;
    BEGIN
      TESTFIELD("No.");
      TESTFIELD("Line No.");
      PostedDocDim.SETRANGE("Table ID",DATABASE::"Cash Advance Invoice Line");
      PostedDocDim.SETRANGE("Document No.","Document No.");
      PostedDocDim.SETRANGE("Line No.","Line No.");
      PostedDocDimensions.SETTABLEVIEW(PostedDocDim);
      PostedDocDimensions.RUNMODAL;
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Localization TH
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   30.08.2006   KKE   Cash Advance.
      Burda
      002   14.08.2007   KKE   Average VAT.
    }
    END.
  }
}

OBJECT Table 55056 Settle Cash Advance Header
{
  OBJECT-PROPERTIES
  {
    Date=02/23/07;
    Time=[ 6:00:00 PM];
    Version List=AVATHA4.40;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               CashAdvSetup.GET;

               IF "No." = '' THEN BEGIN
                 CashAdvSetup.TESTFIELD("Settle Cash Advance Nos.");
                 NoSeriesMgt.InitSeries(CashAdvSetup."Settle Cash Advance Nos.",xRec."No. Series","Posting Date","No.","No. Series");
               END;

               InitRecord;

               "Posting Date" := WORKDATE;
               "Document Date" := WORKDATE;
             END;

    OnModify=BEGIN
               TESTFIELD(Status,Status::Open);
               TESTFIELD("Cheque Printed",FALSE);
             END;

    OnDelete=BEGIN
               SettleCashAdvLine.LOCKTABLE;
               SettleCashAdvLine.SETRANGE("Settle Cash Advance No.","No.");
               SettleCashAdvLine.DELETEALL;
             END;

    CaptionML=[ENU=Settle Cash Advance Header;
               THA=หัวข้อการเบิกชดเชยเงินทดรองจ่าย];
    LookupPageID=Page50097;
    DrillDownPageID=Page50097;
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20        ;CaptionML=[ENU=No.;
                                                              THA=หมายเลข] }
    { 2   ;   ;Cash Advance Vendor No.;Code20     ;TableRelation=Vendor WHERE (Cash Advance=CONST(Yes));
                                                   OnValidate=BEGIN
                                                                TESTFIELD(Status,Status::Open);
                                                                IF ("Cash Advance Vendor No." <> xRec."Cash Advance Vendor No.") AND
                                                                   (xRec."Cash Advance Vendor No." <> '')
                                                                THEN BEGIN
                                                                  IF HideValidationDialog THEN
                                                                    Confirmed :=TRUE
                                                                  ELSE
                                                                    Confirmed := CONFIRM(Text001,FALSE,FIELDCAPTION("Cash Advance Vendor No."));
                                                                  IF Confirmed THEN BEGIN
                                                                    SettleCashAdvLine.SETRANGE("Settle Cash Advance No.","No.");
                                                                    IF "Cash Advance Vendor No." = '' THEN BEGIN
                                                                      IF SettleCashAdvLine.FIND('-') THEN
                                                                        ERROR(
                                                                          Text004,
                                                                          FIELDCAPTION("Cash Advance Vendor No."));
                                                                      INIT;
                                                                      "No. Series" := xRec."No. Series";
                                                                      InitRecord;
                                                                      EXIT;
                                                                    END;
                                                                    SettleCashAdvLine.RESET;
                                                                  END ELSE BEGIN
                                                                    Rec := xRec;
                                                                    EXIT;
                                                                  END;
                                                                END;

                                                                GetVend("Cash Advance Vendor No.");
                                                                "Cash Advance Name" := Vend.Name;
                                                                VALIDATE("Location Code",Vend."Location Code");
                                                                VALIDATE("Currency Code",Vend."Currency Code");
                                                                //"Cash Advance Amount" := Vend."Cash Advance Amount";
                                                              END;

                                                   CaptionML=[ENU=Cash Advance Vendor No.;
                                                              THA=หมายเลขผู้ขายเงินทดรองจ่าย] }
    { 3   ;   ;Cash Advance Name   ;Text50        ;CaptionML=[ENU=Cash Advance Name;
                                                              THA=ชื่อผู้ขายเงินทดรองจ่าย] }
    { 4   ;   ;Posting Date        ;Date          ;CaptionML=[ENU=Posting Date;
                                                              THA=วันที่ตั้งหนี้] }
    { 5   ;   ;Document Date       ;Date          ;CaptionML=[ENU=Document Date;
                                                              THA=วันที่เบิก] }
    { 6   ;   ;Cash Advance Amount ;Decimal       ;CaptionML=[ENU=Cash Advance Amount;
                                                              THA=วงเงินทดรองจ่าย];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 7   ;   ;Balance Amount      ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Detailed Vendor Ledg. Entry".Amount WHERE (Vendor No.=FIELD(Cash Advance Vendor No.),
                                                                                                                Posting Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Balance Amount;
                                                              THA=เงินดุล];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 8   ;   ;Balance Settle      ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Settle Cash Advance Line"."Amount (LCY) Incl. VAT" WHERE (Settle Cash Advance No.=FIELD(No.)));
                                                   CaptionML=[ENU=Balance Settle;
                                                              THA=ดุลเบิกชดเชย];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 9   ;   ;Payment Invoice Description;Text50 ;CaptionML=[ENU=Payment Invoice Description;
                                                              THA=คำอธิบายการชำระเงินใบแจ้งหนี้] }
    { 10  ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=No. Series;
                                                              THA=ชุดหมายเลข] }
    { 11  ;   ;Status              ;Option        ;CaptionML=[ENU=Status;
                                                              THA=สถานะ];
                                                   OptionCaptionML=[ENU=Open,Released;
                                                                    THA=เปิด,นำออกใช้];
                                                   OptionString=Open,Released;
                                                   Editable=No }
    { 12  ;   ;Settle Account Type ;Option        ;InitValue=Bank Account;
                                                   OnValidate=BEGIN
                                                                IF "Settle Account Type" <> xRec."Settle Account Type" THEN
                                                                  "Settle Account No." := '';
                                                              END;

                                                   CaptionML=[ENU=Settle Account Type;
                                                              THA=ประเภทบัญชีเบิกชดเชย];
                                                   OptionCaptionML=[ENU=G/L Account,Customer,Vendor,Bank Account,Fixed Asset,IC Partner;
                                                                    THA=บัญชี G/L,ลูกค้า,ผู้ขาย,บัญชีธนาคาร,สินทรัพย์ถาวร,บริษัทในเครือ IC];
                                                   OptionString=G/L Account,Customer,Vendor,Bank Account,Fixed Asset,IC Partner }
    { 13  ;   ;Settle Account No.  ;Code20        ;TableRelation=IF (Settle Account Type=CONST(G/L Account)) "G/L Account"
                                                                 ELSE IF (Settle Account Type=CONST(Customer)) Customer
                                                                 ELSE IF (Settle Account Type=CONST(Vendor)) Vendor
                                                                 ELSE IF (Settle Account Type=CONST(Bank Account)) "Bank Account"
                                                                 ELSE IF (Settle Account Type=CONST(Fixed Asset)) "Fixed Asset"
                                                                 ELSE IF (Settle Account Type=CONST(IC Partner)) "IC Partner";
                                                   CaptionML=[ENU=Settle Account No.;
                                                              THA=หมายเลขบัญชีเบิกชดเชย] }
    { 21  ;   ;Total WHT (LCY)     ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Settle Cash Advance Line"."WHT Amount (LCY)" WHERE (Settle Cash Advance No.=FIELD(No.)));
                                                   CaptionML=[ENU=Total WHT (LCY);
                                                              THA=ยอดรวม WHT (LCY)];
                                                   Editable=No }
    { 30  ;   ;Bank Payment Type   ;Option        ;OnValidate=BEGIN
                                                                IF ("Bank Payment Type" <> "Bank Payment Type"::" ") AND
                                                                   ("Settle Account Type" <> "Settle Account Type"::"Bank Account")
                                                                THEN
                                                                  ERROR(
                                                                    Text007,
                                                                    FIELDCAPTION("Settle Account Type"));
                                                                IF ("Settle Account Type" = "Settle Account Type"::"Fixed Asset") AND
                                                                   ("Bank Payment Type" <> "Bank Payment Type"::" ")
                                                                THEN
                                                                  FIELDERROR("Settle Account Type");
                                                              END;

                                                   CaptionML=[ENU=Bank Payment Type;
                                                              THA=รูปแบบการชำระเงินให้ธนาคาร];
                                                   OptionCaptionML=[ENU=" ,Computer Check,Manual Check";
                                                                    THA=" ,ตรวจสอบด้วยคอมพิวเตอร์,ตรวจสอบด้วยตนเอง"];
                                                   OptionString=[ ,Computer Check,Manual Check] }
    { 31  ;   ;Cheque Printed      ;Boolean       ;CaptionML=[ENU=Cheque Printed;
                                                              THA=เช็คที่พิมพ์];
                                                   Editable=No }
    { 32  ;   ;Cheque No.          ;Code20        ;CaptionML=[ENU=Cheque No.;
                                                              THA=หมายเลขเช็ค];
                                                   Editable=No }
    { 33  ;   ;Paid to Vendor Name ;Text120       ;CaptionML=[ENU=Paid to Vendor Name;
                                                              THA=จ่ายให้แก่ชื่อ] }
    { 46  ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Cash Advance Comment Line" WHERE (Document Type=CONST(Settle),
                                                                                                        No.=FIELD(No.)));
                                                   CaptionML=[ENU=Comment;
                                                              THA=ข้อคิดเห็น];
                                                   Editable=No }
    { 47  ;   ;User ID             ;Code20        ;TableRelation=User;
                                                   OnLookup=VAR
                                                              LoginMgt@1000 : Codeunit 418;
                                                            BEGIN
                                                              LoginMgt.LookupUserID("User ID");
                                                            END;

                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=User ID;
                                                              THA=ID ผู้ใช้] }
    { 48  ;   ;Source Code         ;Code10        ;TableRelation="Source Code";
                                                   CaptionML=[ENU=Source Code;
                                                              THA=รหัสแหล่งที่มา] }
    { 49  ;   ;Location Code       ;Code20        ;TableRelation=Location;
                                                   CaptionML=[ENU=Location Code;
                                                              THA=รหัสที่ตั้ง] }
    { 50  ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   OnValidate=BEGIN
                                                                IF NOT (CurrFieldNo IN [0,FIELDNO("Posting Date")]) THEN
                                                                  TESTFIELD(Status,Status::Open);
                                                                IF CurrFieldNo <> FIELDNO("Currency Code") THEN
                                                                  UpdateCurrencyFactor
                                                                ELSE BEGIN
                                                                  IF "Currency Code" <> xRec."Currency Code" THEN BEGIN
                                                                    UpdateCurrencyFactor;
                                                                    RecreateSettleCashAdvLines(FIELDCAPTION("Currency Code"));
                                                                  END ELSE
                                                                    IF "Currency Code" <> '' THEN BEGIN
                                                                      UpdateCurrencyFactor;
                                                                      IF "Currency Factor" <> xRec."Currency Factor" THEN
                                                                        ConfirmUpdateCurrencyFactor;
                                                                    END;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Currency Code;
                                                              THA=รหัสสกุลเงิน] }
    { 51  ;   ;Currency Factor     ;Decimal       ;OnValidate=BEGIN
                                                                IF "Currency Factor" <> xRec."Currency Factor" THEN
                                                                  UpdateSettleCashAdvLines(FIELDCAPTION("Currency Factor"));
                                                              END;

                                                   CaptionML=[ENU=Currency Factor;
                                                              THA=ปัจจัยด้านสกุลเงิน];
                                                   DecimalPlaces=0:15;
                                                   MinValue=0;
                                                   Editable=No }
    { 52  ;   ;Date Filter         ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Date Filter;
                                                              THA=ตัวกรองวันที่] }
    { 50000;  ;Cheque Date         ;Date          ;CaptionML=[ENU=Cheque Date;
                                                              THA=วันที่เช็ค] }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      SettleCashAdvHdr@1000000000 : Record 55056;
      SettleCashAdvLine@1000000003 : Record 55057;
      CashAdvSetup@1000000001 : Record 55050;
      CashAdvCmtLine@1000000023 : Record 55053;
      GenBusPostingGrp@1000000010 : Record 250;
      Vend@1000000011 : Record 23;
      SourceCodeSetup@1000000025 : Record 242;
      DocDim@1000000008 : Record 357;
      GLSetup@1000000013 : Record 98;
      CurrExchRate@1000000015 : Record 330;
      NoSeriesMgt@1000000002 : Codeunit 396;
      Text001@1000000005 : TextConst 'ENU=Do you want to change %1?;THA=คุณต้องการเปลี่ยน %1 หรือ?';
      Text002@1000000004 : TextConst 'ENU=If you change %1, the existing cash advance invoice lines will be deleted and new cash advance invoice lines based on the new information in the header will be created.\\;THA=ถ้าคุณเปลี่ยน %1, บรรทัดการซื้อที่มีอยู่จะถูกลบออก และจะมีการสร้างบรรทัดการซื้อใหม่โดยใช้รายละเอียดใหม่ในหัวข้อ\\';
      DimMgt@1000000020 : Codeunit 408;
      PostCodeCheck@1000000021 : Codeunit 28000;
      HideValidationDialog@1000000007 : Boolean;
      Confirmed@1000000006 : Boolean;
      Text003@1000000009 : TextConst 'ENU=You must delete the existing cash advance invoice lines before you can change %1.;THA=คุณต้องลบบรรทัดการซื้อที่มีอยู่ก่อน จึงจะสามารถเปลี่ยน %1 ได้';
      Text004@1000000012 : TextConst 'ENU=You cannot reset %1 because the document still has one or more lines.;THA=คุณไม่สามารถรีเซ็ต %1 เนื่องจากเอกสารยังมีบรรทัดอยู่หนึ่งหรือหลายบรรทัด';
      CurrencyDate@1000000014 : Date;
      Text005@1000000016 : TextConst 'ENU=Do you want to update the exchange rate?;THA=คุณต้องการปรับปรุงอัตราแลกเปลี่ยนหรือ?';
      Text006@1000000027 : TextConst 'ENU=Vendor ledger entries no. %1 has already applied by another docuement.';
      Text007@1000000026 : TextConst 'ENU=%1 must be a Bank Account.;THA=%1 หรือ %2 ต้องเป็นบัญชีธนาคาร';
      Text025@1000000019 : TextConst 'ENU="You have modified the %1 field. Note that the recalculation of VAT may cause penny differences, so you must check the amounts afterwards. ";THA=คุณได้แก้ไขฟิลด์ %1 แล้ว  หมายเหตุว่า การคำนวณ VAT ใหม่อาจทำให้เกิดผลต่างเศษสตางค์ได้ ดังนั้นคุณจึงต้องตรวจสอบยอดเงินหลังจากนั้น';
      Text027@1000000018 : TextConst 'ENU=Do you want to update the %2 field on the lines to reflect the new value of %1?;THA=คุณต้องการปรับปรุงฟิลด์ %2 ในบรรทัดเพื่อให้เห็นค่าใหม่ของ %1 หรือ?';
      SkipPayToContact@1000000022 : Boolean;
      Text028@1000000017 : TextConst 'ENU=There is nothing to release for %1.;THA=ไม่มีข้อมูลที่จะนำออกแสดงสำหรับ %1 %2';
      Text030@1000000024 : TextConst 'ENU=Actual Vendor No. on Cash Advance Line must not be difference.';

    PROCEDURE InitRecord@10();
    BEGIN
      IF ("Posting Date" = 0D)
      THEN
        "Posting Date" := WORKDATE;
      "Document Date" := WORKDATE;

      SourceCodeSetup.GET;
      SourceCodeSetup.TESTFIELD("Cash Advance");
      "Source Code" := SourceCodeSetup."Cash Advance";
    END;

    PROCEDURE AssistEdit@1(OldSettleCashAdvHdr@1000 : Record 55056) : Boolean;
    BEGIN
      CashAdvSetup.GET;
      CashAdvSetup.TESTFIELD("Settle Cash Advance Nos.");
      IF NoSeriesMgt.SelectSeries(CashAdvSetup."Settle Cash Advance Nos.",OldSettleCashAdvHdr."No. Series","No. Series") THEN BEGIN
        NoSeriesMgt.SetSeries("No.");
        EXIT(TRUE);
      END;
    END;

    PROCEDURE RecreateSettleCashAdvLines@4(ChangedFieldName@1000 : Text[100]);
    VAR
      SettleCashAdvLineTmp@1001 : TEMPORARY Record 55057;
    BEGIN
      IF SettleCashAdvLinesExist THEN BEGIN
        IF HideValidationDialog THEN
          Confirmed :=TRUE
        ELSE
          Confirmed :=
            CONFIRM(
              Text002 +
               Text001,FALSE,ChangedFieldName);
        IF Confirmed THEN BEGIN
          SettleCashAdvLine.LOCKTABLE;
          MODIFY;

          SettleCashAdvLine.RESET;
          SettleCashAdvLine.SETRANGE("Settle Cash Advance No.","No.");
          IF SettleCashAdvLine.FIND('-') THEN BEGIN
            REPEAT
              SettleCashAdvLineTmp := SettleCashAdvLine;
              SettleCashAdvLine.MODIFY;
              SettleCashAdvLineTmp.INSERT;
            UNTIL SettleCashAdvLine.NEXT = 0;

            SettleCashAdvLine.DELETEALL(TRUE);

            SettleCashAdvLine.INIT;
            SettleCashAdvLine."Line No." := 0;
            SettleCashAdvLineTmp.FIND('-');
            REPEAT
              SettleCashAdvLine.INIT;
              SettleCashAdvLine."Line No." := SettleCashAdvLine."Line No." + 10000;
              SettleCashAdvLine.VALIDATE("Entry No.",SettleCashAdvLineTmp."Entry No.");
              SettleCashAdvLine.INSERT;
            UNTIL SettleCashAdvLineTmp.NEXT = 0;

            SettleCashAdvLineTmp.RESET;
            SettleCashAdvLineTmp.DELETEALL;
          END;
        END ELSE
          ERROR(
            Text003,ChangedFieldName);
      END;
    END;

    PROCEDURE SettleCashAdvLinesExist@3() : Boolean;
    BEGIN
      SettleCashAdvLine.RESET;
      SettleCashAdvLine.SETRANGE("Settle Cash Advance No.","No.");
      EXIT(SettleCashAdvLine.FIND('-'));
    END;

    LOCAL PROCEDURE GetVend@1000000000(VendNo@1000 : Code[20]);
    BEGIN
      IF VendNo <> Vend."No." THEN
        Vend.GET(VendNo);
    END;

    LOCAL PROCEDURE UpdateCurrencyFactor@12();
    BEGIN
      IF "Currency Code" <> '' THEN BEGIN
        GLSetup.GET;
        CurrencyDate := "Posting Date";

        "Currency Factor" := CurrExchRate.ExchangeRate(CurrencyDate,"Currency Code");
      END ELSE
        "Currency Factor" := 0;
    END;

    LOCAL PROCEDURE ConfirmUpdateCurrencyFactor@13();
    BEGIN
      IF HideValidationDialog THEN
        Confirmed :=TRUE
      ELSE
        Confirmed := CONFIRM(Text005,FALSE);
      IF Confirmed THEN
        VALIDATE("Currency Factor")
      ELSE
        "Currency Factor" := xRec."Currency Factor";
    END;

    PROCEDURE UpdateSettleCashAdvLines@15(ChangedFieldName@1000 : Text[100]);
    VAR
      _SettleCashAdvLine@1000000000 : Record 55057;
      UpdateConfirmed@1002 : Boolean;
    BEGIN
      IF SettleCashAdvLinesExist THEN BEGIN

        IF NOT GUIALLOWED THEN
          UpdateConfirmed := TRUE;

        SettleCashAdvLine.LOCKTABLE;
        MODIFY;

        REPEAT
          _SettleCashAdvLine := SettleCashAdvLine;
          CASE ChangedFieldName OF
            FIELDCAPTION("Currency Factor") :
              IF SettleCashAdvLine."Entry No." <> 0 THEN
                SettleCashAdvLine.VALIDATE("Entry No.");
          END;
          SettleCashAdvLine.MODIFY(TRUE);
        UNTIL SettleCashAdvLine.NEXT = 0;
      END;
    END;

    PROCEDURE Release@1000000003();
    VAR
      SettleCashAdvLine2@1000000001 : Record 55057;
    BEGIN
      IF Status = Status::Released THEN
        EXIT;

      TESTFIELD("Cash Advance Vendor No.");
      TESTFIELD("Posting Date");
      TESTFIELD("Settle Account No.");
      TESTFIELD("Cheque Printed",FALSE);

      SettleCashAdvLine2.SETRANGE("Settle Cash Advance No.","No.");
      IF NOT SettleCashAdvLine2.FIND('-') THEN
        ERROR(Text028,"No.");

      CheckAppliedVendLedgEntry;

      SetVendApplId(FALSE);

      Status := Status::Released;
      MODIFY;
    END;

    PROCEDURE Reopen@1000000001();
    BEGIN
      IF Status = Status::Open THEN
        EXIT;

      TESTFIELD("Cheque Printed",FALSE);
      SetVendApplId(TRUE);

      IF CheckUnappliedVendLedgEntry THEN
        EXIT;

      Status := Status::Open;
      MODIFY;
    END;

    PROCEDURE CheckAppliedVendLedgEntry@1000000004();
    VAR
      VendLedgEntry@1000000000 : Record 25;
      SettleCashAdvLine2@1000000002 : Record 55057;
      GenJnlLine@1000000003 : Record 81;
    BEGIN
      SettleCashAdvLine2.SETRANGE("Settle Cash Advance No.","No.");
      IF SettleCashAdvLine2.FIND('-') THEN
        REPEAT
          VendLedgEntry.GET(SettleCashAdvLine2."Entry No.");
          IF VendLedgEntry."Applies-to ID" <> '' THEN
            ERROR(STRSUBSTNO(Text006,SettleCashAdvLine2."Entry No."));
          GenJnlLine.SETRANGE("Applies-to Doc. Type",SettleCashAdvLine2."Document Type");
          GenJnlLine.SETRANGE("Applies-to Doc. No.",SettleCashAdvLine2."Document No.");
          IF GenJnlLine.FIND('-') THEN
            ERROR(STRSUBSTNO(Text006,SettleCashAdvLine2."Entry No."));
        UNTIL SettleCashAdvLine2.NEXT=0;
    END;

    PROCEDURE CheckUnappliedVendLedgEntry@1000000006() : Boolean;
    VAR
      VendLedgEntry@1000000000 : Record 25;
      SettleCashAdvLine2@1000000002 : Record 55057;
      GenJnlLine@1000000003 : Record 81;
    BEGIN
      SettleCashAdvLine2.SETRANGE("Settle Cash Advance No.","No.");
      IF SettleCashAdvLine2.FIND('-') THEN
        REPEAT
          VendLedgEntry.GET(SettleCashAdvLine2."Entry No.");
          IF VendLedgEntry."Applies-to ID" <> '' THEN
            EXIT(TRUE);
        UNTIL SettleCashAdvLine2.NEXT=0;
      EXIT(FALSE);
    END;

    PROCEDURE SetVendApplId@1000000002(ResetAppliedID@1000000000 : Boolean);
    VAR
      VendLedgEntry@1000000001 : Record 25;
      VendLedgEntry2@1000000003 : Record 25;
      SettleCashAdvLine2@1000000004 : Record 55057;
      ApplyingVendLedgEntry@1000000007 : TEMPORARY Record 25;
      VendEntrySetApplID@1000000002 : Codeunit 111;
      AppliedAmount@1000000006 : Decimal;
      PmtDiscAmount@1000000005 : Decimal;
      RemBalanceSettle@1000000008 : Decimal;
    BEGIN
      IF ResetAppliedID THEN BEGIN
        VendLedgEntry.SETRANGE("Applies-to ID","No.");
        IF VendLedgEntry.FIND('-') THEN
          REPEAT
            VendLedgEntry.MARK(TRUE);
          UNTIL VendLedgEntry.NEXT=0;
      END ELSE BEGIN
        CALCFIELDS("Balance Settle");
        RemBalanceSettle := "Balance Settle";
        {
        VendLedgEntry2.RESET;
        VendLedgEntry2.SETRANGE("Vendor No.","Cash Advance Vendor No.");
        VendLedgEntry2.SETRANGE("Document Type",VendLedgEntry2."Document Type"::Payment);
        VendLedgEntry2.SETRANGE(Open,TRUE);
        VendLedgEntry2.SETFILTER("Posting Date",'..%1',"Posting Date");
        VendLedgEntry2.SETCURRENTKEY("Vendor No.","Posting Date");
        IF VendLedgEntry2.FIND('-') THEN
          REPEAT
            VendLedgEntry2.CALCFIELDS("Remaining Amt. (LCY)");
            IF VendLedgEntry2."Remaining Amt. (LCY)" + RemBalanceSettle > 0 THEN
              RemBalanceSettle := 0
            ELSE
              RemBalanceSettle := VendLedgEntry2."Remaining Amt. (LCY)" + RemBalanceSettle;
            VendLedgEntry := VendLedgEntry2;
            VendLedgEntry.MARK(TRUE);
          UNTIL (VendLedgEntry2.NEXT=0) OR (RemBalanceSettle=0);
        }
        SettleCashAdvLine2.SETRANGE("Settle Cash Advance No.","No.");
        IF SettleCashAdvLine2.FIND('-') THEN
        REPEAT
          VendLedgEntry.GET(SettleCashAdvLine2."Entry No.");
          IF VendLedgEntry.Open THEN
            VendLedgEntry.MARK(TRUE);
        UNTIL SettleCashAdvLine2.NEXT=0;
      END;

      VendLedgEntry.MARKEDONLY(TRUE);
      IF VendLedgEntry.COUNT = 0 THEN
        EXIT;
      VendEntrySetApplID.SetApplId(VendLedgEntry,ApplyingVendLedgEntry,AppliedAmount,PmtDiscAmount,"No.");
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Localization TH
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   30.08.2006   KKE   Cash Advance.
      002   22.01.2007   KKE   Add new field "Cheque Date" - Show on Print Cheque,Cheque ledger entries
    }
    END.
  }
}

OBJECT Table 55057 Settle Cash Advance Line
{
  OBJECT-PROPERTIES
  {
    Date=07/10/07;
    Time=[ 6:00:00 PM];
    Version List=AVATHA4.40;
  }
  PROPERTIES
  {
    OnInsert=VAR
               DocDim@1000000000 : Record 357;
             BEGIN
               TestStatusOpen;

               LOCKTABLE;
               SettleCashAdvHdr."No." := '';

               TESTFIELD("Entry No.");
             END;

    OnModify=BEGIN
               TestStatusOpen;
             END;

    OnDelete=BEGIN
               TestStatusOpen;
             END;

    CaptionML=[ENU=Settle Cash Advance Line;
               THA=บรรทัดการเบิกชดเชยเงินทดรองจ่าย];
  }
  FIELDS
  {
    { 1   ;   ;Settle Cash Advance No.;Code20     ;TableRelation="Settle Cash Advance Header";
                                                   CaptionML=[ENU=Settle Cash Advance No.;
                                                              THA=หมายเลขใบเบิกชดเชยเงินทดรองจ่าย] }
    { 2   ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              THA=หมายเลขบรรทัด] }
    { 3   ;   ;Cash Advance Vendor No.;Code20     ;TableRelation=Vendor WHERE (Cash Advance=CONST(Yes));
                                                   CaptionML=[ENU=Cash Advance Vendor No.;
                                                              THA=หมายเลขผู้ขายเงินทดรองจ่าย] }
    { 4   ;   ;Entry No.           ;Integer       ;TableRelation="Vendor Ledger Entry" WHERE (Vendor No.=FIELD(Cash Advance Vendor No.),
                                                                                              Open=CONST(Yes));
                                                   OnValidate=BEGIN
                                                                CheckExistVendLedgEntry("Entry No.");
                                                                UpdateSettleLine;
                                                              END;

                                                   CaptionML=[ENU=Entry No.;
                                                              THA=หมายเลขรายการ] }
    { 6   ;   ;Posting Date        ;Date          ;CaptionML=[ENU=Posting Date;
                                                              THA=วันที่ลงรายการบัญชี] }
    { 7   ;   ;Document Type       ;Option        ;CaptionML=[ENU=Document Type;
                                                              THA=ชนิดเอกสาร];
                                                   OptionCaptionML=[ENU=" ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund";
                                                                    THA=" ,การชำระเงิน,ใบแจ้งหนี้,ใบลดหนี้,บันทึกค่าธรรมเนียมทางการเงิน,จดหมายเตือนชำระเงิน,คืนเงิน"];
                                                   OptionString=[ ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund] }
    { 8   ;   ;Document No.        ;Code20        ;CaptionML=[ENU=Document No.;
                                                              THA=หมายเลขเอกสาร] }
    { 9   ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              THA=คำอธิบาย] }
    { 10  ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   CaptionML=[ENU=Currency Code;
                                                              THA=รหัสสกุลเงิน] }
    { 11  ;   ;Amount Incl. VAT    ;Decimal       ;CaptionML=[ENU=Amount Incl. VAT;
                                                              THA=จำนวนรวม VAT];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 12  ;   ;Amount (LCY) Incl. VAT;Decimal     ;CaptionML=[ENU=Amount (LCY) Incl. VAT;
                                                              THA=ยอดเงิน (LCY) รวม VAT];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 13  ;   ;WHT Amount (LCY)    ;Decimal       ;CaptionML=[ENU=WHT Amount (LCY);
                                                              THA=จำนวนเงิน WHT (LCY)];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Settle Cash Advance No.,Line No.        ;SumIndexFields=Amount Incl. VAT,Amount (LCY) Incl. VAT,WHT Amount (LCY);
                                                   Clustered=Yes }
    {    ;Entry No.                                }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      SettleCashAdvHdr@1000000000 : Record 55056;
      Text000@1000000001 : TextConst 'ENU=The vendor ledger entry no. %1 has already used by another document.';
      Text001@1000000002 : TextConst 'ENU=You are not allowed to apply and post an entry to an entry with an earlier posting date.';

    PROCEDURE GetSettleCashAdvHdr@1000000000();
    BEGIN
      TESTFIELD("Settle Cash Advance No.");
      IF "Settle Cash Advance No." <> SettleCashAdvHdr."No." THEN BEGIN
        SettleCashAdvHdr.GET("Settle Cash Advance No.");
      END;
    END;

    LOCAL PROCEDURE TestStatusOpen@37();
    BEGIN
      GetSettleCashAdvHdr;
      SettleCashAdvHdr.TESTFIELD(Status,SettleCashAdvHdr.Status::Open);
    END;

    PROCEDURE UpdateSettleLine@1000000001();
    VAR
      VendLedgEntry@1000000000 : Record 25;
    BEGIN
      GetSettleCashAdvHdr;
      VendLedgEntry.GET("Entry No.");
      IF VendLedgEntry."Posting Date" > SettleCashAdvHdr."Posting Date" THEN
        ERROR(Text001);
      "Posting Date" := VendLedgEntry."Posting Date";
      "Document Type" := VendLedgEntry."Document Type";
      "Document No." := VendLedgEntry."Document No.";
      Description := VendLedgEntry.Description;
      "Currency Code" := VendLedgEntry."Currency Code";
      VendLedgEntry.CALCFIELDS("Remaining Amount","Remaining Amt. (LCY)","WHT Amount (LCY)");
      "Amount Incl. VAT" := VendLedgEntry."Remaining Amount";
      "Amount (LCY) Incl. VAT" := VendLedgEntry."Remaining Amt. (LCY)";
      "WHT Amount (LCY)" := VendLedgEntry."WHT Amount (LCY)";
    END;

    PROCEDURE CheckExistVendLedgEntry@1000000003(EntryNo@1000000001 : Integer);
    VAR
      SettleCashAdvLine@1000000000 : Record 55057;
    BEGIN
      SettleCashAdvLine.RESET;
      SettleCashAdvLine.SETCURRENTKEY("Entry No.");
      SettleCashAdvLine.SETRANGE("Entry No.",EntryNo);
      IF SettleCashAdvLine.FINDFIRST THEN
        ERROR(STRSUBSTNO(Text000,EntryNo));
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Localization TH
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   30.08.2006   KKE   Cash Advance.
    }
    END.
  }
}

OBJECT Codeunit 50000 Create Subscriber Payment
{
  OBJECT-PROPERTIES
  {
    Date=10/05/07;
    Time=[ 6:00:39 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    TableNo=50005;
    Permissions=TableData 36=rim,
                TableData 37=rim;
    OnRun=BEGIN
            IF NOT CONFIRM(Text000,FALSE,"No.") THEN
              EXIT;

            TESTFIELD("Contract Status","Contract Status"::Released);
            TESTFIELD("Payment Status","Payment Status"::Open);

            CLEARALL;
            SubscriberContract := Rec;
            WITH SubscriberContract DO BEGIN
              TESTFIELD("Payment Method Code");
              IF "Credit Card Charge Fee" <> 0 THEN
                TESTFIELD("Payment Method (Charge Fee)");

              SubscriptionSetup.GET;
              SubscriptionSetup.TESTFIELD("Posted Invoice Nos.");

              Magazine.GET("Magazine Code");
              Magazine.TESTFIELD("Subscriber S/O Nos.");
              Magazine.TESTFIELD("Defer Revenue SS Account");

              Subscriber.GET("Subscriber No.");
              Subscriber.TESTFIELD("Customer No.");

              Cust.GET(Subscriber."Customer No.");
              IF Cust.Blocked IN [Cust.Blocked::All,Cust.Blocked::Invoice] THEN
                ERROR(Text001,Cust."No.");

              SalesOrderNo := InsertSalesHeader;

              //KKE : #002
              IF "Credit Card Charge Fee" <> 0 THEN
                InsertSalesHdrCreditChargeFee;

              SubscriberContractLE.RESET;
              SubscriberContractLE.SETRANGE("Magazine Code","Magazine Code");
              SubscriberContractLE.SETRANGE("Subscriber Contract No.","No.");
              SubscriberContractLE.SETPERMISSIONFILTER;
              IF SubscriberContractLE.FIND('-') THEN BEGIN
                SubscriberContractLE.MODIFYALL("Paid Flag",TRUE);
                SubscriberContractLE.MODIFYALL("Paid Sales Order No.",SalesOrderNo);
              END;

              "Payment Status" := "Payment Status"::Paid;
              MODIFY;
              COMMIT;
            END;

            Rec := SubscriberContract;

            MESSAGE(Text003,SalesHeader."No.");
          END;

  }
  CODE
  {
    VAR
      Subscriber@1000000006 : Record 50001;
      SubscriberContract@1000000004 : Record 50005;
      Text000@1000000003 : TextConst 'ENU=Do you want to create subscriber payment for %1?';
      Text001@1000000010 : TextConst 'ENU=Customer %1 has been blocked.';
      Text003@1000000005 : TextConst 'ENU=Sales Order %1 for subscriber contract payment has been created successfully.';
      SubscriberContractLE@1000000009 : Record 50006;
      SubscriptionSetup@1000000000 : Record 50000;
      SalesHeader@1000000002 : Record 36;
      SalesLine@1000000001 : Record 37;
      Cust@1000000007 : Record 18;
      Magazine@1000000012 : Record 50011;
      NoSeriesMgt@1000000013 : Codeunit 396;
      NextLineNo@1000000008 : Integer;
      SalesOrderNo@1000000011 : Code[20];

    LOCAL PROCEDURE InsertSalesHeader@1() : Code[20];
    BEGIN
      WITH SalesHeader DO BEGIN
        INIT;
        "Document Type" := "Document Type"::Order;
        "No." := NoSeriesMgt.GetNextNo(Magazine."Subscriber S/O Nos.",WORKDATE,TRUE);
        INSERT(TRUE);
        VALIDATE("Sell-to Customer No.",Cust."No.");
        VALIDATE("Order Date",SubscriberContract."Subscription Date");
        VALIDATE("Posting Date",SubscriberContract."Subscription Date");
        VALIDATE("Payment Method Code",SubscriberContract."Payment Method Code");
        VALIDATE("Shortcut Dimension 1 Code",Magazine."Dimension 1 Code");
        VALIDATE("Posting No. Series",SubscriptionSetup."Posted Invoice Nos.");
        MODIFY;

        NextLineNo := 0;
        //Case: Cash Payment
        IF SubscriberContract."Receipt Amount" <> 0 THEN BEGIN
          NextLineNo += 10000;
          InsertSalesLine(
            SalesHeader,
            'Cash Payment : Receipt No. ' + SubscriberContract."Receipt No.",
            SubscriberContract."Receipt Amount");
        END;
        //Case: Credit Card Payment
        IF SubscriberContract."Credit Card Bank Amount" <> 0 THEN BEGIN
          NextLineNo += 10000;
          InsertSalesLine(
            SalesHeader,
            'Credit Card Payment : Bank ' + SubscriberContract."Credit Card Bank",
            SubscriberContract."Credit Card Bank Amount");
          {--- split sales order
          IF SubscriberContract."Credit Card Charge Fee" <> 0 THEN BEGIN
            NextLineNo += 10000;
            InsertSalesLine(
              SalesHeader,
              'Credit Card Payment : Charge Fee',
              SubscriberContract."Credit Card Charge Fee");
          END;
          ---}
        END;
        //Case: Check Payment
        IF SubscriberContract."Check Amount" <> 0 THEN BEGIN
          NextLineNo += 10000;
          InsertSalesLine(
            SalesHeader,
            'Check Payment : Check No. ' + SubscriberContract."Check No.",
            SubscriberContract."Check Amount");
        END;
        EXIT("No.");
      END;
    END;

    PROCEDURE InsertSalesLine@1000000006(l_SalesHeader@1000000000 : Record 36;Desc@1000000002 : Text[50];UnitPrice@1000000001 : Decimal);
    BEGIN
      WITH SalesLine DO BEGIN
        SETRANGE("Document Type",l_SalesHeader."Document Type");
        SETRANGE("Document No.",l_SalesHeader."No.");
        "Document Type" := l_SalesHeader."Document Type";
        "Document No." := l_SalesHeader."No.";

        "Line No." := NextLineNo;
        VALIDATE(Type,Type::"G/L Account");
        VALIDATE("No.",Magazine."Defer Revenue SS Account");
        Description := Desc;
        VALIDATE(Quantity,1);
        VALIDATE("Unit Price",UnitPrice);
        VALIDATE("Subscriber Contract No.",SubscriberContract."No.");
        INSERT(TRUE);
      END;
    END;

    LOCAL PROCEDURE InsertSalesHdrCreditChargeFee@1000000000();
    BEGIN
      //KKE : #002
      WITH SalesHeader DO BEGIN
        INIT;
        "Document Type" := "Document Type"::Order;
        "No." := NoSeriesMgt.GetNextNo(Magazine."Subscriber S/O Nos.",WORKDATE,TRUE);
        INSERT(TRUE);
        VALIDATE("Sell-to Customer No.",Cust."No.");
        VALIDATE("Order Date",SubscriberContract."Subscription Date");
        VALIDATE("Posting Date",SubscriberContract."Subscription Date");
        VALIDATE("Payment Method Code",SubscriberContract."Payment Method (Charge Fee)");
        VALIDATE("Shortcut Dimension 1 Code",Magazine."Dimension 1 Code");
        VALIDATE("Posting No. Series",SubscriptionSetup."Posted Invoice Nos.");
        MODIFY;

        NextLineNo := 0;
        //Case: Credit Card Payment
        IF SubscriberContract."Credit Card Charge Fee" <> 0 THEN BEGIN
          NextLineNo += 10000;
          InsertSalesLine(
            SalesHeader,
            'Credit Card Payment : Charge Fee',
            SubscriberContract."Credit Card Charge Fee");
        END;
      END;
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   12.03.2007   KKE   New codeunit for create subscriber payment process.
      002   05.10.2007   KKE   Split sales invoice for credit charge fee.
    }
    END.
  }
}

OBJECT Codeunit 50001 Reverse Subscriber Promotion
{
  OBJECT-PROPERTIES
  {
    Date=08/28/07;
    Time=10:57:44 AM;
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    TableNo=50005;
    Permissions=TableData 36=rim,
                TableData 37=rim;
    OnRun=BEGIN
            IF NOT CONFIRM(Text000,FALSE,"No.") THEN
              EXIT;

            TESTFIELD("Contract Status","Contract Status"::Released);
            TESTFIELD("Payment Status","Payment Status"::Paid);

            CLEARALL;
            SubscriberContract := Rec;
            WITH SubscriberContract DO BEGIN
              SubscriptionSetup.GET;
              SubscriptionSetup.TESTFIELD("Posted Credit Memo Nos.");

              Magazine.GET(SubscriberContract."Magazine Code");
              Magazine.TESTFIELD("Subscriber S/O Nos.");
              Magazine.TESTFIELD("Defer Revenue SS Account");

              Subscriber.GET("Subscriber No.");
              Subscriber.TESTFIELD("Customer No.");

              Cust.GET(Subscriber."Customer No.");
              IF Cust.Blocked IN [Cust.Blocked::All,Cust.Blocked::Invoice] THEN
                ERROR(Text001,Cust."No.");

              ReverseAmount := 0;
              SubscriberContractLE.RESET;
              SubscriberContractLE.SETRANGE("Magazine Code","Magazine Code");
              SubscriberContractLE.SETRANGE("Subscriber Contract No.","No.");
              SubscriberContractLE.SETRANGE("Reversed Flag",FALSE);
              SubscriberContractLE.SETRANGE("Paid Flag",TRUE);
              SubscriberContractLE.SETPERMISSIONFILTER;
              IF SubscriberContractLE.FIND('-') THEN
                REPEAT
                  IF SubscriberContractLE."Sales Order Flag" THEN
                    SubscriberContractLE.TESTFIELD("Delivered Flag",TRUE);
                  IF (SubscriberContractLE."Sales Order Flag" = FALSE) AND (SubscriberContractLE."Delivered Flag" = FALSE) THEN
                    ReverseAmount += SubscriberContractLE."Unit Price";
                UNTIL SubscriberContractLE.NEXT=0;
              IF ReverseAmount = 0 THEN
                ERROR(Text002);

              SalesCrMemoNo := InsertSalesHeader;

              SubscriberContractLE.RESET;
              SubscriberContractLE.SETRANGE("Magazine Code","Magazine Code");
              SubscriberContractLE.SETRANGE("Subscriber Contract No.","No.");
              SubscriberContractLE.SETRANGE("Reversed Flag",FALSE);
              SubscriberContractLE.SETRANGE("Paid Flag",TRUE);
              SubscriberContractLE.SETPERMISSIONFILTER;
              IF SubscriberContractLE.FIND('-') THEN
                REPEAT
                  IF (SubscriberContractLE."Sales Order Flag" = FALSE) AND (SubscriberContractLE."Delivered Flag" = FALSE) THEN BEGIN
                    SubscriberContractLE2 := SubscriberContractLE;
                    SubscriberContractLE2."Reversed Flag" := TRUE;
                    SubscriberContractLE2."Reversed Credit Memo No." := SalesCrMemoNo;
                    SubscriberContractLE2.MODIFY;
                  END;
                UNTIL SubscriberContractLE.NEXT=0;

              "Contract Status" := "Contract Status"::Cancelled;
              MODIFY;
              COMMIT;
            END;

            Rec := SubscriberContract;

            MESSAGE(Text003,SalesHeader."No.");
          END;

  }
  CODE
  {
    VAR
      Subscriber@1000000006 : Record 50001;
      SubscriberContract@1000000004 : Record 50005;
      Text000@1000000003 : TextConst 'ENU=Do you want to reverse promotion for subscriber contract %1?';
      Text001@1000000010 : TextConst 'ENU=Customer %1 has been blocked.';
      Text002@1000000016 : TextConst 'ENU=There was nothing to reverse.';
      Text003@1000000005 : TextConst 'ENU=Sales Credit Memo %1 for subscriber contract payment has been created successfully.';
      SubscriberContractLE@1000000009 : Record 50006;
      SubscriberContractLE2@1000000015 : Record 50006;
      SubscriptionSetup@1000000000 : Record 50000;
      SalesHeader@1000000002 : Record 36;
      SalesLine@1000000001 : Record 37;
      SalesSetup@1000000017 : Record 311;
      Cust@1000000007 : Record 18;
      Magazine@1000000012 : Record 50011;
      NoSeriesMgt@1000000013 : Codeunit 396;
      NextLineNo@1000000008 : Integer;
      SalesCrMemoNo@1000000011 : Code[20];
      ReverseAmount@1000000014 : Decimal;
      Text004@1000000018 : TextConst 'ENU=You must select the no. series code.';

    LOCAL PROCEDURE InsertSalesHeader@1() : Code[20];
    BEGIN
      WITH SalesHeader DO BEGIN
        INIT;
        "Document Type" := "Document Type"::"Credit Memo";
        "No." := '';
      //  "No." := NoSeriesMgt.GetNextNo(Magazine."Sales Order Nos.",WORKDATE,TRUE);
        SalesSetup.GET;
        SalesSetup.TESTFIELD("Credit Memo Nos.");
        IF NoSeriesMgt.SelectSeries(SalesSetup."Credit Memo Nos.",'',"No. Series") THEN BEGIN
          NoSeriesMgt.SetSeries("No.");
          INSERT(TRUE);
        END ELSE
          ERROR(Text004);
        VALIDATE("Sell-to Customer No.",Cust."No.");
        VALIDATE("Order Date",SubscriberContract."Subscription Date");
        VALIDATE("Posting Date",SubscriberContract."Subscription Date");
      //  VALIDATE("Payment Method Code",SubscriberContract."Payment Method Code");
        VALIDATE("Shortcut Dimension 1 Code",Magazine."Dimension 1 Code");
        VALIDATE("Posting No. Series",SubscriptionSetup."Posted Credit Memo Nos.");
        MODIFY;

        NextLineNo := 10000;
        InsertSalesLine(
          SalesHeader,
          'Reverse Promotion ' + SubscriberContract."No.",
          ReverseAmount);
        EXIT("No.");
      END;
    END;

    PROCEDURE InsertSalesLine@1000000006(l_SalesHeader@1000000000 : Record 36;Desc@1000000002 : Text[50];UnitPrice@1000000001 : Decimal);
    BEGIN
      WITH SalesLine DO BEGIN
        SETRANGE("Document Type",l_SalesHeader."Document Type");
        SETRANGE("Document No.",l_SalesHeader."No.");
        "Document Type" := l_SalesHeader."Document Type";
        "Document No." := l_SalesHeader."No.";

        "Line No." := NextLineNo;
        VALIDATE(Type,Type::"G/L Account");
        VALIDATE("No.",Magazine."Defer Revenue SS Account");
        Description := Desc;
        VALIDATE(Quantity,1);
        VALIDATE("Unit Price",UnitPrice);
        VALIDATE("Subscriber Contract No.",SubscriberContract."No.");
        INSERT(TRUE);
      END;
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   04.04.2007   KKE   New codeunit for reverse subscriber promotion process.
    }
    END.
  }
}

OBJECT Codeunit 50002 Update Subscriber No.
{
  OBJECT-PROPERTIES
  {
    Date=01/07/08;
    Time=[ 5:42:58 PM];
    Version List=;
  }
  PROPERTIES
  {
    OnRun=BEGIN
            IF NOT CONFIRM('Do you want to change Subscriber Contract No.?') THEN
              EXIT;
            scb.SETRANGE("No.",'SCB08-000001','SCB08-000018');
            IF scb.FIND('-') THEN
              REPEAT
                scb2.GET(scb."No.");
                scb2.RENAME(CONVERTSTR(scb."No.",'SCB','SUB'));
              UNTIL scb.NEXT=0;

            MESSAGE('Update complete.');
          END;

  }
  CODE
  {
    VAR
      scb@1000000000 : Record 50001;
      scb2@1000000001 : Record 50001;

    BEGIN
    END.
  }
}

OBJECT Codeunit 55000 Petty Cash - Post
{
  OBJECT-PROPERTIES
  {
    Date=10/12/07;
    Time=11:49:31 AM;
    Version List=AVATHA4.40,Burda1.00;
  }
  PROPERTIES
  {
    TableNo=55001;
    Permissions=TableData 45=rm;
    OnRun=VAR
            TotalPettyCashLine@1000000002 : Record 55002;
            TempJnlLineDim@1000000003 : TEMPORARY Record 356;
            PettyCashHdr@1000000001 : Record 55001;
            EntryNo@1000000000 : Integer;
          BEGIN
            IF NOT CONFIRM(Text001,FALSE) THEN
              EXIT;

            TESTFIELD(Status,Status::Released);

            IF PostAndPrint THEN BEGIN
              CLEARALL;
              PostAndPrint := TRUE;
            END ELSE
              CLEARALL;

            UserSetup.GET(USERID);
            IF NOT UserSetup."Allow Post Petty Cash Invoice" THEN
              ERROR(Text000);

            PettyCashHeader.COPY(Rec);
            WITH PettyCashHeader DO BEGIN
              TESTFIELD("Petty Cash Vendor No.");
              TESTFIELD("Posting Date");
              TESTFIELD("Document Date");
              IF GenJnlCheckLine.DateNotAllowed("Posting Date") THEN
                FIELDERROR("Posting Date",Text004);
              GetGLSetup;

              PettyCashLine.RESET;
              PettyCashLine.SETRANGE("Document No.","No.");
              PettyCashLine.CALCSUMS("Amount (LCY) Incl. VAT");
              IF PettyCashLine."Amount (LCY) Incl. VAT" = 0 THEN
                ERROR(Text002);

              CopyAndCheckDocDimToTempDocDim;

              Vend.GET("Petty Cash Vendor No.");
              Vend.CheckBlockedVendOnDocs(Vend,TRUE);

              VendPostingGroup.GET(Vend."Vendor Posting Group");
              Vend.CheckVendorPettyCash;

              IF RECORDLEVELLOCKING THEN BEGIN
                DocDim.LOCKTABLE;
                PettyCashLine.LOCKTABLE;
                GLEntry.LOCKTABLE;
                IF GLEntry.FIND('+') THEN;
              END;

              SourceCodeSetup.GET;
              SourceCodeSetup.TESTFIELD("Petty Cash");
              SrcCode := SourceCodeSetup."Petty Cash";

              IF GUIALLOWED THEN
                Window.OPEN(
                  '#1#################################\\' +
                  Text005 +
                  Text006 +
                  Text007 +
                  Text008);

              // Insert petty cash invoice header
              PettyCashInvHeader.INIT;
              PettyCashInvHeader.TRANSFERFIELDS(PettyCashHeader);
              IF GUIALLOWED THEN
                Window.UPDATE(1,STRSUBSTNO(Text009,"No.",PettyCashInvHeader."No."));
              PettyCashInvHeader."Source Code" := SrcCode;
              PettyCashInvHeader."User ID" := USERID;
              PettyCashInvHeader.INSERT;
              DimMgt.MoveOneDocDimToPostedDocDim(
                DocDim,DATABASE::"Petty Cash Header",DocDim."Document Type"::Invoice,"No.",0,
                DATABASE::"Petty Cash Invoice Header",PettyCashInvHeader."No.");
              CopyCommentLines(
                PettyCashCmtLine."Document Type"::Invoice,PettyCashCmtLine."Document Type"::"Posted Invoice",
                  "No.",PettyCashInvHeader."No.");
              PostCodeCheck.CopyAllAddressID(
                DATABASE::"Petty Cash Header",GETPOSITION,
                DATABASE::"Petty Cash Invoice Header",PettyCashInvHeader.GETPOSITION);

              // Lines
              TotalPettyCashLine.INIT;

              PettyCashLine.RESET;
              PettyCashLine.SETRANGE("Document No.","No.");
              LineCount := 0;

              IF PettyCashLine.FIND('-') THEN
                REPEAT
                  LineCount := LineCount + 1;
                  IF GUIALLOWED THEN
                    Window.UPDATE(2,LineCount);

                  TempDocDim.SETRANGE("Table ID",DATABASE::"Petty Cash Line");
                  TempDocDim.SETRANGE("Line No.",PettyCashLine."Line No.");
                  UpdateTempDimBuf(EntryNo);

                  IF PettyCashLine."Amount Incl. VAT" <> 0 THEN BEGIN
                    PettyCashLine.TESTFIELD("No.");
                    PettyCashLine.TESTFIELD(Type,PettyCashLine.Type::"G/L Account");
                    PettyCashLine.TESTFIELD("Gen. Bus. Posting Group");
                    PettyCashLine.TESTFIELD("Gen. Prod. Posting Group");
                  END ELSE
                    PettyCashLine.TESTFIELD(Type,0);

                  // Insert invoice line or credit memo line
                  PettyCashInvLine.INIT;
                  PettyCashInvLine.TRANSFERFIELDS(PettyCashLine);
                  PettyCashInvLine.INSERT;
                  DimMgt.MoveOneDocDimToPostedDocDim(
                    DocDim,DATABASE::"Petty Cash Line",DocDim."Document Type"::Invoice,"No.",PettyCashLine."Line No.",
                    DATABASE::"Petty Cash Invoice Line",PettyCashInvHeader."No.");

                  // Post petty cash and VAT to G/L entries from buffer
                  IF GUIALLOWED THEN
                    Window.UPDATE(3,LineCount);
                  GenJnlLine.INIT;
                  GenJnlLine."Posting Date" := "Posting Date";
                  GenJnlLine."Document Date" := "Document Date";
                  GenJnlLine.Description := PettyCashLine.Description;
                  GenJnlLine."Document Type" := GenJnlLine."Document Type"::Invoice;
                  GenJnlLine."Document No." := "No.";
                  GenJnlLine."External Document No." := PettyCashLine."External Document No.";
                  GenJnlLine."Account No." := PettyCashLine."No.";
                  GenJnlLine."System-Created Entry" := TRUE;

                  //KKE : #002 +
                  IF PettyCashLine."VAT Claim %" <> 0 THEN BEGIN
                    GenJnlLine."Use Average VAT" := TRUE;
                    GenJnlLine."Average VAT Year" := PettyCashLine."Average VAT Year";
                    GenJnlLine."VAT Claim %" := PettyCashLine."VAT Claim %";
                    GenJnlLine.Amount := PettyCashLine."Amount Incl. VAT" - PettyCashLine."Avg. VAT Amount";
                    GenJnlLine."VAT Base Amount" := PettyCashLine."Amount Incl. VAT" - PettyCashLine."Avg. VAT Amount";
                    GenJnlLine."VAT Base (ACY)" := PettyCashLine."Amount Incl. VAT" - PettyCashLine."Avg. VAT Amount";
                    GenJnlLine."VAT Amount" := PettyCashLine."Avg. VAT Amount";
                    GenJnlLine."VAT Amount (ACY)" := PettyCashLine."Avg. VAT Amount";
                    GenJnlLine."VAT Difference" := PettyCashLine."VAT Difference";
                    GenJnlLine."VAT Difference (ACY)" := PettyCashLine."VAT Difference";
                    GenJnlLine."Amount Including VAT (ACY)" := PettyCashLine."Amount (LCY) Incl. VAT";
                  END ELSE BEGIN
                  //KKE : #002 -
                    GenJnlLine.Amount := PettyCashLine."VAT Base Amount (LCY)";
                    GenJnlLine."VAT Base Amount" := PettyCashLine."VAT Base Amount (LCY)";
                    GenJnlLine."VAT Base (ACY)" := PettyCashLine."VAT Base Amount (LCY)";
                    GenJnlLine."VAT Amount" := PettyCashLine."VAT Amount (LCY)";
                    GenJnlLine."VAT Amount (ACY)" := PettyCashLine."VAT Amount (LCY)";
                    GenJnlLine."VAT Difference" := PettyCashLine."VAT Difference";
                    GenJnlLine."VAT Difference (ACY)" := PettyCashLine."VAT Difference";
                    GenJnlLine."Amount Including VAT (ACY)" := PettyCashLine."Amount (LCY) Incl. VAT";
                  END;

                  GenJnlLine."Source Currency Code" := "Currency Code";
                  GenJnlLine."Source Currency Amount" := PettyCashLine."Amount Incl. VAT";
                    //GenJnlLine.Correction := Correction;
                  GenJnlLine."Gen. Posting Type" := GenJnlLine."Gen. Posting Type"::Purchase;
                  GenJnlLine."Gen. Bus. Posting Group" := PettyCashLine."Gen. Bus. Posting Group";
                  GenJnlLine."Gen. Prod. Posting Group" := PettyCashLine."Gen. Prod. Posting Group";
                  GenJnlLine."VAT Bus. Posting Group" := PettyCashLine."VAT Bus. Posting Group";
                  GenJnlLine."VAT Prod. Posting Group" := PettyCashLine."VAT Prod. Posting Group";
                  GenJnlLine.VATLineNo := PettyCashLine."Line No.";
                  GenJnlLine."VAT Calculation Type" := PettyCashLine."VAT Calculation Type";
                    //GenJnlLine."VAT Base Discount %" := "VAT Base Discount %";
                  GenJnlLine."Source Curr. VAT Base Amount" := PettyCashLine."VAT Base Amount (LCY)";
                  GenJnlLine."Source Curr. VAT Amount" := PettyCashLine."VAT Amount (LCY)";
                  GenJnlLine."VAT Posting" := GenJnlLine."VAT Posting"::"Manual VAT Entry";
                  GenJnlLine."Shortcut Dimension 1 Code" := PettyCashLine."Shortcut Dimension 1 Code";
                  GenJnlLine."Shortcut Dimension 2 Code" := PettyCashLine."Shortcut Dimension 2 Code";
                  GenJnlLine."Source Code" := SrcCode;
                  GenJnlLine."Sell-to/Buy-from No." := "Petty Cash Vendor No.";
                  GenJnlLine."Bill-to/Pay-to No." := "Petty Cash Vendor No.";
                  GenJnlLine."Source Type" := GenJnlLine."Source Type"::Vendor;
                  GenJnlLine."Source No." := "Petty Cash Vendor No.";
                  GenJnlLine."Posting No. Series" := "No. Series";
                  IF PettyCashLine."Tax Invoice No." <> '' THEN
                    GenJnlLine."Tax Invoice No." := PettyCashLine."Tax Invoice No."
                  ELSE
                    GenJnlLine."Tax Invoice No." := PettyCashLine."External Document No.";
                  GenJnlLine."Tax Invoice Date" := PettyCashLine."Tax Invoice Date";
                  GenJnlLine."Real Customer/Vendor Name" := PettyCashLine."Real Customer/Vendor Name";
                  {
                  IF "Invoice Description" <> '' THEN
                    GenJnlLine.Description := COPYSTR("Invoice Description",1,50);
                  }
                  GenJnlLine.Description := PettyCashLine.Description;  //Burda 12.10.2007

                  RunGenJnlPostLine(GenJnlLine,EntryNo);

                  // Sumtotal
                  TotalPettyCashLine."Amount Incl. VAT" += PettyCashLine."Amount Incl. VAT";
                  TotalPettyCashLine."Amount (LCY) Incl. VAT" += PettyCashLine."Amount (LCY) Incl. VAT";
                  TotalPettyCashLine."VAT Amount" += PettyCashLine."VAT Amount";
                  TotalPettyCashLine."VAT Amount (LCY)" += PettyCashLine."VAT Amount (LCY)";
                  TotalPettyCashLine."VAT Base Amount" += PettyCashLine."VAT Base Amount";
                  TotalPettyCashLine."VAT Base Amount (LCY)" += PettyCashLine."VAT Base Amount (LCY)";
                UNTIL PettyCashLine.NEXT = 0;

              // Post vendor entries
              IF GUIALLOWED THEN
                Window.UPDATE(4,1);
              GenJnlLine.INIT;
              GenJnlLine."Posting Date" := "Posting Date";
              GenJnlLine."Document Date" := "Document Date";
              GenJnlLine.Description := 'Petty Cash ' + "No.";
              GenJnlLine."Shortcut Dimension 1 Code" := "Shortcut Dimension 1 Code";
              GenJnlLine."Shortcut Dimension 2 Code" := "Shortcut Dimension 2 Code";
              //GenJnlLine."Reason Code" := "Reason Code";
              GenJnlLine."Account Type" := GenJnlLine."Account Type"::Vendor;
              GenJnlLine."Account No." := "Petty Cash Vendor No.";
              GenJnlLine."Document Type" := GenJnlLine."Document Type"::Invoice;
              GenJnlLine."Document No." := "No.";
              GenJnlLine."External Document No." := PettyCashLine."External Document No.";
              GenJnlLine."Currency Code" := "Currency Code";
              GenJnlLine.Amount := -TotalPettyCashLine."Amount Incl. VAT";
              GenJnlLine."Amount (LCY)" := -TotalPettyCashLine."Amount (LCY) Incl. VAT";
              //GenJnlLine."Vendor Exchange Rate (ACY)":="Vendor Exchange Rate (ACY)";
              GenJnlLine."Amount Including VAT (ACY)" := -TotalPettyCashLine."Amount (LCY) Incl. VAT";
              GenJnlLine."Source Currency Code" := "Currency Code";
              GenJnlLine."Source Currency Amount" := -TotalPettyCashLine."Amount Incl. VAT";
              IF PettyCashHeader."Currency Code" = '' THEN
                GenJnlLine."Currency Factor" :=  1
              ELSE
                GenJnlLine."Currency Factor" := PettyCashHeader."Currency Factor";
              //GenJnlLine."Sales/Purch. (LCY)" := -TotalPettyCashLine.Amount;
              //GenJnlLine.Correction := Correction;
              //GenJnlLine."Inv. Discount (LCY)" := -TotalPurchLineLCY."Inv. Discount Amount";
              GenJnlLine."Sell-to/Buy-from No." := "Petty Cash Vendor No.";
              GenJnlLine."Bill-to/Pay-to No." := "Petty Cash Vendor No.";
              //GenJnlLine."Salespers./Purch. Code" := "Purchaser Code";
              GenJnlLine."System-Created Entry" := TRUE;
              //GenJnlLine."On Hold" := "On Hold";
              GenJnlLine."Allow Application" := TRUE;
              //GenJnlLine."Due Date" := "Due Date";
              //GenJnlLine."Payment Terms Code" := "Payment Terms Code";
              //GenJnlLine."Pmt. Discount Date" := "Pmt. Discount Date";
              //GenJnlLine."Payment Discount %" := "Payment Discount %";
              GenJnlLine."Source Type" := GenJnlLine."Source Type"::Vendor;
              GenJnlLine."Source No." := "Petty Cash Vendor No.";
              GenJnlLine."Source Code" := SrcCode;
              GenJnlLine."Posting No. Series" := "No. Series";
                {
                GenJnlLine."IC Partner Code" := "Pay-to IC Partner Code";
                GenJnlLine.Adjustment := Adjustment;
                GenJnlLine."BAS Adjustment" := "BAS Adjustment";
                GenJnlLine."Adjustment Applies-to" := "Adjustment Applies-to";
                }
              GenJnlLine."Real Customer/Vendor Name" := "Name (Thai)";
              IF "Invoice Description" <> '' THEN
                GenJnlLine.Description := COPYSTR("Invoice Description",1,50);

              TotalWHTAmount := 0;
              TotalWHTAmountLCY := 0;
              GLSetup.GET;
              IF GLSetup."Enable WHT" THEN BEGIN
                NeedPrint := WHTManagement.InsertVendPayWHTPettyCash(PettyCashHeader,GenJnlLine);
                GenJnlLine2.RESET;
                GenJnlLine2.SETRANGE("Journal Template Name",GenJnlLine."Journal Template Name");
                GenJnlLine2.SETRANGE("Journal Batch Name",GenJnlLine."Journal Batch Name");
                GenJnlLine2.SETRANGE("Is WHT",TRUE);
                IF GenJnlLine2.FIND('-') THEN
                  REPEAT
                    TotalWHTAmount := TotalWHTAmount + GenJnlLine2.Amount;
                    TotalWHTAmountLCY := TotalWHTAmountLCY + GenJnlLine2."Amount (LCY)";
                  UNTIL GenJnlLine2.NEXT=0;
                GenJnlLine.Amount := -TotalPettyCashLine."Amount Incl. VAT" - TotalWHTAmount;
                GenJnlLine."Amount (LCY)" := -TotalPettyCashLine."Amount (LCY) Incl. VAT" - TotalWHTAmountLCY;
                GenJnlLine."Amount Including VAT (ACY)" := -TotalPettyCashLine."Amount (LCY) Incl. VAT" - TotalWHTAmountLCY;
              END;

              TempJnlLineDim.DELETEALL;
              TempDocDim.RESET;
              TempDocDim.SETRANGE("Table ID",DATABASE::"Petty Cash Header");
              DimMgt.CopyDocDimToJnlLineDim(TempDocDim,TempJnlLineDim);
              GenJnlPostLine.RunWithCheck(GenJnlLine,TempJnlLineDim);

              // WHT account
              GLSetup.GET;
              IF GLSetup."Enable WHT" THEN BEGIN
                //NeedPrint := WHTManagement.InsertVendPayWHTPettyCash(PettyCashHeader,GenJnlLine);
                WHTEntry.RESET;
                WHTEntry.SETRANGE("Document Type",WHTEntry."Document Type"::Payment);
                WHTEntry.SETRANGE("Document No.",PettyCashHeader."No.");
                IF WHTEntry.FIND('+') THEN
                  IF GLReg.FIND('+') THEN BEGIN
                    GLReg."To WHT Entry No." := WHTEntry."Entry No.";
                    GLReg.MODIFY;
                  END;
                LineCount := 0;
                GenJnlLine2.RESET;
                GenJnlLine2.SETRANGE("Journal Template Name",GenJnlLine."Journal Template Name");
                GenJnlLine2.SETRANGE("Journal Batch Name",GenJnlLine."Journal Batch Name");
                GenJnlLine2.SETRANGE("Is WHT",TRUE);
                IF GenJnlLine2.FIND('-') THEN BEGIN
                  REPEAT
                    LineCount := LineCount + 1;
                    IF GUIALLOWED THEN
                      Window.UPDATE(5,LineCount);
                    //GenJnlLine2."Bal. Account Type" := GenJnlLine2."Bal. Account Type"::"G/L Account";
                    //GenJnlLine2."Bal. Account No." := VendPostingGroup."Payables Account";
                    GenJnlPostLine.RunWithoutCheck(GenJnlLine2,TempJnlLineDim);
                  UNTIL GenJnlLine2.NEXT=0;
                  GenJnlLine2.DELETEALL;

                  IF PostAndPrint OR NeedPrint THEN
                    IF GLReg.FIND('+') THEN BEGIN
                      GLReg.SETRECFILTER;
                      WHTManagement.PrintWHTSlips(GLReg);
                    END;
                END;
              END;

              //Post and Print - Print Purchase Voucher
              IF PostAndPrint THEN BEGIN
                PettyCashHdr.RESET;
                PettyCashHdr.SETRANGE("No.","No.");
                REPORT.RUN(REPORT::"Petty Cash Test",FALSE,FALSE,PettyCashHdr);
              END;

              {
              GLEntry.SETRANGE(GLEntry."Document No.","No.");
              IF GLEntry.FIND('-') THEN
              REPEAT
                MESSAGE('%1  %2',GLEntry."G/L Account No.",GLEntry.Amount);
              UNTIL GLEntry.NEXT=0;
              } //Check consistency

              // Modify/delete purchase header and purchase lines
              IF NOT RECORDLEVELLOCKING THEN BEGIN
                DocDim.LOCKTABLE(TRUE,TRUE);
                PettyCashLine.LOCKTABLE(TRUE,TRUE);
              END;

              DocDim.RESET;
              DocDim.SETRANGE("Table ID",DATABASE::"Petty Cash Header");
              DocDim.SETRANGE("Document Type",DocDim."Document Type"::Invoice);
              DocDim.SETRANGE("Document No.","No.");
              DocDim.DELETEALL;
              DocDim.SETRANGE("Table ID",DATABASE::"Petty Cash Line");
              DocDim.DELETEALL;

              DELETE;

              PettyCashLine.DELETEALL;

              PettyCashCmtLine.SETRANGE("Document Type",PettyCashCmtLine."Document Type"::Invoice);
              PettyCashCmtLine.SETRANGE("No.","No.");
              PettyCashCmtLine.DELETEALL;

              COMMIT;

              CLEAR(WHTManagement);
              CLEAR(GenJnlPostLine);
              IF GUIALLOWED THEN
                Window.CLOSE;
            END;
          END;

  }
  CODE
  {
    VAR
      GLSetup@1000000032 : Record 98;
      PettyCashHeader@1000000003 : Record 55001;
      PettyCashLine@1000000000 : Record 55002;
      PettyCashInvHeader@1000000016 : Record 55004;
      PettyCashInvLine@1000000011 : Record 55005;
      PettyCashCmtLine@1000000019 : Record 55003;
      Vend@1000000001 : Record 23;
      VendLedgEntry@1000000046 : Record 25;
      DocDim@1000000002 : Record 357;
      TempDocDim@1000000027 : TEMPORARY Record 357;
      GenJnlLine@1000000024 : Record 81;
      GenJnlLine2@1000000047 : Record 81;
      GLEntry@1000000004 : Record 17;
      GLReg@1000000045 : Record 45;
      WHTEntry@1000000044 : Record 28044;
      GenPostingSetup@1000000025 : Record 252;
      VATPostingSetup@1000000029 : Record 325;
      VendPostingGroup@1000000020 : Record 93;
      SourceCodeSetup@1000000005 : Record 242;
      Currency@1000000030 : Record 4;
      CurrExchRate@1000000036 : Record 330;
      UserSetup@1000000026 : Record 91;
      GenJnlCheckLine@1000000033 : Codeunit 11;
      GenJnlPostLine@1000000037 : Codeunit 12;
      NoSeriesMgt@1000000017 : Codeunit 396;
      SalesTaxCalculate@1000000031 : Codeunit 398;
      PostCodeCheck@1000000021 : Codeunit 28000;
      DimMgt@1000000022 : Codeunit 408;
      DimBufMgt@1000000028 : Codeunit 411;
      WHTManagement@1000000043 : Codeunit 28040;
      SrcCode@1000000006 : Code[10];
      Text000@1000000052 : TextConst 'ENU=You do not have permission to post petty cash invoice.;THA=คุณไม่ได้รับอนุญาตให้ผ่านรายการใบแจ้งหนี้เงินสดย่อย';
      Text001@1000000015 : TextConst 'ENU=Do you want to post the petty cash invoice?;THA=คุณต้องการลงรายการบัญชีใบแจ้งหนี้เงินสดย่อยหรือ?';
      Text002@1000000014 : TextConst 'ENU=There is nothing to post.;THA=ไม่มีสิ่งใดที่จะลงรายการบัญชี';
      Text003@1000000013 : TextConst 'ENU=The petty cash invoice was successfully posted.;THA=ลงรายการบัญชีใบแจ้งหนี้เงินสดย่อยเรียบร้อยแล้ว';
      Text004@1000000034 : TextConst 'ENU=is not within your range of allowed posting dates;THA=ไม่อยู่ในช่วงวันที่ลงรายการบัญชีที่ได้รับอนุญาต';
      Text005@1000000010 : TextConst 'ENU=Posting lines              #2######\;THA=กำลังลงรายการบัญชีบรรทัด   #2######\';
      Text006@1000000009 : TextConst 'ENU=Posting purchases and VAT  #3######\;THA=ลงบัญชีซื้อและ VAT         #3######\';
      Text007@1000000008 : TextConst 'ENU=Posting to vendors         #4######\;THA=กำลังลงรายการบัญชีผู้ขาย   #4######\';
      Text008@1000000007 : TextConst 'ENU=Posting to WHT    #5######;THA=ลงบัญชีในบัญชีดุล          #5######';
      Window@1000000012 : Dialog;
      Text009@1000000018 : TextConst 'ENU=%1 -> Invoice %2;THA=%1 -> ใบแจ้งหนี้ %2';
      LineCount@1000000023 : Integer;
      GLSetupRead@1000000035 : Boolean;
      Text032@1000000038 : TextConst 'ENU=The combination of dimensions used in %1 is blocked. %2;THA=กลุ่มของมิติที่ใช้ใน %1 ถูกบล็อค  %2';
      Text033@1000000039 : TextConst 'ENU=The combination of dimensions used in %1 , line no. %2 is blocked. %3;THA=กลุ่มของมิติที่ใช้ใน %1, บรรทัดหมายเลข %2 ถูกบล็อค %3';
      Text034@1000000040 : TextConst 'ENU=The dimensions used in %1 are invalid. %2;THA=มิติที่ใช้ใน %1 ไม่ถูกต้อง %2';
      Text035@1000000041 : TextConst 'ENU=The dimensions used in %1 , line no. %2 are invalid. %3;THA=มิติที่ใช้ใน %1, บรรทัดหมายเลข %2 ไม่ถูกต้อง %3';
      PostAndPrint@1000000048 : Boolean;
      NeedPrint@1000000049 : Boolean;
      TotalAmount@1000000042 : Decimal;
      TotalWHTAmount@1000000050 : Decimal;
      TotalWHTAmountLCY@1000000051 : Decimal;

    LOCAL PROCEDURE GetGLSetup@20();
    BEGIN
      IF NOT GLSetupRead THEN
        GLSetup.GET;
      GLSetupRead := TRUE;
    END;

    LOCAL PROCEDURE CopyCommentLines@6(FromDocumentType@1000 : Integer;ToDocumentType@1001 : Integer;FromNumber@1002 : Code[20];ToNumber@1003 : Code[20]);
    VAR
      PettyCashCmtLine2@1000000000 : Record 55003;
    BEGIN
      PettyCashCmtLine.SETRANGE("Document Type",FromDocumentType);
      PettyCashCmtLine.SETRANGE("No.",FromNumber);
      IF PettyCashCmtLine.FIND('-') THEN
        REPEAT
         PettyCashCmtLine2 := PettyCashCmtLine;
         PettyCashCmtLine2."Document Type" := ToDocumentType;
         PettyCashCmtLine2."No." := ToNumber;
         PettyCashCmtLine2.INSERT;
       UNTIL PettyCashCmtLine.NEXT = 0;
    END;

    LOCAL PROCEDURE RunGenJnlPostLine@52(VAR GenJnlLine@1000 : Record 81;DimEntryNo@1001 : Integer);
    VAR
      TempDimBuf@1002 : TEMPORARY Record 360;
      TempJnlLineDim@1003 : TEMPORARY Record 356;
    BEGIN
      TempDimBuf.DELETEALL;
      TempJnlLineDim.DELETEALL;
      DimBufMgt.GetDimensions(DimEntryNo,TempDimBuf);
      DimMgt.CopyDimBufToJnlLineDim(
        TempDimBuf,TempJnlLineDim,GenJnlLine."Journal Template Name",
        GenJnlLine."Journal Batch Name",GenJnlLine."Line No.");
      GenJnlPostLine.RunWithCheck(GenJnlLine,TempJnlLineDim);
    END;

    LOCAL PROCEDURE CopyAndCheckDocDimToTempDocDim@34();
    VAR
      PettyCashLine2@1000 : Record 55002;
    BEGIN
      TempDocDim.RESET;
      TempDocDim.DELETEALL;
      DocDim.SETFILTER("Table ID",'%1|%2',DATABASE::"Petty Cash Header",DATABASE::"Petty Cash Line");
      DocDim.SETRANGE("Document Type",DocDim."Document Type"::Invoice);
      DocDim.SETRANGE("Document No.",PettyCashHeader."No.");
      IF DocDim.FIND('-') THEN BEGIN
        REPEAT
          TempDocDim.INIT;
          TempDocDim := DocDim;
          TempDocDim.INSERT;
        UNTIL DocDim.NEXT = 0;
        TempDocDim.SETRANGE("Line No.",0);
        CheckDimComb(0);
      END;
      PettyCashLine2."Line No." := 0;
      CheckDimValuePosting(PettyCashLine2);

      PettyCashLine2.SETRANGE("Document No.",PettyCashHeader."No.");
      PettyCashLine2.SETFILTER(Type,'<>%1',PettyCashLine2.Type::" ");
      IF PettyCashLine2.FIND('-') THEN
        REPEAT
          TempDocDim.SETRANGE("Line No.",PettyCashLine2."Line No.");
          CheckDimComb(PettyCashLine2."Line No.");
          CheckDimValuePosting(PettyCashLine2);
        UNTIL PettyCashLine2.NEXT = 0;
      TempDocDim.RESET;
    END;

    PROCEDURE UpdateTempDimBuf@1000000001(VAR EntryNo@1000000001 : Integer);
    VAR
      TempDimBuf@1000000000 : TEMPORARY Record 360;
    BEGIN
      IF TempDocDim.FIND('-') THEN
        REPEAT
          TempDimBuf."Table ID" := TempDocDim."Table ID";
          TempDimBuf."Dimension Code" := TempDocDim."Dimension Code";
          TempDimBuf."Dimension Value Code" := TempDocDim."Dimension Value Code";
          TempDimBuf.INSERT;
        UNTIL TempDocDim.NEXT = 0;
      EntryNo := DimBufMgt.FindDimensions(TempDimBuf);
      IF EntryNo = 0 THEN
      EntryNo := DimBufMgt.InsertDimensions(TempDimBuf);
    END;

    LOCAL PROCEDURE CheckDimComb@30(LineNo@1000 : Integer);
    BEGIN
      IF NOT DimMgt.CheckDocDimComb(TempDocDim) THEN
        IF LineNo = 0 THEN
          ERROR(
            Text032,
            PettyCashHeader."No.",DimMgt.GetDimCombErr)
        ELSE
          ERROR(
            Text033,
            PettyCashHeader."No.",LineNo,DimMgt.GetDimCombErr);
    END;

    LOCAL PROCEDURE CheckDimValuePosting@28(VAR PettyCashLine2@1000 : Record 55002);
    VAR
      ThePettyCashLine@1001 : Record 55002;
      TableIDArr@1002 : ARRAY [10] OF Integer;
      NumberArr@1003 : ARRAY [10] OF Code[20];
    BEGIN
      IF PettyCashLine2."Line No." = 0 THEN BEGIN
        TableIDArr[1] := DATABASE::Vendor;
        NumberArr[1] := PettyCashHeader."Petty Cash Vendor No.";
        IF NOT DimMgt.CheckDocDimValuePosting(TempDocDim,TableIDArr,NumberArr) THEN
          ERROR(
            Text034,
            PettyCashHeader."No.",DimMgt.GetDimValuePostingErr);
      END ELSE BEGIN
        TableIDArr[1] := DimMgt.TypeToTableID3(PettyCashLine2.Type);
        NumberArr[1] := PettyCashLine2."No.";
        IF NOT DimMgt.CheckDocDimValuePosting(TempDocDim,TableIDArr,NumberArr) THEN
          ERROR(
            Text035,
            PettyCashHeader."No.",PettyCashLine2."Line No.",DimMgt.GetDimValuePostingErr);
      END;
    END;

    PROCEDURE CheckPostAndPrint@1000000000(_PostAndPrint@1000000000 : Boolean);
    BEGIN
      PostAndPrint := _PostAndPrint;
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Localization TH
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   17.08.2006   KKE   -Petty Cash
      Burda
      002   14.08.2007   KKE   -Average VAT
    }
    END.
  }
}

OBJECT Codeunit 55001 Settle Petty Cash - Post
{
  OBJECT-PROPERTIES
  {
    Date=10/19/07;
    Time=[ 3:17:32 PM];
    Version List=AVATHA4.40;
  }
  PROPERTIES
  {
    TableNo=55006;
    Permissions=TableData 25=rm;
    OnRun=VAR
            TotalPettyCashLine@1000000002 : Record 55002;
            TempJnlLineDim@1000000003 : TEMPORARY Record 356;
            SettlePettyCashHdr@1000000001 : Record 55006;
            EntryNo@1000000000 : Integer;
          BEGIN
            IF NOT CONFIRM(Text001,FALSE) THEN
              EXIT;

            TESTFIELD(Status,Status::Released);

            IF PostAndPrint THEN BEGIN
              CLEARALL;
              PostAndPrint := TRUE;
            END ELSE
              CLEARALL;

            SettlePettyCashHeader.COPY(Rec);
            WITH SettlePettyCashHeader DO BEGIN
              TESTFIELD("Petty Cash Vendor No.");
              TESTFIELD("Posting Date");
              TESTFIELD("Settle Account No.");
              IF GenJnlCheckLine.DateNotAllowed("Posting Date") THEN
                FIELDERROR("Posting Date",Text004);
              GetGLSetup;

              CALCFIELDS("Balance Settle");
              IF "Balance Settle" = 0 THEN
                ERROR(Text002);

              Vend.GET("Petty Cash Vendor No.");
              Vend.CheckBlockedVendOnDocs(Vend,TRUE);
              VendPostingGroup.GET(Vend."Vendor Posting Group");

              SourceCodeSetup.GET;
              SourceCodeSetup.TESTFIELD("Petty Cash");
              SrcCode := SourceCodeSetup."Petty Cash";

              IF RECORDLEVELLOCKING THEN BEGIN
                SettlePettyCashLine.LOCKTABLE;
                GLEntry.LOCKTABLE;
                IF GLEntry.FIND('+') THEN;
              END;

              IF GUIALLOWED THEN
                Window.OPEN(
                  '#1#################################\\' +
                  Text005 +
                  Text006);

              IF GUIALLOWED THEN
                Window.UPDATE(1,STRSUBSTNO(Text009,"No.",SettlePettyCashHeader."No."));

              //Post apply vendor ledger entries
              VendLedgEntry.RESET;
              VendLedgEntry.SETRANGE("Vendor No.","Petty Cash Vendor No.");
              VendLedgEntry.SETRANGE("Document Type",VendLedgEntry."Document Type"::Payment);
              VendLedgEntry.SETRANGE(Open,TRUE);
              VendLedgEntry.SETFILTER("Posting Date",'..%1',"Posting Date");
              IF VendLedgEntry.FIND('-') THEN BEGIN
                IF NOT PaymentToleranceMgt.PmtTolVend(VendLedgEntry) THEN BEGIN
                  IF GUIALLOWED THEN
                    Window.CLOSE;
                  EXIT;
                END;

                IF GUIALLOWED THEN
                  Window.UPDATE(2,1);

                ApplicationDate := 0D;
                EntriesToApply.SETCURRENTKEY("Vendor No.","Applies-to ID");
                EntriesToApply.SETRANGE("Vendor No.",VendLedgEntry."Vendor No.");
                EntriesToApply.SETRANGE("Applies-to ID",VendLedgEntry."Applies-to ID");
                EntriesToApply.FIND('-');
                REPEAT
                  IF EntriesToApply."Posting Date" > ApplicationDate THEN
                    ApplicationDate := EntriesToApply."Posting Date";
                  CASE EntriesToApply."Document Type" OF
                    EntriesToApply."Document Type"::Invoice:
                      InvoiceNo := EntriesToApply."Document No.";
                    EntriesToApply."Document Type"::"Credit Memo":
                      CreditMemoNo := EntriesToApply."Document No.";
                  END;
                UNTIL EntriesToApply.NEXT = 0;

                {--
                PostApplication.SetValues("Document No.",ApplicationDate);
                PostApplication.LOOKUPMODE(TRUE);
                IF ACTION::LookupOK = PostApplication.RUNMODAL THEN BEGIN
                  GenJnlLine.INIT;
                  PostApplication.GetValues(GenJnlLine."Document No.",GenJnlLine."Posting Date");
                  IF GenJnlLine."Posting Date" < ApplicationDate THEN
                    ERROR(
                      Text003,
                      GenJnlLine.FIELDCAPTION("Posting Date"),FIELDCAPTION("Posting Date"),TABLECAPTION);
                END ELSE
                  EXIT;
                ---}

                GenJnlLine.INIT;
                GenJnlLine."Posting Date" := ApplicationDate;
                GenJnlLine."Document No." := VendLedgEntry."Document No.";
                GenJnlLine."Document Date" := ApplicationDate;
                GenJnlLine."Account Type" := GenJnlLine."Account Type"::Vendor;
                GenJnlLine."Account No." := VendLedgEntry."Vendor No.";
                VendLedgEntry.CALCFIELDS("Debit Amount","Credit Amount","Debit Amount (LCY)","Credit Amount (LCY)");
                GenJnlLine.Correction :=
                  (VendLedgEntry."Debit Amount" < 0) OR (VendLedgEntry."Credit Amount" < 0) OR
                  (VendLedgEntry."Debit Amount (LCY)" < 0) OR (VendLedgEntry."Credit Amount (LCY)" < 0);
                GenJnlLine."Document Type" := VendLedgEntry."Document Type";
                GenJnlLine.Description := VendLedgEntry.Description;
                GenJnlLine."Shortcut Dimension 1 Code" := VendLedgEntry."Global Dimension 1 Code";
                GenJnlLine."Shortcut Dimension 2 Code" := VendLedgEntry."Global Dimension 2 Code";
                GenJnlLine."Posting Group" := VendLedgEntry."Vendor Posting Group";
                GenJnlLine."Source Type" := GenJnlLine."Source Type"::Vendor;
                GenJnlLine."Source No." := VendLedgEntry."Vendor No.";
                GenJnlLine."Source Code" := SrcCode;
                GenJnlLine."System-Created Entry" := TRUE;

                GenJnlPostLine.VendPostApplyVendLedgEntry(GenJnlLine,VendLedgEntry);

                EntriesToApply.MODIFYALL("Applies-to ID",'');
              END;

              // Insert archived settle petty cash
              {
              PettyCashInvHeader.INIT;
              PettyCashInvHeader.TRANSFERFIELDS(PettyCashHeader);
              IF GUIALLOWED THEN
                Window.UPDATE(1,STRSUBSTNO(Text009,"No.",PettyCashInvHeader."No."));
              PettyCashInvHeader."Source Code" := SrcCode;
              PettyCashInvHeader."User ID" := USERID;
              PettyCashInvHeader.INSERT;
              CopyCommentLines(
                PettyCashCmtLine."Document Type"::Invoice,PettyCashCmtLine."Document Type"::"Posted Invoice",
                  "No.",PettyCashInvHeader."No.");
              }

              // Post vendor entries
              IF GUIALLOWED THEN
                Window.UPDATE(3,1);
              GenJnlLine.INIT;
              GenJnlLine."Posting Date" := "Posting Date";
              GenJnlLine."Document Date" := "Document Date";
              GenJnlLine.Description := 'Petty Cash ' + "No.";
            //  GenJnlLine."Shortcut Dimension 1 Code" := "Shortcut Dimension 1 Code";
            //  GenJnlLine."Shortcut Dimension 2 Code" := "Shortcut Dimension 2 Code";
              GenJnlLine."Account Type" := GenJnlLine."Account Type"::Vendor;
              GenJnlLine."Account No." := "Petty Cash Vendor No.";
              GenJnlLine."Document Type" := GenJnlLine."Document Type"::Payment;
              IF "Cheque Printed" AND ("Cheque No." <> '') THEN BEGIN
                GenJnlLine."Document No." := "Cheque No.";
                GenJnlLine."External Document No." := "No.";
                GenJnlLine."Check Printed" := TRUE;
                GenJnlLine."Bank Payment Type" := "Bank Payment Type";
              END ELSE
                GenJnlLine."Document No." := "No.";
              GenJnlLine."Currency Code" := "Currency Code";
              GenJnlLine.Amount := -"Balance Settle";
              GenJnlLine."Amount (LCY)" := -"Balance Settle";
              GenJnlLine."Amount Including VAT (ACY)" := -"Balance Settle";
              GenJnlLine."Source Currency Code" := "Currency Code";
              GenJnlLine."Source Currency Amount" := -"Balance Settle";
              IF SettlePettyCashHeader."Currency Code" = '' THEN
                GenJnlLine."Currency Factor" :=  1
              ELSE
                GenJnlLine."Currency Factor" := SettlePettyCashHeader."Currency Factor";
              GenJnlLine."Sell-to/Buy-from No." := "Petty Cash Vendor No.";
              GenJnlLine."Bill-to/Pay-to No." := "Petty Cash Vendor No.";
              GenJnlLine."System-Created Entry" := TRUE;
              GenJnlLine."Allow Application" := TRUE;
              GenJnlLine."Source Type" := GenJnlLine."Source Type"::Vendor;
              GenJnlLine."Source No." := "Petty Cash Vendor No.";
              GenJnlLine."Source Code" := SrcCode;
              GenJnlLine."Posting No. Series" := "No. Series";
              IF "Payment Invoice Description" <> '' THEN
                GenJnlLine.Description := COPYSTR("Payment Invoice Description",1,50);

              GenJnlLine."Bal. Account Type" := "Settle Account Type";
              GenJnlLine."Bal. Account No." := "Settle Account No.";

              TempJnlLineDim.DELETEALL;
              TempDocDim.RESET;
              TempDocDim.SETRANGE("Table ID",DATABASE::"Settle Petty Cash Header");
              DimMgt.CopyDocDimToJnlLineDim(TempDocDim,TempJnlLineDim);
              GenJnlPostLine.RunWithCheck(GenJnlLine,TempJnlLineDim);

              //Post and Print - Print Purchase Voucher
              IF PostAndPrint THEN BEGIN
                SettlePettyCashHdr.RESET;
                SettlePettyCashHdr.SETRANGE("No.","No.");
                REPORT.RUN(REPORT::"Payment Voucher - Petty Cash",FALSE,FALSE,SettlePettyCashHdr);
              END;

              {
              GLEntry.SETRANGE(GLEntry."Document No.","No.");
              IF GLEntry.FIND('-') THEN
              REPEAT
                MESSAGE('%1  %2',GLEntry."G/L Account No.",GLEntry.Amount);
              UNTIL GLEntry.NEXT=0;
              } //Check consistency

              // Modify/delete purchase header and purchase lines
              IF NOT RECORDLEVELLOCKING THEN BEGIN
                SettlePettyCashLine.LOCKTABLE(TRUE,TRUE);
              END;

              DELETE;

              SettlePettyCashLine.DELETEALL;

              PettyCashCmtLine.SETRANGE("Document Type",PettyCashCmtLine."Document Type"::Invoice);
              PettyCashCmtLine.SETRANGE("No.","No.");
              PettyCashCmtLine.DELETEALL;

              COMMIT;

              CLEAR(GenJnlPostLine);
              IF GUIALLOWED THEN
                Window.CLOSE;
            END;
          END;

  }
  CODE
  {
    VAR
      GLSetup@1000000032 : Record 98;
      SettlePettyCashHeader@1000000003 : Record 55006;
      SettlePettyCashLine@1000000000 : Record 55007;
      PettyCashCmtLine@1000000019 : Record 55003;
      Vend@1000000001 : Record 23;
      VendLedgEntry@1000000046 : Record 25;
      DocDim@1000000002 : Record 357;
      TempDocDim@1000000027 : TEMPORARY Record 357;
      GenJnlLine@1000000024 : Record 81;
      GenJnlLine2@1000000047 : Record 81;
      GLEntry@1000000004 : Record 17;
      GLReg@1000000045 : Record 45;
      WHTEntry@1000000044 : Record 28044;
      GenPostingSetup@1000000025 : Record 252;
      VATPostingSetup@1000000029 : Record 325;
      VendPostingGroup@1000000020 : Record 93;
      SourceCodeSetup@1000000005 : Record 242;
      Currency@1000000030 : Record 4;
      CurrExchRate@1000000036 : Record 330;
      GenJnlCheckLine@1000000033 : Codeunit 11;
      GenJnlPostLine@1000000037 : Codeunit 12;
      PaymentToleranceMgt@1000000011 : Codeunit 426;
      VendEntryApplyPostedEntries@1000000007 : Codeunit 227;
      NoSeriesMgt@1000000017 : Codeunit 396;
      SalesTaxCalculate@1000000031 : Codeunit 398;
      PostCodeCheck@1000000021 : Codeunit 28000;
      DimMgt@1000000022 : Codeunit 408;
      DimBufMgt@1000000028 : Codeunit 411;
      SrcCode@1000000006 : Code[10];
      Text001@1000000015 : TextConst 'ENU=Do you want to post settle petty cash?;THA=คุณต้องการลงรายการบัญชีเบิกชดเชยเงินสดย่อยหรือ?';
      Text002@1000000014 : TextConst 'ENU=There is nothing to post.;THA=ไม่มีสิ่งใดที่จะลงรายการบัญชี';
      Text003@1000000013 : TextConst 'ENU=The settle petty cash was successfully posted.;THA=ลงรายการบัญชีเบิกชดเชยเงินสดย่อยเรียบร้อยแล้ว';
      Text004@1000000034 : TextConst 'ENU=is not within your range of allowed posting dates;THA=ไม่อยู่ในช่วงวันที่ลงรายการบัญชีที่ได้รับอนุญาต';
      Text005@1000000010 : TextConst 'ENU=Posting lines              #2######\;THA=กำลังลงรายการบัญชีบรรทัด   #2######\';
      Window@1000000012 : Dialog;
      LineCount@1000000023 : Integer;
      GLSetupRead@1000000035 : Boolean;
      PostAndPrint@1000000048 : Boolean;
      NeedPrint@1000000049 : Boolean;
      TotalAmount@1000000042 : Decimal;
      TotalWHTAmount@1000000050 : Decimal;
      TotalWHTAmountLCY@1000000051 : Decimal;
      Text006@1000000009 : TextConst 'ENU=Posting to vendors         #3######\;THA=กำลังลงรายการบัญชีผู้ขาย   #3######\';
      Text009@1000000008 : TextConst 'ENU=%1 -> settle petty cash %2;THA=%1 -> เบิกชดเชยเงินสดย่อย %2';
      EntriesToApply@1000000018 : Record 25;
      ApplicationDate@1000000016 : Date;
      InvoiceNo@1000000038 : Code[20];
      CreditMemoNo@1000000026 : Code[20];

    LOCAL PROCEDURE GetGLSetup@20();
    BEGIN
      IF NOT GLSetupRead THEN
        GLSetup.GET;
      GLSetupRead := TRUE;
    END;

    LOCAL PROCEDURE CopyCommentLines@6(FromDocumentType@1000 : Integer;ToDocumentType@1001 : Integer;FromNumber@1002 : Code[20];ToNumber@1003 : Code[20]);
    VAR
      PettyCashCmtLine2@1000000000 : Record 55003;
    BEGIN
      PettyCashCmtLine.SETRANGE("Document Type",FromDocumentType);
      PettyCashCmtLine.SETRANGE("No.",FromNumber);
      IF PettyCashCmtLine.FIND('-') THEN
        REPEAT
         PettyCashCmtLine2 := PettyCashCmtLine;
         PettyCashCmtLine2."Document Type" := ToDocumentType;
         PettyCashCmtLine2."No." := ToNumber;
         PettyCashCmtLine2.INSERT;
       UNTIL PettyCashCmtLine.NEXT = 0;
    END;

    LOCAL PROCEDURE RunGenJnlPostLine@52(VAR GenJnlLine@1000 : Record 81;DimEntryNo@1001 : Integer);
    VAR
      TempDimBuf@1002 : TEMPORARY Record 360;
      TempJnlLineDim@1003 : TEMPORARY Record 356;
    BEGIN
      TempDimBuf.DELETEALL;
      TempJnlLineDim.DELETEALL;
      DimBufMgt.GetDimensions(DimEntryNo,TempDimBuf);
      DimMgt.CopyDimBufToJnlLineDim(
        TempDimBuf,TempJnlLineDim,GenJnlLine."Journal Template Name",
        GenJnlLine."Journal Batch Name",GenJnlLine."Line No.");
      GenJnlPostLine.RunWithCheck(GenJnlLine,TempJnlLineDim);
    END;

    PROCEDURE CheckPostAndPrint@1000000000(_PostAndPrint@1000000000 : Boolean);
    BEGIN
      PostAndPrint := _PostAndPrint;
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Localization TH
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   22.08.2006   KKE   -Petty Cash
    }
    END.
  }
}

OBJECT Codeunit 55050 Cash Advance - Post
{
  OBJECT-PROPERTIES
  {
    Date=10/12/07;
    Time=11:48:44 AM;
    Version List=AVATHA4.40,Burda1.00;
  }
  PROPERTIES
  {
    TableNo=55051;
    Permissions=TableData 45=rm;
    OnRun=VAR
            TotalCashAdvLine@1000000002 : Record 55052;
            TempJnlLineDim@1000000003 : TEMPORARY Record 356;
            CashAdvHdr@1000000001 : Record 55051;
            SettleCashAdvHdr@1000000004 : Record 55056;
            SettleCashAdvLine@1000000005 : Record 55057;
            EntryNo@1000000000 : Integer;
            LineNo@1000000006 : Integer;
          BEGIN
            IF NOT CONFIRM(Text001,FALSE) THEN
              EXIT;

            TESTFIELD(Status,Status::Released);

            IF PostAndPrint THEN BEGIN
              CLEARALL;
              PostAndPrint := TRUE;
            END ELSE
              CLEARALL;

            UserSetup.GET(USERID);
            IF NOT UserSetup."Allow Post Cash Adv. Invoice" THEN
              ERROR(Text000);

            CashAdvanceSetup.GET;
            CashAdvanceSetup.TESTFIELD("Settle Cash Advance Nos.");

            CashAdvHeader.COPY(Rec);
            WITH CashAdvHeader DO BEGIN
              TESTFIELD("Cash Advance Vendor No.");
              TESTFIELD("Posting Date");
              TESTFIELD("Document Date");
              IF GenJnlCheckLine.DateNotAllowed("Posting Date") THEN
                FIELDERROR("Posting Date",Text004);
              GetGLSetup;

              CashAdvLine.RESET;
              CashAdvLine.SETRANGE("Document No.","No.");
              CashAdvLine.CALCSUMS("Amount (LCY) Incl. VAT");
              IF CashAdvLine."Amount (LCY) Incl. VAT" = 0 THEN
                ERROR(Text002);

              CopyAndCheckDocDimToTempDocDim;

              Vend.GET("Cash Advance Vendor No.");
              Vend.CheckBlockedVendOnDocs(Vend,TRUE);

              VendPostingGroup.GET(Vend."Vendor Posting Group");
              Vend.CheckVendorCashAdvance;

              IF RECORDLEVELLOCKING THEN BEGIN
                DocDim.LOCKTABLE;
                CashAdvLine.LOCKTABLE;
                GLEntry.LOCKTABLE;
                IF GLEntry.FIND('+') THEN;
              END;

              SourceCodeSetup.GET;
              SourceCodeSetup.TESTFIELD("Cash Advance");
              SrcCode := SourceCodeSetup."Cash Advance";

              IF GUIALLOWED THEN
                Window.OPEN(
                  '#1#################################\\' +
                  Text005 +
                  Text006 +
                  Text007 +
                  Text008);

              // Insert cash advance invoice header
              CashAdvInvHeader.INIT;
              CashAdvInvHeader.TRANSFERFIELDS(CashAdvHeader);
              IF GUIALLOWED THEN
                Window.UPDATE(1,STRSUBSTNO(Text009,"No.",CashAdvInvHeader."No."));
              CashAdvInvHeader."Source Code" := SrcCode;
              CashAdvInvHeader."User ID" := USERID;
              CashAdvInvHeader.INSERT;
              DimMgt.MoveOneDocDimToPostedDocDim(
                DocDim,DATABASE::"Cash Advance Header",DocDim."Document Type"::Invoice,"No.",0,
                DATABASE::"Cash Advance Invoice Header",CashAdvInvHeader."No.");
              CopyCommentLines(
                CashAdvCmtLine."Document Type"::Invoice,CashAdvCmtLine."Document Type"::"Posted Invoice",
                  "No.",CashAdvInvHeader."No.");
              PostCodeCheck.CopyAllAddressID(
                DATABASE::"Cash Advance Header",GETPOSITION,
                DATABASE::"Cash Advance Invoice Header",CashAdvInvHeader.GETPOSITION);

              // Lines
              TotalCashAdvLine.INIT;

              CashAdvLine.RESET;
              CashAdvLine.SETRANGE("Document No.","No.");
              LineCount := 0;

              IF CashAdvLine.FIND('-') THEN
                REPEAT
                  LineCount := LineCount + 1;
                  IF GUIALLOWED THEN
                    Window.UPDATE(2,LineCount);

                  TempDocDim.SETRANGE("Table ID",DATABASE::"Cash Advance Line");
                  TempDocDim.SETRANGE("Line No.",CashAdvLine."Line No.");
                  UpdateTempDimBuf(EntryNo);

                  IF CashAdvLine."Amount Incl. VAT" <> 0 THEN BEGIN
                    CashAdvLine.TESTFIELD("No.");
                    CashAdvLine.TESTFIELD(Type,CashAdvLine.Type::"G/L Account");
                    CashAdvLine.TESTFIELD("Gen. Bus. Posting Group");
                    CashAdvLine.TESTFIELD("Gen. Prod. Posting Group");
                  END ELSE
                    CashAdvLine.TESTFIELD(Type,0);

                  // Insert invoice line or credit memo line
                  CashAdvInvLine.INIT;
                  CashAdvInvLine.TRANSFERFIELDS(CashAdvLine);
                  CashAdvInvLine.INSERT;
                  DimMgt.MoveOneDocDimToPostedDocDim(
                    DocDim,DATABASE::"Cash Advance Line",DocDim."Document Type"::Invoice,"No.",CashAdvLine."Line No.",
                    DATABASE::"Cash Advance Invoice Line",CashAdvInvHeader."No.");

                  // Post cash advance and VAT to G/L entries from buffer
                  IF GUIALLOWED THEN
                    Window.UPDATE(3,LineCount);
                  GenJnlLine.INIT;
                  GenJnlLine."Posting Date" := "Posting Date";
                  GenJnlLine."Document Date" := "Document Date";
                  GenJnlLine.Description := CashAdvLine.Description;
                  GenJnlLine."Document Type" := GenJnlLine."Document Type"::Invoice;
                  GenJnlLine."Document No." := "No.";
                  GenJnlLine."External Document No." := CashAdvLine."External Document No.";
                  GenJnlLine."Account No." := CashAdvLine."No.";
                  GenJnlLine."System-Created Entry" := TRUE;

                  //KKE : #002 +
                  IF CashAdvLine."VAT Claim %" <> 0 THEN BEGIN
                    GenJnlLine."Use Average VAT" := TRUE;
                    GenJnlLine."Average VAT Year" := CashAdvLine."Average VAT Year";
                    GenJnlLine."VAT Claim %" := CashAdvLine."VAT Claim %";
                    GenJnlLine.Amount := CashAdvLine."Amount Incl. VAT" - CashAdvLine."Avg. VAT Amount";
                    GenJnlLine."VAT Base Amount" := CashAdvLine."Amount Incl. VAT" - CashAdvLine."Avg. VAT Amount";
                    GenJnlLine."VAT Base (ACY)" := CashAdvLine."Amount Incl. VAT" - CashAdvLine."Avg. VAT Amount";
                    GenJnlLine."VAT Amount" := CashAdvLine."Avg. VAT Amount";
                    GenJnlLine."VAT Amount (ACY)" := CashAdvLine."Avg. VAT Amount";
                    GenJnlLine."VAT Difference" := CashAdvLine."VAT Difference";
                    GenJnlLine."VAT Difference (ACY)" := CashAdvLine."VAT Difference";
                    GenJnlLine."Amount Including VAT (ACY)" := CashAdvLine."Amount (LCY) Incl. VAT";
                  END ELSE BEGIN
                  //KKE : #002 -
                    GenJnlLine.Amount := CashAdvLine."VAT Base Amount (LCY)";
                    GenJnlLine."VAT Base Amount" := CashAdvLine."VAT Base Amount (LCY)";
                    GenJnlLine."VAT Base (ACY)" := CashAdvLine."VAT Base Amount (LCY)";
                    GenJnlLine."VAT Amount" := CashAdvLine."VAT Amount (LCY)";
                    GenJnlLine."VAT Amount (ACY)" := CashAdvLine."VAT Amount (LCY)";
                    GenJnlLine."VAT Difference" := CashAdvLine."VAT Difference";
                    GenJnlLine."VAT Difference (ACY)" := CashAdvLine."VAT Difference";
                    GenJnlLine."Amount Including VAT (ACY)" := CashAdvLine."Amount (LCY) Incl. VAT";
                  END;

                  GenJnlLine."Source Currency Code" := "Currency Code";
                  GenJnlLine."Source Currency Amount" := CashAdvLine."Amount Incl. VAT";
                    //GenJnlLine.Correction := Correction;
                  GenJnlLine."Gen. Posting Type" := GenJnlLine."Gen. Posting Type"::Purchase;
                  GenJnlLine."Gen. Bus. Posting Group" := CashAdvLine."Gen. Bus. Posting Group";
                  GenJnlLine."Gen. Prod. Posting Group" := CashAdvLine."Gen. Prod. Posting Group";
                  GenJnlLine."VAT Bus. Posting Group" := CashAdvLine."VAT Bus. Posting Group";
                  GenJnlLine."VAT Prod. Posting Group" := CashAdvLine."VAT Prod. Posting Group";
                  GenJnlLine.VATLineNo := CashAdvLine."Line No.";
                  GenJnlLine."VAT Calculation Type" := CashAdvLine."VAT Calculation Type";
                    //GenJnlLine."VAT Base Discount %" := "VAT Base Discount %";
                  GenJnlLine."Source Curr. VAT Base Amount" := CashAdvLine."VAT Base Amount (LCY)";
                  GenJnlLine."Source Curr. VAT Amount" := CashAdvLine."VAT Amount (LCY)";
                  GenJnlLine."VAT Posting" := GenJnlLine."VAT Posting"::"Manual VAT Entry";
                  GenJnlLine."Shortcut Dimension 1 Code" := CashAdvLine."Shortcut Dimension 1 Code";
                  GenJnlLine."Shortcut Dimension 2 Code" := CashAdvLine."Shortcut Dimension 2 Code";
                  GenJnlLine."Source Code" := SrcCode;
                  GenJnlLine."Sell-to/Buy-from No." := "Cash Advance Vendor No.";
                  GenJnlLine."Bill-to/Pay-to No." := "Cash Advance Vendor No.";
                  GenJnlLine."Source Type" := GenJnlLine."Source Type"::Vendor;
                  GenJnlLine."Source No." := "Cash Advance Vendor No.";
                  GenJnlLine."Posting No. Series" := "No. Series";
                  IF CashAdvLine."Tax Invoice No." <> '' THEN
                    GenJnlLine."Tax Invoice No." := CashAdvLine."Tax Invoice No."
                  ELSE
                    GenJnlLine."Tax Invoice No." := CashAdvLine."External Document No.";
                  GenJnlLine."Tax Invoice Date" := CashAdvLine."Tax Invoice Date";
                  GenJnlLine."Real Customer/Vendor Name" := CashAdvLine."Real Customer/Vendor Name";
                  {
                  IF "Invoice Description" <> '' THEN
                    GenJnlLine.Description := COPYSTR("Invoice Description",1,50);
                  }
                  GenJnlLine.Description := CashAdvLine.Description;  //Burda 12.10.2007

                  RunGenJnlPostLine(GenJnlLine,EntryNo);

                  // Sumtotal
                  TotalCashAdvLine."Amount Incl. VAT" += CashAdvLine."Amount Incl. VAT";
                  TotalCashAdvLine."Amount (LCY) Incl. VAT" += CashAdvLine."Amount (LCY) Incl. VAT";
                  TotalCashAdvLine."VAT Amount" += CashAdvLine."VAT Amount";
                  TotalCashAdvLine."VAT Amount (LCY)" += CashAdvLine."VAT Amount (LCY)";
                  TotalCashAdvLine."VAT Base Amount" += CashAdvLine."VAT Base Amount";
                  TotalCashAdvLine."VAT Base Amount (LCY)" += CashAdvLine."VAT Base Amount (LCY)";
                UNTIL CashAdvLine.NEXT = 0;

              // Post vendor entries
              IF GUIALLOWED THEN
                Window.UPDATE(4,1);
              GenJnlLine.INIT;
              GenJnlLine."Posting Date" := "Posting Date";
              GenJnlLine."Document Date" := "Document Date";
              GenJnlLine.Description := 'Cash Advance ' + "No.";
              GenJnlLine."Shortcut Dimension 1 Code" := "Shortcut Dimension 1 Code";
              GenJnlLine."Shortcut Dimension 2 Code" := "Shortcut Dimension 2 Code";
              //GenJnlLine."Reason Code" := "Reason Code";
              GenJnlLine."Account Type" := GenJnlLine."Account Type"::Vendor;
              GenJnlLine."Account No." := "Cash Advance Vendor No.";
              GenJnlLine."Document Type" := GenJnlLine."Document Type"::Invoice;
              GenJnlLine."Document No." := "No.";
              GenJnlLine."External Document No." := CashAdvLine."External Document No.";
              GenJnlLine."Currency Code" := "Currency Code";
              GenJnlLine.Amount := -TotalCashAdvLine."Amount Incl. VAT";
              GenJnlLine."Amount (LCY)" := -TotalCashAdvLine."Amount (LCY) Incl. VAT";
              //GenJnlLine."Vendor Exchange Rate (ACY)":="Vendor Exchange Rate (ACY)";
              GenJnlLine."Amount Including VAT (ACY)" := -TotalCashAdvLine."Amount (LCY) Incl. VAT";
              GenJnlLine."Source Currency Code" := "Currency Code";
              GenJnlLine."Source Currency Amount" := -TotalCashAdvLine."Amount Incl. VAT";
              IF CashAdvHeader."Currency Code" = '' THEN
                GenJnlLine."Currency Factor" :=  1
              ELSE
                GenJnlLine."Currency Factor" := CashAdvHeader."Currency Factor";
              //GenJnlLine."Sales/Purch. (LCY)" := -TotalCashAdvLine.Amount;
              //GenJnlLine.Correction := Correction;
              //GenJnlLine."Inv. Discount (LCY)" := -TotalPurchLineLCY."Inv. Discount Amount";
              GenJnlLine."Sell-to/Buy-from No." := "Cash Advance Vendor No.";
              GenJnlLine."Bill-to/Pay-to No." := "Cash Advance Vendor No.";
              //GenJnlLine."Salespers./Purch. Code" := "Purchaser Code";
              GenJnlLine."System-Created Entry" := TRUE;
              //GenJnlLine."On Hold" := "On Hold";
              GenJnlLine."Allow Application" := TRUE;
              //GenJnlLine."Due Date" := "Due Date";
              //GenJnlLine."Payment Terms Code" := "Payment Terms Code";
              //GenJnlLine."Pmt. Discount Date" := "Pmt. Discount Date";
              //GenJnlLine."Payment Discount %" := "Payment Discount %";
              GenJnlLine."Source Type" := GenJnlLine."Source Type"::Vendor;
              GenJnlLine."Source No." := "Cash Advance Vendor No.";
              GenJnlLine."Source Code" := SrcCode;
              GenJnlLine."Posting No. Series" := "No. Series";
                {
                GenJnlLine."IC Partner Code" := "Pay-to IC Partner Code";
                GenJnlLine.Adjustment := Adjustment;
                GenJnlLine."BAS Adjustment" := "BAS Adjustment";
                GenJnlLine."Adjustment Applies-to" := "Adjustment Applies-to";
                }
              GenJnlLine."Real Customer/Vendor Name" := "Name (Thai)";
              IF "Invoice Description" <> '' THEN
                GenJnlLine.Description := COPYSTR("Invoice Description",1,50);

              TotalWHTAmount := 0;
              TotalWHTAmountLCY := 0;
              GLSetup.GET;
              IF GLSetup."Enable WHT" THEN BEGIN
                NeedPrint := WHTManagement.InsertVendPayWHTCashAdv(CashAdvHeader,GenJnlLine);
                GenJnlLine2.RESET;
                GenJnlLine2.SETRANGE("Journal Template Name",GenJnlLine."Journal Template Name");
                GenJnlLine2.SETRANGE("Journal Batch Name",GenJnlLine."Journal Batch Name");
                GenJnlLine2.SETRANGE("Is WHT",TRUE);
                IF GenJnlLine2.FIND('-') THEN
                  REPEAT
                    TotalWHTAmount := TotalWHTAmount + GenJnlLine2.Amount;
                    TotalWHTAmountLCY := TotalWHTAmountLCY + GenJnlLine2."Amount (LCY)";
                  UNTIL GenJnlLine2.NEXT=0;
                GenJnlLine.Amount := -TotalCashAdvLine."Amount Incl. VAT" - TotalWHTAmount;
                GenJnlLine."Amount (LCY)" := -TotalCashAdvLine."Amount (LCY) Incl. VAT" - TotalWHTAmountLCY;
                GenJnlLine."Amount Including VAT (ACY)" := -TotalCashAdvLine."Amount (LCY) Incl. VAT" - TotalWHTAmountLCY;
              END;

              {
              //set applied to doc no.
              VendLedgEntry.GET("Cash Advance Payment Entry No.");
              GenJnlLine."Applies-to Doc. Type" := VendLedgEntry."Document Type";
              GenJnlLine."Applies-to Doc. No." := VendLedgEntry."Document No.";
              }
              TempJnlLineDim.DELETEALL;
              TempDocDim.RESET;
              TempDocDim.SETRANGE("Table ID",DATABASE::"Cash Advance Header");
              DimMgt.CopyDocDimToJnlLineDim(TempDocDim,TempJnlLineDim);
              GenJnlPostLine.RunWithCheck(GenJnlLine,TempJnlLineDim);

              // WHT account
              GLSetup.GET;
              IF GLSetup."Enable WHT" THEN BEGIN
                //NeedPrint := WHTManagement.InsertVendPayWHTCashAdv(CashAdvHeader,GenJnlLine);
                WHTEntry.RESET;
                WHTEntry.SETRANGE("Document Type",WHTEntry."Document Type"::Payment);
                WHTEntry.SETRANGE("Document No.",CashAdvHeader."No.");
                IF WHTEntry.FIND('+') THEN
                  IF GLReg.FIND('+') THEN BEGIN
                    GLReg."To WHT Entry No." := WHTEntry."Entry No.";
                    GLReg.MODIFY;
                  END;
                LineCount := 0;
                GenJnlLine2.RESET;
                GenJnlLine2.SETRANGE("Journal Template Name",GenJnlLine."Journal Template Name");
                GenJnlLine2.SETRANGE("Journal Batch Name",GenJnlLine."Journal Batch Name");
                GenJnlLine2.SETRANGE("Is WHT",TRUE);
                IF GenJnlLine2.FIND('-') THEN BEGIN
                  REPEAT
                    LineCount := LineCount + 1;
                    IF GUIALLOWED THEN
                      Window.UPDATE(5,LineCount);
                    //GenJnlLine2."Bal. Account Type" := GenJnlLine2."Bal. Account Type"::"G/L Account";
                    //GenJnlLine2."Bal. Account No." := VendPostingGroup."Payables Account";
                    GenJnlPostLine.RunWithoutCheck(GenJnlLine2,TempJnlLineDim);
                  UNTIL GenJnlLine2.NEXT=0;
                  GenJnlLine2.DELETEALL;

                  IF PostAndPrint OR NeedPrint THEN
                    IF GLReg.FIND('+') THEN BEGIN
                      GLReg.SETRECFILTER;
                      WHTManagement.PrintWHTSlips(GLReg);
                    END;
                END;
              END;

              //Post and Print - Print Purchase Voucher
              IF PostAndPrint THEN BEGIN
                CashAdvHdr.RESET;
                CashAdvHdr.SETRANGE("No.","No.");
                REPORT.RUN(REPORT::"Purchase Voucher -Cash Advance",FALSE,FALSE,CashAdvHdr);
              END;

              {
              GLEntry.SETRANGE(GLEntry."Document No.","No.");
              IF GLEntry.FIND('-') THEN
              REPEAT
                MESSAGE('%1  %2',GLEntry."G/L Account No.",GLEntry.Amount);
              UNTIL GLEntry.NEXT=0;
              } //Check consistency

              // Modify/delete purchase header and purchase lines
              IF NOT RECORDLEVELLOCKING THEN BEGIN
                DocDim.LOCKTABLE(TRUE,TRUE);
                CashAdvLine.LOCKTABLE(TRUE,TRUE);
              END;

              //transfer to settlement
              {
              CALCFIELDS("Balance Amount Settle");
              IF "Balance Amount Settle" <> "Cash Advance Amount" THEN BEGIN
                VendLedgEntry.RESET;
                IF "Balance Amount Settle" < "Cash Advance Amount" THEN
                  VendLedgEntry.SETRANGE("Entry No.","Cash Advance Payment Entry No.")
                ELSE BEGIN
                  VendLedgEntry.SETRANGE("Document Type",VendLedgEntry."Document Type"::Invoice);
                  VendLedgEntry.SETRANGE("Document No.","No.");
                  VendLedgEntry.SETRANGE("Posting Date","Posting Date");
                END;

                IF VendLedgEntry.FIND('-') THEN BEGIN
                  SettleCashAdvHdr.INIT;
                  SettleCashAdvHdr."No." := NoSeriesMgt.GetNextNo(CashAdvanceSetup."Settle Cash Advance Nos.",WORKDATE,TRUE);
                  SettleCashAdvHdr.INSERT(TRUE);
                  SettleCashAdvHdr."Cash Advance Vendor No." := "Cash Advance Vendor No.";
                  SettleCashAdvHdr."Cash Advance Name" := Name;
                  SettleCashAdvHdr.MODIFY;

                  LineNo := 0;
                  REPEAT
                    LineNo += 10000;
                    SettleCashAdvLine.INIT;
                    SettleCashAdvLine."Settle Cash Advance No." := SettleCashAdvHdr."No.";
                    SettleCashAdvLine."Line No." := LineNo;
                    SettleCashAdvLine."Cash Advance Vendor No." := "Cash Advance Vendor No.";
                    SettleCashAdvLine.VALIDATE("Entry No.",VendLedgEntry."Entry No.");
                    SettleCashAdvLine.INSERT;
                  UNTIL VendLedgEntry.NEXT=0;

                  CashAdvInvHeader.GET("No.");
                  CashAdvInvHeader.Status := CashAdvInvHeader.Status::Transferred;
                  CashAdvInvHeader.MODIFY;
                END;
              END;
              }
              DocDim.RESET;
              DocDim.SETRANGE("Table ID",DATABASE::"Cash Advance Header");
              DocDim.SETRANGE("Document Type",DocDim."Document Type"::Invoice);
              DocDim.SETRANGE("Document No.","No.");
              DocDim.DELETEALL;
              DocDim.SETRANGE("Table ID",DATABASE::"Cash Advance Line");
              DocDim.DELETEALL;

              DELETE;

              CashAdvLine.DELETEALL;

              CashAdvCmtLine.SETRANGE("Document Type",CashAdvCmtLine."Document Type"::Invoice);
              CashAdvCmtLine.SETRANGE("No.","No.");
              CashAdvCmtLine.DELETEALL;

              COMMIT;

              CLEAR(WHTManagement);
              CLEAR(GenJnlPostLine);
              IF GUIALLOWED THEN
                Window.CLOSE;
            END;
          END;

  }
  CODE
  {
    VAR
      GLSetup@1000000032 : Record 98;
      CashAdvHeader@1000000003 : Record 55051;
      CashAdvLine@1000000000 : Record 55052;
      CashAdvInvHeader@1000000016 : Record 55054;
      CashAdvInvLine@1000000011 : Record 55055;
      CashAdvCmtLine@1000000019 : Record 55053;
      CashAdvanceSetup@1000000046 : Record 55050;
      Vend@1000000001 : Record 23;
      VendLedgEntry@1000000026 : Record 25;
      DocDim@1000000002 : Record 357;
      TempDocDim@1000000027 : TEMPORARY Record 357;
      GenJnlLine@1000000024 : Record 81;
      GenJnlLine2@1000000047 : Record 81;
      GLEntry@1000000004 : Record 17;
      GLReg@1000000045 : Record 45;
      WHTEntry@1000000044 : Record 28044;
      GenPostingSetup@1000000025 : Record 252;
      VATPostingSetup@1000000029 : Record 325;
      VendPostingGroup@1000000020 : Record 93;
      SourceCodeSetup@1000000005 : Record 242;
      Currency@1000000030 : Record 4;
      CurrExchRate@1000000036 : Record 330;
      UserSetup@1000000052 : Record 91;
      GenJnlCheckLine@1000000033 : Codeunit 11;
      GenJnlPostLine@1000000037 : Codeunit 12;
      NoSeriesMgt@1000000017 : Codeunit 396;
      SalesTaxCalculate@1000000031 : Codeunit 398;
      PostCodeCheck@1000000021 : Codeunit 28000;
      DimMgt@1000000022 : Codeunit 408;
      DimBufMgt@1000000028 : Codeunit 411;
      WHTManagement@1000000043 : Codeunit 28040;
      SrcCode@1000000006 : Code[10];
      Text000@1000000053 : TextConst 'ENU=You do not have permission to post cash advance invoice.;THA=คุณไม่ได้รับอนุญาตให้ผ่านรายใบแจ้งหนี้เงินทดรองจ่าย';
      Text001@1000000015 : TextConst 'ENU=Do you want to post the cash advance invoice?;THA=คุณต้องการลงรายการบัญชีใบแจ้งหนี้เงินทดรองจ่ายหรือ?';
      Text002@1000000014 : TextConst 'ENU=There is nothing to post.;THA=ไม่มีสิ่งใดที่จะลงรายการบัญชี';
      Text003@1000000013 : TextConst 'ENU=The cash advance invoice was successfully posted.;THA=ลงรายการบัญชีใบแจ้งหนี้เงินทดรองจ่ายเรียบร้อยแล้ว';
      Text004@1000000034 : TextConst 'ENU=is not within your range of allowed posting dates;THA=ไม่อยู่ในช่วงวันที่ลงรายการบัญชีที่ได้รับอนุญาต';
      Text005@1000000010 : TextConst 'ENU=Posting lines              #2######\;THA=กำลังลงรายการบัญชีบรรทัด   #2######\';
      Text006@1000000009 : TextConst 'ENU=Posting purchases and VAT  #3######\;THA=ลงบัญชีซื้อและ VAT         #3######\';
      Text007@1000000008 : TextConst 'ENU=Posting to vendors         #4######\;THA=กำลังลงรายการบัญชีผู้ขาย   #4######\';
      Text008@1000000007 : TextConst 'ENU=Posting to WHT    #5######;THA=ลงบัญชีในบัญชีดุล          #5######';
      Window@1000000012 : Dialog;
      Text009@1000000018 : TextConst 'ENU=%1 -> Invoice %2;THA=%1 -> ใบแจ้งหนี้ %2';
      LineCount@1000000023 : Integer;
      GLSetupRead@1000000035 : Boolean;
      Text032@1000000038 : TextConst 'ENU=The combination of dimensions used in %1 is blocked. %2;THA=กลุ่มของมิติที่ใช้ใน %1 ถูกบล็อค  %2';
      Text033@1000000039 : TextConst 'ENU=The combination of dimensions used in %1 , line no. %2 is blocked. %3;THA=กลุ่มของมิติที่ใช้ใน %1 , บรรทัดหมายเลข %2 ถูกบล็อค %3';
      Text034@1000000040 : TextConst 'ENU=The dimensions used in %1 are invalid. %2;THA=มิติที่ใช้ใน %1 ไม่ถูกต้อง %2';
      Text035@1000000041 : TextConst 'ENU=The dimensions used in %1 , line no. %2 are invalid. %3;THA=มิติที่ใช้ใน %1 , บรรทัดหมายเลข %2 ไม่ถูกต้อง %3';
      PostAndPrint@1000000048 : Boolean;
      NeedPrint@1000000049 : Boolean;
      TotalAmount@1000000042 : Decimal;
      TotalWHTAmount@1000000050 : Decimal;
      TotalWHTAmountLCY@1000000051 : Decimal;

    LOCAL PROCEDURE GetGLSetup@20();
    BEGIN
      IF NOT GLSetupRead THEN
        GLSetup.GET;
      GLSetupRead := TRUE;
    END;

    LOCAL PROCEDURE CopyCommentLines@6(FromDocumentType@1000 : Integer;ToDocumentType@1001 : Integer;FromNumber@1002 : Code[20];ToNumber@1003 : Code[20]);
    VAR
      CashAdvCmtLine2@1000000000 : Record 55053;
    BEGIN
      CashAdvCmtLine.SETRANGE("Document Type",FromDocumentType);
      CashAdvCmtLine.SETRANGE("No.",FromNumber);
      IF CashAdvCmtLine.FIND('-') THEN
        REPEAT
         CashAdvCmtLine2 := CashAdvCmtLine;
         CashAdvCmtLine2."Document Type" := ToDocumentType;
         CashAdvCmtLine2."No." := ToNumber;
         CashAdvCmtLine2.INSERT;
       UNTIL CashAdvCmtLine.NEXT = 0;
    END;

    LOCAL PROCEDURE RunGenJnlPostLine@52(VAR GenJnlLine@1000 : Record 81;DimEntryNo@1001 : Integer);
    VAR
      TempDimBuf@1002 : TEMPORARY Record 360;
      TempJnlLineDim@1003 : TEMPORARY Record 356;
    BEGIN
      TempDimBuf.DELETEALL;
      TempJnlLineDim.DELETEALL;
      DimBufMgt.GetDimensions(DimEntryNo,TempDimBuf);
      DimMgt.CopyDimBufToJnlLineDim(
        TempDimBuf,TempJnlLineDim,GenJnlLine."Journal Template Name",
        GenJnlLine."Journal Batch Name",GenJnlLine."Line No.");
      GenJnlPostLine.RunWithCheck(GenJnlLine,TempJnlLineDim);
    END;

    LOCAL PROCEDURE CopyAndCheckDocDimToTempDocDim@34();
    VAR
      CashAdvLine2@1000 : Record 55052;
    BEGIN
      TempDocDim.RESET;
      TempDocDim.DELETEALL;
      DocDim.SETFILTER("Table ID",'%1|%2',DATABASE::"Cash Advance Header",DATABASE::"Cash Advance Line");
      DocDim.SETRANGE("Document Type",DocDim."Document Type"::Invoice);
      DocDim.SETRANGE("Document No.",CashAdvHeader."No.");
      IF DocDim.FIND('-') THEN BEGIN
        REPEAT
          TempDocDim.INIT;
          TempDocDim := DocDim;
          TempDocDim.INSERT;
        UNTIL DocDim.NEXT = 0;
        TempDocDim.SETRANGE("Line No.",0);
        CheckDimComb(0);
      END;
      CashAdvLine2."Line No." := 0;
      CheckDimValuePosting(CashAdvLine2);

      CashAdvLine2.SETRANGE("Document No.",CashAdvHeader."No.");
      CashAdvLine2.SETFILTER(Type,'<>%1',CashAdvLine2.Type::" ");
      IF CashAdvLine2.FIND('-') THEN
        REPEAT
          TempDocDim.SETRANGE("Line No.",CashAdvLine2."Line No.");
          CheckDimComb(CashAdvLine2."Line No.");
          CheckDimValuePosting(CashAdvLine2);
        UNTIL CashAdvLine2.NEXT = 0;
      TempDocDim.RESET;
    END;

    PROCEDURE UpdateTempDimBuf@1000000001(VAR EntryNo@1000000001 : Integer);
    VAR
      TempDimBuf@1000000000 : TEMPORARY Record 360;
    BEGIN
      IF TempDocDim.FIND('-') THEN
        REPEAT
          TempDimBuf."Table ID" := TempDocDim."Table ID";
          TempDimBuf."Dimension Code" := TempDocDim."Dimension Code";
          TempDimBuf."Dimension Value Code" := TempDocDim."Dimension Value Code";
          TempDimBuf.INSERT;
        UNTIL TempDocDim.NEXT = 0;
      EntryNo := DimBufMgt.FindDimensions(TempDimBuf);
      IF EntryNo = 0 THEN
      EntryNo := DimBufMgt.InsertDimensions(TempDimBuf);
    END;

    LOCAL PROCEDURE CheckDimComb@30(LineNo@1000 : Integer);
    BEGIN
      IF NOT DimMgt.CheckDocDimComb(TempDocDim) THEN
        IF LineNo = 0 THEN
          ERROR(
            Text032,
            CashAdvHeader."No.",DimMgt.GetDimCombErr)
        ELSE
          ERROR(
            Text033,
            CashAdvHeader."No.",LineNo,DimMgt.GetDimCombErr);
    END;

    LOCAL PROCEDURE CheckDimValuePosting@28(VAR CashAdvLine2@1000 : Record 55052);
    VAR
      TheCashAdvLine@1001 : Record 55052;
      TableIDArr@1002 : ARRAY [10] OF Integer;
      NumberArr@1003 : ARRAY [10] OF Code[20];
    BEGIN
      IF CashAdvLine2."Line No." = 0 THEN BEGIN
        TableIDArr[1] := DATABASE::Vendor;
        NumberArr[1] := CashAdvHeader."Cash Advance Vendor No.";
        IF NOT DimMgt.CheckDocDimValuePosting(TempDocDim,TableIDArr,NumberArr) THEN
          ERROR(
            Text034,
            CashAdvHeader."No.",DimMgt.GetDimValuePostingErr);
      END ELSE BEGIN
        TableIDArr[1] := DimMgt.TypeToTableID3(CashAdvLine2.Type);
        NumberArr[1] := CashAdvLine2."No.";
        IF NOT DimMgt.CheckDocDimValuePosting(TempDocDim,TableIDArr,NumberArr) THEN
          ERROR(
            Text035,
            CashAdvHeader."No.",CashAdvLine2."Line No.",DimMgt.GetDimValuePostingErr);
      END;
    END;

    PROCEDURE CheckPostAndPrint@1000000000(_PostAndPrint@1000000000 : Boolean);
    BEGIN
      PostAndPrint := _PostAndPrint;
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Localization TH
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   30.08.2006   KKE   -Cash Advance
      Burda
      002   14.08.2007   KKE   -Average VAT
    }
    END.
  }
}

OBJECT Codeunit 55051 Settle Cash Advance - Post
{
  OBJECT-PROPERTIES
  {
    Date=10/19/07;
    Time=[ 3:18:17 PM];
    Version List=AVATHA4.40;
  }
  PROPERTIES
  {
    TableNo=55056;
    OnRun=VAR
            TotalCashAdvLine@1000000002 : Record 55052;
            TempJnlLineDim@1000000003 : TEMPORARY Record 356;
            SettleCashAdvHdr@1000000001 : Record 55056;
            EntryNo@1000000000 : Integer;
          BEGIN
            IF NOT CONFIRM(Text001,FALSE) THEN
              EXIT;

            TESTFIELD(Status,Status::Released);

            IF PostAndPrint THEN BEGIN
              CLEARALL;
              PostAndPrint := TRUE;
            END ELSE
              CLEARALL;

            SettleCashAdvHeader.COPY(Rec);
            WITH SettleCashAdvHeader DO BEGIN
              TESTFIELD("Cash Advance Vendor No.");
              TESTFIELD("Posting Date");
              TESTFIELD("Settle Account No.");
              IF GenJnlCheckLine.DateNotAllowed("Posting Date") THEN
                FIELDERROR("Posting Date",Text004);
              GetGLSetup;

              CALCFIELDS("Balance Settle");
              IF "Balance Settle" = 0 THEN
                ERROR(Text002);

              Vend.GET("Cash Advance Vendor No.");
              Vend.CheckBlockedVendOnDocs(Vend,TRUE);
              VendPostingGroup.GET(Vend."Vendor Posting Group");

              SourceCodeSetup.GET;
              SourceCodeSetup.TESTFIELD("Cash Advance");
              SrcCode := SourceCodeSetup."Cash Advance";

              IF RECORDLEVELLOCKING THEN BEGIN
                SettleCashAdvLine.LOCKTABLE;
                GLEntry.LOCKTABLE;
                IF GLEntry.FIND('+') THEN;
              END;

              IF GUIALLOWED THEN
                Window.OPEN(
                  '#1#################################\\' +
                  Text005 +
                  Text006);

              IF GUIALLOWED THEN
                Window.UPDATE(1,STRSUBSTNO(Text009,"No.",SettleCashAdvHeader."No."));

              // Post vendor entries
              IF GUIALLOWED THEN
                Window.UPDATE(3,1);
              GenJnlLine.INIT;
              GenJnlLine."Posting Date" := "Posting Date";
              GenJnlLine."Document Date" := "Document Date";
              GenJnlLine.Description := 'Cash Advance ' + "No.";
            //  GenJnlLine."Shortcut Dimension 1 Code" := "Shortcut Dimension 1 Code";
            //  GenJnlLine."Shortcut Dimension 2 Code" := "Shortcut Dimension 2 Code";
              GenJnlLine."Account Type" := GenJnlLine."Account Type"::Vendor;
              GenJnlLine."Account No." := "Cash Advance Vendor No.";
              IF ("Balance Settle" < 0) AND ("Settle Account Type" <> "Settle Account Type"::Vendor) THEN  //KKE : #001
                GenJnlLine."Document Type" := GenJnlLine."Document Type"::Payment;
              IF "Cheque Printed" AND ("Cheque No." <> '') THEN BEGIN
                GenJnlLine."Document No." := "Cheque No.";
                GenJnlLine."External Document No." := "No.";
                GenJnlLine."Check Printed" := TRUE;
                GenJnlLine."Bank Payment Type" := "Bank Payment Type";
              END ELSE
                GenJnlLine."Document No." := "No.";
              GenJnlLine."Currency Code" := "Currency Code";
              GenJnlLine.Amount := -"Balance Settle";
              GenJnlLine."Amount (LCY)" := -"Balance Settle";
              GenJnlLine."Amount Including VAT (ACY)" := -"Balance Settle";
              GenJnlLine."Source Currency Code" := "Currency Code";
              GenJnlLine."Source Currency Amount" := -"Balance Settle";
              IF SettleCashAdvHeader."Currency Code" = '' THEN
                GenJnlLine."Currency Factor" :=  1
              ELSE
                GenJnlLine."Currency Factor" := "Currency Factor";
              GenJnlLine."Sell-to/Buy-from No." := "Cash Advance Vendor No.";
              GenJnlLine."Bill-to/Pay-to No." := "Cash Advance Vendor No.";
              GenJnlLine."System-Created Entry" := TRUE;
              GenJnlLine."Allow Application" := TRUE;
              GenJnlLine."Source Type" := GenJnlLine."Source Type"::Vendor;
              GenJnlLine."Source No." := "Cash Advance Vendor No.";
              GenJnlLine."Source Code" := SrcCode;
              GenJnlLine."Posting No. Series" := "No. Series";
              IF "Payment Invoice Description" <> '' THEN
                GenJnlLine.Description := COPYSTR("Payment Invoice Description",1,50);

              IF "Settle Account Type" <> "Settle Account Type"::Vendor THEN BEGIN
                GenJnlLine."Bal. Account Type" := "Settle Account Type";
                GenJnlLine."Bal. Account No." := "Settle Account No.";
                GenJnlLine."Applies-to ID" := "No.";
              END;

              TempJnlLineDim.DELETEALL;
              TempDocDim.RESET;
              TempDocDim.SETRANGE("Table ID",DATABASE::"Settle Cash Advance Header");
              DimMgt.CopyDocDimToJnlLineDim(TempDocDim,TempJnlLineDim);
              GenJnlPostLine.RunWithCheck(GenJnlLine,TempJnlLineDim);

              IF "Settle Account Type" = "Settle Account Type"::Vendor THEN BEGIN
              GenJnlLine.INIT;
              GenJnlLine."Posting Date" := "Posting Date";
              GenJnlLine."Document Date" := "Document Date";
              GenJnlLine.Description := 'Cash Advance ' + "No.";
            //  GenJnlLine."Shortcut Dimension 1 Code" := "Shortcut Dimension 1 Code";
            //  GenJnlLine."Shortcut Dimension 2 Code" := "Shortcut Dimension 2 Code";
              GenJnlLine."Account Type" := "Settle Account Type";
              GenJnlLine."Account No." := "Settle Account No.";
              IF "Cheque Printed" AND ("Cheque No." <> '') THEN BEGIN
                GenJnlLine."Document No." := "Cheque No.";
                GenJnlLine."External Document No." := "No.";
                GenJnlLine."Check Printed" := TRUE;
                GenJnlLine."Bank Payment Type" := "Bank Payment Type";
              END ELSE
                GenJnlLine."Document No." := "No.";
              GenJnlLine."Currency Code" := "Currency Code";
              GenJnlLine.Amount := "Balance Settle";
              GenJnlLine."Amount (LCY)" := "Balance Settle";
              GenJnlLine."Amount Including VAT (ACY)" := -"Balance Settle";
              GenJnlLine."Source Currency Code" := "Currency Code";
              GenJnlLine."Source Currency Amount" := "Balance Settle";
              IF SettleCashAdvHeader."Currency Code" = '' THEN
                GenJnlLine."Currency Factor" :=  1
              ELSE
                GenJnlLine."Currency Factor" := "Currency Factor";
              GenJnlLine."Sell-to/Buy-from No." := "Cash Advance Vendor No.";
              GenJnlLine."Bill-to/Pay-to No." := "Cash Advance Vendor No.";
              GenJnlLine."System-Created Entry" := TRUE;
              GenJnlLine."Allow Application" := TRUE;
              GenJnlLine."Source Type" := "Settle Account Type";
              GenJnlLine."Source No." := "Settle Account No.";
              GenJnlLine."Source Code" := SrcCode;
              GenJnlLine."Posting No. Series" := "No. Series";
              IF "Payment Invoice Description" <> '' THEN
                GenJnlLine.Description := COPYSTR("Payment Invoice Description",1,50);
              TempJnlLineDim.DELETEALL;
              TempDocDim.RESET;
              TempDocDim.SETRANGE("Table ID",DATABASE::"Settle Cash Advance Header");
              DimMgt.CopyDocDimToJnlLineDim(TempDocDim,TempJnlLineDim);
              GenJnlPostLine.RunWithCheck(GenJnlLine,TempJnlLineDim);

              END;

              //Post and Print - Print Purchase Voucher
              IF PostAndPrint THEN BEGIN
                SettleCashAdvHdr.RESET;
                SettleCashAdvHdr.SETRANGE("No.","No.");
                REPORT.RUN(REPORT::"Payment Voucher - Cash Advance",FALSE,FALSE,SettleCashAdvHdr);
              END;

              {
              GLEntry.SETRANGE(GLEntry."Document No.","No.");
              IF GLEntry.FIND('-') THEN
              REPEAT
                MESSAGE('%1  %2',GLEntry."G/L Account No.",GLEntry.Amount);
              UNTIL GLEntry.NEXT=0;
              } //Check consistency

              // Modify/delete purchase header and purchase lines
              IF NOT RECORDLEVELLOCKING THEN BEGIN
                SettleCashAdvLine.LOCKTABLE(TRUE,TRUE);
              END;

              DELETE;

              SettleCashAdvLine.DELETEALL;

              CashAdvCmtLine.SETRANGE("Document Type",CashAdvCmtLine."Document Type"::Invoice);
              CashAdvCmtLine.SETRANGE("No.","No.");
              CashAdvCmtLine.DELETEALL;

              COMMIT;

              CLEAR(GenJnlPostLine);
              IF GUIALLOWED THEN
                Window.CLOSE;
            END;
          END;

  }
  CODE
  {
    VAR
      GLSetup@1000000032 : Record 98;
      SettleCashAdvHeader@1000000003 : Record 55056;
      SettleCashAdvLine@1000000000 : Record 55057;
      CashAdvCmtLine@1000000019 : Record 55053;
      Vend@1000000001 : Record 23;
      VendLedgEntry@1000000046 : Record 25;
      DocDim@1000000002 : Record 357;
      TempDocDim@1000000027 : TEMPORARY Record 357;
      GenJnlLine@1000000024 : Record 81;
      GenJnlLine2@1000000047 : Record 81;
      GLEntry@1000000004 : Record 17;
      GLReg@1000000045 : Record 45;
      WHTEntry@1000000044 : Record 28044;
      GenPostingSetup@1000000025 : Record 252;
      VATPostingSetup@1000000029 : Record 325;
      VendPostingGroup@1000000020 : Record 93;
      SourceCodeSetup@1000000005 : Record 242;
      Currency@1000000030 : Record 4;
      CurrExchRate@1000000036 : Record 330;
      GenJnlCheckLine@1000000033 : Codeunit 11;
      GenJnlPostLine@1000000037 : Codeunit 12;
      PaymentToleranceMgt@1000000011 : Codeunit 426;
      VendEntryApplyPostedEntries@1000000007 : Codeunit 227;
      NoSeriesMgt@1000000017 : Codeunit 396;
      SalesTaxCalculate@1000000031 : Codeunit 398;
      PostCodeCheck@1000000021 : Codeunit 28000;
      DimMgt@1000000022 : Codeunit 408;
      DimBufMgt@1000000028 : Codeunit 411;
      SrcCode@1000000006 : Code[10];
      Text001@1000000015 : TextConst 'ENU=Do you want to post settle cash advance?;THA=คุณต้องการลงรายการบัญชีเบิกชดเชยเงินทดรองจ่ายหรือ?';
      Text002@1000000014 : TextConst 'ENU=There is nothing to post.;THA=ไม่มีสิ่งใดที่จะลงรายการบัญชี';
      Text003@1000000013 : TextConst 'ENU=The settle cash advance was successfully posted.;THA=ลงรายการบัญชีเบิกชดเชยเงินทดรองจ่ายเรียบร้อยแล้ว';
      Text004@1000000034 : TextConst 'ENU=is not within your range of allowed posting dates;THA=ไม่อยู่ในช่วงวันที่ลงรายการบัญชีที่ได้รับอนุญาต';
      Text005@1000000010 : TextConst 'ENU=Posting lines              #2######\;THA=กำลังลงรายการบัญชีบรรทัด   #2######\';
      Window@1000000012 : Dialog;
      LineCount@1000000023 : Integer;
      GLSetupRead@1000000035 : Boolean;
      PostAndPrint@1000000048 : Boolean;
      NeedPrint@1000000049 : Boolean;
      TotalAmount@1000000042 : Decimal;
      TotalWHTAmount@1000000050 : Decimal;
      TotalWHTAmountLCY@1000000051 : Decimal;
      Text006@1000000009 : TextConst 'ENU=Posting to vendors         #3######\;THA=กำลังลงรายการบัญชีผู้ขาย   #3######\';
      Text009@1000000008 : TextConst 'ENU=%1 -> settle cash advance %2;THA=%1 -> เบิกชดเชยเงินทดรองจ่าย %2';
      EntriesToApply@1000000018 : Record 25;
      ApplicationDate@1000000016 : Date;
      InvoiceNo@1000000038 : Code[20];
      CreditMemoNo@1000000026 : Code[20];

    LOCAL PROCEDURE GetGLSetup@20();
    BEGIN
      IF NOT GLSetupRead THEN
        GLSetup.GET;
      GLSetupRead := TRUE;
    END;

    LOCAL PROCEDURE CopyCommentLines@6(FromDocumentType@1000 : Integer;ToDocumentType@1001 : Integer;FromNumber@1002 : Code[20];ToNumber@1003 : Code[20]);
    VAR
      CashAdvCmtLine2@1000000000 : Record 55053;
    BEGIN
      CashAdvCmtLine.SETRANGE("Document Type",FromDocumentType);
      CashAdvCmtLine.SETRANGE("No.",FromNumber);
      IF CashAdvCmtLine.FIND('-') THEN
        REPEAT
         CashAdvCmtLine2 := CashAdvCmtLine;
         CashAdvCmtLine2."Document Type" := ToDocumentType;
         CashAdvCmtLine2."No." := ToNumber;
         CashAdvCmtLine2.INSERT;
       UNTIL CashAdvCmtLine.NEXT = 0;
    END;

    LOCAL PROCEDURE RunGenJnlPostLine@52(VAR GenJnlLine@1000 : Record 81;DimEntryNo@1001 : Integer);
    VAR
      TempDimBuf@1002 : TEMPORARY Record 360;
      TempJnlLineDim@1003 : TEMPORARY Record 356;
    BEGIN
      TempDimBuf.DELETEALL;
      TempJnlLineDim.DELETEALL;
      DimBufMgt.GetDimensions(DimEntryNo,TempDimBuf);
      DimMgt.CopyDimBufToJnlLineDim(
        TempDimBuf,TempJnlLineDim,GenJnlLine."Journal Template Name",
        GenJnlLine."Journal Batch Name",GenJnlLine."Line No.");
      GenJnlPostLine.RunWithCheck(GenJnlLine,TempJnlLineDim);
    END;

    PROCEDURE CheckPostAndPrint@1000000000(_PostAndPrint@1000000000 : Boolean);
    BEGIN
      PostAndPrint := _PostAndPrint;
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Localization TH
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   30.08.2006   KKE   -Cash Advance
      RICHASIA
      002   22.01.2007   KKE   -Allow to post incase "Settle Account Type" = Vendor.
    }
    END.
  }
}

OBJECT Codeunit 55052 Cash Adv. - Get Vend. Ledge
{
  OBJECT-PROPERTIES
  {
    Date=07/10/07;
    Time=[ 6:00:00 PM];
    Version List=AVATHA4.40;
  }
  PROPERTIES
  {
    TableNo=55056;
    OnRun=BEGIN
            SettleCashAdvHdr.GET("No.");
            SettleCashAdvHdr.TESTFIELD(Status,SettleCashAdvHdr.Status::Open);

            VendLedgEntry.SETCURRENTKEY("Vendor No.","Posting Date","Currency Code");
            VendLedgEntry.SETRANGE("Vendor No.","Cash Advance Vendor No.");
            VendLedgEntry.SETFILTER("Posting Date",'..%1',"Posting Date");
            VendLedgEntry.SETRANGE(Open,TRUE);

            GetVendLedgEntry.SETTABLEVIEW(VendLedgEntry);
            GetVendLedgEntry.SetSettleCashAdvHeader(SettleCashAdvHdr);
            GetVendLedgEntry.RUNMODAL;
          END;

  }
  CODE
  {
    VAR
      SettleCashAdvHdr@1000000000 : Record 55056;
      Text001@1000000003 : TextConst 'ENU=The %1 on the %2 %3 and the %4 %5 must be the same.;THA=%1 บน %2 %3 และ %4 %5 ต้องเหมือนกัน';
      Text002@1000000002 : TextConst 'ENU=Creating Settle Cash Advance Lines\;THA=การสร้างบรรทัดเบิกชดเชยเงินทดรองจ่าย\';
      Text003@1000000001 : TextConst 'ENU=Inserted lines             #1######;THA=บรรทัดที่แทรก             #1######';
      VendLedgEntry@1000000004 : Record 25;
      GetVendLedgEntry@1000000005 : Page 50099;

    PROCEDURE CreateSettleLines@1(VAR VendLedgEntry2@1000 : Record 25);
    VAR
      SettleCashAdvLine@1000000000 : Record 55057;
      SettleCashAdvLine2@1000000002 : Record 55057;
      Window@1006 : Dialog;
      LineCount@1005 : Integer;
      LineNo@1000000001 : Integer;
    BEGIN
      WITH VendLedgEntry2 DO BEGIN
        SETRANGE(Open,TRUE);
        IF FIND('-') THEN BEGIN
          SettleCashAdvLine.LOCKTABLE;
          SettleCashAdvLine.SETRANGE("Settle Cash Advance No.",SettleCashAdvHdr."No.");
          SettleCashAdvLine."Settle Cash Advance No." := SettleCashAdvHdr."No.";
          IF SettleCashAdvLine.FINDFIRST THEN
            LineNo := SettleCashAdvLine."Line No.";
          Window.OPEN(Text002 + Text003);

          REPEAT
            SettleCashAdvLine.RESET;
            SettleCashAdvLine.SETCURRENTKEY("Entry No.");
            SettleCashAdvLine.SETRANGE("Entry No.","Entry No.");  //KKE : 10.07.2007
            IF NOT SettleCashAdvLine.FINDFIRST THEN BEGIN
              CALCFIELDS("Remaining Amt. (LCY)");
              IF "Remaining Amt. (LCY)" <> 0 THEN BEGIN
                LineCount := LineCount + 1;
                Window.UPDATE(1,LineCount);
                LineNo += 10000;
                SettleCashAdvLine2.INIT;
                SettleCashAdvLine2."Settle Cash Advance No." := SettleCashAdvHdr."No.";
                SettleCashAdvLine2."Line No." := LineNo;
                SettleCashAdvLine2."Cash Advance Vendor No." := "Vendor No.";
                SettleCashAdvLine2.VALIDATE("Entry No.","Entry No.");
                SettleCashAdvLine2.INSERT;
              END;
            END;
          UNTIL NEXT = 0;
        END;
      END;
    END;

    PROCEDURE SetSettleHeader@2(VAR SettleCashAdvHeader2@1000 : Record 55056);
    BEGIN
      SettleCashAdvHdr.GET(SettleCashAdvHeader2."No.");
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Localization TH
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   30.08.2006   KKE   -Cash Advance
    }
    END.
  }
}

OBJECT Page 50000 Adjust WHT Amount
{
  OBJECT-PROPERTIES
  {
    Date=10/01/07;
    Time=11:00:40 PM;
    Version List=AVATHA4.01;
  }
  PROPERTIES
  {
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table28044;
    PageType=Card;
    OnInit=BEGIN
             UnrealizedAmountLCYEditable := TRUE;
           END;

    OnOpenPage=BEGIN
                 PurchSetup.GET;
                 UnrealizedAmountLCYEditable := PurchSetup."Allow WHT Difference";
               END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                GroupType=Repeater }

    { 1000000001;2;Field  ;
                SourceExpr="Entry No." }

    { 1000000003;2;Field  ;
                SourceExpr="Document No." }

    { 1000000020;2;Field  ;
                SourceExpr="Bill-to/Pay-to No." }

    { 1000000005;2;Field  ;
                SourceExpr="WHT Bus. Posting Group" }

    { 1000000007;2;Field  ;
                SourceExpr="WHT Prod. Posting Group" }

    { 1000000009;2;Field  ;
                SourceExpr="WHT %" }

    { 1000000013;2;Field  ;
                SourceExpr="Unrealized Base (LCY)" }

    { 1000000011;2;Field  ;
                SourceExpr="Unrealized Amount (LCY)";
                Editable=UnrealizedAmountLCYEditable }

    { 1000000015;2;Field  ;
                SourceExpr="WHT Difference" }

  }
  CODE
  {
    VAR
      PurchSetup@1000000000 : Record 312;
      THA_001@1000000001 : TextConst 'ENU=%1 must not be more than %2.;THA=%1 จะต้องไม่มากกว่า %2';
      UnrealizedAmountLCYEditable@19072204 : Boolean INDATASET;

    PROCEDURE AdjustWHTAmount@1000000000(NewUnrealizeAmount@1000000002 : Decimal);
    VAR
      GenLedgSetup@1000000000 : Record 98;
      WHTDiff@1000000001 : Decimal;
    BEGIN
      PurchSetup.GET;
      PurchSetup.TESTFIELD("Allow WHT Difference",TRUE);
      GenLedgSetup.GET;
      WHTDiff := NewUnrealizeAmount - ROUND(("Unrealized Base (LCY)" * "WHT %")/100);
      IF WHTDiff > GenLedgSetup."Max. WHT Difference Allowed" THEN
        ERROR(STRSUBSTNO(THA_001,FIELDCAPTION("WHT Difference"),
          GenLedgSetup.FIELDCAPTION("Max. WHT Difference Allowed")));
      "WHT Difference" := WHTDiff;
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Localization TH
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   01.02.2006   KKE   localization.
    }
    END.
  }
}

OBJECT Page 50001 Subscriber Card
{
  OBJECT-PROPERTIES
  {
    Date=12/12/11;
    Time=[ 2:22:05 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    SourceTable=Table50001;
    PageType=Card;
    OnAfterGetRecord=BEGIN
                       OnAfterGetCurrRecord;
                     END;

    OnNewRecord=BEGIN
                  OnAfterGetCurrRecord;
                END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1000000084;1 ;ActionGroup;
                      CaptionML=[ENU=&Subscriber;
                                 THA=&สมาชิก] }
      { 1000000093;2 ;Action    ;
                      CaptionML=[ENU=Co&mments;
                                 THA=ข้อ&คิดเห็น];
                      RunObject=Page 124;
                      RunPageLink=Table Name=CONST(Subscriber),
                                  No.=FIELD(No.);
                      Image=ViewComments }
      { 1000000086;2 ;Action    ;
                      CaptionML=ENU=Subscriber &Contract;
                      RunObject=Page 50010;
                      RunPageLink=Subscriber No.=FIELD(No.) }
      { 1000000098;2 ;Action    ;
                      CaptionML=ENU=Con&tact;
                      RunObject=Page 5052;
                      RunPageLink=No.=FIELD(Contact No.) }
      { 1000000099;2 ;Action    ;
                      CaptionML=ENU=C&ustomer;
                      RunObject=Page 22;
                      RunPageLink=No.=FIELD(Customer No.) }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1000000087;1 ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 THA=ฟั&งก์ชัน] }
      { 1000000090;2 ;Action    ;
                      CaptionML=ENU=Create &Customer;
                      OnAction=BEGIN
                                 CreateCustomer(ChooseCustomerTemplate);
                               END;
                                }
      { 1000000091;2 ;Action    ;
                      CaptionML=ENU=Create &Subscriber Contract;
                      OnAction=BEGIN
                                 CreateSubscriberContract;
                               END;
                                }
      { 1000000092;1 ;Action    ;
                      CaptionML=ENU=ChkDupl;
                      Promoted=Yes;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 Subscriber@1000000001 : Record 50001;
                               BEGIN
                                 IF PAGE.RUNMODAL(PAGE::"Subscriber Duplicate Check",Subscriber) = ACTION::LookupOK THEN
                                   Rec := Subscriber;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                CaptionML=ENU=General }

    { 1000000001;2;Field  ;
                SourceExpr="No.";
                OnAssistEdit=BEGIN
                               IF AssistEdit(xRec) THEN
                                 CurrPage.UPDATE;
                             END;
                              }

    { 1000000003;2;Field  ;
                SourceExpr="Salutation Code" }

    { 1000000005;2;Field  ;
                SourceExpr="First Name" }

    { 1000000007;2;Field  ;
                SourceExpr="Middle Name" }

    { 1000000009;2;Field  ;
                SourceExpr="Last Name" }

    { 1000000094;2;Field  ;
                CaptionML=ENU=Date of Birth (พ.ศ.) วัน/เดือน/ปี;
                BlankZero=Yes;
                SourceExpr=DD;
                MinValue=0;
                MaxValue=31;
                OnValidate=BEGIN
                             CalcDateofBirth;
                           END;
                            }

    { 1000000096;2;Field  ;
                CaptionML=ENU=/;
                BlankZero=Yes;
                SourceExpr=MM;
                MinValue=0;
                MaxValue=12;
                OnValidate=BEGIN
                             CalcDateofBirth;
                           END;
                            }

    { 1000000097;2;Field  ;
                CaptionML=ENU=/;
                BlankZero=Yes;
                SourceExpr=YY;
                OnValidate=BEGIN
                             CalcDateofBirth;
                           END;
                            }

    { 1000000015;2;Field  ;
                CaptionML=[ENU=Date of Birth (ค.ศ.);
                           THA=วันเกิด];
                SourceExpr="Date of Birth";
                OnValidate=BEGIN
                             DateofBirthOnAfterValidate;
                           END;
                            }

    { 1000000017;2;Field  ;
                SourceExpr=Age }

    { 1000000019;2;Field  ;
                SourceExpr="Marital Status" }

    { 1000000041;2;Field  ;
                SourceExpr="No. of Children" }

    { 1000000043;2;Field  ;
                SourceExpr="Address 1" }

    { 1000000045;2;Field  ;
                SourceExpr="Address 2" }

    { 1000000047;2;Field  ;
                SourceExpr="Address 3" }

    { 1000000114;2;Field  ;
                SourceExpr="Province/City" }

    { 1000000049;2;Field  ;
                SourceExpr="Phone No." }

    { 1000000051;2;Field  ;
                SourceExpr="Mobile No." }

    { 1000000053;2;Field  ;
                SourceExpr="Fax No." }

    { 1000000110;2;Field  ;
                SourceExpr="Old Subscriber No." }

    { 1000000112;2;Field  ;
                SourceExpr=Sex }

    { 1000000013;2;Field  ;
                SourceExpr="Search Name" }

    { 1000000011;2;Field  ;
                SourceExpr="Application Date" }

    { 1000000029;2;Field  ;
                SourceExpr="Estimate Revenue" }

    { 1000000031;2;Field  ;
                SourceExpr="Estimate Family Revenue" }

    { 1000000021;2;Field  ;
                SourceExpr=Occupation }

    { 1000000023;2;Field  ;
                SourceExpr=Position }

    { 1000000025;2;Field  ;
                SourceExpr="Company Name" }

    { 1000000027;2;Field  ;
                SourceExpr=Education }

    { 1000000039;2;Field  ;
                SourceExpr="E-Mail" }

    { 1000000088;2;Field  ;
                SourceExpr="Zone Area" }

    { 1000000080;2;Field  ;
                SourceExpr="Contact No." }

    { 1000000082;2;Field  ;
                SourceExpr="Customer No." }

    { 1000000035;2;Field  ;
                SourceExpr="Last Date Modified" }

    { 1000000037;2;Field  ;
                SourceExpr="Last Time Modified" }

    { 1000000120;2;Field  ;
                SourceExpr="Comment Text";
                MultiLine=Yes;
                Style=Strong;
                StyleExpr=TRUE }

    { 1907414001;1;Group  ;
                CaptionML=ENU=Bill-to }

    { 1000000103;2;Field  ;
                SourceExpr="Bill-to Name" }

    { 1000000105;2;Field  ;
                SourceExpr="Bill-to Name 2" }

    { 1000000055;2;Field  ;
                SourceExpr="Bill-to Address 1" }

    { 1000000057;2;Field  ;
                SourceExpr="Bill-to Address 2" }

    { 1000000059;2;Field  ;
                SourceExpr="Bill-to Address 3" }

    { 1000000116;2;Field  ;
                SourceExpr="Bill-to Province/City" }

    { 1000000061;2;Field  ;
                SourceExpr="Bill-to Phone No." }

    { 1000000063;2;Field  ;
                SourceExpr="Bill-to Mobile No." }

    { 1000000065;2;Field  ;
                SourceExpr="Bill-to Fax No." }

    { 1000000108;2;Field  ;
                SourceExpr="Name (Thai)" }

    { 1000000109;2;Field  ;
                SourceExpr="Address (Thai)";
                MultiLine=Yes }

    { 1900531001;1;Group  ;
                CaptionML=ENU=Ship-to }

    { 1000000067;2;Field  ;
                SourceExpr="Ship-to Address 1" }

    { 1000000069;2;Field  ;
                SourceExpr="Ship-to Address 2" }

    { 1000000071;2;Field  ;
                SourceExpr="Ship-to Address 3" }

    { 1000000118;2;Field  ;
                SourceExpr="Ship-to Province/City" }

    { 1000000073;2;Field  ;
                SourceExpr="Ship-to Phone No." }

    { 1000000075;2;Field  ;
                SourceExpr="Ship-to Mobile No." }

    { 1000000077;2;Field  ;
                SourceExpr="Ship-to Fax No." }

  }
  CODE
  {
    VAR
      DD@1000000000 : Integer;
      MM@1000000001 : Integer;
      YY@1000000002 : Integer;
      Text001@1000000003 : TextConst 'ENU=Invalid %1.';

    PROCEDURE CalcDMY@1000000008();
    BEGIN
      DD := 0;
      MM := 0;
      YY := 0;
      IF "Date of Birth" <> 0D THEN BEGIN
        DD := DATE2DMY("Date of Birth",1);
        MM := DATE2DMY("Date of Birth",2);
        YY := DATE2DMY("Date of Birth",3) + 543;
      END;
    END;

    PROCEDURE CalcDateofBirth@1000000014();
    BEGIN
      IF (DD = 0) OR (MM = 0) OR (YY = 0) THEN
        EXIT;
      IF DD > 31 THEN
        ERROR(Text001,'Day');
      IF MM > 12 THEN
        ERROR(Text001,'Month');
      IF (YY - 543 < DATE2DMY(TODAY,3) - 200) OR (YY - 543 > DATE2DMY(TODAY,3)) THEN
        ERROR(Text001,'Year');

      VALIDATE("Date of Birth",DMY2DATE(DD,MM,YY-543));
    END;

    LOCAL PROCEDURE DateofBirthOnAfterValidate@19067499();
    BEGIN
      CalcDMY;
    END;

    LOCAL PROCEDURE OnAfterGetCurrRecord@19077479();
    BEGIN
      xRec := Rec;
      CalcDMY;
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   06.03.2007   KKE   New Form for Subscriber Card.
    }
    END.
  }
}

OBJECT Page 50002 Subscriber List
{
  OBJECT-PROPERTIES
  {
    Date=12/12/11;
    Time=[ 2:35:13 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    SourceTable=Table50001;
    PageType=Card;
    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1000000015;1 ;ActionGroup;
                      CaptionML=[ENU=&Subscriber;
                                 THA=&สมาชิก] }
      { 1000000016;2 ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=[ENU=Card;
                                 THA=บัตร];
                      RunObject=Page 50001;
                      RunPageLink=No.=FIELD(No.);
                      Image=EditLines }
      { 1000000028;2 ;Action    ;
                      CaptionML=[ENU=Co&mments;
                                 THA=ข้อ&คิดเห็น];
                      RunObject=Page 124;
                      RunPageLink=Table Name=CONST(Subscriber),
                                  No.=FIELD(No.);
                      Image=ViewComments }
      { 1000000034;2 ;Action    ;
                      CaptionML=[ENU=C&ustomer;
                                 THA=ผู้ติ&ดต่อ];
                      RunObject=Page 22;
                      RunPageLink=No.=FIELD(Customer No.) }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                Editable=FALSE;
                GroupType=Repeater }

    { 1000000001;2;Field  ;
                SourceExpr="No." }

    { 1000000020;2;Field  ;
                SourceExpr="Old Subscriber No." }

    { 1000000005;2;Field  ;
                SourceExpr="First Name" }

    { 1000000007;2;Field  ;
                SourceExpr="Middle Name" }

    { 1000000009;2;Field  ;
                SourceExpr="Last Name" }

    { 1000000013;2;Field  ;
                SourceExpr="Customer No." }

    { 1000000003;2;Field  ;
                SourceExpr="Contact No." }

    { 1000000011;2;Field  ;
                SourceExpr="Date of Birth" }

    { 1000000021;2;Field  ;
                SourceExpr="Phone No." }

    { 1000000023;2;Field  ;
                SourceExpr="Mobile No." }

  }
  CODE
  {
    VAR
      NoFilter@1000000000 : Text[250];
      FirstNameFilter@1000000001 : Text[250];
      MiddleNameFilter@1000000002 : Text[250];
      LastNameFilter@1000000003 : Text[250];
      DateOfBirth@1000000004 : Text[250];
      PhoneNo@1000000005 : Text[250];
      MobileNo@1000000006 : Text[250];

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   06.03.2007   KKE   New Form for Subscriber List.
    }
    END.
  }
}

OBJECT Page 50003 General Master Setup
{
  OBJECT-PROPERTIES
  {
    Date=12/12/11;
    Time=[ 2:17:55 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=General Master Setup;
    SourceTable=Table50002;
    DelayedInsert=Yes;
    DataCaptionFields=Type;
    PageType=Card;
    OnNewRecord=BEGIN
                  IF optType <> optType::" " THEN
                    Type:= optType-1
                  ELSE
                    Type := xRec.Type;
                END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000004;1;Field  ;
                CaptionML=ENU=Type Filter;
                SourceExpr=optType;
                OnValidate=BEGIN
                             optTypeOnAfterValidate;
                           END;
                            }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                SourceExpr=Type }

    { 1000000000;2;Field  ;
                SourceExpr=Code }

    { 1000000002;2;Field  ;
                SourceExpr=Description }

  }
  CODE
  {
    VAR
      optType@1000000000 : ' ,Occupation,Position,Education,Zone Area,Customer Type,Resource Lead,Resource Channel,,Credit Card Bank,Credit Card Type,Call Category,Complaint Topic';

    LOCAL PROCEDURE optTypeOnAfterValidate@19022475();
    BEGIN
      IF optType-1 < 0 THEN
        SETRANGE(Type)
      ELSE
        SETRANGE(Type,optType-1);
      CurrPage.UPDATE(FALSE);
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut
      PTH : Phitsanu Thoranasoonthorn

      No.   Date         Sign  Description
      ----------------------------------------
      001   06.03.2007   KKE   New Form for Occupation Setup.
      002   02.07.2008   PTH   Add New 2 Option for Filed "Type" ...,Credit Card Type,Call Category,Complaint Topic.
    }
    END.
  }
}

OBJECT Page 50004 General Master Setup List
{
  OBJECT-PROPERTIES
  {
    Date=03/07/07;
    Time=[ 6:00:00 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    Editable=No;
    SourceTable=Table50002;
    DataCaptionFields=Type;
    PageType=Card;
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                SourceExpr=Code }

    { 4   ;2   ;Field     ;
                SourceExpr=Description }

  }
  CODE
  {

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   06.03.2007   KKE   New Form for Position Setup.
    }
    END.
  }
}

OBJECT Page 50005 Subscription Setup
{
  OBJECT-PROPERTIES
  {
    Date=07/02/08;
    Time=[ 5:06:03 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table50000;
    PageType=Card;
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                CaptionML=ENU=General }

    { 1000000001;2;Field  ;
                SourceExpr="Subscriber Nos." }

    { 1000000004;2;Field  ;
                SourceExpr="Promotion Nos." }

    { 1000000006;2;Field  ;
                SourceExpr="Subscriber Contract Nos." }

    { 1000000008;2;Field  ;
                SourceExpr="Posted Invoice Nos." }

    { 1000000010;2;Field  ;
                SourceExpr="Posted Credit Memo Nos." }

    { 1000000012;2;Field  ;
                SourceExpr="Customer Nos." }

    { 1000000014;2;Field  ;
                SourceExpr="Delivery Location Code" }

    { 1000000016;2;Field  ;
                SourceExpr="Complaint Nos." }

  }
  CODE
  {

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut
      PTH : Phitsanu Thoranasoonthorn

      No.   Date         Sign  Description
      ----------------------------------------
      001   06.03.2007   KKE   New Form for Subscription, Magazine & Ads. Setup
      002   02.07.2008   PTH   Add Field Complaint Nos.
    }
    END.
  }
}

OBJECT Page 50006 Subscriber Duplicate Check
{
  OBJECT-PROPERTIES
  {
    Date=03/20/07;
    Time=[ 6:00:00 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    SourceTable=Table50001;
    PageType=Card;
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000020;1;Group  ;
                CaptionML=ENU=Filter }

    { 1000000025;2;Field  ;
                CaptionML=[ENU=No.;
                           THA=รหัสสมาชิก];
                SourceExpr=NoFilter;
                TableRelation=Subscriber;
                LookupPageID=Subscriber List;
                OnValidate=BEGIN
                             NoFilterOnAfterValidate;
                           END;
                            }

    { 1000000027;2;Field  ;
                CaptionML=[ENU=First Name;
                           THA=ชื่อแรก];
                SourceExpr=FirstNameFilter;
                OnValidate=BEGIN
                             FirstNameFilterOnAfterValidate;
                           END;
                            }

    { 1000000029;2;Field  ;
                CaptionML=[ENU=Middle Name;
                           THA=ชื่อกลาง];
                SourceExpr=MiddleNameFilter;
                OnValidate=BEGIN
                             MiddleNameFilterOnAfterValidat;
                           END;
                            }

    { 1000000031;2;Field  ;
                CaptionML=[ENU=Last Name;
                           THA=นามสกุล];
                SourceExpr=LastNameFilter;
                OnValidate=BEGIN
                             LastNameFilterOnAfterValidate;
                           END;
                            }

    { 1000000033;2;Field  ;
                CaptionML=ENU=Date of Birth (ค.ศ.) dd/mm/yyyy;
                SourceExpr=DateOfBirth;
                MultiLine=Yes;
                OnValidate=BEGIN
                             SETFILTER("Date of Birth",DateOfBirth);
                               DateOfBirthOnAfterValidate;
                           END;
                            }

    { 1000000035;2;Field  ;
                CaptionML=[ENU=Phone No.;
                           THA=หมายเลขโทรศัพท์ปัจจุบัน];
                SourceExpr=PhoneNo;
                OnValidate=BEGIN
                             PhoneNoOnAfterValidate;
                           END;
                            }

    { 1000000037;2;Field  ;
                CaptionML=[ENU=Mobile No.;
                           THA=หมายเลขมือถือปัจจุบัน];
                SourceExpr=MobileNo;
                OnValidate=BEGIN
                             MobileNoOnAfterValidate;
                           END;
                            }

    { 1000000000;1;Group  ;
                Editable=FALSE;
                GroupType=Repeater }

    { 1000000001;2;Field  ;
                SourceExpr="No." }

    { 1000000005;2;Field  ;
                SourceExpr="First Name" }

    { 1000000007;2;Field  ;
                SourceExpr="Middle Name" }

    { 1000000009;2;Field  ;
                SourceExpr="Last Name" }

    { 1000000011;2;Field  ;
                SourceExpr="Date of Birth" }

    { 1000000021;2;Field  ;
                SourceExpr="Phone No." }

    { 1000000023;2;Field  ;
                SourceExpr="Mobile No." }

  }
  CODE
  {
    VAR
      NoFilter@1000000000 : Text[250];
      FirstNameFilter@1000000001 : Text[250];
      MiddleNameFilter@1000000002 : Text[250];
      LastNameFilter@1000000003 : Text[250];
      DateOfBirth@1000000004 : Text[250];
      PhoneNo@1000000005 : Text[250];
      MobileNo@1000000006 : Text[250];

    LOCAL PROCEDURE NoFilterOnAfterValidate@19020026();
    BEGIN
      SETFILTER("No.",NoFilter);
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE FirstNameFilterOnAfterValidate@19041830();
    BEGIN
      SETFILTER("First Name",FirstNameFilter);
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE MiddleNameFilterOnAfterValidat@19019784();
    BEGIN
      SETFILTER("Middle Name",MiddleNameFilter);
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE LastNameFilterOnAfterValidate@19075321();
    BEGIN
      SETFILTER("Last Name",LastNameFilter);
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE DateOfBirthOnAfterValidate@19055563();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE PhoneNoOnAfterValidate@19036877();
    BEGIN
      SETFILTER("Phone No.",PhoneNo);
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE MobileNoOnAfterValidate@19003051();
    BEGIN
      SETFILTER("Mobile No.",MobileNo);
      CurrPage.UPDATE;
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   06.03.2007   KKE   New Form for Subscriber List.
    }
    END.
  }
}

OBJECT Page 50007 Subscriber Promotion
{
  OBJECT-PROPERTIES
  {
    Date=08/11/11;
    Time=11:52:14 AM;
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    SourceTable=Table50004;
    PageType=Card;
    OnInit=BEGIN
             FreeOtherMagazineQuantityEdita := TRUE;
             FreeOtherMagazineCodeEditable := TRUE;
             "Free Magazine QuantityEditable" := TRUE;
             "Free Magazine CodeEditable" := TRUE;
             "Free Magazine FlagEditable" := TRUE;
             "Premium Quantity 5Editable" := TRUE;
             "Premium Quantity 4Editable" := TRUE;
             "Premium Quantity 3Editable" := TRUE;
             "Premium Quantity 2Editable" := TRUE;
             "Premium Quantity 1Editable" := TRUE;
             "Premium Item 5Editable" := TRUE;
             "Premium Item 4Editable" := TRUE;
             "Premium Item 3Editable" := TRUE;
             "Premium Item 2Editable" := TRUE;
             "Premium Item 1Editable" := TRUE;
             "Premium FlagEditable" := TRUE;
             "Credit Card BankEditable" := TRUE;
             "Discount ValueEditable" := TRUE;
             "Discount TypeEditable" := TRUE;
           END;

    OnAfterGetRecord=BEGIN
                       OnAfterGetCurrRecord;
                     END;

    OnNewRecord=BEGIN
                  OnAfterGetCurrRecord;
                END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1000000070;1 ;ActionGroup;
                      CaptionML=[ENU=&Promotion;
                                 THA=&โปรโมชั่น] }
      { 1000000076;2 ;Action    ;
                      CaptionML=[ENU=Co&mments;
                                 THA=ข้อ&คิดเห็น];
                      RunObject=Page 124;
                      RunPageLink=Table Name=CONST(Promotion),
                                  No.=FIELD(No.);
                      Image=ViewComments }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                CaptionML=ENU=General }

    { 1000000001;2;Field  ;
                SourceExpr="No.";
                OnAssistEdit=BEGIN
                               IF AssistEdit(xRec) THEN
                                 CurrPage.UPDATE;
                             END;
                              }

    { 1000000003;2;Field  ;
                SourceExpr=Description }

    { 1000000005;2;Field  ;
                SourceExpr="Start Date" }

    { 1000000007;2;Field  ;
                SourceExpr="End Date" }

    { 1000000009;2;Field  ;
                SourceExpr="Limitation Quantity" }

    { 1000000011;2;Field  ;
                SourceExpr="Magazine Item Code" }

    { 1000000017;2;Field  ;
                SourceExpr="Magazine Code" }

    { 1000000019;2;Field  ;
                SourceExpr="Volume No." }

    { 1000000021;2;Field  ;
                SourceExpr="Issue No." }

    { 1000000023;2;Field  ;
                SourceExpr="Issue Date" }

    { 1000000015;2;Field  ;
                SourceExpr="Promotion Date" }

    { 1000000062;2;Field  ;
                SourceExpr="Promotion Duration" }

    { 1000000074;2;Field  ;
                SourceExpr="Promotion Price" }

    { 1000000077;2;Field  ;
                SourceExpr="Promotion Quantity" }

    { 1000000079;2;Field  ;
                SourceExpr="Promotion Net Price" }

    { 1000000013;2;Field  ;
                SourceExpr="Promotion Type";
                OnValidate=BEGIN
                             PromotionTypeOnAfterValidate;
                           END;
                            }

    { 1907329001;1;Group  ;
                CaptionML=ENU=Discount }

    { 1000000025;2;Field  ;
                SourceExpr="Discount Type";
                Editable="Discount TypeEditable" }

    { 1000000027;2;Field  ;
                SourceExpr="Discount Value";
                Editable="Discount ValueEditable" }

    { 1000000029;2;Field  ;
                SourceExpr="Credit Card Bank";
                Editable="Credit Card BankEditable" }

    { 1000000031;2;Field  ;
                SourceExpr="Promotion Duration";
                Editable=FALSE }

    { 1000000033;2;Field  ;
                SourceExpr="Promotion Price";
                Editable=FALSE }

    { 1000000035;2;Field  ;
                SourceExpr="Promotion Quantity";
                Editable=FALSE }

    { 1000000037;2;Field  ;
                SourceExpr="Promotion Net Price";
                Editable=FALSE }

    { 1904010901;1;Group  ;
                CaptionML=ENU=Premium }

    { 1000000039;2;Field  ;
                CaptionML=ENU=Premium;
                SourceExpr="Premium Flag";
                Editable="Premium FlagEditable";
                OnValidate=BEGIN
                             PremiumFlagOnAfterValidate;
                           END;
                            }

    { 1000000041;2;Field  ;
                SourceExpr="Premium Item 1";
                Editable="Premium Item 1Editable" }

    { 1000000043;2;Field  ;
                SourceExpr="Premium Item 2";
                Editable="Premium Item 2Editable" }

    { 1000000045;2;Field  ;
                SourceExpr="Premium Item 3";
                Editable="Premium Item 3Editable" }

    { 1000000047;2;Field  ;
                SourceExpr="Premium Item 4";
                Editable="Premium Item 4Editable" }

    { 1000000049;2;Field  ;
                SourceExpr="Premium Item 5";
                Editable="Premium Item 5Editable" }

    { 1000000051;2;Field  ;
                SourceExpr="Premium Quantity 1";
                Editable="Premium Quantity 1Editable" }

    { 1000000053;2;Field  ;
                SourceExpr="Premium Quantity 2";
                Editable="Premium Quantity 2Editable" }

    { 1000000055;2;Field  ;
                SourceExpr="Premium Quantity 3";
                Editable="Premium Quantity 3Editable" }

    { 1000000057;2;Field  ;
                SourceExpr="Premium Quantity 4";
                Editable="Premium Quantity 4Editable" }

    { 1000000059;2;Field  ;
                SourceExpr="Premium Quantity 5";
                Editable="Premium Quantity 5Editable" }

    { 1906098701;1;Group  ;
                CaptionML=ENU=Free Magazine }

    { 1000000061;2;Field  ;
                CaptionML=ENU=Free Magazine;
                SourceExpr="Free Magazine Flag";
                Editable="Free Magazine FlagEditable";
                OnValidate=BEGIN
                             FreeMagazineFlagOnAfterValidat;
                           END;
                            }

    { 1000000063;2;Field  ;
                SourceExpr="Free Magazine Code";
                Editable="Free Magazine CodeEditable" }

    { 1000000065;2;Field  ;
                SourceExpr="Free Magazine Quantity";
                Editable="Free Magazine QuantityEditable" }

    { 1000000085;2;Field  ;
                CaptionClass=Text19026429;
                Style=Strong;
                StyleExpr=TRUE }

    { 1000000081;2;Field  ;
                SourceExpr="Free Other Magazine Code";
                Editable=FreeOtherMagazineCodeEditable }

    { 1000000084;2;Field  ;
                SourceExpr="Free Other Magazine Quantity";
                Editable=FreeOtherMagazineQuantityEdita }

  }
  CODE
  {
    VAR
      "Discount TypeEditable"@19060750 : Boolean INDATASET;
      "Discount ValueEditable"@19035864 : Boolean INDATASET;
      "Credit Card BankEditable"@19006119 : Boolean INDATASET;
      "Premium FlagEditable"@19074340 : Boolean INDATASET;
      "Premium Item 1Editable"@19050848 : Boolean INDATASET;
      "Premium Item 2Editable"@19029899 : Boolean INDATASET;
      "Premium Item 3Editable"@19079078 : Boolean INDATASET;
      "Premium Item 4Editable"@19054457 : Boolean INDATASET;
      "Premium Item 5Editable"@19059548 : Boolean INDATASET;
      "Premium Quantity 1Editable"@19053648 : Boolean INDATASET;
      "Premium Quantity 2Editable"@19075769 : Boolean INDATASET;
      "Premium Quantity 3Editable"@19043530 : Boolean INDATASET;
      "Premium Quantity 4Editable"@19009331 : Boolean INDATASET;
      "Premium Quantity 5Editable"@19044948 : Boolean INDATASET;
      "Free Magazine FlagEditable"@19065107 : Boolean INDATASET;
      "Free Magazine CodeEditable"@19026628 : Boolean INDATASET;
      "Free Magazine QuantityEditable"@19007600 : Boolean INDATASET;
      FreeOtherMagazineCodeEditable@19051580 : Boolean INDATASET;
      FreeOtherMagazineQuantityEdita@19053020 : Boolean INDATASET;
      Text19026429@19007512 : TextConst 'ENU=Free Other Magazine';

    PROCEDURE SetEditable@1000000000();
    VAR
      EditDisc@1000000000 : Boolean;
      EditPremium@1000000001 : Boolean;
    BEGIN
      EditDisc := "Promotion Type" IN ["Promotion Type"::Discount,"Promotion Type"::Both];
      "Discount TypeEditable" := EditDisc;
      "Discount ValueEditable" := EditDisc;
      "Credit Card BankEditable" := EditDisc;
      EditPremium := "Promotion Type" IN ["Promotion Type"::Premium,"Promotion Type"::Both];
      "Premium FlagEditable" := EditPremium;
      "Premium Item 1Editable" := EditPremium AND "Premium Flag";
      "Premium Item 2Editable" := EditPremium AND "Premium Flag";
      "Premium Item 3Editable" := EditPremium AND "Premium Flag";
      "Premium Item 4Editable" := EditPremium AND "Premium Flag";
      "Premium Item 5Editable" := EditPremium AND "Premium Flag";
      "Premium Quantity 1Editable" := EditPremium AND "Premium Flag";
      "Premium Quantity 2Editable" := EditPremium AND "Premium Flag";
      "Premium Quantity 3Editable" := EditPremium AND "Premium Flag";
      "Premium Quantity 4Editable" := EditPremium AND "Premium Flag";
      "Premium Quantity 5Editable" := EditPremium AND "Premium Flag";
      "Free Magazine FlagEditable" := EditPremium;
      "Free Magazine CodeEditable" := EditPremium AND "Free Magazine Flag";
      "Free Magazine QuantityEditable" := EditPremium AND "Free Magazine Flag";
      FreeOtherMagazineCodeEditable := EditPremium AND "Free Magazine Flag";
      FreeOtherMagazineQuantityEdita := EditPremium AND "Free Magazine Flag";
    END;

    LOCAL PROCEDURE PromotionTypeOnAfterValidate@19065348();
    BEGIN
      SetEditable;
    END;

    LOCAL PROCEDURE PremiumFlagOnAfterValidate@19040629();
    BEGIN
      SetEditable;
    END;

    LOCAL PROCEDURE FreeMagazineFlagOnAfterValidat@19009236();
    BEGIN
      SetEditable;
    END;

    LOCAL PROCEDURE OnAfterGetCurrRecord@19077479();
    BEGIN
      xRec := Rec;
      SetEditable;
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   07.03.2007   KKE   New Form for Promotion Card.
    }
    END.
  }
}

OBJECT Page 50008 Subscriber Promotion List
{
  OBJECT-PROPERTIES
  {
    Date=03/14/07;
    Time=[ 6:00:00 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    Editable=No;
    SourceTable=Table50004;
    PageType=Card;
    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1000000034;1 ;ActionGroup;
                      CaptionML=[ENU=&Promotion;
                                 THA=&โปรโมชั่น] }
      { 1000000035;2 ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=[ENU=Card;
                                 THA=รายการ];
                      RunObject=Page 50007;
                      RunPageLink=No.=FIELD(No.);
                      Image=EditLines }
      { 1000000036;2 ;Action    ;
                      CaptionML=[ENU=Co&mments;
                                 THA=ข้อ&คิดเห็น];
                      RunObject=Page 124;
                      RunPageLink=Table Name=CONST(Promotion),
                                  No.=FIELD(No.);
                      Image=ViewComments }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                GroupType=Repeater }

    { 1000000001;2;Field  ;
                SourceExpr="No." }

    { 1000000003;2;Field  ;
                SourceExpr=Description }

    { 1000000005;2;Field  ;
                SourceExpr="Promotion Date" }

    { 1000000007;2;Field  ;
                SourceExpr="Magazine Item Code" }

    { 1000000009;2;Field  ;
                SourceExpr="Magazine Code" }

    { 1000000011;2;Field  ;
                SourceExpr="Volume No." }

    { 1000000013;2;Field  ;
                SourceExpr="Issue No." }

    { 1000000015;2;Field  ;
                SourceExpr="Issue Date" }

    { 1000000017;2;Field  ;
                SourceExpr="Promotion Type" }

    { 1000000019;2;Field  ;
                SourceExpr="Promotion Duration" }

    { 1000000021;2;Field  ;
                SourceExpr="Promotion Price" }

    { 1000000023;2;Field  ;
                SourceExpr="Promotion Quantity" }

    { 1000000025;2;Field  ;
                SourceExpr="Promotion Net Price" }

    { 1000000027;2;Field  ;
                SourceExpr="Discount Type" }

    { 1000000029;2;Field  ;
                SourceExpr="Discount Value" }

  }
  CODE
  {

    BEGIN
    END.
  }
}

OBJECT Page 50009 Subscriber Contracts
{
  OBJECT-PROPERTIES
  {
    Date=05/15/12;
    Time=[ 4:40:14 PM];
    Modified=Yes;
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    SourceTable=Table50005;
    PageType=Card;
    OnInit=BEGIN
             FreeOtherMagazineQuantityEdita := TRUE;
             FreeOtherMagazineCodeEditable := TRUE;
             "Related Contract No.Editable" := TRUE;
             "Free Magazine QuantityEditable" := TRUE;
             "Free Magazine CodeEditable" := TRUE;
             "Premium Quantity 5Editable" := TRUE;
             "Premium Quantity 4Editable" := TRUE;
             "Premium Quantity 3Editable" := TRUE;
             "Premium Quantity 2Editable" := TRUE;
             "Premium Quantity 1Editable" := TRUE;
             "Premium Item 5Editable" := TRUE;
             "Premium Item 4Editable" := TRUE;
             "Premium Item 3Editable" := TRUE;
             "Premium Item 2Editable" := TRUE;
             "Premium Item 1Editable" := TRUE;
             "Subscriber No.Editable" := TRUE;
           END;

    OnAfterGetRecord=BEGIN
                       OnAfterGetCurrRecord;
                     END;

    OnNewRecord=BEGIN
                  OnAfterGetCurrRecord;
                END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1000000160;1 ;ActionGroup;
                      CaptionML=ENU=&Contract }
      { 1000000193;2 ;Action    ;
                      ShortCutKey=Ctrl+F7;
                      CaptionML=ENU=Ledger E&ntries;
                      RunObject=Page 50012;
                      RunPageLink=Subscriber Contract No.=FIELD(No.) }
      { 1000000183;2 ;Action    ;
                      CaptionML=[ENU=Co&mments;
                                 THA=ข้อ&คิดเห็น];
                      RunObject=Page 124;
                      RunPageLink=Table Name=CONST(Subscriber Contract),
                                  No.=FIELD(No.);
                      Image=ViewComments }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1000000072;1 ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 THA=ฟั&งก์ชัน] }
      { 1000000102;2 ;Action    ;
                      CaptionML=ENU=Create Subscriber Contract L/E;
                      OnAction=BEGIN
                                 CreateSubscriberContractLE;
                               END;
                                }
      { 1000000104;2 ;Action    ;
                      CaptionML=ENU=Renew Subscriber Contract;
                      OnAction=BEGIN
                                 RenewSubscriberContract;
                               END;
                                }
      { 1000000106;2 ;Separator  }
      { 1000000108;2 ;Action    ;
                      CaptionML=ENU=Create Subscriber Payment;
                      RunObject=Codeunit 50000 }
      { 1000000110;2 ;Action    ;
                      CaptionML=ENU=Reverse Promotion;
                      RunObject=Codeunit 50001 }
      { 1000000191;2 ;Separator  }
      { 1000000198;2 ;Action    ;
                      CaptionML=ENU=Con&firm;
                      OnAction=BEGIN
                                 ConfirmContract;
                               END;
                                }
      { 1000000192;2 ;Action    ;
                      CaptionML=ENU=Re&lease;
                      Image=ReleaseDoc;
                      OnAction=BEGIN
                                 Release;
                               END;
                                }
      { 1000000194;2 ;Action    ;
                      CaptionML=ENU=Re&open;
                      Image=ReOpen;
                      OnAction=BEGIN
                                 Reopen;
                               END;
                                }
      { 1000000195;2 ;Action    ;
                      CaptionML=ENU=Ca&ncel;
                      OnAction=BEGIN
                                 Cancel;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                CaptionML=ENU=General }

    { 1000000001;2;Field  ;
                SourceExpr="No.";
                OnAssistEdit=BEGIN
                               IF AssistEdit(xRec) THEN
                                 CurrPage.UPDATE;
                             END;
                              }

    { 1000000003;2;Field  ;
                SourceExpr="Subscriber No.";
                Editable="Subscriber No.Editable" }

    { 1000000162;2;Field  ;
                SourceExpr=GetSubscriberName;
                Editable=FALSE }

    { 1000000005;2;Field  ;
                SourceExpr="Contract Type" }

    { 1000000007;2;Field  ;
                SourceExpr="Contract Sub Type" }

    { 1000000009;2;Field  ;
                SourceExpr="VIP Type" }

    { 1000000015;2;Field  ;
                SourceExpr="Contract Category" }

    { 1000000017;2;Field  ;
                SourceExpr="Renew Contract From";
                Style=Attention;
                StyleExpr=TRUE }

    { 1000000019;2;Field  ;
                SourceExpr="Renew Contract To" }

    { 1000000011;2;Field  ;
                SourceExpr="Resource Lead" }

    { 1000000013;2;Field  ;
                SourceExpr="Resource Channel" }

    { 1000000023;2;Field  ;
                SourceExpr="Contract Quantity" }

    { 1000000025;2;Field  ;
                SourceExpr="Contract Net Price" }

    { 1000000053;2;Field  ;
                SourceExpr="Magazine Code" }

    { 1000000163;2;Field  ;
                CaptionClass=Text19030874;
                Style=Strong;
                StyleExpr=TRUE }

    { 1000000164;2;Field  ;
                CaptionClass=Text19032217;
                Style=Strong;
                StyleExpr=TRUE }

    { 1000000027;2;Field  ;
                CaptionML=ENU=Magazine Item No.;
                SourceExpr="Starting Magazine Item No." }

    { 1000000035;2;Field  ;
                SourceExpr="Ending Magazine Item No." }

    { 1000000029;2;Field  ;
                CaptionML=ENU=Volume No.;
                SourceExpr="Starting Volume No." }

    { 1000000037;2;Field  ;
                SourceExpr="Ending Volume No." }

    { 1000000031;2;Field  ;
                CaptionML=ENU=Issue No.;
                SourceExpr="Starting Issue No." }

    { 1000000033;2;Field  ;
                CaptionML=ENU=Issue Date;
                SourceExpr="Starting Issue Date" }

    { 1000000039;2;Field  ;
                SourceExpr="Ending Issue No." }

    { 1000000041;2;Field  ;
                SourceExpr="Ending Issue Date" }

    { 1000000215;2;Field  ;
                SourceExpr="Contract Issue No." }

    { 1000000043;2;Field  ;
                SourceExpr="Contract Status";
                Style=Attention;
                StyleExpr=TRUE }

    { 1000000045;2;Field  ;
                SourceExpr="Payment Status" }

    { 1000000047;2;Field  ;
                SourceExpr="Subscription Date" }

    { 1000000049;2;Field  ;
                SourceExpr="Expired Date" }

    { 1000000051;2;Field  ;
                SourceExpr="Shipping Agent Code" }

    { 1000000055;2;Field  ;
                SourceExpr=Block }

    { 1000000057;2;Field  ;
                SourceExpr="Promotion Code";
                OnValidate=BEGIN
                             PromotionCodeOnAfterValidate;
                           END;
                            }

    { 1000000199;2;Field  ;
                SourceExpr="Promotion Type" }

    { 1000000059;2;Field  ;
                SourceExpr="Promotion Price" }

    { 1000000061;2;Field  ;
                SourceExpr="Discount Type" }

    { 1000000063;2;Field  ;
                SourceExpr="Discount Value" }

    { 1000000065;2;Field  ;
                SourceExpr="Promotion Net Price" }

    { 1000000067;2;Field  ;
                SourceExpr="Promotion Quantity" }

    { 1000000069;2;Field  ;
                SourceExpr="Promotion Duration" }

    { 1904010901;1;Group  ;
                CaptionML=ENU=Premium }

    { 1000000071;2;Field  ;
                SourceExpr="Premium Flag";
                OnValidate=BEGIN
                             PremiumFlagOnAfterValidate;
                           END;
                            }

    { 1000000073;2;Field  ;
                SourceExpr="Premium Item 1";
                Editable="Premium Item 1Editable" }

    { 1000000075;2;Field  ;
                SourceExpr="Premium Item 2";
                Editable="Premium Item 2Editable" }

    { 1000000077;2;Field  ;
                SourceExpr="Premium Item 3";
                Editable="Premium Item 3Editable" }

    { 1000000079;2;Field  ;
                SourceExpr="Premium Item 4";
                Editable="Premium Item 4Editable" }

    { 1000000172;2;Field  ;
                SourceExpr=Item.GetItemName("Premium Item 1");
                Editable=FALSE }

    { 1000000036;2;Field  ;
                SourceExpr=Item.GetItemName("Premium Item 2");
                Editable=FALSE }

    { 1000000038;2;Field  ;
                SourceExpr=Item.GetItemName("Premium Item 3");
                Editable=FALSE }

    { 1000000040;2;Field  ;
                SourceExpr=Item.GetItemName("Premium Item 4");
                Editable=FALSE }

    { 1000000081;2;Field  ;
                SourceExpr="Premium Item 5";
                Editable="Premium Item 5Editable" }

    { 1000000042;2;Field  ;
                SourceExpr=Item.GetItemName("Premium Item 5");
                Editable=FALSE }

    { 1000000083;2;Field  ;
                SourceExpr="Free Magazine Flag";
                OnValidate=BEGIN
                             FreeMagazineFlagOnAfterValidat;
                           END;
                            }

    { 1000000085;2;Field  ;
                SourceExpr="Free Magazine Code";
                Editable="Free Magazine CodeEditable" }

    { 1000000087;2;Field  ;
                SourceExpr="Free Magazine Quantity";
                Editable="Free Magazine QuantityEditable" }

    { 1000000180;2;Field  ;
                SourceExpr="Related Contract No.";
                Editable="Related Contract No.Editable" }

    { 1000000021;2;Field  ;
                SourceExpr="Free Other Magazine Code";
                Editable=FreeOtherMagazineCodeEditable }

    { 1000000196;2;Field  ;
                SourceExpr="Free Other Magazine Quantity";
                Editable=FreeOtherMagazineQuantityEdita }

    { 1000000098;2;Field  ;
                CaptionClass=Text19080001;
                Visible=FALSE;
                Style=Strong;
                StyleExpr=TRUE }

    { 1000000089;2;Field  ;
                CaptionML=ENU=Volume No.;
                SourceExpr="Premium Start Volume No.";
                Visible=FALSE }

    { 1000000091;2;Field  ;
                CaptionML=ENU=Issue No.;
                SourceExpr="Premium Start Issue No.";
                Visible=FALSE }

    { 1000000093;2;Field  ;
                CaptionML=ENU=Issue Date;
                SourceExpr="Premium Start Issue Date";
                Visible=FALSE }

    { 1000000101;2;Field  ;
                SourceExpr="Premium Quantity 1";
                Editable="Premium Quantity 1Editable" }

    { 1000000103;2;Field  ;
                SourceExpr="Premium Quantity 2";
                Editable="Premium Quantity 2Editable" }

    { 1000000105;2;Field  ;
                SourceExpr="Premium Quantity 3";
                Editable="Premium Quantity 3Editable" }

    { 1000000107;2;Field  ;
                SourceExpr="Premium Quantity 4";
                Editable="Premium Quantity 4Editable" }

    { 1000000109;2;Field  ;
                SourceExpr="Premium Quantity 5";
                Editable="Premium Quantity 5Editable" }

    { 1000000096;2;Field  ;
                CaptionClass=Text19080002;
                Visible=FALSE;
                Style=Strong;
                StyleExpr=TRUE }

    { 1000000095;2;Field  ;
                CaptionML=ENU=End Volume No.;
                SourceExpr="Premium End Volume No.";
                Visible=FALSE }

    { 1000000097;2;Field  ;
                CaptionML=ENU=Issue No.;
                SourceExpr="Premium End Issue No.";
                Visible=FALSE }

    { 1000000099;2;Field  ;
                CaptionML=ENU=Issue Date;
                SourceExpr="Premium End Issue Date";
                Visible=FALSE }

    { 1901792801;1;Group  ;
                CaptionML=ENU=Payment }

    { 1000000111;2;Field  ;
                SourceExpr="Payment Method Code" }

    { 1000000113;2;Field  ;
                SourceExpr="Payment Remark" }

    { 1000000206;2;Field  ;
                CaptionML=ENU=เงินสด;
                SourceExpr=PaymentOpt[1];
                OnValidate=BEGIN
                             PaymentOpt1OnAfterValidate;
                           END;
                            }

    { 1000000205;2;Field  ;
                CaptionML=ENU=เงินโอน;
                SourceExpr=PaymentOpt[2];
                OnValidate=BEGIN
                             PaymentOpt2OnAfterValidate;
                           END;
                            }

    { 1000000115;2;Field  ;
                SourceExpr="Receipt No." }

    { 1000000117;2;Field  ;
                SourceExpr="Credit Card Bank" }

    { 1000000119;2;Field  ;
                SourceExpr="Credit Card Type" }

    { 1000000121;2;Field  ;
                SourceExpr="Credit Card No." }

    { 1000000123;2;Field  ;
                SourceExpr="Credit Card 3Last No." }

    { 1000000133;2;Field  ;
                SourceExpr="Credit Card Expire Date" }

    { 1000000174;2;Field  ;
                CaptionClass=Text19042867;
                Style=Strong;
                StyleExpr=TRUE }

    { 1000000125;2;Field  ;
                SourceExpr="Bank Code" }

    { 1000000127;2;Field  ;
                SourceExpr="Bank Branch" }

    { 1000000129;2;Field  ;
                SourceExpr="Check No." }

    { 1000000211;2;Field  ;
                CaptionML=ENU=ธนาณัติ;
                SourceExpr=PaymentOpt[3];
                OnValidate=BEGIN
                             PaymentOpt3OnAfterValidate;
                           END;
                            }

    { 1000000182;2;Field  ;
                SourceExpr="Promotion Net Price";
                Editable=FALSE }

    { 1000000208;2;Field  ;
                SourceExpr="Credit Charge Amount (Cust.)" }

    { 1000000184;2;Field  ;
                SourceExpr="Payment Method (Charge Fee)" }

    { 1000000214;2;Field  ;
                SourceExpr="Postal Order" }

    { 1000000131;2;Field  ;
                SourceExpr="Receipt Amount" }

    { 1000000201;2;Field  ;
                SourceExpr="Credit Card Base Amount" }

    { 1000000203;2;Field  ;
                SourceExpr="Credit Charge Amount (Cust.)" }

    { 1000000135;2;Field  ;
                SourceExpr="Credit Card Bank Amount" }

    { 1000000137;2;Field  ;
                SourceExpr="Credit Card Charge Fee" }

    { 1000000139;2;Field  ;
                SourceExpr="Credit Card Amount" }

    { 1000000141;2;Field  ;
                SourceExpr="Check Date" }

    { 1000000143;2;Field  ;
                SourceExpr="Check Amount" }

    { 1000000186;2;Field  ;
                CaptionML=ENU=Paid Amount;
                SourceExpr="Receipt Amount" + "Credit Card Amount" + "Check Amount";
                Editable=FALSE }

    { 1000000188;2;Field  ;
                CaptionML=ENU=Balance;
                SourceExpr="Promotion Net Price" + "Credit Charge Amount (Cust.)" - ("Receipt Amount" + "Credit Card Amount" + "Check Amount");
                Editable=FALSE }

    { 1903124601;1;Group  ;
                CaptionML=ENU=Delivery }

    { 1000000178;2;Group  ;
                CaptionML=ENU=Last Generate Sale Order }

    { 1000000145;3;Field  ;
                CaptionML=ENU=Magazine Item No.;
                SourceExpr="Last SO Magazine Item No." }

    { 1000000147;3;Field  ;
                CaptionML=ENU=Sales Order Date;
                SourceExpr="Last SO Date" }

    { 1000000149;3;Field  ;
                CaptionML=ENU=Sales Order No.;
                SourceExpr="Last SO Doc. No." }

    { 1000000179;2;Group  ;
                CaptionML=ENU=Last Generate Shipment }

    { 1000000151;3;Field  ;
                CaptionML=ENU=Magazine Item No.;
                SourceExpr="Last Shipment Magazine Item No" }

    { 1000000153;3;Field  ;
                CaptionML=ENU=Shipment Date;
                SourceExpr="Last Shipment Date" }

    { 1000000155;3;Field  ;
                CaptionML=ENU=Shipment Doc. No.;
                SourceExpr="Last Shipment Doc. No." }

  }
  CODE
  {
    VAR
      Item@1000000000 : Record 27;
      PaymentOpt@1000000001 : ARRAY [3] OF Boolean;
      "Subscriber No.Editable"@19042664 : Boolean INDATASET;
      "Premium Item 1Editable"@19050848 : Boolean INDATASET;
      "Premium Item 2Editable"@19029899 : Boolean INDATASET;
      "Premium Item 3Editable"@19079078 : Boolean INDATASET;
      "Premium Item 4Editable"@19054457 : Boolean INDATASET;
      "Premium Item 5Editable"@19059548 : Boolean INDATASET;
      "Premium Quantity 1Editable"@19053648 : Boolean INDATASET;
      "Premium Quantity 2Editable"@19075769 : Boolean INDATASET;
      "Premium Quantity 3Editable"@19043530 : Boolean INDATASET;
      "Premium Quantity 4Editable"@19009331 : Boolean INDATASET;
      "Premium Quantity 5Editable"@19044948 : Boolean INDATASET;
      "Free Magazine CodeEditable"@19026628 : Boolean INDATASET;
      "Free Magazine QuantityEditable"@19007600 : Boolean INDATASET;
      "Related Contract No.Editable"@19007263 : Boolean INDATASET;
      FreeOtherMagazineCodeEditable@19051580 : Boolean INDATASET;
      FreeOtherMagazineQuantityEdita@19053020 : Boolean INDATASET;
      Text19042867@19008432 : TextConst 'ENU=Case: Check Payment';
      Text19030874@19029961 : TextConst 'ENU=Start';
      Text19032217@19040705 : TextConst 'ENU=End';
      Text19080001@19069732 : TextConst 'ENU=Start';
      Text19080002@19034596 : TextConst 'ENU=End';

    PROCEDURE SetEditable@1000000000();
    VAR
      EditDisc@1000000000 : Boolean;
      EditPremium@1000000001 : Boolean;
    BEGIN
      "Premium Item 1Editable" := "Premium Flag";
      "Premium Item 2Editable" := "Premium Flag";
      "Premium Item 3Editable" := "Premium Flag";
      "Premium Item 4Editable" := "Premium Flag";
      "Premium Item 5Editable" := "Premium Flag";
      "Premium Quantity 1Editable" := "Premium Flag";
      "Premium Quantity 2Editable" := "Premium Flag";
      "Premium Quantity 3Editable" := "Premium Flag";
      "Premium Quantity 4Editable" := "Premium Flag";
      "Premium Quantity 5Editable" := "Premium Flag";
      "Free Magazine CodeEditable" := "Free Magazine Flag";
      "Free Magazine QuantityEditable" := "Free Magazine Flag";
      "Related Contract No.Editable" := "Free Magazine Flag";
      FreeOtherMagazineCodeEditable := "Free Magazine Flag";
      FreeOtherMagazineQuantityEdita := "Free Magazine Flag";
    END;

    LOCAL PROCEDURE PromotionCodeOnAfterValidate@19053603();
    BEGIN
      SetEditable;
    END;

    LOCAL PROCEDURE PremiumFlagOnAfterValidate@19040629();
    BEGIN
      SetEditable;
    END;

    LOCAL PROCEDURE FreeMagazineFlagOnAfterValidat@19009236();
    BEGIN
      SetEditable;
    END;

    LOCAL PROCEDURE PaymentOpt1OnAfterValidate@19032747();
    BEGIN
      "Payment Option" := "Payment Option"::" ";
      PaymentOpt[2] := FALSE;
      PaymentOpt[3] := FALSE;
      CASE TRUE OF
        PaymentOpt[1]:
          "Payment Option" := "Payment Option"::Cash;
        PaymentOpt[2]:
          "Payment Option" := "Payment Option"::Transfer;
        PaymentOpt[3]:
          "Payment Option" := "Payment Option"::"Postal Order";
      END;
    END;

    LOCAL PROCEDURE PaymentOpt2OnAfterValidate@19003150();
    BEGIN
      "Payment Option" := "Payment Option"::" ";
      PaymentOpt[1] := FALSE;
      PaymentOpt[3] := FALSE;
      CASE TRUE OF
        PaymentOpt[1]:
          "Payment Option" := "Payment Option"::Cash;
        PaymentOpt[2]:
          "Payment Option" := "Payment Option"::Transfer;
        PaymentOpt[3]:
          "Payment Option" := "Payment Option"::"Postal Order";
      END;
    END;

    LOCAL PROCEDURE PaymentOpt3OnAfterValidate@19007869();
    BEGIN
      "Payment Option" := "Payment Option"::" ";
      PaymentOpt[1] := FALSE;
      PaymentOpt[2] := FALSE;
      CASE TRUE OF
        PaymentOpt[1]:
          "Payment Option" := "Payment Option"::Cash;
        PaymentOpt[2]:
          "Payment Option" := "Payment Option"::Transfer;
        PaymentOpt[3]:
          "Payment Option" := "Payment Option"::"Postal Order";
      END;
    END;

    LOCAL PROCEDURE OnAfterGetCurrRecord@19077479();
    BEGIN
      xRec := Rec;
      "Subscriber No.Editable" := "Contract Category" <> "Contract Category"::Renew;
      SetEditable;
      CLEAR(PaymentOpt);
      IF "Payment Option" <> 0 THEN
        PaymentOpt["Payment Option"] := TRUE;
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut
      GKU : Goragot Kuanmuang

      No.   Date         Sign  Description
      ----------------------------------------
      001   07.03.2007   KKE   New Form for Subscriber Contract Card.
      002   04.10.2007   GKU   Edit tab Payment use Credit Charge Amount(Cust.) instead Credit Card Charge Fee in last line
    }
    END.
  }
}

OBJECT Page 50010 Subscriber Contract List
{
  OBJECT-PROPERTIES
  {
    Date=01/31/08;
    Time=[ 4:14:51 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    Editable=No;
    SourceTable=Table50005;
    PageType=Card;
    OnAfterGetRecord=BEGIN
                       IF NOT Subscriber.GET("Subscriber No.") THEN
                         Subscriber.INIT;
                     END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1000000017;1 ;ActionGroup;
                      CaptionML=ENU=&Contract }
      { 1000000018;2 ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=[ENU=Card;
                                 THA=บัตร];
                      RunObject=Page 50009;
                      RunPageLink=No.=FIELD(No.);
                      Image=EditLines }
      { 1000000019;2 ;Action    ;
                      ShortCutKey=Ctrl+F7;
                      CaptionML=ENU=Ledger E&ntries;
                      RunObject=Page 50012;
                      RunPageLink=Subscriber Contract No.=FIELD(No.) }
      { 1000000020;2 ;Action    ;
                      CaptionML=[ENU=Co&mments;
                                 THA=ข้อ&คิดเห็น];
                      RunObject=Page 124;
                      RunPageLink=Table Name=CONST(Subscriber Contract),
                                  No.=FIELD(No.);
                      Image=ViewComments }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                GroupType=Repeater }

    { 1000000001;2;Field  ;
                SourceExpr="No." }

    { 1000000003;2;Field  ;
                SourceExpr="Subscriber No." }

    { 1000000038;2;Field  ;
                CaptionML=ENU=Subscriber Name;
                SourceExpr="Subscriber Name" }

    { 1000000054;2;Field  ;
                CaptionML=ENU=Address 1;
                SourceExpr=Subscriber."Address 1" }

    { 1000000056;2;Field  ;
                CaptionML=ENU=Address 2;
                SourceExpr=Subscriber."Address 2" }

    { 1000000058;2;Field  ;
                CaptionML=ENU=Address 3;
                SourceExpr=Subscriber."Address 3" }

    { 1000000060;2;Field  ;
                CaptionML=ENU=Phone No.;
                SourceExpr=Subscriber."Phone No." + '  '+ Subscriber."Mobile No." }

    { 1000000005;2;Field  ;
                SourceExpr="Subscription Date" }

    { 1000000028;2;Field  ;
                SourceExpr="Expired Date" }

    { 1000000040;2;Field  ;
                SourceExpr="Contract Issue No." }

    { 1000000062;2;Field  ;
                SourceExpr="Contract Quantity" }

    { 1000000034;2;Field  ;
                SourceExpr="Starting Magazine Item No." }

    { 1000000042;2;Field  ;
                SourceExpr="Starting Volume No." }

    { 1000000044;2;Field  ;
                SourceExpr="Starting Issue No." }

    { 1000000046;2;Field  ;
                SourceExpr="Starting Issue Date" }

    { 1000000036;2;Field  ;
                SourceExpr="Ending Magazine Item No." }

    { 1000000048;2;Field  ;
                SourceExpr="Ending Volume No." }

    { 1000000050;2;Field  ;
                SourceExpr="Ending Issue No." }

    { 1000000052;2;Field  ;
                SourceExpr="Ending Issue Date" }

    { 1000000007;2;Field  ;
                SourceExpr="Contract Type" }

    { 1000000009;2;Field  ;
                SourceExpr="Contract Sub Type" }

    { 1000000032;2;Field  ;
                SourceExpr="Contract Status" }

    { 1000000024;2;Field  ;
                SourceExpr="Magazine Code" }

    { 1000000026;2;Field  ;
                SourceExpr="Contract Category" }

    { 1000000030;2;Field  ;
                SourceExpr="Shipping Agent Code" }

    { 1000000011;2;Field  ;
                SourceExpr="Resource Lead" }

    { 1000000013;2;Field  ;
                SourceExpr="Resource Channel" }

    { 1000000015;2;Field  ;
                SourceExpr="Contract Category" }

  }
  CODE
  {
    VAR
      Subscriber@1000000000 : Record 50001;

    BEGIN
    END.
  }
}

OBJECT Page 50011 Credit Card
{
  OBJECT-PROPERTIES
  {
    Date=10/24/07;
    Time=[ 5:21:08 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    SourceTable=Table50003;
    DelayedInsert=Yes;
    PageType=Card;
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                GroupType=Repeater }

    { 1000000001;2;Field  ;
                SourceExpr=Bank }

    { 1000000003;2;Field  ;
                SourceExpr="Credit Card Type" }

    { 1000000005;2;Field  ;
                SourceExpr="Start Date" }

    { 1000000007;2;Field  ;
                SourceExpr="End Date" }

    { 1000000009;2;Field  ;
                SourceExpr="% Charge Fee (Cust.)" }

    { 1000000014;2;Field  ;
                SourceExpr="VAT % for Charge Fee" }

    { 1000000016;2;Field  ;
                SourceExpr="% Charge Fee (Bank)" }

  }
  CODE
  {

    BEGIN
    END.
  }
}

OBJECT Page 50012 Subscriber Contract L/E
{
  OBJECT-PROPERTIES
  {
    Date=08/16/07;
    Time=[ 6:00:00 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    SourceTable=Table50006;
    DelayedInsert=Yes;
    PageType=Card;
    OnNewRecord=BEGIN
                  SubscriberContract.GET("Subscriber Contract No.");
                  "Subscriber No." := SubscriberContract."Subscriber No.";
                  "Magazine Code" := SubscriberContract."Magazine Code";
                  "Shipping Agent Code" := SubscriberContract."Shipping Agent Code";
                  Quantity := 1;
                END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                GroupType=Repeater }

    { 1000000001;2;Field  ;
                SourceExpr="Subscriber Contract No." }

    { 1000000003;2;Field  ;
                SourceExpr="Subscriber No." }

    { 1000000042;2;Field  ;
                SourceExpr="Magazine Item No." }

    { 1000000005;2;Field  ;
                SourceExpr="Magazine Code" }

    { 1000000007;2;Field  ;
                SourceExpr="Volume No." }

    { 1000000009;2;Field  ;
                SourceExpr="Issue No." }

    { 1000000011;2;Field  ;
                SourceExpr="Issue Date" }

    { 1000000013;2;Field  ;
                SourceExpr=Quantity }

    { 1000000015;2;Field  ;
                SourceExpr="Unit Price" }

    { 1000000017;2;Field  ;
                SourceExpr="Shipping Agent Code" }

    { 1000000019;2;Field  ;
                SourceExpr="Paid Flag" }

    { 1000000038;2;Field  ;
                SourceExpr="Paid Sales Order No." }

    { 1000000021;2;Field  ;
                SourceExpr="Sales Order Flag" }

    { 1000000025;2;Field  ;
                SourceExpr="Sales Order No." }

    { 1000000023;2;Field  ;
                SourceExpr="Sales Order Date" }

    { 1000000027;2;Field  ;
                SourceExpr="Sales Order Line No." }

    { 1000000029;2;Field  ;
                SourceExpr="Delivered Flag" }

    { 1000000033;2;Field  ;
                SourceExpr="Delivered Document No." }

    { 1000000031;2;Field  ;
                SourceExpr="Delivered Date" }

    { 1000000040;2;Field  ;
                SourceExpr="Reversed Flag" }

    { 1000000044;2;Field  ;
                SourceExpr="Reversed Credit Memo No." }

  }
  CODE
  {
    VAR
      MagazineVolumeIssue@1000000000 : Record 50012;
      SubscriberContract@1000000001 : Record 50005;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   07.03.2007   KKE   New Form for Subscriber Contract L/E.
    }
    END.
  }
}

OBJECT Page 50013 Magazine Sales Setup
{
  OBJECT-PROPERTIES
  {
    Date=06/14/07;
    Time=[ 6:00:00 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table50007;
    PageType=Card;
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                CaptionML=ENU=General }

    { 1000000001;2;Field  ;
                SourceExpr="Default Base UOM" }

    { 1000000003;2;Field  ;
                SourceExpr="Default Costing Method" }

    { 1000000007;2;Field  ;
                SourceExpr="Default VAT Prod. Posting Grou" }

    { 1000000009;2;Field  ;
                SourceExpr="Default WHT Prod. Posting Grou" }

    { 1000000011;2;Field  ;
                SourceExpr="Default Inventory Posting Grou" }

    { 1904569201;1;Group  ;
                CaptionML=ENU=Numbering }

    { 1000000013;2;Field  ;
                SourceExpr="Agent Customer Nos." }

    { 1000000005;2;Field  ;
                SourceExpr="Circulation Billing Nos." }

    { 1000000016;2;Field  ;
                SourceExpr="Circulation Receipt Nos." }

    { 1000000018;2;Field  ;
                SourceExpr="Posted Invoice Nos." }

  }
  CODE
  {

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   12.03.2007   KKE   New form for Magazine Sales Setup
    }
    END.
  }
}

OBJECT Page 50014 Volume
{
  OBJECT-PROPERTIES
  {
    Date=03/28/07;
    Time=[ 6:00:00 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    SourceTable=Table50008;
    DelayedInsert=Yes;
    PageType=Card;
    OnOpenPage=BEGIN
                 IF CurrPage.LOOKUPMODE THEN
                   CurrPage.EDITABLE := FALSE;
               END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                GroupType=Repeater }

    { 1000000001;2;Field  ;
                SourceExpr=Code }

    { 1000000003;2;Field  ;
                SourceExpr=Description }

    { 1000000005;2;Field  ;
                SourceExpr="Dimension 3 Code" }

  }
  CODE
  {

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   12.03.2007   KKE   New form for Volume - Magazine Sales Module
    }
    END.
  }
}

OBJECT Page 50015 Issue No.
{
  OBJECT-PROPERTIES
  {
    Date=03/28/07;
    Time=[ 6:00:00 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    SourceTable=Table50009;
    DelayedInsert=Yes;
    PageType=Card;
    OnOpenPage=BEGIN
                 IF CurrPage.LOOKUPMODE THEN
                   CurrPage.EDITABLE := FALSE;
               END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                GroupType=Repeater }

    { 1000000001;2;Field  ;
                SourceExpr=Code }

    { 1000000003;2;Field  ;
                SourceExpr=Description }

    { 1000000005;2;Field  ;
                SourceExpr="Dimension 4 Code" }

  }
  CODE
  {

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   12.03.2007   KKE   New form for Issue No. - Magazine Sales Module
    }
    END.
  }
}

OBJECT Page 50016 Frequency
{
  OBJECT-PROPERTIES
  {
    Date=03/21/07;
    Time=[ 6:00:00 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    SourceTable=Table50010;
    DelayedInsert=Yes;
    PageType=Card;
    OnOpenPage=BEGIN
                 IF CurrPage.LOOKUPMODE THEN
                   CurrPage.EDITABLE := FALSE;
               END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                GroupType=Repeater }

    { 1000000001;2;Field  ;
                SourceExpr=Code }

    { 1000000003;2;Field  ;
                SourceExpr=Description }

    { 1000000005;2;Field  ;
                SourceExpr="Date Formula" }

  }
  CODE
  {

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   12.03.2007   KKE   New form for Frequency - Magazine Sales Module
    }
    END.
  }
}

OBJECT Page 50017 Magazine
{
  OBJECT-PROPERTIES
  {
    Date=04/23/07;
    Time=[ 6:00:00 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    SourceTable=Table50011;
    DelayedInsert=Yes;
    PageType=Card;
    OnOpenPage=BEGIN
                 IF CurrPage.LOOKUPMODE THEN
                   CurrPage.EDITABLE := FALSE;
               END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                GroupType=Repeater }

    { 1000000001;2;Field  ;
                SourceExpr=Code }

    { 1000000003;2;Field  ;
                SourceExpr=Description }

    { 1000000028;2;Field  ;
                SourceExpr="Payment Method for Delivery" }

    { 1000000024;2;Field  ;
                SourceExpr="Minimum No. of Page" }

    { 1000000030;2;Field  ;
                SourceExpr="Default Gen. Prod. Posting" }

    { 1000000022;2;Field  ;
                SourceExpr="Dimension 1 Code" }

    { 1000000026;2;Field  ;
                SourceExpr="Defer Revenue SS Account" }

    { 1000000005;2;Field  ;
                SourceExpr=Frequency }

    { 1000000007;2;Field  ;
                SourceExpr="Magazine Item Nos." }

    { 1000000009;2;Field  ;
                SourceExpr="Pick-up Interval" }

    { 1000000011;2;Field  ;
                SourceExpr="Unit Price" }

    { 1000000013;2;Field  ;
                SourceExpr="Ads. Item Nos." }

    { 1000000015;2;Field  ;
                SourceExpr="Ads. Closing Interval" }

    { 1000000020;2;Field  ;
                SourceExpr="Subscriber S/O Nos." }

    { 1000000032;2;Field  ;
                SourceExpr="Circulation S/O Nos." }

  }
  CODE
  {

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   12.03.2007   KKE   New form for Magazine - Magazine Sales Module
    }
    END.
  }
}

OBJECT Page 50018 Magazine/Volume/Issue - Matrix
{
  OBJECT-PROPERTIES
  {
    Date=12/12/11;
    Time=[ 2:53:49 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    SourceTable=Table50012;
    DelayedInsert=Yes;
    PageType=Card;
    RefreshOnActivate=Yes;
    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1000000030;1 ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 THA=ฟั&งก์ชัน] }
      { 1000000031;2 ;Action    ;
                      CaptionML=ENU=Create Magazine/Volume/Issue No.;
                      RunObject=Report 50025 }
      { 1000000032;2 ;Action    ;
                      CaptionML=ENU=Confirm Magazine/Volume/Issue No.;
                      OnAction=BEGIN
                                 REPORT.RUNMODAL(REPORT::"Confirm Magazine/Volume/Issue",TRUE);
                               END;
                                }
      { 1000000033;2 ;Separator  }
      { 1000000034;2 ;Action    ;
                      CaptionML=ENU=Confirm Ads Item No.;
                      OnAction=VAR
                                 ConfirmAdsItemNo@1000000000 : Report 50026;
                               BEGIN
                                 ConfirmAdsItemNo.RUNMODAL;
                               END;
                                }
      { 1000000035;2 ;Separator  }
      { 1000000036;2 ;Action    ;
                      CaptionML=ENU=Remove Ads Item No.;
                      OnAction=BEGIN
                                 RemoveAdsItem;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                GroupType=Repeater }

    { 1000000001;2;Field  ;
                SourceExpr="Magazine Code" }

    { 1000000011;2;Field  ;
                SourceExpr="Volume No." }

    { 1000000005;2;Field  ;
                SourceExpr="Issue No." }

    { 1000000007;2;Field  ;
                SourceExpr="Issue Date" }

    { 1000000017;2;Field  ;
                SourceExpr="Create as Item" }

    { 1000000009;2;Field  ;
                SourceExpr="Magazine Item No.";
                Style=Attention;
                StyleExpr=TRUE }

    { 1000000003;2;Field  ;
                SourceExpr="Cover Description" }

    { 1000000013;2;Field  ;
                SourceExpr="Unit Price" }

    { 1000000015;2;Field  ;
                SourceExpr="Magazine Item Nos." }

    { 1000000019;2;Field  ;
                SourceExpr="Ads. Item No." }

    { 1000000021;2;Field  ;
                SourceExpr="Ads. Closing Date" }

    { 1000000023;2;Field  ;
                SourceExpr="Ads. Item Nos." }

    { 1000000025;2;Field  ;
                SourceExpr="Create as Ads. Item" }

  }
  CODE
  {

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   12.03.2007   KKE   New form for Magazine/Volume/Issue Matrix - Magazine Sales Module
      002   20.05.2008   KKE   Add function remove ads. item, incase they make a wrong ads. no. series.
    }
    END.
  }
}

OBJECT Page 50019 Deposit Realized Revenue
{
  OBJECT-PROPERTIES
  {
    Date=08/26/07;
    Time=11:36:18 AM;
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    SourceTable=Table50013;
    PageType=Card;
    OnOpenPage=BEGIN
                 //InsertBufferSubscriberLine;
                 FILTERGROUP(2);
                 SETRANGE(Show,TRUE);
                 FILTERGROUP(0);
               END;

    OnAfterGetRecord=BEGIN
                       IF Status = '0' THEN
                         txtStatus := '+'
                       ELSE
                         txtStatus := '-';

                       IF NOT Subscriber.GET("Subscriber No.") THEN
                         CLEAR(Subscriber);

                       IF Subscriber.Name = '' THEN
                         Subscriber.Name := COPYSTR(Subscriber."Name (Thai)",1,50);
                       txtStatusOnFormat;
                       CustomerNoOnFormat;
                     END;

    OnQueryClosePage=BEGIN
                       DELETEALL;
                     END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1000000030;1 ;Action    ;
                      CaptionML=ENU=Show;
                      Promoted=Yes;
                      Image=View;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 InsertBufferSubscriberLine(MagazineFilter);
                                 RESET;
                                 FILTERGROUP(2);
                                 SETRANGE(Show,TRUE);
                                 FILTERGROUP(0);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000028;1;Field  ;
                CaptionML=ENU=Magazine Filter;
                SourceExpr=MagazineFilter;
                TableRelation=Magazine }

    { 1000000000;1;Group  ;
                Editable=FALSE;
                GroupType=Repeater }

    { 1000000001;2;Field  ;
                Name=Status;
                CaptionML=ENU=Status;
                SourceExpr=txtStatus;
                Style=Attention;
                StyleExpr=TRUE;
                OnAssistEdit=BEGIN
                               IF Status = '1' THEN
                                 EXIT;

                               UpdateBuffer("Subscriber No.",xRec."Subscriber No.");
                               RESET;
                               FILTERGROUP(2);
                               SETRANGE(Show,TRUE);
                               FILTERGROUP(0);
                               CurrPage.UPDATE;
                             END;
                              }

    { 1000000003;2;Field  ;
                SourceExpr="Customer No." }

    { 1000000005;2;Field  ;
                SourceExpr="Subscriber No." }

    { 1000000024;2;Field  ;
                CaptionML=ENU=Name;
                SourceExpr=Subscriber.Name }

    { 1000000007;2;Field  ;
                SourceExpr="Subscriber Contract No." }

    { 1000000009;2;Field  ;
                SourceExpr="Magazine Code" }

    { 1000000011;2;Field  ;
                SourceExpr="Deposit Paid" }

    { 1000000020;2;Field  ;
                SourceExpr="Contract Status" }

    { 1000000022;2;Field  ;
                SourceExpr=Block }

    { 1000000013;2;Field  ;
                SourceExpr="Realized Revenue" }

    { 1000000015;2;Field  ;
                SourceExpr="Unrealized Revenue" }

    { 1000000026;2;Field  ;
                SourceExpr="Reversed Amount" }

  }
  CODE
  {
    VAR
      Subscriber@1000000001 : Record 50001;
      txtStatus@1000000000 : Text[1];
      MagazineFilter@1000000002 : Code[20];

    PROCEDURE UpdateBuffer@1000000002(NewSubscriber@1000000000 : Code[20];OldSubscriber@1000000001 : Code[20]);
    VAR
      BufferSubscriberLE@1000000002 : Record 50013;
    BEGIN
      BufferSubscriberLE.RESET;
      BufferSubscriberLE.SETRANGE("Subscriber No.",NewSubscriber);
      BufferSubscriberLE.SETRANGE(Status,'1');
      BufferSubscriberLE.SETRANGE(Show,TRUE);
      IF BufferSubscriberLE.FINDFIRST THEN BEGIN
        BufferSubscriberLE.MODIFYALL(Show,FALSE);
        EXIT;
      END;
      BufferSubscriberLE.RESET;
      BufferSubscriberLE.SETRANGE("Subscriber No.",NewSubscriber);
      BufferSubscriberLE.MODIFYALL(Show,TRUE);
    END;

    LOCAL PROCEDURE txtStatusOnFormat@19078240();
    BEGIN
      IF Status = '0' THEN BEGIN END
      ELSE BEGIN
        BEGIN END;
      END;
    END;

    LOCAL PROCEDURE CustomerNoOnFormat@19000391();
    BEGIN
      IF Status <> '0' THEN;
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   12.03.2007   KKE   New form for "Deposit Realized Revenue" - Subscription Module
    }
    END.
  }
}

OBJECT Page 50020 PO Type Setup
{
  OBJECT-PROPERTIES
  {
    Date=07/09/07;
    Time=[ 6:00:00 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    SourceTable=Table50014;
    DelayedInsert=Yes;
    PageType=Card;
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                GroupType=Repeater }

    { 1000000001;2;Field  ;
                SourceExpr="PO Type Code" }

    { 1000000003;2;Field  ;
                SourceExpr=Description }

    { 1000000005;2;Field  ;
                SourceExpr="Nos. for PO" }

  }
  CODE
  {

    BEGIN
    END.
  }
}

OBJECT Page 50021 Complaint
{
  OBJECT-PROPERTIES
  {
    Date=07/02/08;
    Time=[ 6:30:16 PM];
    Version List=;
  }
  PROPERTIES
  {
    SourceTable=Table50057;
    PageType=Card;
    OnAfterGetRecord=BEGIN
                       OnAfterGetCurrRecord;
                     END;

    OnNewRecord=BEGIN
                  OnAfterGetCurrRecord;
                END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                CaptionML=ENU=General }

    { 1000000001;2;Field  ;
                SourceExpr="Complaint No.";
                OnAssistEdit=BEGIN
                               AssistEdit(Rec);
                             END;
                              }

    { 1000000003;2;Field  ;
                SourceExpr=Type }

    { 1000000005;2;Field  ;
                SourceExpr="Subscriber No.";
                OnValidate=BEGIN
                             SubscriberNoOnAfterValidate;
                           END;
                            }

    { 1000000007;2;Field  ;
                SourceExpr="Subscriber Name" }

    { 1000000009;2;Field  ;
                SourceExpr="Address-1" }

    { 1000000011;2;Field  ;
                SourceExpr="Address-2" }

    { 1000000013;2;Field  ;
                SourceExpr="Address-3" }

    { 1000000015;2;Field  ;
                SourceExpr="Phone No." }

    { 1000000017;2;Field  ;
                SourceExpr="Call Category";
                OnValidate=BEGIN
                             CallCategoryOnAfterValidate;
                           END;
                            }

    { 1000000044;2;Field  ;
                SourceExpr=CallCategory;
                Editable=FALSE }

    { 1000000019;2;Field  ;
                SourceExpr="Magazine Code";
                OnValidate=BEGIN
                             MagazineCodeOnAfterValidate;
                           END;
                            }

    { 1000000045;2;Field  ;
                SourceExpr=MagazineDesc;
                Editable=FALSE }

    { 1000000021;2;Field  ;
                SourceExpr="Message-1" }

    { 1000000023;2;Field  ;
                SourceExpr="Message-2" }

    { 1000000025;2;Field  ;
                SourceExpr="Message-3" }

    { 1000000027;2;Field  ;
                SourceExpr="Complaint Topic";
                OnValidate=BEGIN
                             ComplaintTopicOnAfterValidate;
                           END;
                            }

    { 1000000046;2;Field  ;
                SourceExpr=ComplaintTopic;
                Editable=FALSE }

    { 1000000029;2;Field  ;
                SourceExpr="Complaint Date" }

    { 1000000031;2;Field  ;
                SourceExpr="Customer No.";
                OnValidate=BEGIN
                             CustomerNoOnAfterValidate;
                           END;
                            }

    { 1000000047;2;Field  ;
                SourceExpr=CustName;
                Editable=FALSE }

    { 1000000033;2;Field  ;
                SourceExpr="Mobile No." }

    { 1000000035;2;Field  ;
                SourceExpr="Fax No." }

    { 1000000037;2;Field  ;
                SourceExpr="Start Time" }

    { 1000000039;2;Field  ;
                SourceExpr="End Time" }

    { 1000000041;2;Field  ;
                CaptionML=ENU=Usage Time;
                SourceExpr="Usage Time"/60000 }

  }
  CODE
  {
    VAR
      GenMasterSetup@1000000000 : Record 50002;
      Magazine@1000000004 : Record 50011;
      Customer@1000000005 : Record 18;
      CallCategory@1000000001 : Text[100];
      ComplaintTopic@1000000002 : Text[100];
      MagazineDesc@1000000003 : Text[100];
      CustName@1000000006 : Text[50];

    PROCEDURE GetCategory@1000000000();
    BEGIN
      CLEAR(CallCategory);

      GenMasterSetup.RESET;
      GenMasterSetup.SETCURRENTKEY(Type,Code);
      GenMasterSetup.SETRANGE(Type,GenMasterSetup.Type::"Call Category");
      GenMasterSetup.SETRANGE(Code,"Call Category");
      IF GenMasterSetup.FINDFIRST THEN
        CallCategory := GenMasterSetup.Description;
    END;

    PROCEDURE GetTopic@1000000002();
    BEGIN
      CLEAR(ComplaintTopic);

      GenMasterSetup.RESET;
      GenMasterSetup.SETCURRENTKEY(Type,Code);
      GenMasterSetup.SETRANGE(Type,GenMasterSetup.Type::"Complaint Topic");
      GenMasterSetup.SETRANGE(Code,"Complaint Topic");
      IF GenMasterSetup.FINDFIRST THEN
        ComplaintTopic := GenMasterSetup.Description;
    END;

    PROCEDURE GetMagazine@1000000003();
    BEGIN
      CLEAR(MagazineDesc);

      IF Magazine.GET("Magazine Code") THEN
        MagazineDesc := Magazine.Description;
    END;

    PROCEDURE GetCustName@1000000005();
    BEGIN
      CLEAR(CustName);

      IF Customer.GET("Customer No.") THEN
        CustName := Customer.Name;
    END;

    LOCAL PROCEDURE SubscriberNoOnAfterValidate@19040164();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE CallCategoryOnAfterValidate@19058008();
    BEGIN
      GetCategory();
    END;

    LOCAL PROCEDURE MagazineCodeOnAfterValidate@19028719();
    BEGIN
      GetMagazine();
    END;

    LOCAL PROCEDURE ComplaintTopicOnAfterValidate@19033247();
    BEGIN
      GetTopic();
    END;

    LOCAL PROCEDURE CustomerNoOnAfterValidate@19016267();
    BEGIN
      GetCustName();
    END;

    LOCAL PROCEDURE OnAfterGetCurrRecord@19077479();
    BEGIN
      xRec := Rec;
      GetCategory;
      GetTopic;
      GetMagazine;
      GetCustName;
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      PTH : Phitsanu Thoranasoonthorn

      No.   Date         Sign  Description
      ----------------------------------------
      001   02.07.2008   PTH   Complaint
    }
    END.
  }
}

OBJECT Page 50022 Content Group Setup
{
  OBJECT-PROPERTIES
  {
    Date=06/28/07;
    Time=[ 6:00:00 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    SourceTable=Table50015;
    DelayedInsert=Yes;
    PageType=Card;
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                GroupType=Repeater }

    { 1000000001;2;Field  ;
                SourceExpr=Code }

    { 1000000003;2;Field  ;
                SourceExpr="Magazine Code" }

    { 1000000005;2;Field  ;
                SourceExpr=Description }

    { 1000000007;2;Field  ;
                SourceExpr="Blackground Color" }

    { 1000000034;2;Field  ;
                SourceExpr="Foreground Color" }

    { 1000000042;1;Field  ;
                CaptionClass=Text19046141 }

    { 1000000054;1;Field  ;
                CaptionClass=Text19016082;
                MultiLine=Yes }

    { 1000000053;1;Field  ;
                CaptionClass=Text19051685 }

    { 1000000050;1;Field  ;
                CaptionClass=Text19074475;
                MultiLine=Yes }

    { 1000000048;1;Field  ;
                CaptionClass=Text19073657 }

    { 1000000051;1;Field  ;
                CaptionClass=Text19006866 }

    { 1000000035;1;Field  ;
                CaptionClass=Text19057446;
                MultiLine=Yes }

    { 1000000031;1;Field  ;
                CaptionClass=Text19022310;
                MultiLine=Yes }

    { 1000000052;1;Field  ;
                CaptionClass=Text19036415;
                MultiLine=Yes }

    { 1000000049;1;Field  ;
                CaptionClass=Text19079861 }

    { 1000000044;1;Field  ;
                CaptionClass=Text19052732 }

    { 1000000033;1;Field  ;
                CaptionClass=Text19016090;
                MultiLine=Yes }

    { 1000000032;1;Field  ;
                CaptionClass=Text19019210 }

    { 1000000030;1;Field  ;
                CaptionClass=Text19015665;
                MultiLine=Yes }

    { 1000000024;1;Field  ;
                CaptionClass=Text19032294;
                MultiLine=Yes }

    { 1000000025;1;Field  ;
                CaptionClass=Text19056084;
                MultiLine=Yes }

    { 1000000023;1;Field  ;
                CaptionClass=Text19012296;
                MultiLine=Yes }

    { 1000000020;1;Field  ;
                CaptionClass=Text19016196;
                MultiLine=Yes }

    { 1000000016;1;Field  ;
                CaptionClass=Text19058474 }

    { 1000000039;1;Field  ;
                CaptionClass=Text19071969;
                MultiLine=Yes }

    { 1000000036;1;Field  ;
                CaptionClass=Text19044500 }

    { 1000000015;1;Field  ;
                CaptionClass=Text19014195 }

    { 1000000019;1;Field  ;
                CaptionClass=Text19009302;
                MultiLine=Yes }

    { 1000000028;1;Field  ;
                CaptionClass=Text19045579 }

    { 1000000029;1;Field  ;
                CaptionClass=Text19032025 }

    { 1000000021;1;Field  ;
                CaptionClass=Text19008324;
                MultiLine=Yes }

    { 1000000026;1;Field  ;
                CaptionClass=Text19047863 }

    { 1000000018;1;Field  ;
                CaptionClass=Text19060045;
                MultiLine=Yes }

    { 1000000017;1;Field  ;
                CaptionClass=Text19013543;
                MultiLine=Yes }

    { 1000000027;1;Field  ;
                CaptionClass=Text19068979;
                MultiLine=Yes }

    { 1000000014;1;Field  ;
                CaptionClass=Text19029161;
                MultiLine=Yes }

    { 1000000022;1;Field  ;
                CaptionClass=Text19056105;
                MultiLine=Yes }

    { 1000000047;1;Field  ;
                CaptionClass=Text19041585 }

    { 1000000037;1;Field  ;
                CaptionClass=Text19027750 }

    { 1000000038;1;Field  ;
                CaptionClass=Text19002374 }

    { 1000000040;1;Field  ;
                CaptionClass=Text19041711 }

    { 1000000012;1;Field  ;
                CaptionClass=Text19002388 }

    { 1000000013;1;Field  ;
                CaptionClass=Text19076108;
                MultiLine=Yes }

    { 1000000041;1;Field  ;
                CaptionClass=Text19007305 }

    { 1000000046;1;Field  ;
                CaptionClass=Text19053904 }

  }
  CODE
  {
    VAR
      Text19053904@19067493 : TextConst 'ENU=Black';
      Text19007305@19066785 : TextConst 'ENU=Brown';
      Text19076108@19057826 : TextConst 'ENU=Olive Green';
      Text19002388@19049422 : TextConst 'ENU=Dark Red';
      Text19041711@19006462 : TextConst 'ENU=Orange';
      Text19002374@19058571 : TextConst 'ENU=Red';
      Text19027750@19023056 : TextConst 'ENU=Pink';
      Text19041585@19037067 : TextConst 'ENU=Rose';
      Text19056105@19019618 : TextConst 'ENU=Dark Green';
      Text19029161@19024501 : TextConst 'ENU=Light Orange';
      Text19068979@19035281 : TextConst 'ENU=Dark Teal';
      Text19013543@19009913 : TextConst 'ENU=Dark Yellow';
      Text19060045@19004472 : TextConst 'ENU=Lime';
      Text19047863@19002475 : TextConst 'ENU=Dark Blue';
      Text19008324@19014050 : TextConst 'ENU=Green';
      Text19032025@19064860 : TextConst 'ENU=Teal';
      Text19045579@19037316 : TextConst 'ENU=Blue';
      Text19009302@19037611 : TextConst 'ENU=Sea Green';
      Text19014195@19013603 : TextConst 'ENU=Gold';
      Text19044500@19056608 : TextConst 'ENU=Yellow';
      Text19071969@19049261 : TextConst 'ENU=Bright Green';
      Text19058474@19031825 : TextConst 'ENU=Tan';
      Text19016196@19042789 : TextConst 'ENU=Light Yellow';
      Text19012296@19057257 : TextConst 'ENU=Light Green';
      Text19056084@19066954 : TextConst 'ENU=Indigo';
      Text19032294@19072233 : TextConst 'ENU=Gray - 80%';
      Text19015665@19000809 : TextConst 'ENU=Blue-Gray';
      Text19019210@19076550 : TextConst 'ENU=Aqua';
      Text19016090@19057253 : TextConst 'ENU=Light Blue';
      Text19052732@19045111 : TextConst 'ENU=Violet';
      Text19079861@19015605 : TextConst 'ENU=Turquoise';
      Text19036415@19039357 : TextConst 'ENU=Light Turquoise';
      Text19022310@19044033 : TextConst 'ENU=Gray - 50%';
      Text19057446@19013365 : TextConst 'ENU=Gray - 40%';
      Text19006866@19071852 : TextConst 'ENU=Sky Blue';
      Text19073657@19047636 : TextConst 'ENU=Plum';
      Text19074475@19027845 : TextConst 'ENU=Gray - 25%';
      Text19051685@19021579 : TextConst 'ENU=Pale Blue';
      Text19016082@19030922 : TextConst 'ENU=Lavender';
      Text19046141@19052086 : TextConst 'ENU=White';

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   28.03.2007   KKE   New form for "Content Type Setup" - Editorial Module
    }
    END.
  }
}

OBJECT Page 50023 Content Sub Group Setup
{
  OBJECT-PROPERTIES
  {
    Date=06/28/07;
    Time=[ 6:00:00 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    SourceTable=Table50016;
    DelayedInsert=Yes;
    PageType=Card;
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                GroupType=Repeater }

    { 1000000001;2;Field  ;
                SourceExpr=Code }

    { 1000000003;2;Field  ;
                SourceExpr="Magazine Code" }

    { 1000000005;2;Field  ;
                SourceExpr=Description }

  }
  CODE
  {

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   28.03.2007   KKE   New table for "Content Sub Type Setup" - Editorial Module
    }
    END.
  }
}

OBJECT Page 50024 Column Name Setup
{
  OBJECT-PROPERTIES
  {
    Date=07/11/07;
    Time=[ 6:00:00 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    SourceTable=Table50017;
    DelayedInsert=Yes;
    PageType=Card;
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                GroupType=Repeater }

    { 1000000001;2;Field  ;
                SourceExpr=Code }

    { 1000000003;2;Field  ;
                SourceExpr="Magazine Code" }

    { 1000000005;2;Field  ;
                SourceExpr=Description }

    { 1000000007;2;Field  ;
                SourceExpr="No. of Page" }

    { 1000000009;2;Field  ;
                SourceExpr="Content Group" }

    { 1000000011;2;Field  ;
                SourceExpr="Content Sub Group" }

    { 1000000013;2;Field  ;
                SourceExpr="Shortcut Dimension 6 Code" }

    { 1000000015;2;Field  ;
                SourceExpr=Remark }

  }
  CODE
  {

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   28.03.2007   KKE   New table for "Content Setup" - Editorial Module
    }
    END.
  }
}

OBJECT Page 50025 Editorial Setup
{
  OBJECT-PROPERTIES
  {
    Date=06/06/07;
    Time=[ 6:00:00 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table50018;
    PageType=Card;
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                CaptionML=ENU=Numbering }

    { 1000000001;2;Field  ;
                SourceExpr="Content Index Nos." }

    { 1000000004;2;Field  ;
                SourceExpr="Dummy Plan Nos." }

  }
  CODE
  {

    BEGIN
    END.
  }
}

OBJECT Page 50026 Content Index
{
  OBJECT-PROPERTIES
  {
    Date=12/12/11;
    Time=[ 2:45:24 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    SourceTable=Table50019;
    PageType=Card;
    OnInit=BEGIN
             ContentBookingLinesEditable := TRUE;
             "Magazine Item No.Editable" := TRUE;
             "Creation DateEditable" := TRUE;
             "No.Editable" := TRUE;
           END;

    OnAfterGetRecord=BEGIN
                       OnAfterGetCurrRecord;
                     END;

    OnNewRecord=BEGIN
                  OnAfterGetCurrRecord;
                END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1000000021;1 ;ActionGroup;
                      CaptionML=ENU=&Report }
      { 1000000026;2 ;Action    ;
                      CaptionML=ENU=Content &Index List;
                      OnAction=VAR
                                 ContentIndexHdr@1000000001 : Record 50019;
                               BEGIN
                                 ContentIndexHdr.SETRANGE("No.","No.");
                                 REPORT.RUN(REPORT::"Content Index List",TRUE,FALSE,ContentIndexHdr);
                               END;
                                }
      { 1000000027;2 ;Action    ;
                      CaptionML=ENU=Content &Expense Report;
                      OnAction=VAR
                                 ContentIndexHdr@1000000000 : Record 50019;
                               BEGIN
                                 ContentIndexHdr.SETRANGE("No.","No.");
                                 REPORT.RUN(REPORT::"Content Expense Report",TRUE,FALSE,ContentIndexHdr);
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1000000019;1 ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 THA=ฟั&งก์ชัน] }
      { 1000000025;2 ;Action    ;
                      CaptionML=ENU=Copy &Content;
                      OnAction=VAR
                                 CopyContentIndex@1000000000 : Report 50033;
                               BEGIN
                                 TESTFIELD("Magazine Item No.");
                                 CLEAR(CopyContentIndex);
                                 CopyContentIndex.InitRequest(Rec);
                                 CopyContentIndex.RUNMODAL;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                CaptionML=ENU=General }

    { 1000000001;2;Field  ;
                SourceExpr="No.";
                Editable="No.Editable";
                OnAssistEdit=BEGIN
                               IF AssistEdit(xRec) THEN
                                 CurrPage.UPDATE;
                             END;
                              }

    { 1000000003;2;Field  ;
                SourceExpr="Creation Date";
                Editable="Creation DateEditable" }

    { 1000000005;2;Field  ;
                SourceExpr="Magazine Item No.";
                Editable="Magazine Item No.Editable";
                OnValidate=BEGIN
                             IF NOT Item.GET("Magazine Item No.") THEN
                               CLEAR(Item);
                           END;
                            }

    { 1000000028;2;Field  ;
                SourceExpr=Close }

    { 1000000007;2;Field  ;
                CaptionML=ENU=Magazine Code;
                SourceExpr=Item."Magazine Code";
                TableRelation=Magazine;
                Editable=FALSE }

    { 1000000010;2;Field  ;
                CaptionML=ENU=Volume No.;
                SourceExpr=Item."Volume No.";
                TableRelation=Volume;
                Editable=FALSE }

    { 1000000012;2;Field  ;
                CaptionML=ENU=Issue No.;
                SourceExpr=Item."Issue No.";
                TableRelation="Issue No.";
                Editable=FALSE }

    { 1000000014;2;Field  ;
                CaptionML=ENU=Issue Date;
                SourceExpr=Item."Issue Date";
                Editable=FALSE }

    { 1000000016;1;Part   ;
                Name=ContentBookingLines;
                SubPageLink=Content List No.=FIELD(No.);
                PagePartID=Page50027;
                Editable=ContentBookingLinesEditable }

  }
  CODE
  {
    VAR
      Item@1000000000 : Record 27;
      "No.Editable"@19005397 : Boolean INDATASET;
      "Creation DateEditable"@19062205 : Boolean INDATASET;
      "Magazine Item No.Editable"@19010148 : Boolean INDATASET;
      ContentBookingLinesEditable@19037982 : Boolean INDATASET;

    LOCAL PROCEDURE OnAfterGetCurrRecord@19077479();
    BEGIN
      xRec := Rec;
      IF NOT Item.GET("Magazine Item No.") THEN
        CLEAR(Item);

      "No.Editable" := NOT Close;
      "Creation DateEditable" := NOT Close;
      "Magazine Item No.Editable" := NOT Close;
      ContentBookingLinesEditable := NOT Close;
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   28.03.2007   KKE   New form for "Content List" - Editorial Module
    }
    END.
  }
}

OBJECT Page 50027 Content Index Subform
{
  OBJECT-PROPERTIES
  {
    Date=01/30/21;
    Time=[ 7:07:13 PM];
    Modified=Yes;
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    SourceTable=Table50020;
    DelayedInsert=Yes;
    PageType=ListPart;
    AutoSplitKey=Yes;
    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1907935204;1 ;ActionGroup;
                      CaptionML=ENU=&Line }
      { 1902199604;2 ;Action    ;
                      CaptionML=ENU=&Photo Expense;
                      OnAction=BEGIN
                                 //This functionality was copied from page #50026. Unsupported part was commented. Please check it.
                                 {CurrPage.ContentBookingLines.PAGE.}
                                 _ShowPhotoExpense;
                               END;
                                }
      { 1903646004;2 ;Action    ;
                      CaptionML=ENU=Content &Cost;
                      OnAction=BEGIN
                                 //This functionality was copied from page #50026. Unsupported part was commented. Please check it.
                                 {CurrPage.ContentBookingLines.PAGE.}
                                 _ShowContentCost;
                               END;
                                }
      { 1901521204;2 ;Action    ;
                      CaptionML=ENU=C&ancel Content;
                      Visible=No;
                      OnAction=BEGIN
                                 //This functionality was copied from page #50026. Unsupported part was commented. Please check it.
                                 {CurrPage.ContentBookingLines.PAGE.}
                                 _CancelContent;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                GroupType=Repeater }

    { 1000000001;2;Field  ;
                SourceExpr="Content Code" }

    { 1000000003;2;Field  ;
                SourceExpr=Description }

    { 1000000013;2;Field  ;
                SourceExpr="Description 2";
                Visible=FALSE }

    { 1000000029;2;Field  ;
                SourceExpr="Column Name" }

    { 1000000021;2;Field  ;
                SourceExpr=Status;
                Style=Strong;
                StyleExpr=TRUE }

    { 1000000007;2;Field  ;
                SourceExpr="Content Type" }

    { 1000000009;2;Field  ;
                SourceExpr="Content Sub Type" }

    { 1000000005;2;Field  ;
                SourceExpr="No. of Page" }

    { 1000000025;2;Field  ;
                SourceExpr=Size }

    { 1000000027;2;Field  ;
                SourceExpr=Position }

    { 1000000011;2;Field  ;
                SourceExpr="Author Name" }

    { 1000000015;2;Field  ;
                SourceExpr="Source of Information" }

    { 1000000017;2;Field  ;
                SourceExpr="Cost (LCY)" }

    { 1000000019;2;Field  ;
                SourceExpr="Content Receipt Date" }

    { 1000000023;2;Field  ;
                SourceExpr="Actual Page No." }

  }
  CODE
  {

    PROCEDURE _ShowPhotoExpense@19026543();
    BEGIN
      Rec.ShowPhotoExpense;
      IF Status <> Status::" " THEN
        EXIT;
      UpdateCost;
    END;

    PROCEDURE ShowPhotoExpense@1000000000();
    BEGIN
      Rec.ShowPhotoExpense;
      IF Status <> Status::" " THEN
        EXIT;
      UpdateCost;
    END;

    PROCEDURE _ShowContentCost@19003697();
    BEGIN
      Rec.ShowContentCost;
      IF Status <> Status::" " THEN
        EXIT;
      UpdateCost;
    END;

    PROCEDURE ShowContentCost@1000000001();
    BEGIN
      Rec.ShowContentCost;
      IF Status <> Status::" " THEN
        EXIT;
      UpdateCost;
    END;

    PROCEDURE _CancelContent@19078865();
    BEGIN
      Rec.CancelContent;
    END;

    PROCEDURE CancelContent@1000000002();
    BEGIN
      Rec.CancelContent;
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   17.05.2007   KKE   New form for "Content Index Subform" - Editorial Module
    }
    END.
  }
}

OBJECT Page 50028 Content Index List
{
  OBJECT-PROPERTIES
  {
    Date=06/11/07;
    Time=[ 6:00:00 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    Editable=No;
    SourceTable=Table50019;
    PageType=Card;
    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1000000010;1 ;ActionGroup;
                      CaptionML=[ENU=&Line;
                                 THA=&บรรทัด] }
      { 1000000011;2 ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=[ENU=Card;
                                 THA=บัตร];
                      RunObject=Page 50026;
                      RunPageLink=No.=FIELD(No.);
                      Image=EditLines }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                GroupType=Repeater }

    { 1000000001;2;Field  ;
                SourceExpr="No." }

    { 1000000003;2;Field  ;
                SourceExpr="Creation Date" }

    { 1000000005;2;Field  ;
                SourceExpr="Magazine Item No." }

  }
  CODE
  {

    BEGIN
    END.
  }
}

OBJECT Page 50029 Photo Expense
{
  OBJECT-PROPERTIES
  {
    Date=05/17/07;
    Time=[ 6:00:00 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    SourceTable=Table50021;
    DelayedInsert=Yes;
    PageType=Card;
    AutoSplitKey=Yes;
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                GroupType=Repeater }

    { 1000000003;2;Field  ;
                SourceExpr="Picture Code" }

    { 1000000005;2;Field  ;
                SourceExpr="Picture Size" }

    { 1000000007;2;Field  ;
                SourceExpr="Reference No." }

    { 1000000009;2;Field  ;
                SourceExpr=Description }

    { 1000000011;2;Field  ;
                SourceExpr=Agency }

    { 1000000013;2;Field  ;
                SourceExpr="Invoice No." }

    { 1000000015;2;Field  ;
                SourceExpr="Currency Code" }

    { 1000000019;2;Field  ;
                SourceExpr="Exchange Rate" }

    { 1000000017;2;Field  ;
                SourceExpr="Cost Amount" }

    { 1000000021;2;Field  ;
                SourceExpr="Cost Amount (LCY)" }

    { 1000000025;2;Field  ;
                SourceExpr="Billing Date" }

    { 1000000023;2;Field  ;
                SourceExpr="Payment Date" }

    { 1000000027;2;Field  ;
                SourceExpr=Note }

    { 1000000029;2;Field  ;
                SourceExpr="Payment Status" }

    { 1000000034;2;Field  ;
                SourceExpr=Remarks }

  }
  CODE
  {

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   17.05.2007   KKE   New form for "Photo Expense" - Editorial Module
    }
    END.
  }
}

OBJECT Page 50030 Content Cost
{
  OBJECT-PROPERTIES
  {
    Date=05/17/07;
    Time=[ 6:00:00 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    SourceTable=Table50022;
    DelayedInsert=Yes;
    PageType=Card;
    AutoSplitKey=Yes;
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                GroupType=Repeater }

    { 1000000001;2;Field  ;
                SourceExpr="Expense Code" }

    { 1000000003;2;Field  ;
                SourceExpr="Reference No." }

    { 1000000005;2;Field  ;
                SourceExpr=Description }

    { 1000000007;2;Field  ;
                SourceExpr="Invoice No." }

    { 1000000009;2;Field  ;
                SourceExpr="Currency Code" }

    { 1000000013;2;Field  ;
                SourceExpr="Exchange Rate" }

    { 1000000011;2;Field  ;
                SourceExpr="Cost Amount" }

    { 1000000015;2;Field  ;
                SourceExpr="Cost Amount (LCY)" }

    { 1000000019;2;Field  ;
                SourceExpr="Billing Date" }

    { 1000000017;2;Field  ;
                SourceExpr="Payment Date" }

    { 1000000021;2;Field  ;
                SourceExpr=Note }

    { 1000000023;2;Field  ;
                SourceExpr="Payment Status" }

    { 1000000025;2;Field  ;
                SourceExpr=Remarks }

  }
  CODE
  {

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   17.05.2007   KKE   New form for "Content Cost" - Editorial Module
    }
    END.
  }
}

OBJECT Page 50032 Dummy Plan List
{
  OBJECT-PROPERTIES
  {
    Date=08/14/07;
    Time=[ 6:00:00 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    Editable=No;
    SourceTable=Table50023;
    PageType=Card;
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                GroupType=Repeater }

    { 1000000001;2;Field  ;
                SourceExpr="Dummy Plan No." }

    { 1000000013;2;Field  ;
                SourceExpr="Revision No." }

    { 1000000005;2;Field  ;
                SourceExpr="Planning Status" }

    { 1000000003;2;Field  ;
                SourceExpr="Magazine Item No." }

    { 1000000007;2;Field  ;
                SourceExpr="Document Date" }

    { 1000000009;2;Field  ;
                SourceExpr="No. of Page" }

    { 1000000011;2;Field  ;
                SourceExpr="User ID" }

    { 1000000015;2;Field  ;
                SourceExpr="Revision Date/Time" }

  }
  CODE
  {

    BEGIN
    END.
  }
}

OBJECT Page 50033 Booking List
{
  OBJECT-PROPERTIES
  {
    Date=07/04/07;
    Time=[ 6:00:00 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    InsertAllowed=No;
    SourceTable=Table50025;
    PageType=Card;
    OnOpenPage=BEGIN
                 CurrPage.EDITABLE := AllowEditForm;
               END;

    OnAfterGetRecord=BEGIN
                       IF NOT AdsProduct.GET("Ads. Product") THEN
                         CLEAR(AdsProduct);
                       IF NOT AdsPosition.GET("Ads. Position") THEN
                         CLEAR(AdsPosition);
                     END;

    OnModifyRecord=BEGIN
                     IF ("Blackground Color" = xRec."Blackground Color") AND ("Foreground Color" = xRec."Foreground Color") THEN BEGIN
                       MESSAGE(Text001);
                       EXIT(FALSE);
                     END;
                   END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                GroupType=Repeater }

    { 1000000001;2;Field  ;
                SourceExpr="Dummy Plan No.";
                Editable=FALSE }

    { 1000000003;2;Field  ;
                SourceExpr="From Type";
                Editable=FALSE }

    { 1000000005;2;Field  ;
                SourceExpr="Booking No.";
                Editable=FALSE }

    { 1000000007;2;Field  ;
                SourceExpr="Booking Line No.";
                Editable=FALSE }

    { 1000000009;2;Field  ;
                SourceExpr="Magazine Item No.";
                Editable=FALSE }

    { 1000000011;2;Field  ;
                SourceExpr="Content Code";
                Editable=FALSE }

    { 1000000013;2;Field  ;
                SourceExpr="Content Type";
                Editable=FALSE }

    { 1000000038;2;Field  ;
                SourceExpr="Column Name";
                Editable=FALSE }

    { 1000000030;2;Field  ;
                SourceExpr=Description;
                Visible=FALSE;
                Editable=FALSE }

    { 1000000015;2;Field  ;
                SourceExpr="Blackground Color" }

    { 1000000024;2;Field  ;
                SourceExpr="Foreground Color" }

    { 1000000019;2;Field  ;
                SourceExpr="Counting Unit";
                Editable=FALSE }

    { 1000000044;2;Field  ;
                SourceExpr=Remark;
                Visible=FALSE;
                Editable=FALSE }

    { 1000000026;2;Field  ;
                SourceExpr="Ads. Size";
                Editable=FALSE }

    { 1000000042;2;Field  ;
                SourceExpr="Ads. Product";
                Editable=FALSE }

    { 1000000046;2;Field  ;
                CaptionML=ENU=Ads. Product Description;
                SourceExpr=AdsProduct.Description;
                Editable=FALSE }

    { 1000000040;2;Field  ;
                SourceExpr="Ads. Position";
                Editable=FALSE }

    { 1000000048;2;Field  ;
                CaptionML=ENU=Ads. Position Description;
                SourceExpr=AdsPosition.Description;
                Editable=FALSE }

    { 1000000050;2;Field  ;
                SourceExpr="Ads. Type";
                Visible=FALSE;
                Editable=FALSE }

    { 1000000052;2;Field  ;
                SourceExpr="Ads. Sub-Type";
                Visible=FALSE;
                Editable=FALSE }

    { 1000000017;2;Field  ;
                SourceExpr="Planning Status" }

    { 1000000028;2;Field  ;
                SourceExpr="Owner Customer";
                Visible=FALSE;
                Editable=FALSE }

    { 1000000054;2;Field  ;
                SourceExpr="Salesperson Code";
                Visible=FALSE;
                Editable=FALSE }

    { 1000000032;2;Field  ;
                SourceExpr="Author Name";
                Visible=FALSE;
                Editable=FALSE }

    { 1000000034;2;Field  ;
                SourceExpr="Source of Information";
                Visible=FALSE;
                Editable=FALSE }

    { 1000000036;2;Field  ;
                SourceExpr="Content Receipt Date";
                Visible=FALSE;
                Editable=FALSE }

  }
  CODE
  {
    VAR
      AdsProduct@1000000000 : Record 50031;
      AdsPosition@1000000001 : Record 50029;
      Text001@1000000002 : TextConst 'ENU=System does not allow to modify record.';
      AllowEditForm@1000000003 : Boolean;

    PROCEDURE SetEditable@1000000000(AllowEdit@1000000000 : Boolean);
    BEGIN
      AllowEditForm := AllowEdit;
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   28.03.2007   KKE   New form for "Booking List" - Editorial Module
    }
    END.
  }
}

OBJECT Page 50034 Dummy Plan Full
{
  OBJECT-PROPERTIES
  {
    Date=07/05/07;
    Time=[ 6:00:00 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    PageType=Card;
    OnOpenPage=BEGIN
                 PgSc := 144;
                 S := 1;
                 ShowPage;
               END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1000000139;1 ;Action    ;
                      Name=cmdUp;
                      Promoted=Yes;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 IF S > 1 THEN
                                   S -= 1;
                                 ShowPage;
                               END;
                                }
      { 1000000138;1 ;Action    ;
                      Name=cmdDown;
                      Promoted=Yes;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 IF (S < 2) AND (NoOfBox > 144) THEN
                                   S += 1;
                                 ShowPage;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000002025;1;Part   ;
                Name=Box1;
                PagePartID=Page50047 }

    { 1000000221;1;Part   ;
                Name=Box290;
                PagePartID=Page50047 }

    { 1000000000;1;Part   ;
                Name=Box2;
                PagePartID=Page50047 }

    { 1000000001;1;Part   ;
                Name=Box3;
                PagePartID=Page50047 }

    { 1000000012;1;Part   ;
                Name=Box14;
                PagePartID=Page50047 }

    { 1000000013;1;Part   ;
                Name=Box15;
                PagePartID=Page50047 }

    { 1000000025;1;Part   ;
                Name=Box26;
                PagePartID=Page50047 }

    { 1000000026;1;Part   ;
                Name=Box27;
                PagePartID=Page50047 }

    { 1000000036;1;Part   ;
                Name=Box38;
                PagePartID=Page50047 }

    { 1000000037;1;Part   ;
                Name=Box39;
                PagePartID=Page50047 }

    { 1000000047;1;Part   ;
                Name=Box50;
                PagePartID=Page50047 }

    { 1000000048;1;Part   ;
                Name=Box51;
                PagePartID=Page50047 }

    { 1000000058;1;Part   ;
                Name=Box62;
                PagePartID=Page50047 }

    { 1000000059;1;Part   ;
                Name=Box63;
                PagePartID=Page50047 }

    { 1000000070;1;Part   ;
                Name=Box74;
                PagePartID=Page50047 }

    { 1000000227;1;Part   ;
                Name=Box75;
                PagePartID=Page50047 }

    { 1000000081;1;Part   ;
                Name=Box86;
                PagePartID=Page50047 }

    { 1000000082;1;Part   ;
                Name=Box87;
                PagePartID=Page50047 }

    { 1000000092;1;Part   ;
                Name=Box98;
                PagePartID=Page50047 }

    { 1000000093;1;Part   ;
                Name=Box99;
                PagePartID=Page50047 }

    { 1000000103;1;Part   ;
                Name=Box110;
                PagePartID=Page50047 }

    { 1000000104;1;Part   ;
                Name=Box111;
                PagePartID=Page50047 }

    { 1000000114;1;Part   ;
                Name=Box122;
                PagePartID=Page50047 }

    { 1000000126;1;Part   ;
                Name=Box134;
                PagePartID=Page50047 }

    { 1000000222;1;Part   ;
                Name=Box291;
                PagePartID=Page50047 }

    { 1000000223;1;Part   ;
                Name=Box292;
                PagePartID=Page50047 }

    { 1000000002;1;Part   ;
                Name=Box4;
                PagePartID=Page50047 }

    { 1000000003;1;Part   ;
                Name=Box5;
                PagePartID=Page50047 }

    { 1000000015;1;Part   ;
                Name=Box16;
                PagePartID=Page50047 }

    { 1000000016;1;Part   ;
                Name=Box17;
                PagePartID=Page50047 }

    { 1000000027;1;Part   ;
                Name=Box28;
                PagePartID=Page50047 }

    { 1000000028;1;Part   ;
                Name=Box29;
                PagePartID=Page50047 }

    { 1000000038;1;Part   ;
                Name=Box40;
                PagePartID=Page50047 }

    { 1000000039;1;Part   ;
                Name=Box41;
                PagePartID=Page50047 }

    { 1000000049;1;Part   ;
                Name=Box52;
                PagePartID=Page50047 }

    { 1000000050;1;Part   ;
                Name=Box53;
                PagePartID=Page50047 }

    { 1000000060;1;Part   ;
                Name=Box64;
                PagePartID=Page50047 }

    { 1000000061;1;Part   ;
                Name=Box65;
                PagePartID=Page50047 }

    { 1000000071;1;Part   ;
                Name=Box76;
                PagePartID=Page50047 }

    { 1000000083;1;Part   ;
                Name=Box88;
                PagePartID=Page50047 }

    { 1000000094;1;Part   ;
                Name=Box100;
                PagePartID=Page50047 }

    { 1000000105;1;Part   ;
                Name=Box112;
                PagePartID=Page50047 }

    { 1000000115;1;Part   ;
                Name=Box123;
                PagePartID=Page50047 }

    { 1000000116;1;Part   ;
                Name=Box124;
                PagePartID=Page50047 }

    { 1000000231;1;Part   ;
                Name=Box135;
                PagePartID=Page50047 }

    { 1000000127;1;Part   ;
                Name=Box136;
                PagePartID=Page50047 }

    { 1000000224;1;Part   ;
                Name=Box293;
                PagePartID=Page50047 }

    { 1000000238;1;Part   ;
                Name=Box294;
                PagePartID=Page50047 }

    { 1000000004;1;Part   ;
                Name=Box6;
                PagePartID=Page50047 }

    { 1000000005;1;Part   ;
                Name=Box7;
                PagePartID=Page50047 }

    { 1000000017;1;Part   ;
                Name=Box18;
                PagePartID=Page50047 }

    { 1000000018;1;Part   ;
                Name=Box19;
                PagePartID=Page50047 }

    { 1000000014;1;Part   ;
                Name=Box30;
                PagePartID=Page50047 }

    { 1000000040;1;Part   ;
                Name=Box42;
                PagePartID=Page50047 }

    { 1000000072;1;Part   ;
                Name=Box77;
                PagePartID=Page50047 }

    { 1000000084;1;Part   ;
                Name=Box89;
                PagePartID=Page50047 }

    { 1000000137;1;Part   ;
                Name=Box31;
                PagePartID=Page50047 }

    { 1000000041;1;Part   ;
                Name=Box43;
                PagePartID=Page50047 }

    { 1000000051;1;Part   ;
                Name=Box54;
                PagePartID=Page50047 }

    { 1000000052;1;Part   ;
                Name=Box55;
                PagePartID=Page50047 }

    { 1000000062;1;Part   ;
                Name=Box66;
                PagePartID=Page50047 }

    { 1000000063;1;Part   ;
                Name=Box67;
                PagePartID=Page50047 }

    { 1000000073;1;Part   ;
                Name=Box78;
                PagePartID=Page50047 }

    { 1000000074;1;Part   ;
                Name=Box79;
                PagePartID=Page50047 }

    { 1000000228;1;Part   ;
                Name=Box90;
                PagePartID=Page50047 }

    { 1000000095;1;Part   ;
                Name=Box101;
                PagePartID=Page50047 }

    { 1000000096;1;Part   ;
                Name=Box102;
                PagePartID=Page50047 }

    { 1000000106;1;Part   ;
                Name=Box113;
                PagePartID=Page50047 }

    { 1000000085;1;Part   ;
                Name=Box91;
                PagePartID=Page50047 }

    { 1000000097;1;Part   ;
                Name=Box103;
                PagePartID=Page50047 }

    { 1000000107;1;Part   ;
                Name=Box114;
                PagePartID=Page50047 }

    { 1000000117;1;Part   ;
                Name=Box125;
                PagePartID=Page50047 }

    { 1000000118;1;Part   ;
                Name=Box126;
                PagePartID=Page50047 }

    { 1000000128;1;Part   ;
                Name=Box137;
                PagePartID=Page50047 }

    { 1000000129;1;Part   ;
                Name=Box138;
                PagePartID=Page50047 }

    { 1000000006;1;Part   ;
                Name=Box8;
                PagePartID=Page50047 }

    { 1000000007;1;Part   ;
                Name=Box9;
                PagePartID=Page50047 }

    { 1000000019;1;Part   ;
                Name=Box20;
                PagePartID=Page50047 }

    { 1000000020;1;Part   ;
                Name=Box21;
                PagePartID=Page50047 }

    { 1000000030;1;Part   ;
                Name=Box32;
                PagePartID=Page50047 }

    { 1000000031;1;Part   ;
                Name=Box33;
                PagePartID=Page50047 }

    { 1000000042;1;Part   ;
                Name=Box44;
                PagePartID=Page50047 }

    { 1000000225;1;Part   ;
                Name=Box45;
                PagePartID=Page50047 }

    { 1000000053;1;Part   ;
                Name=Box56;
                PagePartID=Page50047 }

    { 1000000108;1;Part   ;
                Name=Box115;
                PagePartID=Page50047 }

    { 1000000054;1;Part   ;
                Name=Box57;
                PagePartID=Page50047 }

    { 1000000064;1;Part   ;
                Name=Box68;
                PagePartID=Page50047 }

    { 1000000065;1;Part   ;
                Name=Box69;
                PagePartID=Page50047 }

    { 1000000075;1;Part   ;
                Name=Box80;
                PagePartID=Page50047 }

    { 1000000076;1;Part   ;
                Name=Box81;
                PagePartID=Page50047 }

    { 1000000086;1;Part   ;
                Name=Box92;
                PagePartID=Page50047 }

    { 1000000098;1;Part   ;
                Name=Box104;
                PagePartID=Page50047 }

    { 1000000109;1;Part   ;
                Name=Box116;
                PagePartID=Page50047 }

    { 1000000119;1;Part   ;
                Name=Box127;
                PagePartID=Page50047 }

    { 1000000120;1;Part   ;
                Name=Box128;
                PagePartID=Page50047 }

    { 1000000130;1;Part   ;
                Name=Box139;
                PagePartID=Page50047 }

    { 1000000131;1;Part   ;
                Name=Box140;
                PagePartID=Page50047 }

    { 1000000008;1;Part   ;
                Name=Box10;
                PagePartID=Page50047 }

    { 1000000009;1;Part   ;
                Name=Box11;
                PagePartID=Page50047 }

    { 1000000021;1;Part   ;
                Name=Box22;
                PagePartID=Page50047 }

    { 1000000022;1;Part   ;
                Name=Box23;
                PagePartID=Page50047 }

    { 1000000032;1;Part   ;
                Name=Box34;
                PagePartID=Page50047 }

    { 1000000033;1;Part   ;
                Name=Box35;
                PagePartID=Page50047 }

    { 1000000043;1;Part   ;
                Name=Box46;
                PagePartID=Page50047 }

    { 1000000044;1;Part   ;
                Name=Box47;
                PagePartID=Page50047 }

    { 1000000055;1;Part   ;
                Name=Box58;
                PagePartID=Page50047 }

    { 1000000056;1;Part   ;
                Name=Box59;
                PagePartID=Page50047 }

    { 1000000066;1;Part   ;
                Name=Box70;
                PagePartID=Page50047 }

    { 1000000067;1;Part   ;
                Name=Box71;
                PagePartID=Page50047 }

    { 1000000077;1;Part   ;
                Name=Box82;
                PagePartID=Page50047 }

    { 1000000087;1;Part   ;
                Name=Box93;
                PagePartID=Page50047 }

    { 1000000088;1;Part   ;
                Name=Box94;
                PagePartID=Page50047 }

    { 1000000229;1;Part   ;
                Name=Box105;
                PagePartID=Page50047 }

    { 1000000099;1;Part   ;
                Name=Box106;
                PagePartID=Page50047 }

    { 1000000110;1;Part   ;
                Name=Box117;
                PagePartID=Page50047 }

    { 1000000111;1;Part   ;
                Name=Box118;
                PagePartID=Page50047 }

    { 1000000121;1;Part   ;
                Name=Box129;
                PagePartID=Page50047 }

    { 1000000122;1;Part   ;
                Name=Box130;
                PagePartID=Page50047 }

    { 1000000132;1;Part   ;
                Name=Box141;
                PagePartID=Page50047 }

    { 1000000133;1;Part   ;
                Name=Box142;
                PagePartID=Page50047 }

    { 1000000010;1;Part   ;
                Name=Box12;
                PagePartID=Page50047 }

    { 1000000011;1;Part   ;
                Name=Box13;
                PagePartID=Page50047 }

    { 1000000023;1;Part   ;
                Name=Box24;
                PagePartID=Page50047 }

    { 1000000024;1;Part   ;
                Name=Box25;
                PagePartID=Page50047 }

    { 1000000034;1;Part   ;
                Name=Box36;
                PagePartID=Page50047 }

    { 1000000035;1;Part   ;
                Name=Box37;
                PagePartID=Page50047 }

    { 1000000045;1;Part   ;
                Name=Box48;
                PagePartID=Page50047 }

    { 1000000046;1;Part   ;
                Name=Box49;
                PagePartID=Page50047 }

    { 1000000226;1;Part   ;
                Name=Box60;
                PagePartID=Page50047 }

    { 1000000057;1;Part   ;
                Name=Box61;
                PagePartID=Page50047 }

    { 1000000068;1;Part   ;
                Name=Box72;
                PagePartID=Page50047 }

    { 1000000078;1;Part   ;
                Name=Box83;
                PagePartID=Page50047 }

    { 1000000069;1;Part   ;
                Name=Box73;
                PagePartID=Page50047 }

    { 1000000079;1;Part   ;
                Name=Box84;
                PagePartID=Page50047 }

    { 1000000089;1;Part   ;
                Name=Box95;
                PagePartID=Page50047 }

    { 1000000080;1;Part   ;
                Name=Box85;
                PagePartID=Page50047 }

    { 1000000090;1;Part   ;
                Name=Box96;
                PagePartID=Page50047 }

    { 1000000100;1;Part   ;
                Name=Box107;
                PagePartID=Page50047 }

    { 1000000112;1;Part   ;
                Name=Box119;
                PagePartID=Page50047 }

    { 1000000123;1;Part   ;
                Name=Box131;
                PagePartID=Page50047 }

    { 1000000134;1;Part   ;
                Name=Box143;
                PagePartID=Page50047 }

    { 1000000091;1;Part   ;
                Name=Box97;
                PagePartID=Page50047 }

    { 1000000101;1;Part   ;
                Name=Box108;
                PagePartID=Page50047 }

    { 1000000102;1;Part   ;
                Name=Box109;
                PagePartID=Page50047 }

    { 1000000230;1;Part   ;
                Name=Box120;
                PagePartID=Page50047 }

    { 1000000113;1;Part   ;
                Name=Box121;
                PagePartID=Page50047 }

    { 1000000124;1;Part   ;
                Name=Box132;
                PagePartID=Page50047 }

    { 1000000125;1;Part   ;
                Name=Box133;
                PagePartID=Page50047 }

    { 1000000135;1;Part   ;
                Name=Box144;
                PagePartID=Page50047 }

    { 1000000136;1;Part   ;
                Name=Box145;
                PagePartID=Page50047 }

  }
  CODE
  {
    VAR
      AdsItem@1000000016 : Record 27;
      AdsItemNo@1000000006 : Code[20];
      NoOfBox@1000000000 : Integer;
      NoOfSubpageCover@1000000005 : Integer;
      I@1000000001 : ARRAY [294] OF Code[10];
      Product1@1000000007 : ARRAY [294] OF Code[50];
      Product2@1000000013 : ARRAY [294] OF Code[50];
      Product3@1000000012 : ARRAY [294] OF Code[50];
      Product4@1000000011 : ARRAY [294] OF Code[50];
      Product5@1000000010 : ARRAY [294] OF Code[50];
      Product6@1000000009 : ARRAY [294] OF Code[50];
      Product7@1000000008 : ARRAY [294] OF Code[50];
      Product8@1000000014 : ARRAY [294] OF Code[50];
      Text000@1000000003 : TextConst 'ENU=&Insert,&Switch,&Delete,Move &Up,Move &Down;THA=&จัดส่ง,&ออกใบส่งของ,จัดส่ง&และออกใบส่งของ';
      Text001@1000000017 : TextConst 'ENU=Delete &All,%1;THA=&จัดส่ง,&ออกใบส่งของ,จัดส่ง&และออกใบส่งของ';
      S@1000000002 : Integer;
      PgSc@1000000004 : Integer;
      BGColor@1000000018 : ARRAY [294] OF Option;
      ForeColor@1000000015 : ARRAY [294] OF Integer;

    PROCEDURE InitReq@1000000010(_AdsItemNo@1000000009 : Code[20];_NoOfBox@1000000008 : Integer;_NoOfSubpageCover@1000000013 : Integer;_I@1000000012 : ARRAY [294] OF Code[10];_Product1@1000000007 : ARRAY [294] OF Code[50];_Product2@1000000006 : ARRAY [294] OF Code[50];_Product3@1000000005 : ARRAY [294] OF Code[50];_Product4@1000000004 : ARRAY [294] OF Code[50];_Product5@1000000003 : ARRAY [294] OF Code[50];_Product6@1000000002 : ARRAY [294] OF Code[50];_Product7@1000000001 : ARRAY [294] OF Code[50];_Product8@1000000000 : ARRAY [294] OF Code[50];_BGColor@1000000010 : ARRAY [294] OF Option;_ForeColor@1000000014 : ARRAY [294] OF Integer);
    VAR
      x@1000000011 : Integer;
    BEGIN
      AdsItemNo := _AdsItemNo;
      AdsItem.GET(AdsItemNo );
      NoOfBox := _NoOfBox;
      NoOfSubpageCover := _NoOfSubpageCover;
      FOR x:=1 TO NoOfBox DO BEGIN
        I[x] := _I[x];
        Product1[x] := _Product1[x];
        Product2[x] := _Product2[x];
        Product3[x] := _Product3[x];
        Product4[x] := _Product4[x];
        Product5[x] := _Product5[x];
        Product6[x] := _Product6[x];
        Product7[x] := _Product7[x];
        Product8[x] := _Product8[x];
        BGColor[x] := _BGColor[x];
        ForeColor[x] := _ForeColor[x];
      END;
      FOR x:=1 TO NoOfSubpageCover DO BEGIN
        I[289+x] := _I[289+x];
        Product1[289+x] := _Product1[289+x];
        Product2[289+x] := _Product2[289+x];
        Product3[289+x] := _Product3[289+x];
        Product4[289+x] := _Product4[289+x];
        Product5[289+x] := _Product5[289+x];
        Product6[289+x] := _Product6[289+x];
        Product7[289+x] := _Product7[289+x];
        Product8[289+x] := _Product8[289+x];
        BGColor[289+x] := _BGColor[289+x];
        ForeColor[289+x] := _ForeColor[289+x];
      END;
    END;

    PROCEDURE ShowPage@1000000003();
    VAR
      z@1000000000 : Integer;
    BEGIN
      CurrPage.Box1.PAGE.SetColor(BGColor[1],ForeColor[1],I[1],Product1[1],Product2[1]);
      CurrPage.Box290.PAGE.SetColor(BGColor[290],ForeColor[290],I[290],Product1[290],Product2[290]);
      CurrPage.Box291.PAGE.SetColor(BGColor[291],ForeColor[291],I[291],Product1[291],Product2[291]);
      CurrPage.Box292.PAGE.SetColor(BGColor[292],ForeColor[292],I[292],Product1[292],Product2[292]);
      CurrPage.Box293.PAGE.SetColor(BGColor[293],ForeColor[293],I[293],Product1[293],Product2[293]);
      CurrPage.Box294.PAGE.SetColor(BGColor[294],ForeColor[294],I[294],Product1[294],Product2[294]);

      z := (S-1)*PgSc;
      CurrPage.Box2.PAGE.SetColor(BGColor[z+2],ForeColor[z+2],I[z+2],Product1[z+2],Product2[z+2]);
      CurrPage.Box3.PAGE.SetColor(BGColor[z+3],ForeColor[z+3],I[z+3],Product1[z+3],Product2[z+3]);
      CurrPage.Box4.PAGE.SetColor(BGColor[z+4],ForeColor[z+4],I[z+4],Product1[z+4],Product2[z+4]);
      CurrPage.Box5.PAGE.SetColor(BGColor[z+5],ForeColor[z+5],I[z+5],Product1[z+5],Product2[z+5]);
      CurrPage.Box6.PAGE.SetColor(BGColor[z+6],ForeColor[z+6],I[z+6],Product1[z+6],Product2[z+6]);
      CurrPage.Box7.PAGE.SetColor(BGColor[z+7],ForeColor[z+7],I[z+7],Product1[z+7],Product2[z+7]);
      CurrPage.Box8.PAGE.SetColor(BGColor[z+8],ForeColor[z+8],I[z+8],Product1[z+8],Product2[z+8]);
      CurrPage.Box9.PAGE.SetColor(BGColor[z+9],ForeColor[z+9],I[z+9],Product1[z+9],Product2[z+9]);
      CurrPage.Box10.PAGE.SetColor(BGColor[z+10],ForeColor[z+10],I[z+10],Product1[z+10],Product2[z+10]);
      CurrPage.Box11.PAGE.SetColor(BGColor[z+11],ForeColor[z+11],I[z+11],Product1[z+11],Product2[z+11]);
      CurrPage.Box12.PAGE.SetColor(BGColor[z+12],ForeColor[z+12],I[z+12],Product1[z+12],Product2[z+12]);
      CurrPage.Box13.PAGE.SetColor(BGColor[z+13],ForeColor[z+13],I[z+13],Product1[z+13],Product2[z+13]);
      CurrPage.Box14.PAGE.SetColor(BGColor[z+14],ForeColor[z+14],I[z+14],Product1[z+14],Product2[z+14]);
      CurrPage.Box15.PAGE.SetColor(BGColor[z+15],ForeColor[z+15],I[z+15],Product1[z+15],Product2[z+15]);
      CurrPage.Box16.PAGE.SetColor(BGColor[z+16],ForeColor[z+16],I[z+16],Product1[z+16],Product2[z+16]);
      CurrPage.Box17.PAGE.SetColor(BGColor[z+17],ForeColor[z+17],I[z+17],Product1[z+17],Product2[z+17]);
      CurrPage.Box18.PAGE.SetColor(BGColor[z+18],ForeColor[z+18],I[z+18],Product1[z+18],Product2[z+18]);
      CurrPage.Box19.PAGE.SetColor(BGColor[z+19],ForeColor[z+19],I[z+19],Product1[z+19],Product2[z+19]);
      CurrPage.Box20.PAGE.SetColor(BGColor[z+20],ForeColor[z+20],I[z+20],Product1[z+20],Product2[z+20]);
      CurrPage.Box21.PAGE.SetColor(BGColor[z+21],ForeColor[z+21],I[z+21],Product1[z+21],Product2[z+21]);
      CurrPage.Box22.PAGE.SetColor(BGColor[z+22],ForeColor[z+22],I[z+22],Product1[z+22],Product2[z+22]);
      CurrPage.Box23.PAGE.SetColor(BGColor[z+23],ForeColor[z+23],I[z+23],Product1[z+23],Product2[z+23]);
      CurrPage.Box24.PAGE.SetColor(BGColor[z+24],ForeColor[z+24],I[z+24],Product1[z+24],Product2[z+24]);
      CurrPage.Box25.PAGE.SetColor(BGColor[z+25],ForeColor[z+25],I[z+25],Product1[z+25],Product2[z+25]);
      CurrPage.Box26.PAGE.SetColor(BGColor[z+26],ForeColor[z+26],I[z+26],Product1[z+26],Product2[z+26]);
      CurrPage.Box27.PAGE.SetColor(BGColor[z+27],ForeColor[z+27],I[z+27],Product1[z+27],Product2[z+27]);
      CurrPage.Box28.PAGE.SetColor(BGColor[z+28],ForeColor[z+28],I[z+28],Product1[z+28],Product2[z+28]);
      CurrPage.Box29.PAGE.SetColor(BGColor[z+29],ForeColor[z+29],I[z+29],Product1[z+29],Product2[z+29]);
      CurrPage.Box30.PAGE.SetColor(BGColor[z+30],ForeColor[z+30],I[z+30],Product1[z+30],Product2[z+30]);
      CurrPage.Box31.PAGE.SetColor(BGColor[z+31],ForeColor[z+31],I[z+31],Product1[z+31],Product2[z+31]);
      CurrPage.Box32.PAGE.SetColor(BGColor[z+32],ForeColor[z+32],I[z+32],Product1[z+32],Product2[z+32]);
      CurrPage.Box33.PAGE.SetColor(BGColor[z+33],ForeColor[z+33],I[z+33],Product1[z+33],Product2[z+33]);
      CurrPage.Box34.PAGE.SetColor(BGColor[z+34],ForeColor[z+34],I[z+34],Product1[z+34],Product2[z+34]);
      CurrPage.Box35.PAGE.SetColor(BGColor[z+35],ForeColor[z+35],I[z+35],Product1[z+35],Product2[z+35]);
      CurrPage.Box36.PAGE.SetColor(BGColor[z+36],ForeColor[z+36],I[z+36],Product1[z+36],Product2[z+36]);
      CurrPage.Box37.PAGE.SetColor(BGColor[z+37],ForeColor[z+37],I[z+37],Product1[z+37],Product2[z+37]);
      CurrPage.Box38.PAGE.SetColor(BGColor[z+38],ForeColor[z+38],I[z+38],Product1[z+38],Product2[z+38]);
      CurrPage.Box39.PAGE.SetColor(BGColor[z+39],ForeColor[z+39],I[z+39],Product1[z+39],Product2[z+39]);
      CurrPage.Box40.PAGE.SetColor(BGColor[z+40],ForeColor[z+40],I[z+40],Product1[z+40],Product2[z+40]);
      CurrPage.Box41.PAGE.SetColor(BGColor[z+41],ForeColor[z+41],I[z+41],Product1[z+41],Product2[z+41]);
      CurrPage.Box42.PAGE.SetColor(BGColor[z+42],ForeColor[z+42],I[z+42],Product1[z+42],Product2[z+42]);
      CurrPage.Box43.PAGE.SetColor(BGColor[z+43],ForeColor[z+43],I[z+43],Product1[z+43],Product2[z+43]);
      CurrPage.Box44.PAGE.SetColor(BGColor[z+44],ForeColor[z+44],I[z+44],Product1[z+44],Product2[z+44]);
      CurrPage.Box45.PAGE.SetColor(BGColor[z+45],ForeColor[z+45],I[z+45],Product1[z+45],Product2[z+45]);
      CurrPage.Box46.PAGE.SetColor(BGColor[z+46],ForeColor[z+46],I[z+46],Product1[z+46],Product2[z+46]);
      CurrPage.Box47.PAGE.SetColor(BGColor[z+47],ForeColor[z+47],I[z+47],Product1[z+47],Product2[z+47]);
      CurrPage.Box48.PAGE.SetColor(BGColor[z+48],ForeColor[z+48],I[z+48],Product1[z+48],Product2[z+48]);
      CurrPage.Box49.PAGE.SetColor(BGColor[z+49],ForeColor[z+49],I[z+49],Product1[z+49],Product2[z+49]);
      CurrPage.Box50.PAGE.SetColor(BGColor[z+50],ForeColor[z+50],I[z+50],Product1[z+50],Product2[z+50]);
      CurrPage.Box51.PAGE.SetColor(BGColor[z+51],ForeColor[z+51],I[z+51],Product1[z+51],Product2[z+51]);
      CurrPage.Box52.PAGE.SetColor(BGColor[z+52],ForeColor[z+52],I[z+52],Product1[z+52],Product2[z+52]);
      CurrPage.Box53.PAGE.SetColor(BGColor[z+53],ForeColor[z+53],I[z+53],Product1[z+53],Product2[z+53]);
      CurrPage.Box54.PAGE.SetColor(BGColor[z+54],ForeColor[z+54],I[z+54],Product1[z+54],Product2[z+54]);
      CurrPage.Box55.PAGE.SetColor(BGColor[z+55],ForeColor[z+55],I[z+55],Product1[z+55],Product2[z+55]);
      CurrPage.Box56.PAGE.SetColor(BGColor[z+56],ForeColor[z+56],I[z+56],Product1[z+56],Product2[z+56]);
      CurrPage.Box57.PAGE.SetColor(BGColor[z+57],ForeColor[z+57],I[z+57],Product1[z+57],Product2[z+57]);
      CurrPage.Box58.PAGE.SetColor(BGColor[z+58],ForeColor[z+58],I[z+58],Product1[z+58],Product2[z+58]);
      CurrPage.Box59.PAGE.SetColor(BGColor[z+59],ForeColor[z+59],I[z+59],Product1[z+59],Product2[z+59]);
      CurrPage.Box60.PAGE.SetColor(BGColor[z+60],ForeColor[z+60],I[z+60],Product1[z+60],Product2[z+60]);
      CurrPage.Box61.PAGE.SetColor(BGColor[z+61],ForeColor[z+61],I[z+61],Product1[z+61],Product2[z+61]);
      CurrPage.Box62.PAGE.SetColor(BGColor[z+62],ForeColor[z+62],I[z+62],Product1[z+62],Product2[z+62]);
      CurrPage.Box63.PAGE.SetColor(BGColor[z+63],ForeColor[z+63],I[z+63],Product1[z+63],Product2[z+63]);
      CurrPage.Box64.PAGE.SetColor(BGColor[z+64],ForeColor[z+64],I[z+64],Product1[z+64],Product2[z+64]);
      CurrPage.Box65.PAGE.SetColor(BGColor[z+65],ForeColor[z+65],I[z+65],Product1[z+65],Product2[z+65]);
      CurrPage.Box66.PAGE.SetColor(BGColor[z+66],ForeColor[z+66],I[z+66],Product1[z+66],Product2[z+66]);
      CurrPage.Box67.PAGE.SetColor(BGColor[z+67],ForeColor[z+67],I[z+67],Product1[z+67],Product2[z+67]);
      CurrPage.Box68.PAGE.SetColor(BGColor[z+68],ForeColor[z+68],I[z+68],Product1[z+68],Product2[z+68]);
      CurrPage.Box69.PAGE.SetColor(BGColor[z+69],ForeColor[z+69],I[z+69],Product1[z+69],Product2[z+69]);
      CurrPage.Box70.PAGE.SetColor(BGColor[z+70],ForeColor[z+70],I[z+70],Product1[z+70],Product2[z+70]);
      CurrPage.Box71.PAGE.SetColor(BGColor[z+71],ForeColor[z+71],I[z+71],Product1[z+71],Product2[z+71]);
      CurrPage.Box72.PAGE.SetColor(BGColor[z+72],ForeColor[z+72],I[z+72],Product1[z+72],Product2[z+72]);
      CurrPage.Box73.PAGE.SetColor(BGColor[z+73],ForeColor[z+73],I[z+73],Product1[z+73],Product2[z+73]);
      CurrPage.Box74.PAGE.SetColor(BGColor[z+74],ForeColor[z+74],I[z+74],Product1[z+74],Product2[z+74]);
      CurrPage.Box75.PAGE.SetColor(BGColor[z+75],ForeColor[z+75],I[z+75],Product1[z+75],Product2[z+75]);
      CurrPage.Box76.PAGE.SetColor(BGColor[z+76],ForeColor[z+76],I[z+76],Product1[z+76],Product2[z+76]);
      CurrPage.Box77.PAGE.SetColor(BGColor[z+77],ForeColor[z+77],I[z+77],Product1[z+77],Product2[z+77]);
      CurrPage.Box78.PAGE.SetColor(BGColor[z+78],ForeColor[z+78],I[z+78],Product1[z+78],Product2[z+78]);
      CurrPage.Box79.PAGE.SetColor(BGColor[z+79],ForeColor[z+79],I[z+79],Product1[z+79],Product2[z+79]);
      CurrPage.Box80.PAGE.SetColor(BGColor[z+80],ForeColor[z+80],I[z+80],Product1[z+80],Product2[z+80]);
      CurrPage.Box81.PAGE.SetColor(BGColor[z+81],ForeColor[z+81],I[z+81],Product1[z+81],Product2[z+81]);
      CurrPage.Box82.PAGE.SetColor(BGColor[z+82],ForeColor[z+82],I[z+82],Product1[z+82],Product2[z+82]);
      CurrPage.Box83.PAGE.SetColor(BGColor[z+83],ForeColor[z+83],I[z+83],Product1[z+83],Product2[z+83]);
      CurrPage.Box84.PAGE.SetColor(BGColor[z+84],ForeColor[z+84],I[z+84],Product1[z+84],Product2[z+84]);
      CurrPage.Box85.PAGE.SetColor(BGColor[z+85],ForeColor[z+85],I[z+85],Product1[z+85],Product2[z+85]);
      CurrPage.Box86.PAGE.SetColor(BGColor[z+86],ForeColor[z+86],I[z+86],Product1[z+86],Product2[z+86]);
      CurrPage.Box87.PAGE.SetColor(BGColor[z+87],ForeColor[z+87],I[z+87],Product1[z+87],Product2[z+87]);
      CurrPage.Box88.PAGE.SetColor(BGColor[z+88],ForeColor[z+88],I[z+88],Product1[z+88],Product2[z+88]);
      CurrPage.Box89.PAGE.SetColor(BGColor[z+89],ForeColor[z+89],I[z+89],Product1[z+89],Product2[z+89]);
      CurrPage.Box90.PAGE.SetColor(BGColor[z+90],ForeColor[z+90],I[z+90],Product1[z+90],Product2[z+90]);
      CurrPage.Box91.PAGE.SetColor(BGColor[z+91],ForeColor[z+91],I[z+91],Product1[z+91],Product2[z+91]);
      CurrPage.Box92.PAGE.SetColor(BGColor[z+92],ForeColor[z+92],I[z+92],Product1[z+92],Product2[z+92]);
      CurrPage.Box93.PAGE.SetColor(BGColor[z+93],ForeColor[z+93],I[z+93],Product1[z+93],Product2[z+93]);
      CurrPage.Box94.PAGE.SetColor(BGColor[z+94],ForeColor[z+94],I[z+94],Product1[z+94],Product2[z+94]);
      CurrPage.Box95.PAGE.SetColor(BGColor[z+95],ForeColor[z+95],I[z+95],Product1[z+95],Product2[z+95]);
      CurrPage.Box96.PAGE.SetColor(BGColor[z+96],ForeColor[z+96],I[z+96],Product1[z+96],Product2[z+96]);
      CurrPage.Box97.PAGE.SetColor(BGColor[z+97],ForeColor[z+97],I[z+97],Product1[z+97],Product2[z+97]);
      CurrPage.Box98.PAGE.SetColor(BGColor[z+98],ForeColor[z+98],I[z+98],Product1[z+98],Product2[z+98]);
      CurrPage.Box99.PAGE.SetColor(BGColor[z+99],ForeColor[z+99],I[z+99],Product1[z+99],Product2[z+99]);

      CurrPage.Box100.PAGE.SetColor(BGColor[z+100],ForeColor[z+100],I[z+100],Product1[z+100],Product2[z+100]);
      CurrPage.Box101.PAGE.SetColor(BGColor[z+101],ForeColor[z+101],I[z+101],Product1[z+101],Product2[z+101]);
      CurrPage.Box102.PAGE.SetColor(BGColor[z+102],ForeColor[z+102],I[z+102],Product1[z+102],Product2[z+102]);
      CurrPage.Box103.PAGE.SetColor(BGColor[z+103],ForeColor[z+103],I[z+103],Product1[z+103],Product2[z+103]);
      CurrPage.Box104.PAGE.SetColor(BGColor[z+104],ForeColor[z+104],I[z+104],Product1[z+104],Product2[z+104]);
      CurrPage.Box105.PAGE.SetColor(BGColor[z+105],ForeColor[z+105],I[z+105],Product1[z+105],Product2[z+105]);
      CurrPage.Box106.PAGE.SetColor(BGColor[z+106],ForeColor[z+106],I[z+106],Product1[z+106],Product2[z+106]);
      CurrPage.Box107.PAGE.SetColor(BGColor[z+107],ForeColor[z+107],I[z+107],Product1[z+107],Product2[z+107]);
      CurrPage.Box108.PAGE.SetColor(BGColor[z+108],ForeColor[z+108],I[z+108],Product1[z+108],Product2[z+108]);
      CurrPage.Box109.PAGE.SetColor(BGColor[z+109],ForeColor[z+109],I[z+109],Product1[z+109],Product2[z+109]);
      CurrPage.Box110.PAGE.SetColor(BGColor[z+110],ForeColor[z+110],I[z+110],Product1[z+110],Product2[z+110]);
      CurrPage.Box111.PAGE.SetColor(BGColor[z+111],ForeColor[z+111],I[z+111],Product1[z+111],Product2[z+111]);
      CurrPage.Box112.PAGE.SetColor(BGColor[z+112],ForeColor[z+112],I[z+112],Product1[z+112],Product2[z+112]);
      CurrPage.Box113.PAGE.SetColor(BGColor[z+113],ForeColor[z+113],I[z+113],Product1[z+113],Product2[z+113]);
      CurrPage.Box114.PAGE.SetColor(BGColor[z+114],ForeColor[z+114],I[z+114],Product1[z+114],Product2[z+114]);
      CurrPage.Box115.PAGE.SetColor(BGColor[z+115],ForeColor[z+115],I[z+115],Product1[z+115],Product2[z+115]);
      CurrPage.Box116.PAGE.SetColor(BGColor[z+116],ForeColor[z+116],I[z+116],Product1[z+116],Product2[z+116]);
      CurrPage.Box117.PAGE.SetColor(BGColor[z+117],ForeColor[z+117],I[z+117],Product1[z+117],Product2[z+117]);
      CurrPage.Box118.PAGE.SetColor(BGColor[z+118],ForeColor[z+118],I[z+118],Product1[z+118],Product2[z+118]);
      CurrPage.Box119.PAGE.SetColor(BGColor[z+119],ForeColor[z+119],I[z+119],Product1[z+119],Product2[z+119]);
      CurrPage.Box120.PAGE.SetColor(BGColor[z+120],ForeColor[z+120],I[z+120],Product1[z+120],Product2[z+120]);
      CurrPage.Box121.PAGE.SetColor(BGColor[z+121],ForeColor[z+121],I[z+121],Product1[z+121],Product2[z+121]);
      CurrPage.Box122.PAGE.SetColor(BGColor[z+122],ForeColor[z+122],I[z+122],Product1[z+122],Product2[z+122]);
      CurrPage.Box123.PAGE.SetColor(BGColor[z+123],ForeColor[z+123],I[z+123],Product1[z+123],Product2[z+123]);
      CurrPage.Box124.PAGE.SetColor(BGColor[z+124],ForeColor[z+124],I[z+124],Product1[z+124],Product2[z+124]);
      CurrPage.Box125.PAGE.SetColor(BGColor[z+125],ForeColor[z+125],I[z+125],Product1[z+125],Product2[z+125]);
      CurrPage.Box126.PAGE.SetColor(BGColor[z+126],ForeColor[z+126],I[z+126],Product1[z+126],Product2[z+126]);
      CurrPage.Box127.PAGE.SetColor(BGColor[z+127],ForeColor[z+127],I[z+127],Product1[z+127],Product2[z+127]);
      CurrPage.Box128.PAGE.SetColor(BGColor[z+128],ForeColor[z+128],I[z+128],Product1[z+128],Product2[z+128]);
      CurrPage.Box129.PAGE.SetColor(BGColor[z+129],ForeColor[z+129],I[z+129],Product1[z+129],Product2[z+129]);
      CurrPage.Box130.PAGE.SetColor(BGColor[z+130],ForeColor[z+130],I[z+130],Product1[z+130],Product2[z+130]);
      CurrPage.Box131.PAGE.SetColor(BGColor[z+131],ForeColor[z+131],I[z+131],Product1[z+131],Product2[z+131]);
      CurrPage.Box132.PAGE.SetColor(BGColor[z+132],ForeColor[z+132],I[z+132],Product1[z+132],Product2[z+132]);
      CurrPage.Box133.PAGE.SetColor(BGColor[z+133],ForeColor[z+133],I[z+133],Product1[z+133],Product2[z+133]);
      CurrPage.Box134.PAGE.SetColor(BGColor[z+134],ForeColor[z+134],I[z+134],Product1[z+134],Product2[z+134]);
      CurrPage.Box135.PAGE.SetColor(BGColor[z+135],ForeColor[z+135],I[z+135],Product1[z+135],Product2[z+135]);
      CurrPage.Box136.PAGE.SetColor(BGColor[z+136],ForeColor[z+136],I[z+136],Product1[z+136],Product2[z+136]);
      CurrPage.Box137.PAGE.SetColor(BGColor[z+137],ForeColor[z+137],I[z+137],Product1[z+137],Product2[z+137]);
      CurrPage.Box138.PAGE.SetColor(BGColor[z+138],ForeColor[z+138],I[z+138],Product1[z+138],Product2[z+138]);
      CurrPage.Box139.PAGE.SetColor(BGColor[z+139],ForeColor[z+139],I[z+139],Product1[z+139],Product2[z+139]);
      CurrPage.Box140.PAGE.SetColor(BGColor[z+140],ForeColor[z+140],I[z+140],Product1[z+140],Product2[z+140]);
      CurrPage.Box141.PAGE.SetColor(BGColor[z+141],ForeColor[z+141],I[z+141],Product1[z+141],Product2[z+141]);
      CurrPage.Box142.PAGE.SetColor(BGColor[z+142],ForeColor[z+142],I[z+142],Product1[z+142],Product2[z+142]);
      CurrPage.Box143.PAGE.SetColor(BGColor[z+143],ForeColor[z+143],I[z+143],Product1[z+143],Product2[z+143]);
      CurrPage.Box144.PAGE.SetColor(BGColor[z+144],ForeColor[z+144],I[z+144],Product1[z+144],Product2[z+144]);
      CurrPage.Box145.PAGE.SetColor(BGColor[z+145],ForeColor[z+145],I[z+145],Product1[z+145],Product2[z+145]);
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   04.06.2007   KKE   New form for "Dummy Plan Full" - Editorial Module
    }
    END.
  }
}

OBJECT Page 50035 Ads. Item Setup
{
  OBJECT-PROPERTIES
  {
    Date=06/14/07;
    Time=[ 6:00:00 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table50026;
    PageType=Card;
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                CaptionML=ENU=General }

    { 1000000001;2;Field  ;
                SourceExpr="Default Base UOM" }

    { 1000000003;2;Field  ;
                SourceExpr="Ads. Revenue Account" }

    { 1000000011;2;Field  ;
                SourceExpr="VAT Prod. Posting Group" }

    { 1000000009;2;Field  ;
                SourceExpr="Lock Ads. Closing Date" }

    { 1000000016;2;Field  ;
                SourceExpr="Allow Duplicate Billing Line" }

    { 1904569201;1;Group  ;
                CaptionML=ENU=Numbering }

    { 1000000005;2;Field  ;
                SourceExpr="Booking Nos." }

    { 1000000014;2;Field  ;
                SourceExpr="Ads. Sales Invoice Nos." }

    { 1000000007;2;Field  ;
                SourceExpr="Billing Nos." }

    { 1000000018;2;Field  ;
                SourceExpr="Posted Invoice Nos." }

  }
  CODE
  {

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   04.05.2007   KKE   New form for "Ads. Item Setup" - Ads. Sales Module
    }
    END.
  }
}

OBJECT Page 50036 Booking Revenue Type
{
  OBJECT-PROPERTIES
  {
    Date=06/21/07;
    Time=[ 6:00:00 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    SourceTable=Table50027;
    DelayedInsert=Yes;
    PageType=Card;
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                GroupType=Repeater }

    { 1000000001;2;Field  ;
                SourceExpr=Code }

    { 1000000003;2;Field  ;
                SourceExpr=Description }

    { 1000000005;2;Field  ;
                SourceExpr="Magazine Code" }

    { 1000000007;2;Field  ;
                SourceExpr="Ads. Type" }

    { 1000000009;2;Field  ;
                SourceExpr=Type }

    { 1000000011;2;Field  ;
                SourceExpr="Create Sale Invoice" }

    { 1000000013;2;Field  ;
                SourceExpr="Bill Revenue G/L Account" }

    { 1000000015;2;Field  ;
                SourceExpr="Required Barter G/L Account" }

    { 1000000017;2;Field  ;
                SourceExpr="Barter G/L Account" }

    { 1000000062;2;Field  ;
                SourceExpr="Blackground Color" }

    { 1000000064;2;Field  ;
                SourceExpr="Foreground Color" }

    { 1000000043;1;Field  ;
                CaptionClass=Text19046141 }

    { 1000000035;1;Field  ;
                CaptionClass=Text19016082;
                MultiLine=Yes }

    { 1000000033;1;Field  ;
                CaptionClass=Text19051685 }

    { 1000000045;1;Field  ;
                CaptionClass=Text19074475;
                MultiLine=Yes }

    { 1000000034;1;Field  ;
                CaptionClass=Text19073657 }

    { 1000000032;1;Field  ;
                CaptionClass=Text19006866 }

    { 1000000044;1;Field  ;
                CaptionClass=Text19057446;
                MultiLine=Yes }

    { 1000000026;1;Field  ;
                CaptionClass=Text19036415;
                MultiLine=Yes }

    { 1000000031;1;Field  ;
                CaptionClass=Text19079861 }

    { 1000000037;1;Field  ;
                CaptionClass=Text19052732 }

    { 1000000042;1;Field  ;
                CaptionClass=Text19016090;
                MultiLine=Yes }

    { 1000000053;1;Field  ;
                CaptionClass=Text19022310;
                MultiLine=Yes }

    { 1000000041;1;Field  ;
                CaptionClass=Text19019210 }

    { 1000000052;1;Field  ;
                CaptionClass=Text19015665;
                MultiLine=Yes }

    { 1000000050;1;Field  ;
                CaptionClass=Text19045579 }

    { 1000000058;1;Field  ;
                CaptionClass=Text19032294;
                MultiLine=Yes }

    { 1000000059;1;Field  ;
                CaptionClass=Text19056084;
                MultiLine=Yes }

    { 1000000060;1;Field  ;
                CaptionClass=Text19047863 }

    { 1000000025;1;Field  ;
                CaptionClass=Text19012296;
                MultiLine=Yes }

    { 1000000029;1;Field  ;
                CaptionClass=Text19071969;
                MultiLine=Yes }

    { 1000000040;1;Field  ;
                CaptionClass=Text19009302;
                MultiLine=Yes }

    { 1000000051;1;Field  ;
                CaptionClass=Text19032025 }

    { 1000000061;1;Field  ;
                CaptionClass=Text19068979;
                MultiLine=Yes }

    { 1000000024;1;Field  ;
                CaptionClass=Text19016196;
                MultiLine=Yes }

    { 1000000023;1;Field  ;
                CaptionClass=Text19058474 }

    { 1000000022;1;Field  ;
                CaptionClass=Text19041585 }

    { 1000000027;1;Field  ;
                CaptionClass=Text19044500 }

    { 1000000030;1;Field  ;
                CaptionClass=Text19014195 }

    { 1000000028;1;Field  ;
                CaptionClass=Text19027750 }

    { 1000000039;1;Field  ;
                CaptionClass=Text19060045;
                MultiLine=Yes }

    { 1000000038;1;Field  ;
                CaptionClass=Text19029161;
                MultiLine=Yes }

    { 1000000049;1;Field  ;
                CaptionClass=Text19008324;
                MultiLine=Yes }

    { 1000000057;1;Field  ;
                CaptionClass=Text19056105;
                MultiLine=Yes }

    { 1000000036;1;Field  ;
                CaptionClass=Text19002374 }

    { 1000000048;1;Field  ;
                CaptionClass=Text19013543;
                MultiLine=Yes }

    { 1000000046;1;Field  ;
                CaptionClass=Text19041711 }

    { 1000000047;1;Field  ;
                CaptionClass=Text19002388 }

    { 1000000056;1;Field  ;
                CaptionClass=Text19076108;
                MultiLine=Yes }

    { 1000000054;1;Field  ;
                CaptionClass=Text19007305 }

    { 1000000055;1;Field  ;
                CaptionClass=Text19053904 }

  }
  CODE
  {
    VAR
      Text19053904@19067493 : TextConst 'ENU=Black';
      Text19007305@19066785 : TextConst 'ENU=Brown';
      Text19076108@19057826 : TextConst 'ENU=Olive Green';
      Text19002388@19049422 : TextConst 'ENU=Dark Red';
      Text19041711@19006462 : TextConst 'ENU=Orange';
      Text19013543@19009913 : TextConst 'ENU=Dark Yellow';
      Text19002374@19058571 : TextConst 'ENU=Red';
      Text19056105@19019618 : TextConst 'ENU=Dark Green';
      Text19008324@19014050 : TextConst 'ENU=Green';
      Text19029161@19024501 : TextConst 'ENU=Light Orange';
      Text19060045@19004472 : TextConst 'ENU=Lime';
      Text19027750@19023056 : TextConst 'ENU=Pink';
      Text19014195@19013603 : TextConst 'ENU=Gold';
      Text19044500@19056608 : TextConst 'ENU=Yellow';
      Text19041585@19037067 : TextConst 'ENU=Rose';
      Text19058474@19031825 : TextConst 'ENU=Tan';
      Text19016196@19042789 : TextConst 'ENU=Light Yellow';
      Text19068979@19035281 : TextConst 'ENU=Dark Teal';
      Text19032025@19064860 : TextConst 'ENU=Teal';
      Text19009302@19037611 : TextConst 'ENU=Sea Green';
      Text19071969@19049261 : TextConst 'ENU=Bright Green';
      Text19012296@19057257 : TextConst 'ENU=Light Green';
      Text19047863@19002475 : TextConst 'ENU=Dark Blue';
      Text19056084@19066954 : TextConst 'ENU=Indigo';
      Text19032294@19072233 : TextConst 'ENU=Gray - 80%';
      Text19045579@19037316 : TextConst 'ENU=Blue';
      Text19015665@19000809 : TextConst 'ENU=Blue-Gray';
      Text19019210@19076550 : TextConst 'ENU=Aqua';
      Text19022310@19044033 : TextConst 'ENU=Gray - 50%';
      Text19016090@19057253 : TextConst 'ENU=Light Blue';
      Text19052732@19045111 : TextConst 'ENU=Violet';
      Text19079861@19015605 : TextConst 'ENU=Turquoise';
      Text19036415@19039357 : TextConst 'ENU=Light Turquoise';
      Text19057446@19013365 : TextConst 'ENU=Gray - 40%';
      Text19006866@19071852 : TextConst 'ENU=Sky Blue';
      Text19073657@19047636 : TextConst 'ENU=Plum';
      Text19074475@19027845 : TextConst 'ENU=Gray - 25%';
      Text19051685@19021579 : TextConst 'ENU=Pale Blue';
      Text19016082@19030922 : TextConst 'ENU=Lavender';
      Text19046141@19052086 : TextConst 'ENU=White';

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   04.05.2007   KKE   New form for "Booking Revenue Type" - Ads. Sales Module
    }
    END.
  }
}

OBJECT Page 50037 Ads. Size
{
  OBJECT-PROPERTIES
  {
    Date=05/04/07;
    Time=[ 6:00:00 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    SourceTable=Table50028;
    DelayedInsert=Yes;
    PageType=Card;
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                GroupType=Repeater }

    { 1000000001;2;Field  ;
                SourceExpr=Code }

    { 1000000003;2;Field  ;
                SourceExpr=Description }

    { 1000000005;2;Field  ;
                SourceExpr="Counting Unit" }

  }
  CODE
  {

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   04.05.2007   KKE   New form for "Ads. Size" - Ads. Sales Module
    }
    END.
  }
}

OBJECT Page 50038 Ads. Position
{
  OBJECT-PROPERTIES
  {
    Date=02/27/08;
    Time=11:28:38 AM;
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    SourceTable=Table50029;
    DelayedInsert=Yes;
    PageType=Card;
    OnOpenPage=BEGIN
                 IF CurrPage.LOOKUPMODE THEN
                   SETRANGE(Closed,FALSE);
               END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                GroupType=Repeater }

    { 1000000001;2;Field  ;
                SourceExpr=Code }

    { 1000000003;2;Field  ;
                SourceExpr="Magazine Code" }

    { 1000000012;2;Field  ;
                SourceExpr=Description }

    { 1000000007;2;Field  ;
                SourceExpr="Shortcut Dimension 5 Code" }

    { 1000000005;2;Field  ;
                SourceExpr="Position Type" }

    { 1000000014;2;Field  ;
                SourceExpr=Closed }

  }
  CODE
  {

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   04.05.2007   KKE   New form for "Ads. Position" - Ads. Sales Module
    }
    END.
  }
}

OBJECT Page 50039 Product Category
{
  OBJECT-PROPERTIES
  {
    Date=05/15/09;
    Time=[ 9:26:08 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    SourceTable=Table50030;
    DelayedInsert=Yes;
    PageType=Card;
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                GroupType=Repeater }

    { 1000000001;2;Field  ;
                SourceExpr=Code }

    { 1000000003;2;Field  ;
                SourceExpr=Description }

    { 1000000008;2;Field  ;
                SourceExpr="Main Category" }

    { 1000000010;2;Field  ;
                SourceExpr="Main Description" }

  }
  CODE
  {

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   04.05.2007   KKE   New form for "Product Category" - Ads. Sales Module
    }
    END.
  }
}

OBJECT Page 50040 Ads. Product
{
  OBJECT-PROPERTIES
  {
    Date=09/08/10;
    Time=11:09:49 AM;
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    SourceTable=Table50031;
    DelayedInsert=Yes;
    PageType=Card;
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                GroupType=Repeater }

    { 1000000001;2;Field  ;
                SourceExpr=Code }

    { 1000000003;2;Field  ;
                SourceExpr=Description }

    { 1000000012;2;Field  ;
                SourceExpr="Short Description" }

    { 1000000005;2;Field  ;
                SourceExpr="Product Category" }

    { 1000000007;2;Field  ;
                SourceExpr="Owner Customer" }

    { 1000000014;2;Field  ;
                CaptionML=ENU=Brand;
                SourceExpr="Product Group" }

  }
  CODE
  {

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   04.05.2007   KKE   New form for "Ads. Product" - Ads. Sales Module
    }
    END.
  }
}

OBJECT Page 50041 Ads. Type
{
  OBJECT-PROPERTIES
  {
    Date=06/11/07;
    Time=[ 6:00:00 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    SourceTable=Table50032;
    DelayedInsert=Yes;
    PageType=Card;
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                GroupType=Repeater }

    { 1000000001;2;Field  ;
                SourceExpr=Code }

    { 1000000003;2;Field  ;
                SourceExpr=Description }

    { 1000000008;2;Field  ;
                SourceExpr="Gen. Bus. Posting Group" }

  }
  CODE
  {

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   04.05.2007   KKE   New form for "Ads. Type" - Ads. Sales Module
    }
    END.
  }
}

OBJECT Page 50042 Ads. Sub Type
{
  OBJECT-PROPERTIES
  {
    Date=02/15/12;
    Time=10:13:44 AM;
    Modified=Yes;
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    SourceTable=Table50033;
    DelayedInsert=Yes;
    PageType=Card;
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                GroupType=Repeater }

    { 1000000001;2;Field  ;
                SourceExpr="Ads. Type" }

    { 1000000008;2;Field  ;
                SourceExpr=Code }

    { 1000000003;2;Field  ;
                SourceExpr=Description }

    { 1000000010;2;Field  ;
                SourceExpr=GroupType }

  }
  CODE
  {

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   04.05.2007   KKE   New form for "Ads. Sub Type" - Ads. Sales Module
    }
    END.
  }
}

OBJECT Page 50043 Zone Area
{
  OBJECT-PROPERTIES
  {
    Date=05/04/07;
    Time=[ 6:00:00 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    SourceTable=Table50034;
    DelayedInsert=Yes;
    PageType=Card;
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                GroupType=Repeater }

    { 1000000001;2;Field  ;
                SourceExpr=Code }

    { 1000000003;2;Field  ;
                SourceExpr=Description }

  }
  CODE
  {

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   04.05.2007   KKE   New form for "Zone Area" - Ads. Sales Module
    }
    END.
  }
}

OBJECT Page 50044 Sales Target
{
  OBJECT-PROPERTIES
  {
    Date=05/04/07;
    Time=[ 6:00:00 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    SourceTable=Table50035;
    DelayedInsert=Yes;
    PageType=Card;
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                GroupType=Repeater }

    { 1000000001;2;Field  ;
                SourceExpr="Salesperson Code" }

    { 1000000003;2;Field  ;
                SourceExpr="Salesperson Name" }

    { 1000000005;2;Field  ;
                SourceExpr="Start Date" }

    { 1000000007;2;Field  ;
                SourceExpr="End Date" }

    { 1000000009;2;Field  ;
                SourceExpr="Target Sales Amount" }

  }
  CODE
  {

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   04.05.2007   KKE   New form for "Sales Target" - Ads. Sales Module
    }
    END.
  }
}

OBJECT Page 50045 Ads. Item
{
  OBJECT-PROPERTIES
  {
    Date=08/30/07;
    Time=12:08:29 PM;
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table50036;
    PageType=Card;
    OnInit=BEGIN
             "Ads. Closing DateEditable" := TRUE;
           END;

    OnOpenPage=BEGIN
                 //KKE : #002 +
                 UserSetup.GET(USERID);
                 FILTERGROUP(2);
                 SETFILTER("Magazine Code",UserSetup."Magazine Filter");
                 FILTERGROUP(0);
               END;

    OnAfterGetRecord=BEGIN
                       OnAfterGetCurrRecord;
                     END;

    OnNewRecord=BEGIN
                  OnAfterGetCurrRecord;
                END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                CaptionML=ENU=General }

    { 1000000001;2;Field  ;
                SourceExpr="Ads. Item No." }

    { 1000000003;2;Field  ;
                SourceExpr="Magazine Code" }

    { 1000000005;2;Field  ;
                SourceExpr="Volume No." }

    { 1000000007;2;Field  ;
                SourceExpr="Issue No." }

    { 1000000009;2;Field  ;
                SourceExpr="Issue Date" }

    { 1000000011;2;Field  ;
                SourceExpr="Base Unit of Measure" }

    { 1000000013;2;Field  ;
                SourceExpr="VAT Prod. Posting Group" }

    { 1000000015;2;Field  ;
                SourceExpr="Ads. Closing Date";
                Editable="Ads. Closing DateEditable" }

    { 1000000017;2;Field  ;
                SourceExpr=Closed }

    { 1902132001;1;Group  ;
                CaptionML=ENU=Summary }

    { 1000000019;2;Field  ;
                CaptionML=ENU=Booking Line;
                DecimalPlaces=0:5;
                SourceExpr=BookingLine;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              AdsBookingLine.SETRANGE("Ads. Item No.","Ads. Item No.");
                              AdsBookingLine.SETRANGE("Line Status",AdsBookingLine."Line Status"::Booking);
                              PAGE.RUN(0,AdsBookingLine);
                            END;
                             }

    { 1000000021;2;Field  ;
                CaptionML=ENU=Waiting List Booking;
                DecimalPlaces=0:5;
                SourceExpr=WaitingList;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              AdsBookingLine.SETRANGE("Ads. Item No.","Ads. Item No.");
                              AdsBookingLine.SETRANGE("Line Status",AdsBookingLine."Line Status"::"Waiting List");
                              PAGE.RUN(0,AdsBookingLine);
                            END;
                             }

    { 1000000023;2;Field  ;
                CaptionML=ENU=Confirmed Booking;
                DecimalPlaces=0:5;
                SourceExpr=ConfirmedBooking;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              AdsBookingLine.SETRANGE("Ads. Item No.","Ads. Item No.");
                              AdsBookingLine.SETRANGE("Line Status",AdsBookingLine."Line Status"::Confirmed);
                              PAGE.RUN(0,AdsBookingLine);
                            END;
                             }

    { 1000000025;2;Field  ;
                CaptionML=ENU=Cancelled Booking;
                DecimalPlaces=0:5;
                SourceExpr=CancelledBooking;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              AdsBookingLine.SETRANGE("Ads. Item No.","Ads. Item No.");
                              AdsBookingLine.SETRANGE("Line Status",AdsBookingLine."Line Status"::Cancelled);
                              PAGE.RUN(0,AdsBookingLine);
                            END;
                             }

    { 1000000027;2;Field  ;
                CaptionML=ENU=Approved Booking;
                DecimalPlaces=0:5;
                SourceExpr=ApprovedBooking;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              AdsBookingLine.SETRANGE("Ads. Item No.","Ads. Item No.");
                              AdsBookingLine.SETRANGE("Line Status",AdsBookingLine."Line Status"::Approved);
                              PAGE.RUN(0,AdsBookingLine);
                            END;
                             }

    { 1000000029;2;Field  ;
                CaptionML=ENU=Hold Booking;
                DecimalPlaces=0:5;
                SourceExpr=HoldBooking;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              AdsBookingLine.SETRANGE("Ads. Item No.","Ads. Item No.");
                              AdsBookingLine.SETRANGE("Line Status",AdsBookingLine."Line Status"::Hold);
                              PAGE.RUN(0,AdsBookingLine);
                            END;
                             }

    { 1000000031;2;Field  ;
                CaptionML=ENU=Invoiced Booking;
                DecimalPlaces=0:5;
                SourceExpr=InvoicedBooking;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              AdsBookingLine.SETRANGE("Ads. Item No.","Ads. Item No.");
                              AdsBookingLine.SETRANGE("Line Status",AdsBookingLine."Line Status"::Invoiced);
                              PAGE.RUN(0,AdsBookingLine);
                            END;
                             }

    { 1000000033;2;Field  ;
                CaptionML=ENU=Closed Booking;
                DecimalPlaces=0:5;
                SourceExpr=ClosedBooking;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              AdsBookingLine.SETRANGE("Ads. Item No.","Ads. Item No.");
                              AdsBookingLine.SETRANGE("Line Status",AdsBookingLine."Line Status"::Closed);
                              PAGE.RUN(0,AdsBookingLine);
                            END;
                             }

    { 1000000038;2;Field  ;
                CaptionML=ENU=Archived Cancelled Booking;
                DecimalPlaces=0:5;
                SourceExpr=ArchCancelledBooking;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              ArchAdsBookingLine.SETRANGE("Ads. Item No.","Ads. Item No.");
                              ArchAdsBookingLine.SETRANGE("Line Status",ArchAdsBookingLine."Line Status"::Cancelled);
                              PAGE.RUN(0,ArchAdsBookingLine);
                            END;
                             }

    { 1000000042;2;Field  ;
                CaptionML=ENU=Archived Invoiced Booking;
                DecimalPlaces=0:5;
                SourceExpr=ArchInvoicedBooking;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              ArchAdsBookingLine.SETRANGE("Ads. Item No.","Ads. Item No.");
                              ArchAdsBookingLine.SETRANGE("Line Status",ArchAdsBookingLine."Line Status"::Invoiced);
                              PAGE.RUN(0,ArchAdsBookingLine);
                            END;
                             }

    { 1000000040;2;Field  ;
                CaptionML=ENU=Archived Closed Booking;
                DecimalPlaces=0:5;
                SourceExpr=ArchClosedBooking;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              ArchAdsBookingLine.SETRANGE("Ads. Item No.","Ads. Item No.");
                              ArchAdsBookingLine.SETRANGE("Line Status",ArchAdsBookingLine."Line Status"::Closed);
                              PAGE.RUN(0,ArchAdsBookingLine);
                            END;
                             }

  }
  CODE
  {
    VAR
      AdsItemSetup@1000000000 : Record 50026;
      AdsItem@1000000001 : Record 50036;
      AdsBookingLine@1000000013 : Record 50038;
      ArchAdsBookingLine@1000000014 : Record 50040;
      BookingLine@1000000002 : Decimal;
      ConfirmedBooking@1000000003 : Decimal;
      WaitingList@1000000004 : Decimal;
      ApprovedBooking@1000000005 : Decimal;
      HoldBooking@1000000006 : Decimal;
      CancelledBooking@1000000007 : Decimal;
      InvoicedBooking@1000000008 : Decimal;
      ClosedBooking@1000000009 : Decimal;
      ArchCancelledBooking@1000000012 : Decimal;
      ArchInvoicedBooking@1000000011 : Decimal;
      ArchClosedBooking@1000000010 : Decimal;
      Salesperson@1000000019 : Record 13;
      UserSetup@1000000018 : Record 91;
      TeamSales@1000000017 : Record 5084;
      TeamSalesFilter@1000000016 : Text[500];
      SalespersonFilter@1000000015 : Text[500];
      Text001@1000000021 : TextConst 'ENU=You do not have permision to see ads. item.';
      "Ads. Closing DateEditable"@19055529 : Boolean INDATASET;

    LOCAL PROCEDURE OnAfterGetCurrRecord@19077479();
    BEGIN
      xRec := Rec;
      AdsItemSetup.GET;
      "Ads. Closing DateEditable" := NOT AdsItemSetup."Lock Ads. Closing Date";
      IF AdsItem.GET("Ads. Item No.") THEN
        AdsItem.CALCFIELDS(
          "Booking Line","Confirmed Booking","Waiting List Booking",
          "Approved Booking","Hold Booking","Cancelled Booking",
          "Invoiced Booking","Closed Booking",
          "Archived Cancelled Booking","Archived Closed Booking","Archived Invoiced Booking");
      BookingLine := AdsItem."Booking Line";
      ConfirmedBooking := AdsItem."Confirmed Booking";
      WaitingList := AdsItem."Waiting List Booking";
      ApprovedBooking := AdsItem."Approved Booking";
      HoldBooking := AdsItem."Hold Booking";
      CancelledBooking := AdsItem."Cancelled Booking";
      InvoicedBooking := AdsItem."Invoiced Booking";
      ClosedBooking := AdsItem."Closed Booking";
      ArchCancelledBooking := AdsItem."Archived Cancelled Booking";
      ArchClosedBooking := AdsItem."Archived Closed Booking";
      ArchInvoicedBooking := AdsItem."Archived Invoiced Booking";
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   04.05.2007   KKE   New form for "Ads. Item" - Ads. Sales Module
      002   30.08.2007   KKE   Add magazine filter permission.
    }
    END.
  }
}

OBJECT Page 50046 Ads. Item List
{
  OBJECT-PROPERTIES
  {
    Date=05/11/07;
    Time=[ 6:00:00 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    Editable=No;
    SourceTable=Table50036;
    PageType=Card;
    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1000000038;1 ;ActionGroup;
                      CaptionML=ENU=&Ads. Item }
      { 1000000039;2 ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=[ENU=Card;
                                 THA=บัตร];
                      RunObject=Page 50045;
                      RunPageLink=Ads. Item No.=FIELD(Ads. Item No.);
                      Image=EditLines }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                GroupType=Repeater }

    { 1000000001;2;Field  ;
                SourceExpr="Ads. Item No." }

    { 1000000003;2;Field  ;
                SourceExpr="Magazine Code" }

    { 1000000005;2;Field  ;
                SourceExpr="Volume No." }

    { 1000000007;2;Field  ;
                SourceExpr="Issue No." }

    { 1000000009;2;Field  ;
                SourceExpr="Issue Date" }

    { 1000000011;2;Field  ;
                SourceExpr="Base Unit of Measure" }

    { 1000000013;2;Field  ;
                SourceExpr="Ads. Closing Date" }

    { 1000000015;2;Field  ;
                SourceExpr=Closed }

    { 1000000017;2;Field  ;
                SourceExpr="VAT Prod. Posting Group" }

    { 1000000019;2;Field  ;
                SourceExpr="Booking Line" }

    { 1000000021;2;Field  ;
                SourceExpr="Confirmed Booking" }

    { 1000000023;2;Field  ;
                SourceExpr="Waiting List Booking" }

    { 1000000025;2;Field  ;
                SourceExpr="Approved Booking" }

    { 1000000027;2;Field  ;
                SourceExpr="Hold Booking" }

    { 1000000029;2;Field  ;
                SourceExpr="Cancelled Booking" }

    { 1000000031;2;Field  ;
                SourceExpr="Invoiced Booking" }

    { 1000000033;2;Field  ;
                SourceExpr="Closed Booking" }

  }
  CODE
  {

    BEGIN
    END.
  }
}

OBJECT Page 50047 Dummy Plan Full Subform
{
  OBJECT-PROPERTIES
  {
    Date=01/30/21;
    Time=[ 7:08:03 PM];
    Modified=Yes;
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    PageType=CardPart;
    OnInit=BEGIN
             BgkVisible := TRUE;
           END;

    OnOpenPage=BEGIN
                 ForeColor := 16777215;
               END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000006;1;Field  ;
                BlankZero=Yes;
                SourceExpr=I;
                Editable=FALSE;
                Style=Strong;
                StyleExpr=TRUE }

    { 1000000007;1;Field  ;
                Name=Product1;
                SourceExpr=Product;
                Editable=FALSE }

    { 1000000001;1;Field  ;
                Name=Product2;
                SourceExpr=Product2;
                Editable=FALSE }

  }
  CODE
  {
    VAR
      I@1000000001 : Code[10];
      Product@1000000000 : Code[50];
      Product2@1000000002 : Code[50];
      ForeColor@1000000003 : Integer;
      BgkVisible@19074474 : Boolean INDATASET;
      Black1Visible@19068453 : Boolean INDATASET;
      DarkRed1Visible@19034160 : Boolean INDATASET;
      Red1Visible@19023490 : Boolean INDATASET;
      Pink1Visible@19044011 : Boolean INDATASET;
      Rose1Visible@19034266 : Boolean INDATASET;
      Brown1Visible@19029527 : Boolean INDATASET;
      Orange1Visible@19036946 : Boolean INDATASET;
      LightOrange1Visible@19051075 : Boolean INDATASET;
      Gold1Visible@19033722 : Boolean INDATASET;
      Tan1Visible@19007930 : Boolean INDATASET;
      OliveGreen1Visible@19043205 : Boolean INDATASET;
      DarkYellow1Visible@19028199 : Boolean INDATASET;
      Lime1Visible@19056566 : Boolean INDATASET;
      Yellow1Visible@19034344 : Boolean INDATASET;
      LightYellow1Visible@19002538 : Boolean INDATASET;
      DarkGreen1Visible@19068195 : Boolean INDATASET;
      Green1Visible@19059904 : Boolean INDATASET;
      SeaGreen1Visible@19008888 : Boolean INDATASET;
      BrightGreen1Visible@19044920 : Boolean INDATASET;
      LightGreen1Visible@19018185 : Boolean INDATASET;
      DarkTeal1Visible@19076657 : Boolean INDATASET;
      Teal1Visible@19064530 : Boolean INDATASET;
      Aqua1Visible@19057180 : Boolean INDATASET;
      Turquoise1Visible@19063022 : Boolean INDATASET;
      LightTurquoise1Visible@19008915 : Boolean INDATASET;
      DarkBlue1Visible@19012046 : Boolean INDATASET;
      Blue1Visible@19076712 : Boolean INDATASET;
      LightBlue1Visible@19002024 : Boolean INDATASET;
      SkyBlue1Visible@19025101 : Boolean INDATASET;
      PaleBlue1Visible@19007854 : Boolean INDATASET;
      Indigo1Visible@19060788 : Boolean INDATASET;
      BlueGray1Visible@19063261 : Boolean INDATASET;
      Violet1Visible@19048648 : Boolean INDATASET;
      Plum1Visible@19019402 : Boolean INDATASET;
      Lavender1Visible@19075684 : Boolean INDATASET;
      "Gray-80%1Visible"@19035347 : Boolean INDATASET;
      "Gray-50%1Visible"@19022186 : Boolean INDATASET;
      "Gray-40%1Visible"@19073767 : Boolean INDATASET;
      "Gray-25%1Visible"@19045513 : Boolean INDATASET;
      White1Visible@19000927 : Boolean INDATASET;

    PROCEDURE SetColor@1000000000(_Color@1000000000 : ' ,Black,Dark Red,Red,Pink,Rose,Brown,Orange,Light Orange,Gold,Tan,Olive Green,Dark Yellow,Lime,Yellow,Light Yellow,Dark Green,Green,Sea Green,Bright Green,Light Green,Dark Teal,Teal,Aqua,Turquoise,Light Turquoise,Dark Blue,Blue,Light Blue,Sky Blue,Pale Blue,Indigo,Blue-Gray,Violet,Plum,Lavender,Gray - 80%,Gray - 50%,Gray - 40%,Gray - 25%,White';_ForeColor@1000000004 : Integer;_I@1000000001 : Code[10];_Product@1000000002 : Code[50];_Product2@1000000003 : Code[50]);
    BEGIN
      {
        Black,Dark Red,Red,Pink,Rose,Brown,Orange,Light Orange,Gold,Tan,Olive Green,Dark Yellow
        Lime,Yellow,Light Yellow,Dark Green,Green,Sea Green,Bright Green,Light Green,Dark Teal,Teal,Aqua,Turquoise,Light Turquoise
        Dark Blue,Blue,Light Blue,Sky Blue,Pale Blue,Indigo,Blue-Gray,Violet,Plum,
        Lavender,Gray - 80%,Gray - 50%,Gray - 40%,Gray - 25%,White
      }

      I := _I;
      IF I = '' THEN
        BgkVisible := FALSE
      ELSE
        BgkVisible := TRUE;
      Product := _Product;
      Product2 := _Product2;
      ForeColor := _ForeColor;

      Black1Visible := _Color = _Color::Black;
      DarkRed1Visible := _Color = _Color::"Dark Red";
      Red1Visible := _Color = _Color::Red;
      Pink1Visible := _Color = _Color::Pink;
      Rose1Visible := _Color = _Color::Rose;
      Brown1Visible := _Color = _Color::Brown;
      Orange1Visible := _Color = _Color::Orange;
      LightOrange1Visible := _Color = _Color::"Light Orange";
      Gold1Visible := _Color = _Color::Gold;
      Tan1Visible := _Color = _Color::Tan;
      OliveGreen1Visible := _Color = _Color::"Olive Green";
      DarkYellow1Visible := _Color = _Color::"Dark Yellow";
      Lime1Visible := _Color = _Color::Lime;
      Yellow1Visible := _Color = _Color::Yellow;
      LightYellow1Visible := _Color = _Color::"Light Yellow";
      DarkGreen1Visible := _Color = _Color::"Dark Green";
      Green1Visible := _Color = _Color::Green;
      SeaGreen1Visible := _Color = _Color::"Sea Green";
      BrightGreen1Visible := _Color = _Color::"Bright Green";
      LightGreen1Visible := _Color = _Color::"Light Green";
      DarkTeal1Visible := _Color = _Color::"Dark Teal";
      Teal1Visible := _Color = _Color::Teal;
      Aqua1Visible := _Color = _Color::Aqua;
      Turquoise1Visible := _Color = _Color::Turquoise;
      LightTurquoise1Visible := _Color = _Color::"Light Turquoise";
      DarkBlue1Visible := _Color = _Color::"Dark Blue";
      Blue1Visible := _Color = _Color::Blue;
      LightBlue1Visible := _Color = _Color::"Light Blue";
      SkyBlue1Visible := _Color = _Color::"Sky Blue";
      PaleBlue1Visible := _Color = _Color::"Pale Blue";
      Indigo1Visible := _Color = _Color::Indigo;
      BlueGray1Visible := _Color = _Color::"Blue-Gray";
      Violet1Visible := _Color = _Color::Violet;
      Plum1Visible := _Color = _Color::Plum;
      Lavender1Visible := _Color = _Color::Lavender;
      "Gray-80%1Visible" := _Color = _Color::"Gray - 80%";
      "Gray-50%1Visible" := _Color = _Color::"Gray - 50%";
      "Gray-40%1Visible" := _Color = _Color::"Gray - 40%";
      "Gray-25%1Visible" := _Color = _Color::"Gray - 25%";
      White1Visible := _Color = _Color::White;

      CurrPage.UPDATE;
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   04.06.2007   KKE   New form for "Dummy Plan Full Subform" - Editorial Module
    }
    END.
  }
}

OBJECT Page 50048 Ads. Booking
{
  OBJECT-PROPERTIES
  {
    Date=10/19/10;
    Time=[ 2:27:45 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    SourceTable=Table50037;
    PageType=Card;
    OnOpenPage=BEGIN
                 //KKE : #002 +
                 RESET;
                 UserSetup.GET(USERID);
                 CASE UserSetup."Ads. Booking Filter" OF
                   UserSetup."Ads. Booking Filter"::" ":
                     ERROR(Text001);
                   UserSetup."Ads. Booking Filter"::Salesperson:
                     BEGIN
                       UserSetup.TESTFIELD("Salesperson Code");
                       Salesperson.SETFILTER(Code,UserSetup."Salesperson Code");
                       FILTERGROUP(2);
                       SETFILTER("Salesperson Code",'%1|%2','',Salesperson.GETFILTER(Code));
                       FILTERGROUP(0);
                     END;
                   UserSetup."Ads. Booking Filter"::Team:
                     BEGIN
                       UserSetup.TESTFIELD("Salesperson Code");
                       TeamSales.SETRANGE("Salesperson Code",UserSetup."Salesperson Code");
                       IF NOT TeamSales.FIND('-') THEN
                         Salesperson.SETFILTER(Code,UserSetup."Salesperson Code")
                       ELSE BEGIN
                         REPEAT
                           IF STRLEN(TeamSalesFilter + TeamSales."Team Code") < 500 THEN
                             IF TeamSalesFilter = '' THEN
                               TeamSalesFilter := TeamSales."Team Code"
                             ELSE
                               TeamSalesFilter := TeamSalesFilter + '|' + TeamSales."Team Code";
                         UNTIL TeamSales.NEXT=0;
                         TeamSales.RESET;
                         TeamSales.SETFILTER("Team Code",TeamSalesFilter);
                         TeamSales.FIND('-');
                         REPEAT
                           IF STRLEN(SalespersonFilter + TeamSales."Team Code") < 500 THEN
                             IF SalespersonFilter = '' THEN
                               SalespersonFilter := Text002 + '|' + TeamSales."Salesperson Code"
                             ELSE
                               SalespersonFilter := SalespersonFilter + '|' + TeamSales."Salesperson Code";
                         UNTIL TeamSales.NEXT=0;
                         Salesperson.SETFILTER(Code,SalespersonFilter);
                       END;
                       FILTERGROUP(2);
                       Salesperson.COPYFILTER(Code,"Salesperson Code");
                       FILTERGROUP(0);
                     END;
                   UserSetup."Ads. Booking Filter"::All:
                     BEGIN
                       Salesperson.RESET;
                     END;
                 END;

                 //KKE : #002 -
               END;

    OnAfterGetRecord=BEGIN
                       OnAfterGetCurrRecord;
                     END;

    OnNewRecord=BEGIN
                  OnAfterGetCurrRecord;
                END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1000000057;1 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=&Print;
                                 THA=&พิมพ์];
                      Promoted=Yes;
                      Image=Print;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 AdsBookingHdr@1000000000 : Record 50037;
                               BEGIN
                                 AdsBookingHdr.SETRANGE("No.","No.");
                                 REPORT.RUN(REPORT::"Advertising Contract",TRUE,FALSE,AdsBookingHdr);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                CaptionML=ENU=General }

    { 1000000001;2;Field  ;
                SourceExpr="No.";
                OnAssistEdit=BEGIN
                               IF AssistEdit(xRec) THEN
                                 CurrPage.UPDATE;
                             END;
                              }

    { 1000000003;2;Field  ;
                SourceExpr="Booking Date" }

    { 1000000005;2;Field  ;
                SourceExpr="Salesperson Code";
                OnValidate=BEGIN
                             SalespersonCodeOnAfterValidate;
                           END;
                            }

    { 1000000018;2;Field  ;
                CaptionClass=FORMAT (Salesperson.Name);
                Editable=FALSE }

    { 1000000007;2;Field  ;
                SourceExpr="Payment Terms Code" }

    { 1000000009;2;Field  ;
                SourceExpr="Zone Area" }

    { 1000000011;2;Field  ;
                SourceExpr="Sell-to Customer No.";
                OnValidate=BEGIN
                             SelltoCustomerNoOnAfterValidat;
                           END;
                            }

    { 1000000036;2;Field  ;
                CaptionClass=FORMAT (Cust.Name);
                Editable=FALSE }

    { 1000000013;2;Field  ;
                CaptionML=ENU=Ads. Sales Type;
                SourceExpr="Ads. Sales Type" }

    { 1000000015;2;Field  ;
                SourceExpr="Bill-to Customer No." }

    { 1000000032;1;Part   ;
                Name=AdsBookingSubf;
                SubPageLink=Booking No.=FIELD(No.);
                PagePartID=Page50049 }

    { 1907563401;1;Group  ;
                CaptionML=ENU=Contact }

    { 1000000019;2;Field  ;
                SourceExpr=Contact }

    { 1000000021;2;Field  ;
                SourceExpr="Phone No." }

    { 1000000023;2;Field  ;
                SourceExpr="Fax No." }

    { 1000000025;2;Field  ;
                SourceExpr="Mobile No." }

    { 1000000027;2;Field  ;
                SourceExpr="E-Mail" }

    { 1000000029;2;Field  ;
                SourceExpr=Remark }

  }
  CODE
  {
    VAR
      Salesperson@1000000000 : Record 13;
      Cust@1000000001 : Record 18;
      UserSetup@1000000002 : Record 91;
      TeamSales@1000000005 : Record 5084;
      TeamSalesFilter@1000000004 : Text[500];
      SalespersonFilter@1000000003 : Text[500];
      Text001@1000000006 : TextConst 'ENU=You do not have permision to do Ads. Booking.';
      Text002@1000000007 : TextConst 'ENU=''''';

    LOCAL PROCEDURE SalespersonCodeOnAfterValidate@19011896();
    BEGIN
      IF NOT Salesperson.GET("Salesperson Code") THEN
        CLEAR(Salesperson);
    END;

    LOCAL PROCEDURE SelltoCustomerNoOnAfterValidat@19034782();
    BEGIN
      IF NOT Cust.GET("Sell-to Customer No.") THEN
        CLEAR(Cust);
    END;

    LOCAL PROCEDURE OnAfterGetCurrRecord@19077479();
    BEGIN
      xRec := Rec;
      IF NOT Salesperson.GET("Salesperson Code") THEN
        CLEAR(Salesperson);
      IF NOT Cust.GET("Sell-to Customer No.") THEN
        CLEAR(Cust);
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   04.05.2007   KKE   New form for "Ads. Booking" - Ads. Sales Module
      Burda
      002   30.08.2007   KKE   Salesperson permission.
    }
    END.
  }
}

OBJECT Page 50049 Ads. Booking Subform
{
  OBJECT-PROPERTIES
  {
    Date=01/30/21;
    Time=[ 7:08:47 PM];
    Modified=Yes;
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    DeleteAllowed=No;
    SourceTable=Table50038;
    DelayedInsert=Yes;
    PageType=ListPart;
    AutoSplitKey=Yes;
    OnInit=BEGIN
             "Ads. Closing DateEditable" := TRUE;
           END;

    OnAfterGetRecord=BEGIN
                       AdsItemSetup.GET;
                       "Ads. Closing DateEditable" := NOT AdsItemSetup."Lock Ads. Closing Date";

                       IF NOT AdsPosition.GET("Ads. Position") THEN
                         CLEAR(AdsPosition);
                       IF NOT AdsProduct.GET("Ads. Product") THEN
                         CLEAR(AdsProduct);
                       IF NOT AdsSize.GET("Ads. Size") THEN
                         CLEAR(AdsSize);
                       IF NOT AdsType.GET("Ads. Type") THEN
                         CLEAR(AdsType);
                       IF NOT AdsSubType.GET("Ads. Type","Ads. Sub-Type") THEN
                         CLEAR(AdsSubType);
                       IF NOT ProductCategory.GET("Product Category") THEN
                         CLEAR(ProductCategory);
                       IF NOT BookingRev.GET("Booking Revenue Code") THEN
                         CLEAR(BookingRev);
                       IF NOT OwnerCust.GET("Owner Customer") THEN
                         CLEAR(OwnerCust);
                     END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1906587504;1 ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 THA=ฟั&งก์ชัน] }
      { 1901521304;2 ;Action    ;
                      CaptionML=ENU=Con&firm;
                      OnAction=BEGIN
                                 //This functionality was copied from page #50048. Unsupported part was commented. Please check it.
                                 {CurrPage.AdsBookingSubf.PAGE.}
                                 _ConfirmBooking;
                               END;
                                }
      { 1901860104;2 ;Action    ;
                      CaptionML=ENU=&Reopen;
                      Image=ReOpen;
                      OnAction=BEGIN
                                 //This functionality was copied from page #50048. Unsupported part was commented. Please check it.
                                 {CurrPage.AdsBookingSubf.PAGE.}
                                 _ReopenConfirm;
                               END;
                                }
      { 1902967704;2 ;Action    ;
                      CaptionML=ENU=&Cancel;
                      OnAction=BEGIN
                                 //This functionality was copied from page #50048. Unsupported part was commented. Please check it.
                                 {CurrPage.AdsBookingSubf.PAGE.}
                                 _CancelBooking;
                               END;
                                }
      { 1900414104;2 ;Action    ;
                      CaptionML=ENU=C&lose;
                      OnAction=BEGIN
                                 //This functionality was copied from page #50048. Unsupported part was commented. Please check it.
                                 {CurrPage.AdsBookingSubf.PAGE.}
                                 _CloseBooking;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                GroupType=Repeater }

    { 1000000001;2;Field  ;
                SourceExpr="Ads. Item No." }

    { 1000000003;2;Field  ;
                SourceExpr="Magazine Code";
                Visible=FALSE }

    { 1000000005;2;Field  ;
                SourceExpr="Volume No.";
                Visible=FALSE }

    { 1000000109;2;Field  ;
                SourceExpr=Amount }

    { 1000000007;2;Field  ;
                SourceExpr="Issue No.";
                Visible=FALSE }

    { 1000000009;2;Field  ;
                SourceExpr="Issue Date";
                Visible=FALSE }

    { 1000000025;2;Field  ;
                SourceExpr="Ads. Position" }

    { 1000000093;2;Field  ;
                CaptionML=ENU=Ads. Position Description;
                SourceExpr=AdsPosition.Description;
                Editable=FALSE }

    { 1000000057;2;Field  ;
                SourceExpr="Line Status";
                Style=Strong;
                StyleExpr=TRUE }

    { 1000000113;2;Field  ;
                SourceExpr="Cancelled Date" }

    { 1000000059;2;Field  ;
                SourceExpr="Waiting List No." }

    { 1000000013;2;Field  ;
                SourceExpr="Ads. Closing Date";
                Visible=FALSE;
                Editable="Ads. Closing DateEditable" }

    { 1000000041;2;Field  ;
                SourceExpr="VAT Bus. Posting Group";
                Visible=FALSE }

    { 1000000043;2;Field  ;
                SourceExpr="VAT Prod. Posting Group" }

    { 1000000015;2;Field  ;
                SourceExpr="Booking Revenue Code" }

    { 1000000095;2;Field  ;
                CaptionML=ENU=Booking Revenue Description;
                SourceExpr=BookingRev.Description;
                Editable=FALSE }

    { 1000000017;2;Field  ;
                SourceExpr="Booking Revenue Type" }

    { 1000000019;2;Field  ;
                SourceExpr="Ads. Size" }

    { 1000000097;2;Field  ;
                CaptionML=ENU=Ads. Size Description;
                SourceExpr=AdsSize.Description;
                Editable=FALSE }

    { 1000000021;2;Field  ;
                SourceExpr="Ads. Type" }

    { 1000000099;2;Field  ;
                CaptionML=ENU=Ads. Type Description;
                SourceExpr=AdsType.Description;
                Editable=FALSE }

    { 1000000023;2;Field  ;
                SourceExpr="Ads. Sub-Type" }

    { 1000000101;2;Field  ;
                CaptionML=ENU=Ads. Sub Type Description;
                SourceExpr=AdsSubType.Description;
                Editable=FALSE }

    { 1000000011;2;Field  ;
                SourceExpr="Shortcut Dimension 5 Code" }

    { 1000000027;2;Field  ;
                SourceExpr="Ads. Product" }

    { 1000000103;2;Field  ;
                CaptionML=ENU=Ads. Product Description;
                SourceExpr=AdsProduct.Description;
                Editable=FALSE }

    { 1000000111;2;Field  ;
                SourceExpr="Ads. Product Description 2" }

    { 1000000029;2;Field  ;
                SourceExpr="Owner Customer" }

    { 1000000105;2;Field  ;
                CaptionML=ENU=Owner Customer Name;
                SourceExpr=OwnerCust.Name;
                Editable=FALSE }

    { 1000000031;2;Field  ;
                SourceExpr="Product Category" }

    { 1000000107;2;Field  ;
                CaptionML=ENU=Product Category Description;
                SourceExpr=ProductCategory.Description;
                Editable=FALSE }

    { 1000000073;2;Field  ;
                SourceExpr="Counting Unit" }

    { 1000000033;2;Field  ;
                SourceExpr=Quantity }

    { 1000000069;2;Field  ;
                SourceExpr="Base Unit of Measure" }

    { 1000000035;2;Field  ;
                SourceExpr="Unit Price Excl. VAT" }

    { 1000000087;2;Field  ;
                SourceExpr=Amount }

    { 1000000085;2;Field  ;
                SourceExpr="Amount Including VAT" }

    { 1000000045;2;Field  ;
                SourceExpr="Create Sales Invoice" }

    { 1000000047;2;Field  ;
                SourceExpr="Cash Invoice Amount" }

    { 1000000049;2;Field  ;
                SourceExpr="Bill Revenue G/L Account" }

    { 1000000039;2;Field  ;
                SourceExpr="Cash Invoice No." }

    { 1000000055;2;Field  ;
                SourceExpr="Barter Required Document" }

    { 1000000051;2;Field  ;
                SourceExpr="Barter Amount" }

    { 1000000053;2;Field  ;
                SourceExpr="Barter G/L Account" }

    { 1000000083;2;Field  ;
                SourceExpr="Barter Invoice No." }

    { 1000000075;2;Field  ;
                SourceExpr="Require Contract" }

    { 1000000077;2;Field  ;
                SourceExpr="Have Artwork" }

    { 1000000079;2;Field  ;
                SourceExpr="Contact person for artwork";
                Visible=FALSE }

    { 1000000081;2;Field  ;
                SourceExpr="Total Number of Insertion" }

    { 1000000089;2;Field  ;
                SourceExpr=Remark;
                Visible=FALSE }

    { 1000000091;2;Field  ;
                SourceExpr="Complimentary Offer";
                Visible=FALSE }

    { 1000000061;2;Field  ;
                SourceExpr="Scheduled Invoice Date" }

    { 1000000071;2;Field  ;
                SourceExpr="Booking Date" }

    { 1000000063;2;Field  ;
                SourceExpr="Cash Invoice No.";
                Visible=FALSE }

    { 1000000065;2;Field  ;
                SourceExpr="Barter Invoice No.";
                Visible=FALSE }

    { 1000000067;2;Field  ;
                SourceExpr=Closed;
                Visible=FALSE }

    { 1000000037;2;Field  ;
                SourceExpr="Planning Status" }

  }
  CODE
  {
    VAR
      AdsItemSetup@1000000000 : Record 50026;
      AdsPosition@1000000005 : Record 50029;
      AdsProduct@1000000004 : Record 50031;
      AdsSize@1000000006 : Record 50028;
      AdsType@1000000007 : Record 50032;
      AdsSubType@1000000008 : Record 50033;
      ProductCategory@1000000003 : Record 50030;
      OwnerCust@1000000002 : Record 18;
      BookingRev@1000000001 : Record 50027;
      "Ads. Closing DateEditable"@19055529 : Boolean INDATASET;

    PROCEDURE _ConfirmBooking@19001825();
    VAR
      AdsBookingLine@1000000000 : Record 50038;
    BEGIN
      CurrPage.SETSELECTIONFILTER(AdsBookingLine);
      IF AdsBookingLine.FIND('-') THEN
        REPEAT
          AdsBookingLine.ConfirmBooking;
        UNTIL AdsBookingLine.NEXT=0;
    END;

    PROCEDURE ConfirmBooking@1000000000();
    VAR
      AdsBookingLine@1000000000 : Record 50038;
    BEGIN
      CurrPage.SETSELECTIONFILTER(AdsBookingLine);
      IF AdsBookingLine.FIND('-') THEN
        REPEAT
          AdsBookingLine.ConfirmBooking;
        UNTIL AdsBookingLine.NEXT=0;
    END;

    PROCEDURE _CancelBooking@19035122();
    BEGIN
      Rec.CancelBooking;
    END;

    PROCEDURE CancelBooking@1000000001();
    BEGIN
      Rec.CancelBooking;
    END;

    PROCEDURE _CloseBooking@19070010();
    BEGIN
      Rec.CloseBooking;
    END;

    PROCEDURE CloseBooking@1000000002();
    BEGIN
      Rec.CloseBooking;
    END;

    PROCEDURE _ReopenConfirm@19042191();
    VAR
      AdsBookingLine@1000000000 : Record 50038;
    BEGIN
      CurrPage.SETSELECTIONFILTER(AdsBookingLine);
      IF AdsBookingLine.FIND('-') THEN
        REPEAT
          AdsBookingLine.ReopenConfirm;
        UNTIL AdsBookingLine.NEXT=0;
    END;

    PROCEDURE ReopenConfirm@1000000003();
    VAR
      AdsBookingLine@1000000000 : Record 50038;
    BEGIN
      CurrPage.SETSELECTIONFILTER(AdsBookingLine);
      IF AdsBookingLine.FIND('-') THEN
        REPEAT
          AdsBookingLine.ReopenConfirm;
        UNTIL AdsBookingLine.NEXT=0;
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   04.05.2007   KKE   New form for "Ads. Booking Subform" - Ads. Sales Module
    }
    END.
  }
}

OBJECT Page 50050 Ads. Booking List
{
  OBJECT-PROPERTIES
  {
    Date=06/22/07;
    Time=[ 6:00:00 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    Editable=No;
    SourceTable=Table50037;
    PageType=Card;
    OnAfterGetRecord=BEGIN
                       IF NOT Salesperson.GET("Salesperson Code") THEN
                         CLEAR(Salesperson);
                     END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1000000024;1 ;ActionGroup;
                      CaptionML=[ENU=&Line;
                                 THA=&บรรทัด] }
      { 1000000025;2 ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=[ENU=Card;
                                 THA=บัตร];
                      RunObject=Page 50048;
                      RunPageLink=No.=FIELD(No.);
                      Image=EditLines }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                GroupType=Repeater }

    { 1000000001;2;Field  ;
                SourceExpr="No." }

    { 1000000003;2;Field  ;
                SourceExpr="Booking Date" }

    { 1000000005;2;Field  ;
                SourceExpr="Salesperson Code" }

    { 1000000026;2;Field  ;
                CaptionML=ENU=Salesperson Name;
                SourceExpr=Salesperson.Name }

    { 1000000007;2;Field  ;
                SourceExpr="Sell-to Customer No." }

    { 1000000009;2;Field  ;
                SourceExpr="Bill-to Customer No." }

    { 1000000011;2;Field  ;
                SourceExpr="Payment Terms Code" }

    { 1000000013;2;Field  ;
                SourceExpr="Ads. Sales Type" }

    { 1000000015;2;Field  ;
                SourceExpr="Bill-to Customer Type" }

    { 1000000017;2;Field  ;
                SourceExpr="Zone Area" }

    { 1000000019;2;Field  ;
                SourceExpr=Contact }

  }
  CODE
  {
    VAR
      Salesperson@1000000000 : Record 13;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   04.05.2007   KKE   New form for "Ads. Booking List" - Ads. Sales Module
    }
    END.
  }
}

OBJECT Page 50051 Archived Ads. Booking
{
  OBJECT-PROPERTIES
  {
    Date=06/22/07;
    Time=[ 6:00:00 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    Editable=No;
    SourceTable=Table50039;
    PageType=Card;
    OnAfterGetRecord=BEGIN
                       OnAfterGetCurrRecord;
                     END;

    OnNewRecord=BEGIN
                  OnAfterGetCurrRecord;
                END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                CaptionML=ENU=General }

    { 1000000001;2;Field  ;
                SourceExpr="No." }

    { 1000000003;2;Field  ;
                SourceExpr="Booking Date" }

    { 1000000005;2;Field  ;
                SourceExpr="Salesperson Code" }

    { 1000000035;2;Field  ;
                CaptionClass=FORMAT (Salesperson.Name);
                Editable=FALSE }

    { 1000000007;2;Field  ;
                SourceExpr="Payment Terms Code" }

    { 1000000009;2;Field  ;
                SourceExpr="Zone Area" }

    { 1000000011;2;Field  ;
                SourceExpr="Sell-to Customer No." }

    { 1000000036;2;Field  ;
                CaptionClass=FORMAT (Cust.Name);
                Editable=FALSE }

    { 1000000013;2;Field  ;
                SourceExpr="Sell-to Customer Type" }

    { 1000000015;2;Field  ;
                SourceExpr="Bill-to Customer No." }

    { 1000000017;2;Field  ;
                SourceExpr="Bill-to Customer Type" }

    { 1000000032;1;Part   ;
                Name=AdsBookingSubf;
                SubPageLink=Booking No.=FIELD(No.);
                PagePartID=Page50052 }

    { 1907563401;1;Group  ;
                CaptionML=ENU=Contact }

    { 1000000019;2;Field  ;
                SourceExpr=Contact }

    { 1000000021;2;Field  ;
                SourceExpr="Phone No." }

    { 1000000023;2;Field  ;
                SourceExpr="Fax No." }

    { 1000000025;2;Field  ;
                SourceExpr="Mobile No." }

    { 1000000027;2;Field  ;
                SourceExpr="E-Mail" }

    { 1000000029;2;Field  ;
                SourceExpr=Remark }

  }
  CODE
  {
    VAR
      Salesperson@1000000001 : Record 13;
      Cust@1000000000 : Record 18;

    LOCAL PROCEDURE OnAfterGetCurrRecord@19077479();
    BEGIN
      xRec := Rec;
      IF NOT Salesperson.GET("Salesperson Code") THEN
        CLEAR(Salesperson);
      IF NOT Cust.GET("Sell-to Customer No.") THEN
        CLEAR(Cust);
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   09.05.2007   KKE   New form for "Archived Ads. Booking" - Ads. Sales Module
    }
    END.
  }
}

OBJECT Page 50052 Archived Ads. Booking Subform
{
  OBJECT-PROPERTIES
  {
    Date=01/30/21;
    Time=[ 7:09:14 PM];
    Modified=Yes;
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    Editable=No;
    SourceTable=Table50040;
    PageType=ListPart;
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                GroupType=Repeater }

    { 1000000001;2;Field  ;
                SourceExpr="Ads. Item No." }

    { 1000000003;2;Field  ;
                SourceExpr="Magazine Code";
                Visible=FALSE }

    { 1000000005;2;Field  ;
                SourceExpr="Volume No.";
                Visible=FALSE }

    { 1000000007;2;Field  ;
                SourceExpr="Issue No.";
                Visible=FALSE }

    { 1000000009;2;Field  ;
                SourceExpr="Issue Date";
                Visible=FALSE }

    { 1000000013;2;Field  ;
                SourceExpr="Ads. Closing Date";
                Visible=FALSE }

    { 1000000041;2;Field  ;
                SourceExpr="VAT Bus. Posting Group";
                Visible=FALSE }

    { 1000000043;2;Field  ;
                SourceExpr="VAT Prod. Posting Group" }

    { 1000000015;2;Field  ;
                SourceExpr="Booking Revenue Code" }

    { 1000000017;2;Field  ;
                SourceExpr="Booking Revenue Type" }

    { 1000000019;2;Field  ;
                SourceExpr="Ads. Size" }

    { 1000000021;2;Field  ;
                SourceExpr="Ads. Type" }

    { 1000000023;2;Field  ;
                SourceExpr="Ads. Sub-Type" }

    { 1000000025;2;Field  ;
                SourceExpr="Ads. Position" }

    { 1000000011;2;Field  ;
                SourceExpr="Shortcut Dimension 5 Code" }

    { 1000000027;2;Field  ;
                SourceExpr="Ads. Product" }

    { 1000000029;2;Field  ;
                SourceExpr="Owner Customer";
                Visible=FALSE }

    { 1000000031;2;Field  ;
                SourceExpr="Product Category";
                Visible=FALSE }

    { 1000000073;2;Field  ;
                SourceExpr="Counting Unit" }

    { 1000000033;2;Field  ;
                SourceExpr=Quantity }

    { 1000000069;2;Field  ;
                SourceExpr="Base Unit of Measure" }

    { 1000000035;2;Field  ;
                SourceExpr="Unit Price Excl. VAT" }

    { 1000000047;2;Field  ;
                SourceExpr="Cash Invoice Amount" }

    { 1000000049;2;Field  ;
                SourceExpr="Bill Revenue G/L Account" }

    { 1000000051;2;Field  ;
                SourceExpr="Barter Amount" }

    { 1000000053;2;Field  ;
                SourceExpr="Barter G/L Account" }

    { 1000000055;2;Field  ;
                SourceExpr="Barter Required Document" }

    { 1000000045;2;Field  ;
                SourceExpr="Create Sales Invoice" }

    { 1000000075;2;Field  ;
                SourceExpr="Require Contract" }

    { 1000000077;2;Field  ;
                SourceExpr="Have Artwork" }

    { 1000000079;2;Field  ;
                SourceExpr="Contact person for artwork";
                Visible=FALSE }

    { 1000000081;2;Field  ;
                SourceExpr="Total Number of Insertion" }

    { 1000000089;2;Field  ;
                SourceExpr="Actual Sub Page No.";
                Visible=FALSE }

    { 1000000091;2;Field  ;
                SourceExpr="Complimentary Offer";
                Visible=FALSE }

    { 1000000057;2;Field  ;
                SourceExpr="Line Status" }

    { 1000000037;2;Field  ;
                SourceExpr="Cancelled Date" }

    { 1000000059;2;Field  ;
                SourceExpr="Waiting List No." }

    { 1000000061;2;Field  ;
                SourceExpr="Scheduled Invoice Date" }

    { 1000000071;2;Field  ;
                SourceExpr="Booking Date" }

    { 1000000063;2;Field  ;
                SourceExpr="Cash Invoice No.";
                Visible=FALSE }

    { 1000000065;2;Field  ;
                SourceExpr="Barter Invoice No.";
                Visible=FALSE }

    { 1000000067;2;Field  ;
                SourceExpr=Closed;
                Visible=FALSE }

  }
  CODE
  {

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   09.05.2007   KKE   New form for "Archived Ads. Booking Subform" - Ads. Sales Module
      002   19.10.2010   GKU   Add field "Status Date"
    }
    END.
  }
}

OBJECT Page 50053 Archived Ads. Booking List
{
  OBJECT-PROPERTIES
  {
    Date=05/09/07;
    Time=[ 6:00:00 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    Editable=No;
    SourceTable=Table50039;
    PageType=Card;
    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1000000024;1 ;ActionGroup;
                      CaptionML=[ENU=&Line;
                                 THA=&บรรทัด] }
      { 1000000025;2 ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=[ENU=Card;
                                 THA=บัตร];
                      RunObject=Page 50051;
                      RunPageLink=No.=FIELD(No.);
                      Image=EditLines }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                GroupType=Repeater }

    { 1000000001;2;Field  ;
                SourceExpr="No." }

    { 1000000003;2;Field  ;
                SourceExpr="Booking Date" }

    { 1000000005;2;Field  ;
                SourceExpr="Salesperson Code" }

    { 1000000007;2;Field  ;
                SourceExpr="Sell-to Customer No." }

    { 1000000009;2;Field  ;
                SourceExpr="Bill-to Customer No." }

    { 1000000011;2;Field  ;
                SourceExpr="Payment Terms Code" }

    { 1000000013;2;Field  ;
                SourceExpr="Sell-to Customer Type" }

    { 1000000015;2;Field  ;
                SourceExpr="Bill-to Customer Type" }

    { 1000000017;2;Field  ;
                SourceExpr="Zone Area" }

    { 1000000019;2;Field  ;
                SourceExpr=Contact }

  }
  CODE
  {

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   09.05.2007   KKE   New form for "Archvied Ads. Booking List" - Ads. Sales Module
    }
    END.
  }
}

OBJECT Page 50054 Agent Customer
{
  OBJECT-PROPERTIES
  {
    Date=08/30/07;
    Time=11:15:01 AM;
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    SourceTable=Table50041;
    PageType=Card;
    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1000000029;1 ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 THA=ฟั&งก์ชัน] }
      { 1000000044;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Copy Document;
                                 THA=คัดลอกเอกสาร];
                      Image=CopyDocument;
                      OnAction=VAR
                                 CopyAgentCust@1000000001 : Report 50030;
                               BEGIN
                                 CopyAgentCust.SetAgentCustHdr(Rec);
                                 CopyAgentCust.RUNMODAL;
                                 CLEAR(CopyAgentCust);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                CaptionML=ENU=General }

    { 1000000001;2;Field  ;
                SourceExpr="No.";
                OnAssistEdit=BEGIN
                               IF AssistEdit(xRec) THEN
                                 CurrPage.UPDATE;
                             END;
                              }

    { 1000000003;2;Field  ;
                SourceExpr="Magazine Item No." }

    { 1000000005;2;Field  ;
                SourceExpr="Unit of Measure Code" }

    { 1000000017;2;Field  ;
                SourceExpr="Salesperson Code" }

    { 1000000019;2;Field  ;
                SourceExpr="Location Code" }

    { 1000000015;2;Field  ;
                SourceExpr="Document Date" }

    { 1000000007;2;Field  ;
                SourceExpr="Magazine Code" }

    { 1000000009;2;Field  ;
                SourceExpr="Volume No." }

    { 1000000011;2;Field  ;
                SourceExpr="Issue No." }

    { 1000000013;2;Field  ;
                SourceExpr="Issue Date" }

    { 1000000022;1;Part   ;
                SubPageLink=Agent Customer No.=FIELD(No.);
                PagePartID=Page50055 }

  }
  CODE
  {

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   12.03.2007   KKE   New form for Agent Customer - Circulation Module
    }
    END.
  }
}

OBJECT Page 50055 Agent Customer Subform
{
  OBJECT-PROPERTIES
  {
    Date=01/30/21;
    Time=[ 7:09:47 PM];
    Modified=Yes;
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    SourceTable=Table50042;
    DelayedInsert=Yes;
    PageType=ListPart;
    AutoSplitKey=Yes;
    OnAfterGetRecord=BEGIN
                       IF NOT Cust.GET("Sell-to Customer No.") THEN
                         CLEAR(Cust);
                       OnAfterGetCurrRecord;
                     END;

    OnNewRecord=BEGIN
                  CLEAR(Cust);
                  OnAfterGetCurrRecord;
                END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                GroupType=Repeater }

    { 1000000001;2;Field  ;
                SourceExpr="Sell-to Customer No.";
                OnValidate=BEGIN
                             SelltoCustomerNoOnAfterValidat;
                           END;
                            }

    { 1000000019;2;Field  ;
                CaptionML=ENU=Name;
                SourceExpr=Cust.Name;
                Editable=FALSE }

    { 1000000003;2;Field  ;
                SourceExpr="Bill-to Customer No." }

    { 1000000007;2;Field  ;
                SourceExpr=Quantity }

    { 1000000009;2;Field  ;
                SourceExpr="Unit Price" }

    { 1000000011;2;Field  ;
                SourceExpr="Discount %" }

    { 1000000017;2;Field  ;
                SourceExpr="Line Amount" }

    { 1000000013;2;Field  ;
                SourceExpr="Delivered Flag" }

    { 1000000015;2;Field  ;
                SourceExpr="Delivered Date" }

    { 1000000021;2;Field  ;
                SourceExpr="Delivered Document No." }

    { 1000000005;1;Field  ;
                CaptionML=ENU=Total Reserved Quantity;
                DecimalPlaces=0:5;
                SourceExpr=TotalResvQty;
                Editable=FALSE }

    { 1000000023;1;Field  ;
                CaptionML=ENU=Total Reserved Amount;
                SourceExpr=TotalResvAmount;
                Editable=FALSE }

  }
  CODE
  {
    VAR
      Cust@1000000000 : Record 18;
      TotalResvQty@1000000001 : Decimal;
      TotalResvAmount@1000000002 : Decimal;

    PROCEDURE CalcTotal@8(VAR AgentCustLine@1000 : Record 50042;LastAgentCustLine@1001 : Record 50042;VAR TotalQty@1003 : Decimal;VAR TotalAmt@1000000000 : Decimal);
    VAR
      TempAgentCustLine@1006 : Record 50042;
    BEGIN
      TempAgentCustLine.COPYFILTERS(AgentCustLine);
      TempAgentCustLine.CALCSUMS(Quantity,"Line Amount");
      TotalQty := TempAgentCustLine.Quantity;
      TotalAmt := TempAgentCustLine."Line Amount";
      {
      IF AgentCustLine."Line No." = 0 THEN BEGIN
          TotalQty := TotalQty + LastAgentCustLine.Quantity;
          TotalAmt := TotalAmt + LastAgentCustLine."Line Amount";
      END;

      IF AgentCustLine."Line No." <> 0 THEN BEGIN
        TempAgentCustLine.SETRANGE("Line No.",0,AgentCustLine."Line No.");
        TempAgentCustLine.CALCSUMS(Quantity,"Line Amount");
        Qty := TempAgentCustLine.Quantity;
        Amt := TempAgentCustLine."Line Amount";
      END ELSE BEGIN
        TempAgentCustLine.SETRANGE("Line No.",0,LastAgentCustLine."Line No.");
        TempAgentCustLine.CALCSUMS(Quantity,"Line Amount");
        Qty := TempAgentCustLine.Quantity;
        Amt := TempAgentCustLine."Line Amount";
        TempAgentCustLine.COPYFILTERS(AgentCustLine);
        TempAgentCustLine := LastAgentCustLine;
        IF TempAgentCustLine.NEXT = 0 THEN BEGIN
          TotalQty := TotalQty + LastAgentCustLine.Quantity;
          TotalAmt := TotalAmt + LastAgentCustLine."Line Amount";
        END;
      END;
       }
    END;

    LOCAL PROCEDURE SelltoCustomerNoOnAfterValidat@19034782();
    BEGIN
      IF NOT Cust.GET("Sell-to Customer No.") THEN
        CLEAR(Cust);
    END;

    LOCAL PROCEDURE OnAfterGetCurrRecord@19077479();
    BEGIN
      xRec := Rec;
      CalcTotal(Rec,xRec,TotalResvQty,TotalResvAmount);
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   12.03.2007   KKE   New form for Agent Customer Subform - Circulation Module
    }
    END.
  }
}

OBJECT Page 50056 Agent Customer List
{
  OBJECT-PROPERTIES
  {
    Date=07/12/07;
    Time=[ 6:00:00 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    Editable=No;
    SourceTable=Table50041;
    PageType=Card;
    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1000000024;1 ;ActionGroup;
                      CaptionML=ENU=&Agent Customer }
      { 1000000079;2 ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=ENU=Card;
                      RunObject=Page 50054;
                      RunPageLink=No.=FIELD(No.);
                      Image=EditLines }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                GroupType=Repeater }

    { 1000000001;2;Field  ;
                SourceExpr="No." }

    { 1000000003;2;Field  ;
                SourceExpr="Document Date" }

    { 1000000005;2;Field  ;
                SourceExpr="Magazine Item No." }

    { 1000000007;2;Field  ;
                SourceExpr="Magazine Code" }

    { 1000000009;2;Field  ;
                SourceExpr="Volume No." }

    { 1000000011;2;Field  ;
                SourceExpr="Issue No." }

    { 1000000013;2;Field  ;
                SourceExpr="Issue Date" }

    { 1000000015;2;Field  ;
                SourceExpr="Salesperson Code" }

    { 1000000017;2;Field  ;
                SourceExpr="Location Code" }

    { 1000000019;2;Field  ;
                SourceExpr="Unit of Measure Code" }

  }
  CODE
  {

    BEGIN
    END.
  }
}

OBJECT Page 50057 Circulation Receipt
{
  OBJECT-PROPERTIES
  {
    Date=10/11/07;
    Time=[ 2:13:39 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    SourceTable=Table50043;
    PageType=Card;
    OnAfterGetRecord=BEGIN
                       OnAfterGetCurrRecord;
                     END;

    OnNewRecord=BEGIN
                  OnAfterGetCurrRecord;
                END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1000000013;1 ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 THA=ฟั&งก์ชัน] }
      { 1000000012;2 ;Action    ;
                      CaptionML=ENU=Get Posted Invoice Line;
                      OnAction=VAR
                                 SalesInvHeader@1000000000 : Record 112;
                                 FormPostedSalesInvs@1000000001 : Page 143;
                               BEGIN
                                 SalesInvHeader.FILTERGROUP(2);
                                 SalesInvHeader.SETRANGE("Bill-to Customer No.","Customer No.");
                                 SalesInvHeader.SETFILTER("Posting Date",'<=%1',"Document Date");
                                 //SalesInvHeader.SETRANGE("Get by Circulation Receipt",FALSE);
                                 //SalesInvHeader.SETRANGE(Open,TRUE);
                                 SalesInvHeader.SETRANGE("No. of Circulation Receipt",0);
                                 SalesInvHeader.FILTERGROUP(0);
                                 CLEAR(FormPostedSalesInvs);
                                 FormPostedSalesInvs.LOOKUPMODE := TRUE;
                                 FormPostedSalesInvs.GetFromCirReceipt(Rec);
                                 FormPostedSalesInvs.SETTABLEVIEW(SalesInvHeader);
                                 FormPostedSalesInvs.SETRECORD(SalesInvHeader);
                                 FormPostedSalesInvs.RUNMODAL;
                               END;
                                }
      { 1000000014;2 ;Action    ;
                      CaptionML=ENU=Get Posted Credit Memo Line;
                      OnAction=VAR
                                 SalesCrMemoHeader@1000000001 : Record 114;
                                 FormPostedSalesCrMemos@1000000000 : Page 144;
                               BEGIN
                                 SalesCrMemoHeader.FILTERGROUP(2);
                                 SalesCrMemoHeader.SETRANGE("Bill-to Customer No.","Customer No.");
                                 SalesCrMemoHeader.SETFILTER("Posting Date",'<=%1',"Document Date");
                                 SalesCrMemoHeader.SETRANGE("Get by Circulation Receipt",FALSE);
                                 SalesCrMemoHeader.SETRANGE(Open,TRUE);
                                 SalesCrMemoHeader.FILTERGROUP(0);
                                 CLEAR(FormPostedSalesCrMemos);
                                 FormPostedSalesCrMemos.LOOKUPMODE := TRUE;
                                 FormPostedSalesCrMemos.GetFromCirReceipt(Rec);
                                 FormPostedSalesCrMemos.SETTABLEVIEW(SalesCrMemoHeader);
                                 FormPostedSalesCrMemos.RUNMODAL;
                               END;
                                }
      { 1000000021;2 ;Separator  }
      { 1000000022;2 ;Action    ;
                      CaptionML=ENU=Calc. Payment;
                      OnAction=BEGIN
                                 Rec.CalcPayment;  //KKE: #002
                               END;
                                }
      { 1000000011;1 ;ActionGroup;
                      CaptionML=[ENU=&Print;
                                 THA=&พิมพ์] }
      { 1000000016;2 ;Action    ;
                      CaptionML=ENU=Receipt;
                      OnAction=VAR
                                 CirReceiptHeader@1000000001 : Record 50043;
                               BEGIN
                                 CirReceiptHeader.RESET;
                                 CirReceiptHeader.SETRANGE("No.","No.");
                                 REPORT.RUNMODAL(REPORT::"Circulation Receipt",TRUE,FALSE,CirReceiptHeader);
                               END;
                                }
      { 1000000023;2 ;Action    ;
                      CaptionML=ENU=Receipt 50% แรก;
                      OnAction=VAR
                                 CirReceiptHeader@1000000001 : Record 50043;
                                 CirculationReceipt@1000000000 : Report 50041;
                               BEGIN
                                 CirReceiptHeader.RESET;
                                 CirReceiptHeader.SETRANGE("No.","No.");
                                 CirculationReceipt.SETTABLEVIEW(CirReceiptHeader);
                                 CirculationReceipt.InitRequest(TRUE);
                                 CirculationReceipt.RUNMODAL;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                CaptionML=ENU=General }

    { 1000000001;2;Field  ;
                SourceExpr="No.";
                OnAssistEdit=BEGIN
                               IF AssistEdit(xRec) THEN
                                 CurrPage.UPDATE;
                             END;
                              }

    { 1000000003;2;Field  ;
                SourceExpr="Customer No.";
                OnValidate=BEGIN
                             IF NOT Cust.GET("Customer No.") THEN
                               CLEAR(Cust);
                           END;
                            }

    { 1000000015;2;Field  ;
                CaptionClass=FORMAT (Cust.Name);
                Editable=FALSE }

    { 1000000019;2;Field  ;
                SourceExpr=Contact }

    { 1000000005;2;Field  ;
                SourceExpr="Document Date" }

    { 1000000017;2;Field  ;
                SourceExpr="No. Printed" }

    { 1000000008;1;Part   ;
                SubPageLink=Circulation Receipt No.=FIELD(No.);
                PagePartID=Page50058 }

  }
  CODE
  {
    VAR
      Cust@1000000000 : Record 18;

    LOCAL PROCEDURE OnAfterGetCurrRecord@19077479();
    BEGIN
      xRec := Rec;
      IF NOT Cust.GET("Customer No.") THEN
        CLEAR(Cust);
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   30.04.2007   KKE   New form for Circulation Receipt - Circulation Module
      002   18.09.2007   KKE   Add Calc. Payment
    }
    END.
  }
}

OBJECT Page 50058 Circulation Receipt Subform
{
  OBJECT-PROPERTIES
  {
    Date=01/30/21;
    Time=[ 7:10:09 PM];
    Modified=Yes;
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    InsertAllowed=No;
    SourceTable=Table50044;
    DelayedInsert=Yes;
    PageType=ListPart;
    AutoSplitKey=Yes;
    OnAfterGetRecord=BEGIN
                       OnAfterGetCurrRecord;
                     END;

    OnNewRecord=BEGIN
                  OnAfterGetCurrRecord;
                END;

    OnModifyRecord=BEGIN
                     IF ("Deposit Amount" = xRec."Deposit Amount") AND ("Description 2" = xRec."Description 2") THEN
                       ERROR(Text000);
                   END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                GroupType=Repeater }

    { 1000000001;2;Field  ;
                SourceExpr="Document Type" }

    { 1000000003;2;Field  ;
                SourceExpr="Document No." }

    { 1000000005;2;Field  ;
                SourceExpr="Document Line No.";
                Visible=FALSE }

    { 1000000007;2;Field  ;
                SourceExpr="Posting Date" }

    { 1000000009;2;Field  ;
                SourceExpr=Type }

    { 1000000011;2;Field  ;
                SourceExpr="No." }

    { 1000000013;2;Field  ;
                SourceExpr=Description }

    { 1000000015;2;Field  ;
                SourceExpr="Description 2" }

    { 1000000029;2;Field  ;
                SourceExpr="Deposit Amount" }

    { 1000000017;2;Field  ;
                SourceExpr=Quantity }

    { 1000000019;2;Field  ;
                SourceExpr="Unit Price" }

    { 1000000021;2;Field  ;
                SourceExpr=Discount }

    { 1000000027;2;Field  ;
                SourceExpr="Line Amount Incl. VAT" }

    { 1000000023;1;Field  ;
                CaptionML=ENU=Total Quantity;
                DecimalPlaces=0:5;
                SourceExpr=TotalQty;
                Editable=FALSE }

    { 1000000025;1;Field  ;
                CaptionML=ENU=Total Amount;
                SourceExpr=TotalAmount;
                Editable=FALSE }

  }
  CODE
  {
    VAR
      TotalQty@1000000000 : Decimal;
      TotalAmount@1000000001 : Decimal;
      Text000@1000000002 : TextConst 'ENU=You cannot modify this record.';

    PROCEDURE CalcTotal@8(VAR CirReceiptLine@1000 : Record 50044;LastCirReceiptLine@1001 : Record 50044;VAR TotalQty@1003 : Decimal;VAR TotalAmt@1000000000 : Decimal);
    VAR
      TempCirReceiptLine@1006 : Record 50044;
    BEGIN
      TempCirReceiptLine.COPYFILTERS(CirReceiptLine);
      TempCirReceiptLine.SETCURRENTKEY("Circulation Receipt No.","Document Type",Type,"No.","Document No.");
      TempCirReceiptLine.CALCSUMS(Quantity,"Line Amount Incl. VAT");
      TotalQty := TempCirReceiptLine.Quantity;
      TotalAmt := TempCirReceiptLine."Line Amount Incl. VAT";
    END;

    LOCAL PROCEDURE OnAfterGetCurrRecord@19077479();
    BEGIN
      xRec := Rec;
      CalcTotal(Rec,xRec,TotalQty,TotalAmount);
    END;

    BEGIN
    END.
  }
}

OBJECT Page 50059 Circulation Receipt List
{
  OBJECT-PROPERTIES
  {
    Date=04/30/07;
    Time=[ 6:00:00 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    Editable=No;
    SourceTable=Table50043;
    PageType=Card;
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                GroupType=Repeater }

    { 1000000001;2;Field  ;
                SourceExpr="No." }

    { 1000000003;2;Field  ;
                SourceExpr="Document Date" }

    { 1000000005;2;Field  ;
                SourceExpr="Customer No." }

  }
  CODE
  {

    BEGIN
    END.
  }
}

OBJECT Page 50060 Ads. Booking Overview
{
  OBJECT-PROPERTIES
  {
    Date=12/19/11;
    Time=[ 3:20:27 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Ads Booking Overview;
    InsertAllowed=No;
    DeleteAllowed=Yes;
    ModifyAllowed=No;
    SourceTable=Table50049;
    PageType=Card;
  }
  CONTROLS
  {
  }
  CODE
  {
    VAR
      UserSetup@1000000021 : Record 91;
      Salesperson@1000000023 : Record 13;
      TeamSales@1000000024 : Record 5084;
      MagazineFilter@1000000001 : Code[250];
      VolumeFilter@1000000000 : Code[20];
      IssueNoFilter@1000000016 : Code[20];
      RevenueTypeFilter@1000000012 : Code[20];
      AdsSizeFilter@1000000011 : Code[20];
      AdsTypeFilter@1000000008 : Code[20];
      AdsPositionFilter@1000000017 : Code[20];
      TeamSalesFilter@1000000025 : Text[500];
      SalespersonFilter@1000000026 : Text[500];
      StBooking@1000000002 : Boolean;
      StWaitingList@1000000013 : Boolean;
      StConfirmed@1000000003 : Boolean;
      StApproved@1000000014 : Boolean;
      StHold@1000000015 : Boolean;
      StCancelled@1000000004 : Boolean;
      StInvoiced@1000000005 : Boolean;
      StClosed@1000000007 : Boolean;
      ShowColumnName@1000000018 : Boolean;
      ShowAsColumn@1000000019 : 'Ads. Position,Ads. Size,Revenue Type,Ads. Type';
      HideDetails@1000000006 : Boolean;
      MatrixHeader@1000000010 : Text[50];
      MatrixAmount@1000000009 : Decimal;
      Text001@1000000022 : TextConst 'ENU=You do not have permision to see Ads. Booking Overview.';

    LOCAL PROCEDURE FindRec@59(InsertLine@1000000003 : Boolean;VAR AdsBuf@1001 : Record 50049;Which@1002 : Text[250]) : Boolean;
    VAR
      Found@1008 : Boolean;
      IssueNo@1000000004 : Record 50009;
      AdsPosition@1000000000 : Record 50029;
      AdsSize@1000000001 : Record 50028;
      RevenueType@1000000002 : Record 50027;
      AdsType@1000000005 : Record 50032;
    BEGIN
    END;

    LOCAL PROCEDURE NextRec@60(InsertLine@1000000003 : Boolean;VAR AdsBuf@1001 : Record 50049;Steps@1002 : Integer) : Integer;
    VAR
      ResultSteps@1008 : Integer;
      IssueNo@1000000004 : Record 50009;
      AdsPosition@1000000000 : Record 50029;
      AdsSize@1000000002 : Record 50028;
      RevenueType@1000000001 : Record 50027;
      AdsType@1000000005 : Record 50032;
    BEGIN
    END;

    PROCEDURE CheckLineStatus@1000000013() : Text[150];
    VAR
      V1Linestatus@1000000000 : Text[150];
    BEGIN
    END;

    LOCAL PROCEDURE CopyIssueToBuf@1000000004(VAR TheIssueNo@1000 : Record 50009;VAR TheAdsBuffer@1001 : Record 50049);
    VAR
      i@1000000000 : Integer;
      LineStatusFilter@1000000001 : Text[150];
    BEGIN
    END;

    LOCAL PROCEDURE CopyAdsPosToBuf@5(VAR TheAdsPosition@1000 : Record 50029;VAR TheAdsBuffer@1001 : Record 50049);
    BEGIN
    END;

    LOCAL PROCEDURE CopyAdsSizeToBuf@1000000001(VAR TheAdsSize@1000 : Record 50028;VAR TheAdsBuffer@1001 : Record 50049);
    BEGIN
    END;

    LOCAL PROCEDURE CopyRevTypeToBuf@1000000002(VAR TheRevType@1000 : Record 50027;VAR TheAdsBuffer@1001 : Record 50049);
    BEGIN
    END;

    LOCAL PROCEDURE CopyAdsTypeToBuf@1000000000(VAR TheAdsType@1000 : Record 50032;VAR TheAdsBuffer@1001 : Record 50049);
    BEGIN
    END;

    LOCAL PROCEDURE GetData@27(SetColFilter@1000 : Boolean) : Text[250];
    VAR
      Amount@1001 : Decimal;
      ColumnCode@1002 : Code[20];
      AdsBookingLine@1000000000 : Record 50038;
    BEGIN
    END;

    LOCAL PROCEDURE DrillDown@30(SetColFilter@1000 : Boolean);
    VAR
      AdsBookingLines@1000000001 : Page 50100;
      AdsBookingLine@1000000000 : Record 50038;
      ColumnCode@1000000002 : Code[20];
    BEGIN
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   04.05.2007   KKE   New form for "Ads. Booking Overview" - Ads. Sales Module
      002   24.01.2008   KKE   Allow Salesperson to view all record.
    }
    END.
  }
}

OBJECT Page 50061 Archived Content Index
{
  OBJECT-PROPERTIES
  {
    Date=07/02/07;
    Time=[ 6:00:00 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    Editable=No;
    SourceTable=Table50045;
    PageType=Card;
    OnAfterGetRecord=BEGIN
                       OnAfterGetCurrRecord;
                     END;

    OnNewRecord=BEGIN
                  OnAfterGetCurrRecord;
                END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                CaptionML=ENU=General }

    { 1000000001;2;Field  ;
                SourceExpr="No.";
                Editable=FALSE }

    { 1000000003;2;Field  ;
                SourceExpr="Creation Date";
                Editable=FALSE }

    { 1000000005;2;Field  ;
                SourceExpr="Magazine Item No.";
                Editable=FALSE;
                OnValidate=BEGIN
                             IF NOT Item.GET("Magazine Item No.") THEN
                               CLEAR(Item);
                           END;
                            }

    { 1000000019;2;Field  ;
                SourceExpr=Close }

    { 1000000007;2;Field  ;
                CaptionML=ENU=Magazine Code;
                SourceExpr=Item."Magazine Code";
                TableRelation=Magazine;
                Editable=FALSE }

    { 1000000010;2;Field  ;
                CaptionML=ENU=Volume No.;
                SourceExpr=Item."Volume No.";
                TableRelation=Volume;
                Editable=FALSE }

    { 1000000012;2;Field  ;
                CaptionML=ENU=Issue No.;
                SourceExpr=Item."Issue No.";
                TableRelation="Issue No.";
                Editable=FALSE }

    { 1000000014;2;Field  ;
                CaptionML=ENU=Issue Date;
                SourceExpr=Item."Issue Date";
                Editable=FALSE }

    { 1000000016;1;Part   ;
                Name=ContentBookingLines;
                SubPageLink=Content List No.=FIELD(No.);
                PagePartID=Page50062 }

  }
  CODE
  {
    VAR
      Item@1000000000 : Record 27;

    LOCAL PROCEDURE OnAfterGetCurrRecord@19077479();
    BEGIN
      xRec := Rec;
      IF NOT Item.GET("Magazine Item No.") THEN
        CLEAR(Item);
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   28.03.2007   KKE   New form for "Content List" - Editorial Module
    }
    END.
  }
}

OBJECT Page 50062 Archived Content Index Subform
{
  OBJECT-PROPERTIES
  {
    Date=01/30/21;
    Time=[ 7:10:38 PM];
    Modified=Yes;
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    Editable=No;
    SourceTable=Table50046;
    PageType=ListPart;
    AutoSplitKey=Yes;
    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1907935204;1 ;ActionGroup;
                      CaptionML=ENU=&Line }
      { 1902199604;2 ;Action    ;
                      CaptionML=ENU=&Photo Expense;
                      OnAction=BEGIN
                                 //This functionality was copied from page #50061. Unsupported part was commented. Please check it.
                                 {CurrPage.ContentBookingLines.PAGE.}
                                 _ShowPhotoExpense;
                               END;
                                }
      { 1903646004;2 ;Action    ;
                      CaptionML=ENU=Content &Cost;
                      OnAction=BEGIN
                                 //This functionality was copied from page #50061. Unsupported part was commented. Please check it.
                                 {CurrPage.ContentBookingLines.PAGE.}
                                 _ShowContentCost;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                GroupType=Repeater }

    { 1000000001;2;Field  ;
                SourceExpr="Content Code" }

    { 1000000003;2;Field  ;
                SourceExpr=Description }

    { 1000000013;2;Field  ;
                SourceExpr="Description 2";
                Visible=FALSE }

    { 1000000029;2;Field  ;
                SourceExpr="Column Name" }

    { 1000000021;2;Field  ;
                SourceExpr=Status;
                Style=Strong;
                StyleExpr=TRUE }

    { 1000000007;2;Field  ;
                SourceExpr="Content Type" }

    { 1000000009;2;Field  ;
                SourceExpr="Content Sub Type" }

    { 1000000005;2;Field  ;
                SourceExpr="No. of Page" }

    { 1000000025;2;Field  ;
                SourceExpr=Size }

    { 1000000027;2;Field  ;
                SourceExpr=Position }

    { 1000000011;2;Field  ;
                SourceExpr="Author Name" }

    { 1000000015;2;Field  ;
                SourceExpr="Source of Information" }

    { 1000000017;2;Field  ;
                SourceExpr="Cost (LCY)" }

    { 1000000019;2;Field  ;
                SourceExpr="Content Receipt Date" }

    { 1000000023;2;Field  ;
                SourceExpr="Actual Page No." }

  }
  CODE
  {

    PROCEDURE _ShowPhotoExpense@19026543();
    BEGIN
      Rec.ShowPhotoExpense;
    END;

    PROCEDURE ShowPhotoExpense@1000000000();
    BEGIN
      Rec.ShowPhotoExpense;
    END;

    PROCEDURE _ShowContentCost@19003697();
    BEGIN
      Rec.ShowContentCost;
    END;

    PROCEDURE ShowContentCost@1000000001();
    BEGIN
      Rec.ShowContentCost;
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   18.05.2007   KKE   New form for "Archived Content Index Subform" - Editorial Module
    }
    END.
  }
}

OBJECT Page 50063 Archived Content Index List
{
  OBJECT-PROPERTIES
  {
    Date=05/18/07;
    Time=[ 6:00:00 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    Editable=No;
    SourceTable=Table50045;
    PageType=Card;
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                GroupType=Repeater }

    { 1000000001;2;Field  ;
                SourceExpr="No." }

    { 1000000003;2;Field  ;
                SourceExpr="Creation Date" }

    { 1000000005;2;Field  ;
                SourceExpr="Magazine Item No." }

  }
  CODE
  {

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   18.05.2007   KKE   New form for "Archived Content Index List" - Editorial Module
    }
    END.
  }
}

OBJECT Page 50065 Archived Dummy Plan List
{
  OBJECT-PROPERTIES
  {
    Date=05/18/07;
    Time=[ 6:00:00 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    Editable=No;
    SourceTable=Table50047;
    PageType=Card;
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                GroupType=Repeater }

    { 1000000001;2;Field  ;
                SourceExpr="Dummy Plan No." }

    { 1000000013;2;Field  ;
                SourceExpr="Revision No." }

    { 1000000005;2;Field  ;
                SourceExpr="Planning Status" }

    { 1000000003;2;Field  ;
                SourceExpr="Magazine Item No." }

    { 1000000007;2;Field  ;
                SourceExpr="Document Date" }

    { 1000000009;2;Field  ;
                SourceExpr="No. of Page" }

    { 1000000011;2;Field  ;
                SourceExpr="User ID" }

    { 1000000015;2;Field  ;
                SourceExpr="Revision Date/Time" }

  }
  CODE
  {

    BEGIN
    END.
  }
}

OBJECT Page 50066 Ads. Billing
{
  OBJECT-PROPERTIES
  {
    Date=12/12/11;
    Time=[ 2:44:35 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    SourceTable=Table50050;
    PageType=Card;
    OnInit=BEGIN
             "Due DateEditable" := TRUE;
             "Bill-to ContactEditable" := TRUE;
             "Bill-to Country CodeEditable" := TRUE;
             "Bill-to CountyEditable" := TRUE;
             "Bill-to CityEditable" := TRUE;
             "Bill-to Post CodeEditable" := TRUE;
             "Expected Receipt DateEditable" := TRUE;
             "Billing DateEditable" := TRUE;
             RemarkEditable := TRUE;
             "Bill-to Address 3Editable" := TRUE;
             "Bill-to Address 2Editable" := TRUE;
             "Bill-to AddressEditable" := TRUE;
             "Bill-to NameEditable" := TRUE;
             "Bill-to Customer No.Editable" := TRUE;
             "No.Editable" := TRUE;
           END;

    OnAfterGetRecord=BEGIN
                       OnAfterGetCurrRecord;
                     END;

    OnNewRecord=BEGIN
                  OnAfterGetCurrRecord;
                END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1000000014;1 ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 THA=ฟั&งก์ชัน] }
      { 1000000015;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Suggest Lines;
                                 THA=แนะนำบรรทัด];
                      Image=SuggestLines;
                      OnAction=BEGIN
                                 SuggestBillingLines(Rec);
                               END;
                                }
      { 1000000038;2 ;Separator  }
      { 1000000039;2 ;Action    ;
                      CaptionML=[ENU=Re&open;
                                 THA=เปิด&ใหม่];
                      Image=ReOpen;
                      OnAction=BEGIN
                                 Reopen;
                               END;
                                }
      { 1000000042;2 ;Action    ;
                      CaptionML=ENU=Archived Ads. Billing;
                      OnAction=BEGIN
                                 Rec.ArchivedAdsBilling;
                               END;
                                }
      { 1000000019;1 ;Action    ;
                      CaptionML=ENU=&Print;
                      Promoted=Yes;
                      Image=Print;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 AdsBillingHeader@1000000000 : Record 50050;
                               BEGIN
                                 AdsBillingHeader.SETRANGE("No.","No.");
                                 REPORT.RUNMODAL(REPORT::"Ads. Billing Note",TRUE,FALSE,AdsBillingHeader);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                CaptionML=ENU=General }

    { 1000000001;2;Field  ;
                SourceExpr="No.";
                Editable="No.Editable";
                OnAssistEdit=BEGIN
                               IF AssistEdit(xRec) THEN
                                 CurrPage.UPDATE;
                             END;
                              }

    { 1000000003;2;Field  ;
                SourceExpr="Bill-to Customer No.";
                Editable="Bill-to Customer No.Editable" }

    { 1000000005;2;Field  ;
                SourceExpr="Bill-to Name";
                Editable="Bill-to NameEditable" }

    { 1000000007;2;Field  ;
                SourceExpr="Bill-to Address";
                Editable="Bill-to AddressEditable" }

    { 1000000009;2;Field  ;
                SourceExpr="Bill-to Address 2";
                Editable="Bill-to Address 2Editable" }

    { 1000000011;2;Field  ;
                SourceExpr="Bill-to Address 3";
                Editable="Bill-to Address 3Editable" }

    { 1000000036;2;Field  ;
                CaptionML=[ENU=Bill-to Post Code/City;
                           THA=เก็บเงินที่รหัสไปรษณีย์/เมือง];
                SourceExpr="Bill-to Post Code";
                Editable="Bill-to Post CodeEditable" }

    { 1000000040;2;Field  ;
                SourceExpr="Bill-to City";
                Editable="Bill-to CityEditable" }

    { 1000000034;2;Field  ;
                SourceExpr="Bill-to County";
                Editable="Bill-to CountyEditable" }

    { 1000000041;2;Field  ;
                CaptionML=[ENU=Bill-to County/Country Code;
                           THA=เก็บเงินที่เขต/รหัสประเทศ];
                SourceExpr="Bill-to Country Code";
                Editable="Bill-to Country CodeEditable" }

    { 1000000032;2;Field  ;
                SourceExpr="Bill-to Contact";
                Editable="Bill-to ContactEditable" }

    { 1000000023;2;Field  ;
                SourceExpr=Remark;
                Editable=RemarkEditable }

    { 1000000025;2;Field  ;
                SourceExpr="Billing Date";
                Editable="Billing DateEditable" }

    { 1000000027;2;Field  ;
                SourceExpr="Expected Receipt Date";
                Editable="Expected Receipt DateEditable" }

    { 1000000018;2;Field  ;
                SourceExpr="Due Date";
                Editable="Due DateEditable" }

    { 1000000029;2;Field  ;
                SourceExpr=Status }

    { 1000000013;1;Part   ;
                Name=BillingSubform;
                SubPageLink=Billing No.=FIELD(No.);
                PagePartID=Page50067 }

  }
  CODE
  {
    VAR
      "No.Editable"@19005397 : Boolean INDATASET;
      "Bill-to Customer No.Editable"@19000288 : Boolean INDATASET;
      "Bill-to NameEditable"@19028286 : Boolean INDATASET;
      "Bill-to AddressEditable"@19076992 : Boolean INDATASET;
      "Bill-to Address 2Editable"@19072803 : Boolean INDATASET;
      "Bill-to Address 3Editable"@19076259 : Boolean INDATASET;
      RemarkEditable@19021657 : Boolean INDATASET;
      "Billing DateEditable"@19007364 : Boolean INDATASET;
      "Expected Receipt DateEditable"@19051435 : Boolean INDATASET;
      "Bill-to Post CodeEditable"@19015910 : Boolean INDATASET;
      "Bill-to CityEditable"@19013613 : Boolean INDATASET;
      "Bill-to CountyEditable"@19032822 : Boolean INDATASET;
      "Bill-to Country CodeEditable"@19069271 : Boolean INDATASET;
      "Bill-to ContactEditable"@19031957 : Boolean INDATASET;
      "Due DateEditable"@19054989 : Boolean INDATASET;

    PROCEDURE SetEditForm@1000000000();
    BEGIN
      "No.Editable" := Status = Status::Open;
      "Bill-to Customer No.Editable" := Status = Status::Open;
      "Bill-to NameEditable" := Status = Status::Open;
      "Bill-to AddressEditable" := Status = Status::Open;
      "Bill-to Address 2Editable" := Status = Status::Open;
      "Bill-to Address 3Editable" := Status = Status::Open;
      RemarkEditable := Status = Status::Open;
      "Billing DateEditable" := Status = Status::Open;
      "Expected Receipt DateEditable" := Status = Status::Open;
      "Bill-to Post CodeEditable" := Status = Status::Open;
      "Bill-to CityEditable" := Status = Status::Open;
      "Bill-to CountyEditable" := Status = Status::Open;
      "Bill-to Country CodeEditable" := Status = Status::Open;
      "Bill-to ContactEditable" := Status = Status::Open;
      "Due DateEditable" := Status = Status::Open;
      CurrPage.BillingSubform.PAGE.EDITABLE := Status = Status::Open;
    END;

    LOCAL PROCEDURE OnAfterGetCurrRecord@19077479();
    BEGIN
      xRec := Rec;
      SetEditForm;
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   25.05.2007   KKE   New form for "Ads. Billing Note" - Ads. Sales Module
    }
    END.
  }
}

OBJECT Page 50067 Ads. Billing Subform
{
  OBJECT-PROPERTIES
  {
    Date=01/30/21;
    Time=[ 7:11:05 PM];
    Modified=Yes;
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    MultipleNewLines=Yes;
    SourceTable=Table50051;
    DelayedInsert=Yes;
    PageType=ListPart;
    AutoSplitKey=Yes;
    OnNewRecord=BEGIN
                  IF NOT AdsBookingHeader.GET("Billing No.") THEN
                    CLEAR(AdsBookingHeader);
                  "Bill-to Customer No." := AdsBookingHeader."Bill-to Customer No.";
                END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                GroupType=Repeater }

    { 1000000015;2;Field  ;
                SourceExpr="Line No.";
                Visible=FALSE }

    { 1000000021;2;Field  ;
                SourceExpr="Cust. Ledger Entry No." }

    { 1000000017;2;Field  ;
                SourceExpr="Bill-to Customer No.";
                Visible=FALSE }

    { 1000000001;2;Field  ;
                SourceExpr="Document Type" }

    { 1000000003;2;Field  ;
                SourceExpr="Document No." }

    { 1000000027;2;Field  ;
                SourceExpr="Due Date" }

    { 1000000019;2;Field  ;
                SourceExpr=Description }

    { 1000000007;2;Field  ;
                SourceExpr="Salesperson Code" }

    { 1000000013;2;Field  ;
                SourceExpr="Original Amount" }

    { 1000000005;2;Field  ;
                SourceExpr="Remaining Amount" }

    { 1000000023;2;Field  ;
                SourceExpr="Remaining Amt. (LCY)" }

    { 1000000025;2;Field  ;
                SourceExpr="Billing Amount";
                Style=Strong;
                StyleExpr=TRUE }

  }
  CODE
  {
    VAR
      AdsBookingHeader@1000000000 : Record 50050;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   25.05.2007   KKE   New form for "Ads. Billing Note Subform" - Ads. Sales Module
    }
    END.
  }
}

OBJECT Page 50068 Ads. Billing List
{
  OBJECT-PROPERTIES
  {
    Date=05/25/07;
    Time=[ 6:00:00 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    Editable=No;
    SourceTable=Table50050;
    PageType=Card;
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                GroupType=Repeater }

    { 1000000001;2;Field  ;
                SourceExpr="No." }

    { 1000000003;2;Field  ;
                SourceExpr="Bill-to Customer No." }

    { 1000000005;2;Field  ;
                SourceExpr="Bill-to Name" }

    { 1000000014;2;Field  ;
                SourceExpr=Status }

    { 1000000007;2;Field  ;
                SourceExpr="Billing Date" }

    { 1000000009;2;Field  ;
                SourceExpr="Expected Receipt Date" }

  }
  CODE
  {

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   25.05.2007   KKE   New form for "Ads. Billing Note List" - Ads. Sales Module
    }
    END.
  }
}

OBJECT Page 50069 Petty Cash Setup
{
  OBJECT-PROPERTIES
  {
    Date=02/21/07;
    Time=[ 6:00:00 PM];
    Version List=AVATHA4.40;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Petty Cash Setup;
               THA=เซ็ตอัพเงินสดย่อย];
    SourceTable=Table55000;
    PageType=Card;
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                CaptionML=[ENU=General;
                           THA=ทั่วไป] }

    { 1000000001;2;Field  ;
                SourceExpr="Petty Cash Nos." }

    { 1000000010;2;Field  ;
                SourceExpr="Settle Petty Cash Nos." }

    { 1000000003;2;Field  ;
                SourceExpr="Bank Account No." }

    { 1000000008;2;Field  ;
                SourceExpr="Allow VAT Difference" }

  }
  CODE
  {

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Localization TH
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   24.08.2006   KKE   Petty Cash.
    }
    END.
  }
}

OBJECT Page 50070 Refund Petty Cash
{
  OBJECT-PROPERTIES
  {
    Date=04/20/07;
    Time=[ 6:00:00 PM];
    Version List=AVATHA4.40;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Refund Petty Cash;
               THA=ตั้งวงเงินสดย่อย];
    SaveValues=Yes;
    SourceTable=Table81;
    DelayedInsert=Yes;
    DataCaptionFields=Journal Batch Name;
    PageType=Card;
    AutoSplitKey=Yes;
    OnInit=BEGIN
             TotalBalanceVisible := TRUE;
             BalanceVisible := TRUE;
             "WHT Certificate No.Editable" := TRUE;
           END;

    OnOpenPage=VAR
                 JnlSelected@1000 : Boolean;
               BEGIN
                 GenJnlManagement.TemplateSelection(PAGE::"Refund Petty Cash",8,FALSE,Rec,JnlSelected);
                 IF NOT JnlSelected THEN
                   ERROR('');
                 GenJnlManagement.OpenJnl(CurrentJnlBatchName,Rec);
               END;

    OnAfterGetRecord=BEGIN
                       ShowShortcutDimCode(ShortcutDimCode);
                       //KKE : #002 +
                       IF "Certificate Printed" THEN
                         "WHT Certificate No.Editable" := FALSE
                       ELSE BEGIN
                         GenJnlBatch.GET("Journal Template Name","Journal Batch Name");
                         "WHT Certificate No.Editable" := GenJnlBatch."Allow Manual WHT Cert. No.";
                       END;
                       //KKE : #002 -
                       OnAfterGetCurrRecord;
                     END;

    OnNewRecord=BEGIN
                  UpdateBalance;
                  SetUpNewLine(xRec,Balance,BelowxRec);
                  CLEAR(ShortcutDimCode);

                  "Account Type" := "Account Type"::Vendor;
                  OnAfterGetCurrRecord;
                END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 57      ;1   ;ActionGroup;
                      CaptionML=[ENU=&Line;
                                 THA=&บรรทัด] }
      { 58      ;2   ;Action    ;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=[ENU=Dimensions;
                                 THA=มิติ];
                      RunObject=Page 545;
                      RunPageLink=Table ID=CONST(81),
                                  Journal Template Name=FIELD(Journal Template Name),
                                  Journal Batch Name=FIELD(Journal Batch Name),
                                  Journal Line No.=FIELD(Line No.);
                      Image=Dimensions }
      { 37      ;1   ;ActionGroup;
                      CaptionML=[ENU=A&ccount;
                                 THA=&บัญชี] }
      { 38      ;2   ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=[ENU=Card;
                                 THA=บัตร];
                      RunObject=Codeunit 15;
                      Image=EditLines }
      { 39      ;2   ;Action    ;
                      ShortCutKey=Ctrl+F7;
                      CaptionML=[ENU=Ledger E&ntries;
                                 THA=รายการ&บัญชีแยกประเภท];
                      RunObject=Codeunit 14 }
      { 41      ;1   ;ActionGroup;
                      CaptionML=[ENU=&Payments;
                                 THA=&การชำระเงิน] }
      { 42      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Suggest Vendor Payments;
                                 THA=แนะนำการชำระเงินของผู้ขาย];
                      Image=SuggestVendorPayments;
                      OnAction=BEGIN
                                 CreateVendorPmtSuggestion.SetGenJnlLine(Rec);
                                 CreateVendorPmtSuggestion.RUNMODAL;
                                 CLEAR(CreateVendorPmtSuggestion);
                               END;
                                }
      { 63      ;2   ;Action    ;
                      CaptionML=[ENU=P&review Check;
                                 THA=ตรวจสอบ&มุมมองก่อนพิมพ์];
                      RunObject=Page 404;
                      RunPageLink=Journal Template Name=FIELD(Journal Template Name),
                                  Journal Batch Name=FIELD(Journal Batch Name),
                                  Line No.=FIELD(Line No.) }
      { 64      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Print Check;
                                 THA=พิมพ์เช็ค];
                      Image=PrintCheck;
                      OnAction=BEGIN
                                 GenJnlLine.RESET;
                                 GenJnlLine.COPY(Rec);
                                 GenJnlLine.SETRANGE("Journal Template Name","Journal Template Name");
                                 GenJnlLine.SETRANGE("Journal Batch Name","Journal Batch Name");
                                 DocPrint.PrintCheck(GenJnlLine);
                                 CODEUNIT.RUN(CODEUNIT::"Adjust Gen. Journal Balance",Rec);
                               END;
                                }
      { 65      ;2   ;Action    ;
                      CaptionML=[ENU=Void Check;
                                 THA=โมฆะเช็ค];
                      Image=VoidCheck;
                      OnAction=BEGIN
                                 TESTFIELD("Bank Payment Type","Bank Payment Type"::"Computer Check");
                                 TESTFIELD("Check Printed",TRUE);
                                 IF CONFIRM(Text000,FALSE,"Document No.") THEN
                                   CheckManagement.VoidCheck(Rec);
                               END;
                                }
      { 66      ;2   ;Action    ;
                      CaptionML=[ENU=Void &All Checks;
                                 THA=โมฆะ &เช็คทั้งหมด];
                      OnAction=BEGIN
                                 IF CONFIRM(Text001,FALSE) THEN BEGIN
                                   GenJnlLine.RESET;
                                   GenJnlLine.COPY(Rec);
                                   GenJnlLine.SETRANGE("Bank Payment Type","Bank Payment Type"::"Computer Check");
                                   GenJnlLine.SETRANGE("Check Printed",TRUE);
                                   IF GenJnlLine.FIND('-') THEN
                                     REPEAT
                                       GenJnlLine2 := GenJnlLine;
                                       CheckManagement.VoidCheck(GenJnlLine2);
                                     UNTIL GenJnlLine.NEXT = 0;
                                 END;
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1000000000;1 ;ActionGroup;
                      CaptionML=[ENU=P&rint;
                                 THA=&พิมพ์] }
      { 1000000001;2 ;Action    ;
                      CaptionML=ENU=Payment Voucher;
                      OnAction=BEGIN
                                 GenJnlLine.RESET;
                                 GenJnlLine.SETRANGE("Journal Template Name","Journal Template Name");
                                 GenJnlLine.SETRANGE("Journal Batch Name","Journal Batch Name");
                                 GenJnlLine.SETRANGE("Document No.","Document No.");
                                 REPORT.RUN(REPORT::"Payment Voucher",TRUE,FALSE,GenJnlLine);
                               END;
                                }
      { 40      ;1   ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 THA=ฟังก์&ชัน] }
      { 93      ;2   ;Action    ;
                      ShortCutKey=Shift+F11;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Apply Entries;
                                 THA=ใช้รายการ];
                      RunObject=Codeunit 225;
                      Image=ApplyEntries }
      { 94      ;2   ;Action    ;
                      CaptionML=[ENU=Insert Conv. LCY Rndg. Lines;
                                 THA=แทรกบรรทัดการปัดเศษจากการแปลง LCY];
                      RunObject=Codeunit 407 }
      { 1500002 ;2   ;Separator  }
      { 1500003 ;2   ;Action    ;
                      CaptionML=[ENU=Cancel Post Dated Check;
                                 THA=ยกเลิกเช็คจ่ายล่วงหน้า];
                      OnAction=BEGIN
                                 PostDatedCheckMgt.CancelCheck(Rec);
                               END;
                                }
      { 43      ;1   ;ActionGroup;
                      CaptionML=[ENU=P&osting;
                                 THA=การ&ลงรายการบัญชี] }
      { 44      ;2   ;Action    ;
                      ShortCutKey=Ctrl+F11;
                      CaptionML=[ENU=Reconcile;
                                 THA=กระทบยอด];
                      Image=Reconcile;
                      OnAction=BEGIN
                                 GLReconcile.SetGenJnlLine(Rec);
                                 GLReconcile.RUN;
                               END;
                                }
      { 45      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Test Report;
                                 THA=รายงานการทดสอบ];
                      Image=TestReport;
                      OnAction=BEGIN
                                 ReportPrint.PrintGenJnlLine(Rec);
                               END;
                                }
      { 46      ;2   ;Action    ;
                      ShortCutKey=F9;
                      CaptionML=[ENU=P&ost;
                                 THA=ลง&รายการบัญชี];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Post;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CODEUNIT.RUN(CODEUNIT::"Gen. Jnl.-Post",Rec);
                                 CurrentJnlBatchName := GETRANGEMAX("Journal Batch Name");
                                 COMMIT;
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 47      ;2   ;Action    ;
                      ShortCutKey=Shift+F9;
                      CaptionML=[ENU=Post and &Print;
                                 THA=ลงรายการบัญชีและ&พิมพ์];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PostPrint;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CODEUNIT.RUN(CODEUNIT::"Gen. Jnl.-Post+Print",Rec);
                                 CurrentJnlBatchName := GETRANGEMAX("Journal Batch Name");
                                 COMMIT;
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 33  ;1   ;Field     ;
                Lookup=Yes;
                CaptionML=[ENU=Batch Name;
                           THA=ชื่อชุดงาน];
                SourceExpr=CurrentJnlBatchName;
                OnValidate=BEGIN
                             GenJnlManagement.CheckName(CurrentJnlBatchName,Rec);
                               CurrentJnlBatchNameOnAfterVali;
                           END;

                OnLookup=BEGIN
                           CurrPage.SAVERECORD;
                           GenJnlManagement.LookupName(CurrentJnlBatchName,Rec);
                           CurrPage.UPDATE(FALSE);
                         END;
                          }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                SourceExpr="Posting Date" }

    { 35  ;2   ;Field     ;
                SourceExpr="Document Date";
                Visible=FALSE }

    { 4   ;2   ;Field     ;
                SourceExpr="Document Type" }

    { 6   ;2   ;Field     ;
                SourceExpr="Document No." }

    { 83  ;2   ;Field     ;
                SourceExpr="External Document No.";
                Visible=FALSE }

    { 1000000003;2;Field  ;
                SourceExpr="Tax Invoice No." }

    { 1000000005;2;Field  ;
                SourceExpr="Tax Invoice Date" }

    { 8   ;2   ;Field     ;
                SourceExpr="Account Type";
                OnValidate=BEGIN
                             GenJnlManagement.GetAccounts(Rec,AccName,BalAccName);
                           END;
                            }

    { 10  ;2   ;Field     ;
                SourceExpr="Account No.";
                OnValidate=BEGIN
                             GenJnlManagement.GetAccounts(Rec,AccName,BalAccName);
                             ShowShortcutDimCode(ShortcutDimCode);
                           END;

                OnLookup=VAR
                           Vendor@1000000000 : Record 23;
                           GLAcc@1000000003 : Record 15;
                           Cust@1000000004 : Record 18;
                           Bank@1000000005 : Record 270;
                           FA@1000000006 : Record 5600;
                           ICPartner@1000000007 : Record 413;
                         BEGIN
                           CASE "Account Type" OF
                             "Account Type"::Vendor:
                               BEGIN
                                 Vendor.SETRANGE("Petty Cash",TRUE);
                                 IF PAGE.RUNMODAL(0,Vendor) = ACTION::LookupOK THEN BEGIN
                                   Text := Vendor."No.";
                                   EXIT(TRUE);
                                 END;
                               END;
                             "Account Type"::"G/L Account":
                               BEGIN
                                 IF PAGE.RUNMODAL(0,GLAcc) = ACTION::LookupOK THEN BEGIN
                                   Text := GLAcc."No.";
                                   EXIT(TRUE);
                                 END;
                               END;
                             "Account Type"::Customer:
                               BEGIN
                                 IF PAGE.RUNMODAL(0,Cust) = ACTION::LookupOK THEN BEGIN
                                   Text := Cust."No.";
                                   EXIT(TRUE);
                                 END;
                               END;
                             "Account Type"::"Bank Account":
                               BEGIN
                                 IF PAGE.RUNMODAL(0,Bank) = ACTION::LookupOK THEN BEGIN
                                   Text := Bank."No.";
                                   EXIT(TRUE);
                                 END;
                               END;
                             "Account Type"::"Fixed Asset":
                               BEGIN
                                 IF PAGE.RUNMODAL(0,FA) = ACTION::LookupOK THEN BEGIN
                                   Text := FA."No.";
                                   EXIT(TRUE);
                                 END;
                               END;
                             "Account Type"::"IC Partner":
                               BEGIN
                                 IF PAGE.RUNMODAL(0,ICPartner) = ACTION::LookupOK THEN BEGIN
                                   Text := ICPartner.Code;
                                   EXIT(TRUE);
                                 END;
                               END;
                           END;
                         END;
                          }

    { 1000000007;2;Field  ;
                SourceExpr="Dummy Vendor";
                Visible=FALSE }

    { 1000000009;2;Field  ;
                SourceExpr="VAT Registration No.(Dummy)";
                Visible=FALSE }

    { 12  ;2   ;Field     ;
                SourceExpr=Description }

    { 1000000015;2;Field  ;
                SourceExpr="Payee Name";
                Visible=FALSE }

    { 1000000011;2;Field  ;
                SourceExpr="Bank Name";
                Visible=FALSE }

    { 1000000013;2;Field  ;
                SourceExpr="Bank Branch";
                Visible=FALSE }

    { 1000000028;2;Field  ;
                SourceExpr="Real Customer/Vendor Name";
                Visible=FALSE }

    { 1500007;2;Field     ;
                SourceExpr="WHT Business Posting Group";
                Visible=FALSE }

    { 1500009;2;Field     ;
                SourceExpr="WHT Product Posting Group";
                Visible=FALSE }

    { 53  ;2   ;Field     ;
                SourceExpr="Salespers./Purch. Code";
                Visible=FALSE }

    { 95  ;2   ;Field     ;
                SourceExpr="Campaign No.";
                Visible=FALSE }

    { 55  ;2   ;Field     ;
                AssistEdit=Yes;
                SourceExpr="Currency Code";
                OnAssistEdit=BEGIN
                               ChangeExchangeRate.SetParameter("Currency Code","Currency Factor","Posting Date");
                               IF ChangeExchangeRate.RUNMODAL = ACTION::OK THEN BEGIN
                                 VALIDATE("Currency Factor",ChangeExchangeRate.GetParameter);
                               END;
                               CLEAR(ChangeExchangeRate);
                             END;
                              }

    { 77  ;2   ;Field     ;
                SourceExpr="Gen. Posting Type";
                Visible=FALSE }

    { 79  ;2   ;Field     ;
                SourceExpr="Gen. Bus. Posting Group";
                Visible=FALSE }

    { 81  ;2   ;Field     ;
                SourceExpr="Gen. Prod. Posting Group";
                Visible=FALSE }

    { 85  ;2   ;Field     ;
                SourceExpr="VAT Bus. Posting Group";
                Visible=FALSE }

    { 87  ;2   ;Field     ;
                SourceExpr="VAT Prod. Posting Group";
                Visible=FALSE }

    { 1500000;2;Field     ;
                SourceExpr="WHT Payment";
                Visible=FALSE }

    { 1500005;2;Field     ;
                SourceExpr="Skip WHT";
                Visible=FALSE }

    { 1000000017;2;Field  ;
                SourceExpr="One Doc. Per WHT Slip" }

    { 1000000019;2;Field  ;
                SourceExpr="WHT Certificate No.";
                Editable="WHT Certificate No.Editable" }

    { 1000000021;2;Field  ;
                SourceExpr="Certificate Printed" }

    { 14  ;2   ;Field     ;
                SourceExpr=Amount }

    { 97  ;2   ;Field     ;
                SourceExpr="VAT Amount";
                Visible=FALSE }

    { 101 ;2   ;Field     ;
                SourceExpr="VAT Difference";
                Visible=FALSE }

    { 1500011;2;Field     ;
                SourceExpr="Vendor Exchange Rate (ACY)";
                Visible=FALSE }

    { 99  ;2   ;Field     ;
                SourceExpr="Bal. VAT Amount";
                Visible=FALSE }

    { 103 ;2   ;Field     ;
                SourceExpr="Bal. VAT Difference";
                Visible=FALSE }

    { 61  ;2   ;Field     ;
                SourceExpr="Bal. Account Type" }

    { 16  ;2   ;Field     ;
                SourceExpr="Bal. Account No.";
                OnValidate=BEGIN
                             GenJnlManagement.GetAccounts(Rec,AccName,BalAccName);
                             ShowShortcutDimCode(ShortcutDimCode);
                           END;
                            }

    { 71  ;2   ;Field     ;
                SourceExpr="Bal. Gen. Posting Type";
                Visible=FALSE }

    { 73  ;2   ;Field     ;
                SourceExpr="Bal. Gen. Bus. Posting Group";
                Visible=FALSE }

    { 75  ;2   ;Field     ;
                SourceExpr="Bal. Gen. Prod. Posting Group";
                Visible=FALSE }

    { 89  ;2   ;Field     ;
                SourceExpr="Bal. VAT Bus. Posting Group";
                Visible=FALSE }

    { 91  ;2   ;Field     ;
                SourceExpr="Bal. VAT Prod. Posting Group";
                Visible=FALSE }

    { 49  ;2   ;Field     ;
                SourceExpr="Shortcut Dimension 1 Code";
                Visible=FALSE }

    { 51  ;2   ;Field     ;
                SourceExpr="Shortcut Dimension 2 Code";
                Visible=FALSE }

    { 300 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[3];
                CaptionClass='1,2,3';
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(3,ShortcutDimCode[3]);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(3,ShortcutDimCode[3]);
                         END;
                          }

    { 302 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[4];
                CaptionClass='1,2,4';
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(4,ShortcutDimCode[4]);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(4,ShortcutDimCode[4]);
                         END;
                          }

    { 304 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[5];
                CaptionClass='1,2,5';
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(5,ShortcutDimCode[5]);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(5,ShortcutDimCode[5]);
                         END;
                          }

    { 306 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[6];
                CaptionClass='1,2,6';
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(6,ShortcutDimCode[6]);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(6,ShortcutDimCode[6]);
                         END;
                          }

    { 308 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[7];
                CaptionClass='1,2,7';
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(7,ShortcutDimCode[7]);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(7,ShortcutDimCode[7]);
                         END;
                          }

    { 310 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[8];
                CaptionClass='1,2,8';
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(8,ShortcutDimCode[8]);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(8,ShortcutDimCode[8]);
                         END;
                          }

    { 18  ;2   ;Field     ;
                SourceExpr="Applies-to Doc. Type";
                Visible=FALSE }

    { 20  ;2   ;Field     ;
                SourceExpr="Applies-to Doc. No.";
                Visible=FALSE }

    { 22  ;2   ;Field     ;
                SourceExpr="Applies-to ID";
                Visible=FALSE }

    { 67  ;2   ;Field     ;
                SourceExpr="Bank Payment Type" }

    { 59  ;2   ;Field     ;
                SourceExpr="Check Printed";
                Visible=FALSE }

    { 69  ;2   ;Field     ;
                SourceExpr="Reason Code";
                Visible=FALSE }

    { 24  ;1   ;Group      }

    { 29  ;2   ;Field     ;
                CaptionML=[ENU=Account Name;
                           THA=ชื่อบัญชี];
                SourceExpr=AccName;
                Editable=FALSE }

    { 31  ;2   ;Field     ;
                CaptionML=[ENU=Bal. Account Name;
                           THA=ชื่อบัญชีดุล];
                SourceExpr=BalAccName;
                Editable=FALSE }

    { 25  ;2   ;Field     ;
                Name=Balance;
                CaptionML=[ENU=Balance;
                           THA=ดุล];
                SourceExpr=Balance+"Balance (LCY)"-xRec."Balance (LCY)";
                AutoFormatType=1;
                Visible=BalanceVisible;
                Editable=FALSE }

    { 27  ;2   ;Field     ;
                Name=TotalBalance;
                CaptionML=[ENU=Total Balance;
                           THA=รวมดุล];
                SourceExpr=TotalBalance+"Balance (LCY)"-xRec."Balance (LCY)";
                AutoFormatType=1;
                Visible=TotalBalanceVisible;
                Editable=FALSE }

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Void Check %1?;THA=โมฆะเช็ค %1 หรือ?';
      Text001@1001 : TextConst 'ENU=Void all printed checks?;THA=โมฆะเช็คทั้งหมดที่พิมพ์หรือ?';
      ChangeExchangeRate@1002 : Page 511;
      GenJnlLine@1003 : Record 81;
      GenJnlLine2@1004 : Record 81;
      GLReconcile@1005 : Page 345;
      CreateVendorPmtSuggestion@1006 : Report 393;
      GenJnlManagement@1007 : Codeunit 230;
      ReportPrint@1008 : Codeunit 228;
      DocPrint@1009 : Codeunit 229;
      CheckManagement@1010 : Codeunit 367;
      WHTManagement@1500001 : Codeunit 28040;
      PostDatedCheckMgt@1500000 : Codeunit 28090;
      CurrentJnlBatchName@1011 : Code[10];
      AccName@1012 : Text[50];
      BalAccName@1013 : Text[50];
      Balance@1014 : Decimal;
      TotalBalance@1015 : Decimal;
      ShowBalance@1016 : Boolean;
      ShowTotalBalance@1017 : Boolean;
      ShortcutDimCode@1018 : ARRAY [8] OF Code[20];
      TType@1500008 : 'Vendor,Customer';
      C_0001@1000000002 : TextConst 'ENU=Do you want to get WHT from petty cash?';
      C_0002@1000000001 : TextConst 'ENU=Successfully Inserted.;THA=บันทึกรายการเรียบร้อยแล้ว';
      C_0003@1000000000 : TextConst 'ENU=WHT Entries does not exists.;THA=ไม่พบรายการภาษีหัก ณ ที่จ่าย';
      GenJnlBatch@1000000003 : Record 232;
      "WHT Certificate No.Editable"@19059849 : Boolean INDATASET;
      BalanceVisible@19073040 : Boolean INDATASET;
      TotalBalanceVisible@19063333 : Boolean INDATASET;

    LOCAL PROCEDURE UpdateBalance@1();
    BEGIN
      GenJnlManagement.CalcBalance(
        Rec,xRec,Balance,TotalBalance,ShowBalance,ShowTotalBalance);
      BalanceVisible := ShowBalance;
      TotalBalanceVisible := ShowTotalBalance;
    END;

    LOCAL PROCEDURE CurrentJnlBatchNameOnAfterVali@19002411();
    BEGIN
      CurrPage.SAVERECORD;
      GenJnlManagement.SetName(CurrentJnlBatchName,Rec);
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE OnAfterGetCurrRecord@19077479();
    BEGIN
      xRec := Rec;
      GenJnlManagement.GetAccounts(Rec,AccName,BalAccName);
      UpdateBalance;
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Localization Demo TH
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   04.08.2006   KKE   -Petty Cash
      002   10.08.2006   KKE   -Modify program to be able to manual input WHT Certificate No.
    }
    END.
  }
}

OBJECT Page 50071 Petty Cash Invoice
{
  OBJECT-PROPERTIES
  {
    Date=12/19/11;
    Time=11:17:25 AM;
    Version List=AVATHA4.40;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Petty Cash Invoice;
               THA=เงินสดย่อย];
    SourceTable=Table55001;
    PageType=Card;
    OnOpenPage=BEGIN
                 FILTERGROUP(2);
                 SETFILTER("Date Filter",'..%1',"Posting Date");
                 FILTERGROUP(0);
                 SETRANGE("No.");
               END;

    OnAfterGetRecord=BEGIN
                       OnAfterGetCurrRecord;
                     END;

    OnNewRecord=BEGIN
                  OnAfterGetCurrRecord;
                END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1000000037;1 ;ActionGroup;
                      CaptionML=[ENU=&Invoice;
                                 THA=&ใบแจ้งหนี้] }
      { 1000000039;2 ;Action    ;
                      ShortCutKey=F7;
                      CaptionML=[ENU=Statistics;
                                 THA=สถิติ];
                      RunObject=Page 50078;
                      RunPageLink=No.=FIELD(No.);
                      Promoted=Yes;
                      Image=Statistics;
                      PromotedCategory=Process }
      { 1000000040;2 ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=[ENU=Card;
                                 THA=บัตร];
                      RunObject=Page 26;
                      RunPageLink=No.=FIELD(Petty Cash Vendor No.);
                      Image=EditLines }
      { 1000000041;2 ;Action    ;
                      CaptionML=[ENU=Co&mments;
                                 THA=ข้อ&คิดเห็น];
                      RunObject=Page 50074;
                      RunPageLink=Document Type=CONST(Invoice),
                                  No.=FIELD(No.);
                      Image=ViewComments }
      { 1000000042;2 ;Action    ;
                      CaptionML=[ENU=Dimensions;
                                 THA=มิติ];
                      Image=Dimensions;
                      OnAction=BEGIN
                                 Rec.ShowDocDim;
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1000000026;1 ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 THA=ฟั&งก์ชัน] }
      { 1000000069;2 ;Action    ;
                      ShortCutKey=Ctrl+F9;
                      CaptionML=[ENU=Re&lease;
                                 THA=นำ&ออกใช้];
                      Image=ReleaseDoc;
                      OnAction=BEGIN
                                 Rec.Release;
                               END;
                                }
      { 1000000070;2 ;Action    ;
                      CaptionML=[ENU=Re&open;
                                 THA=เปิด&ใหม่];
                      Image=ReOpen;
                      OnAction=VAR
                                 ReleasePurchDoc@1001 : Codeunit 415;
                               BEGIN
                                 Rec.Reopen;
                               END;
                                }
      { 1000000054;1 ;ActionGroup;
                      CaptionML=[ENU=P&osting;
                                 THA=การ&ลงรายการบัญชี] }
      { 1000000060;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Test Report;
                                 THA=รายงานการทดสอบ];
                      Image=TestReport;
                      OnAction=VAR
                                 PettyCashHdr@1000000001 : Record 55001;
                               BEGIN
                                 PettyCashHdr.RESET;
                                 PettyCashHdr.SETRANGE("No.","No.");
                                 REPORT.RUN(REPORT::"Petty Cash Test",TRUE,FALSE,PettyCashHdr);
                               END;
                                }
      { 1000000061;2 ;Action    ;
                      ShortCutKey=F9;
                      CaptionML=[ENU=P&ost;
                                 THA=ลง&รายการบัญชี];
                      RunObject=Codeunit 55000;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Post;
                      PromotedCategory=Process }
      { 1000000062;2 ;Action    ;
                      ShortCutKey=Shift+F9;
                      CaptionML=[ENU=Post and &Print;
                                 THA=ลงรายการบัญชีและ&พิมพ์];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PostPrint;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 PettyCashPost@1000000001 : Codeunit 55000;
                               BEGIN
                                 PettyCashPost.CheckPostAndPrint(TRUE);
                                 PettyCashPost.RUN(Rec);
                                 CurrPage.UPDATE(FALSE);
                                 CLEAR(PettyCashPost);
                               END;
                                }
      { 1000000056;1 ;ActionGroup;
                      CaptionML=[ENU=&Print;
                                 THA=&พิมพ์] }
      { 1000000065;2 ;Action    ;
                      CaptionML=[ENU=Petty Cash Voucher;
                                 THA=ใบสำคัญเงินสดย่อย];
                      OnAction=VAR
                                 PettyCashHdr@1000000001 : Record 55001;
                               BEGIN
                                 PettyCashHdr.RESET;
                                 PettyCashHdr.SETRANGE("No.","No.");
                                 REPORT.RUN(REPORT::"Purchase Voucher - Petty Cash",TRUE,FALSE,PettyCashHdr);
                               END;
                                }
      { 1000000027;2 ;Action    ;
                      CaptionML=[ENU=WHT Slip;
                                 THA=ใบหักภาษี ณ ที่จ่าย];
                      OnAction=VAR
                                 PettyCashHdr@1000000001 : Record 55001;
                               BEGIN
                                 TESTFIELD(Status,Status::Released);
                                 PettyCashHdr.RESET;
                                 PettyCashHdr.SETRANGE("No.","No.");
                                 REPORT.RUN(REPORT::"Page 50 BIS -Petty Cash",TRUE,FALSE,PettyCashHdr);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                CaptionML=[ENU=General;
                           THA=ทั่วไป] }

    { 1000000001;2;Field  ;
                SourceExpr="No.";
                OnAssistEdit=BEGIN
                               IF AssistEdit(xRec) THEN
                                 CurrPage.UPDATE;
                             END;
                              }

    { 1000000003;2;Field  ;
                SourceExpr="Petty Cash Vendor No.";
                OnValidate=BEGIN
                             PettyCashVendorNoOnAfterValida;
                           END;
                            }

    { 1000000005;2;Field  ;
                SourceExpr=Name }

    { 1000000024;2;Field  ;
                SourceExpr="Name 2" }

    { 1000000007;2;Field  ;
                SourceExpr="Invoice Description" }

    { 1000000028;2;Field  ;
                SourceExpr="Printing WHT Slip (Doc:WHT)" }

    { 1000000009;2;Field  ;
                SourceExpr="Document Date" }

    { 1000000011;2;Field  ;
                SourceExpr="Posting Date";
                OnValidate=BEGIN
                             PostingDateOnAfterValidate;
                           END;
                            }

    { 1000000013;2;Field  ;
                SourceExpr="Petty Cash Amount" }

    { 1000000015;2;Field  ;
                SourceExpr="Balance Amount";
                OnDrillDown=VAR
                              VendLedgEntry@1000000001 : Record 25;
                              DtldVendLedgEntry@1000000000 : Record 380;
                            BEGIN
                              DtldVendLedgEntry.SETRANGE("Vendor No.","Petty Cash Vendor No.");
                              VendLedgEntry.DrillDownOnEntries(DtldVendLedgEntry);
                            END;
                             }

    { 1000000057;2;Field  ;
                SourceExpr=Status }

    { 1000000034;1;Part   ;
                Name=PettyCashLines;
                SubPageLink=Document No.=FIELD(No.);
                PagePartID=Page50072 }

    { 1905885101;1;Group  ;
                CaptionML=[ENU=Invoicing;
                           THA=การออกใบแจ้งหนี้] }

    { 1000000017;2;Field  ;
                SourceExpr="Shortcut Dimension 1 Code";
                OnValidate=BEGIN
                             ShortcutDimension1CodeOnAfterV;
                           END;
                            }

    { 1000000019;2;Field  ;
                SourceExpr="Shortcut Dimension 2 Code";
                OnValidate=BEGIN
                             ShortcutDimension2CodeOnAfterV;
                           END;
                            }

    { 1000000032;2;Field  ;
                SourceExpr="Location Code" }

    { 1000000046;2;Field  ;
                SourceExpr="VAT Bus. Posting Group" }

    { 1000000030;2;Field  ;
                SourceExpr="WHT Business Posting Group" }

    { 1907468901;1;Group  ;
                CaptionML=[ENU=Foreign Trade;
                           THA=การค้าต่างประเทศ] }

    { 1000000021;2;Field  ;
                SourceExpr="Currency Code";
                OnAssistEdit=BEGIN
                               ChangeExchangeRate.SetParameter("Currency Code","Currency Factor","Posting Date");
                               IF ChangeExchangeRate.RUNMODAL = ACTION::OK THEN BEGIN
                                 VALIDATE("Currency Factor",ChangeExchangeRate.GetParameter);
                                 CurrPage.UPDATE;
                               END;
                               CLEAR(ChangeExchangeRate);
                             END;
                              }

  }
  CODE
  {
    VAR
      ChangeExchangeRate@1000000000 : Page 511;
      TotalAmount@1000000001 : Decimal;

    LOCAL PROCEDURE PettyCashVendorNoOnAfterValida@19036124();
    BEGIN
      IF ("Petty Cash Vendor No." <> xRec."Petty Cash Vendor No.") AND
         ("Petty Cash Vendor No." <> '')
      THEN BEGIN
        FILTERGROUP(2);
        SETFILTER("Date Filter",'..%1',"Posting Date");
        FILTERGROUP(0);
      END ELSE
        SETRANGE("Date Filter");
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE PostingDateOnAfterValidate@19003005();
    BEGIN
      FILTERGROUP(2);
      SETFILTER("Date Filter",'..%1',"Posting Date");
      FILTERGROUP(0);
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ShortcutDimension1CodeOnAfterV@19029405();
    BEGIN
      CurrPage.PettyCashLines.PAGE.UpdateForm(TRUE);
    END;

    LOCAL PROCEDURE ShortcutDimension2CodeOnAfterV@19008725();
    BEGIN
      CurrPage.PettyCashLines.PAGE.UpdateForm(TRUE);
    END;

    LOCAL PROCEDURE OnAfterGetCurrRecord@19077479();
    BEGIN
      xRec := Rec;
      FILTERGROUP(2);
      SETFILTER("Date Filter",'..%1',"Posting Date");
      FILTERGROUP(0);
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Localization TH
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   24.08.2006   KKE   Petty Cash.
    }
    END.
  }
}

OBJECT Page 50072 Petty Cash Invoice Subform
{
  OBJECT-PROPERTIES
  {
    Date=01/30/21;
    Time=[ 7:11:28 PM];
    Modified=Yes;
    Version List=AVATHA4.40;
  }
  PROPERTIES
  {
    SourceTable=Table55002;
    DelayedInsert=Yes;
    PageType=ListPart;
    AutoSplitKey=Yes;
    OnAfterGetRecord=BEGIN
                       ShowShortcutDimCode(ShortcutDimCode);
                       OnAfterGetCurrRecord;
                     END;

    OnNewRecord=BEGIN
                  Type := xRec.Type;
                  CLEAR(ShortcutDimCode);
                  OnAfterGetCurrRecord;
                END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1907935204;1 ;ActionGroup;
                      CaptionML=[ENU=&Line;
                                 THA=&บรรทัด] }
      { 1902878204;2 ;Action    ;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=[ENU=Dimensions;
                                 THA=มิติ];
                      Image=Dimensions;
                      OnAction=BEGIN
                                 //This functionality was copied from page #50071. Unsupported part was commented. Please check it.
                                 {CurrPage.PettyCashLines.PAGE.}
                                 _ShowDimensions;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                GroupType=Repeater }

    { 1000000001;2;Field  ;
                SourceExpr=Type }

    { 1000000003;2;Field  ;
                SourceExpr="No." }

    { 1000000060;2;Field  ;
                SourceExpr="Gen. Prod. Posting Group" }

    { 1000000009;2;Field  ;
                SourceExpr="VAT Bus. Posting Group";
                Visible=FALSE }

    { 1000000011;2;Field  ;
                SourceExpr="VAT Prod. Posting Group" }

    { 1000000013;2;Field  ;
                SourceExpr="WHT Business Posting Group";
                Visible=FALSE }

    { 1000000015;2;Field  ;
                SourceExpr="WHT Product Posting Group" }

    { 1000000042;2;Field  ;
                SourceExpr="External Document No." }

    { 1000000038;2;Field  ;
                SourceExpr="Tax Invoice No.";
                Visible=FALSE }

    { 1000000040;2;Field  ;
                SourceExpr="Tax Invoice Date" }

    { 1000000019;2;Field  ;
                SourceExpr=Description }

    { 1000000062;2;Field  ;
                SourceExpr="WHT Absorb Base" }

    { 1000000023;2;Field  ;
                SourceExpr="Amount Incl. VAT" }

    { 1000000007;2;Field  ;
                SourceExpr="VAT Amount";
                Visible=FALSE }

    { 1000000021;2;Field  ;
                SourceExpr="VAT Difference";
                Visible=FALSE }

    { 1000000017;2;Field  ;
                SourceExpr="Actual Vendor No." }

    { 1000000005;2;Field  ;
                SourceExpr="Real Customer/Vendor Name";
                Visible=FALSE }

    { 1000000044;2;Field  ;
                SourceExpr="Shortcut Dimension 1 Code" }

    { 1000000046;2;Field  ;
                SourceExpr="Shortcut Dimension 2 Code" }

    { 1000000048;2;Field  ;
                SourceExpr=ShortcutDimCode[3];
                CaptionClass='1,2,3';
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(3,ShortcutDimCode[3]);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(3,ShortcutDimCode[3]);
                         END;
                          }

    { 1000000050;2;Field  ;
                SourceExpr=ShortcutDimCode[4];
                CaptionClass='1,2,4';
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(4,ShortcutDimCode[4]);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(4,ShortcutDimCode[4]);
                         END;
                          }

    { 1000000052;2;Field  ;
                SourceExpr=ShortcutDimCode[5];
                CaptionClass='1,2,5';
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(5,ShortcutDimCode[5]);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(5,ShortcutDimCode[5]);
                         END;
                          }

    { 1000000054;2;Field  ;
                SourceExpr=ShortcutDimCode[6];
                CaptionClass='1,2,6';
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(6,ShortcutDimCode[6]);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(6,ShortcutDimCode[6]);
                         END;
                          }

    { 1000000056;2;Field  ;
                SourceExpr=ShortcutDimCode[7];
                CaptionClass='1,2,7';
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(7,ShortcutDimCode[7]);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(7,ShortcutDimCode[7]);
                         END;
                          }

    { 1000000058;2;Field  ;
                SourceExpr=ShortcutDimCode[8];
                CaptionClass='1,2,8';
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(8,ShortcutDimCode[8]);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(8,ShortcutDimCode[8]);
                         END;
                          }

    { 1000000025;2;Field  ;
                SourceExpr="Skip WHT" }

    { 1000000027;2;Field  ;
                SourceExpr="WHT Certificate No." }

    { 1000000029;2;Field  ;
                SourceExpr="Certificate Printed" }

    { 1000000031;1;Group   }

    { 1000000037;2;Field  ;
                CaptionML=[ENU=Account Name;
                           THA=ชื่อบัญชี];
                SourceExpr=GLAcc.Name;
                Editable=FALSE }

    { 1000000032;2;Field  ;
                Name=Balance;
                CaptionML=[ENU=Balance;
                           THA=ดุล];
                SourceExpr=CalcBalanceAmt;
                AutoFormatType=1;
                Editable=FALSE }

    { 1000000034;2;Field  ;
                Name=TotalBalance;
                CaptionML=[ENU=Total Amount;
                           THA=รวมจำนวนเงิน];
                SourceExpr=CalcTotalAmount;
                AutoFormatType=1;
                Editable=FALSE }

  }
  CODE
  {
    VAR
      GLAcc@1000000000 : Record 15;
      ShortcutDimCode@1000000001 : ARRAY [8] OF Code[20];

    PROCEDURE _ShowDimensions@19020529();
    BEGIN
      Rec.ShowDimensions;
    END;

    PROCEDURE ShowDimensions@10();
    BEGIN
      Rec.ShowDimensions;
    END;

    PROCEDURE UpdateForm@12(SetSaveRecord@1000 : Boolean);
    BEGIN
      CurrPage.UPDATE(SetSaveRecord);
    END;

    PROCEDURE CalcTotalAmount@1000000000() : Decimal;
    VAR
      PettyCashLine@1000000000 : Record 55002;
    BEGIN
      PettyCashLine.RESET;
      PettyCashLine.SETRANGE("Document No.","Document No.");
      //PettyCashLine.SETFILTER("Line No.",'..%1',"Line No.");
      PettyCashLine.CALCSUMS("Amount (LCY) Incl. VAT");
      EXIT(PettyCashLine."Amount (LCY) Incl. VAT");
    END;

    PROCEDURE CalcBalanceAmt@1000000001() : Decimal;
    VAR
      PettyCashHdr@1000000001 : Record 55001;
      PettyCashLine@1000000000 : Record 55002;
    BEGIN
      IF NOT PettyCashHdr.GET("Document No.") THEN
       EXIT;
      PettyCashHdr.CALCFIELDS("Balance Amount");
      PettyCashLine.RESET;
      PettyCashLine.SETRANGE("Document No.","Document No.");
      PettyCashLine.SETFILTER("Line No.",'..%1',"Line No.");
      IF NOT PettyCashLine.FIND('-') THEN
        PettyCashLine.SETRANGE("Line No.");
      PettyCashLine.CALCSUMS("Amount (LCY) Incl. VAT");
      EXIT(PettyCashHdr."Balance Amount" - PettyCashLine."Amount (LCY) Incl. VAT");
    END;

    LOCAL PROCEDURE OnAfterGetCurrRecord@19077479();
    BEGIN
      xRec := Rec;
      IF NOT GLAcc.GET("No.") THEN
        GLAcc.INIT;
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Localization TH
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   24.08.2006   KKE   Petty Cash.
    }
    END.
  }
}

OBJECT Page 50073 Petty Cash Invoices
{
  OBJECT-PROPERTIES
  {
    Date=09/13/07;
    Time=11:46:39 AM;
    Version List=AVATHA4.40;
  }
  PROPERTIES
  {
    Editable=No;
    SourceTable=Table55001;
    PageType=Card;
    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1000000016;1 ;ActionGroup;
                      CaptionML=[ENU=&Invoice;
                                 THA=&ใบแจ้งหนี้] }
      { 1000000017;2 ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=[ENU=Card;
                                 THA=บัตร];
                      RunObject=Page 50071;
                      RunPageLink=No.=FIELD(No.);
                      Image=EditLines }
      { 1000000018;2 ;Action    ;
                      ShortCutKey=F7;
                      CaptionML=[ENU=Statistics;
                                 THA=สถิติ];
                      RunObject=Page 50078;
                      RunPageLink=No.=FIELD(No.);
                      Promoted=Yes;
                      Image=Statistics;
                      PromotedCategory=Process }
      { 1000000019;2 ;Action    ;
                      CaptionML=[ENU=Co&mments;
                                 THA=ข้อ&คิดเห็น];
                      RunObject=Page 50074;
                      RunPageLink=Document Type=CONST(Invoice),
                                  No.=FIELD(No.);
                      Image=ViewComments }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                GroupType=Repeater }

    { 1000000001;2;Field  ;
                SourceExpr="No." }

    { 1000000003;2;Field  ;
                SourceExpr="Petty Cash Vendor No." }

    { 1000000005;2;Field  ;
                SourceExpr=Name }

    { 1000000020;2;Field  ;
                SourceExpr="Name 2" }

    { 1000000007;2;Field  ;
                SourceExpr="Petty Cash Amount" }

    { 1000000009;2;Field  ;
                SourceExpr="Posting Date" }

    { 1000000011;2;Field  ;
                SourceExpr="Balance Amount" }

  }
  CODE
  {

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Localization TH
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   24.08.2006   KKE   Petty Cash.
    }
    END.
  }
}

OBJECT Page 50074 Petty Cash Comment Sheet
{
  OBJECT-PROPERTIES
  {
    Date=02/22/07;
    Time=[ 6:00:00 PM];
    Version List=AVATHA4.40;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Comment Sheet;
               THA=ใบแสดงข้อคิดเห็น];
    MultipleNewLines=Yes;
    SourceTable=Table55003;
    DelayedInsert=Yes;
    DataCaptionFields=Document Type,No.;
    PageType=Card;
    AutoSplitKey=Yes;
    OnNewRecord=BEGIN
                  SetUpNewLine;
                END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                SourceExpr=Date }

    { 4   ;2   ;Field     ;
                SourceExpr=Comment }

    { 6   ;2   ;Field     ;
                SourceExpr=Code;
                Visible=FALSE }

  }
  CODE
  {

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Localization TH
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   24.08.2006   KKE   Petty Cash.
    }
    END.
  }
}

OBJECT Page 50075 Posted Petty Cash Invoice
{
  OBJECT-PROPERTIES
  {
    Date=02/21/07;
    Time=[ 6:00:00 PM];
    Version List=AVATHA4.40;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Posted Petty Cash Invoice;
               THA=ใบแจ้งหนี้เงินสดย่อยที่ลงรายการบัญชี];
    InsertAllowed=No;
    SourceTable=Table55004;
    PageType=Card;
    OnOpenPage=BEGIN
                 SETRANGE("No.");
               END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1000000016;1 ;ActionGroup;
                      CaptionML=[ENU=&Invoice;
                                 THA=&ใบแจ้งหนี้] }
      { 1000000045;2 ;Action    ;
                      ShortCutKey=F7;
                      CaptionML=[ENU=Statistics;
                                 THA=สถิติ];
                      RunObject=Page 50079;
                      RunPageLink=No.=FIELD(No.);
                      Promoted=Yes;
                      Image=Statistics;
                      PromotedCategory=Process }
      { 1000000046;2 ;Action    ;
                      CaptionML=[ENU=Co&mments;
                                 THA=ข้อ&คิดเห็น];
                      RunObject=Page 50074;
                      RunPageLink=Document Type=CONST(Posted Invoice),
                                  No.=FIELD(No.);
                      Image=ViewComments }
      { 1000000047;2 ;Action    ;
                      CaptionML=[ENU=Dimensions;
                                 THA=มิติ];
                      RunObject=Page 547;
                      RunPageLink=Table ID=CONST(55004),
                                  Document No.=FIELD(No.),
                                  Line No.=CONST(0);
                      Image=Dimensions }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1000000015;1 ;Action    ;
                      CaptionML=[ENU=&Navigate;
                                 THA=&นำทางข้อมูล];
                      Promoted=Yes;
                      Image=Navigate;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 Navigate;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                CaptionML=[ENU=General;
                           THA=ทั่วไป] }

    { 1000000001;2;Field  ;
                SourceExpr="No.";
                Editable=FALSE }

    { 1000000003;2;Field  ;
                SourceExpr="Petty Cash Vendor No.";
                Editable=FALSE }

    { 1000000005;2;Field  ;
                SourceExpr=Name;
                Editable=FALSE }

    { 1000000024;2;Field  ;
                SourceExpr="Name 2";
                Editable=FALSE }

    { 1000000007;2;Field  ;
                SourceExpr="Invoice Description";
                Editable=FALSE }

    { 1000000028;2;Field  ;
                SourceExpr="Printing WHT Slip (Doc:WHT)";
                Editable=FALSE }

    { 1000000009;2;Field  ;
                SourceExpr="Document Date";
                Editable=FALSE }

    { 1000000011;2;Field  ;
                SourceExpr="Posting Date";
                Editable=FALSE }

    { 1000000013;2;Field  ;
                SourceExpr="Petty Cash Amount";
                Editable=FALSE }

    { 1000000034;1;Part   ;
                Name=PettyCashLines;
                SubPageLink=Document No.=FIELD(No.);
                PagePartID=Page50076 }

    { 1905885101;1;Group  ;
                CaptionML=[ENU=Invoicing;
                           THA=การออกใบแจ้งหนี้] }

    { 1000000017;2;Field  ;
                SourceExpr="Shortcut Dimension 1 Code";
                Editable=FALSE }

    { 1000000019;2;Field  ;
                SourceExpr="Shortcut Dimension 2 Code";
                Editable=FALSE }

    { 1000000032;2;Field  ;
                SourceExpr="Location Code";
                Editable=FALSE }

    { 1000000026;2;Field  ;
                SourceExpr="VAT Bus. Posting Group";
                Editable=FALSE }

    { 1907468901;1;Group  ;
                CaptionML=[ENU=Foreign Trade;
                           THA=การค้าต่างประเทศ] }

    { 1000000021;2;Field  ;
                SourceExpr="Currency Code";
                Editable=FALSE;
                OnAssistEdit=BEGIN
                               ChangeExchangeRate.SetParameter("Currency Code","Currency Factor","Posting Date");
                               IF ChangeExchangeRate.RUNMODAL = ACTION::OK THEN BEGIN
                                 VALIDATE("Currency Factor",ChangeExchangeRate.GetParameter);
                                 CurrPage.UPDATE;
                               END;
                               CLEAR(ChangeExchangeRate);
                             END;
                              }

  }
  CODE
  {
    VAR
      ChangeExchangeRate@1000000000 : Page 511;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Localization TH
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   24.08.2006   KKE   Petty Cash.
    }
    END.
  }
}

OBJECT Page 50076 Posted Petty Cash Invoice Subf
{
  OBJECT-PROPERTIES
  {
    Date=01/30/21;
    Time=[ 7:11:50 PM];
    Modified=Yes;
    Version List=AVATHA4.40;
  }
  PROPERTIES
  {
    Editable=No;
    SourceTable=Table55005;
    DelayedInsert=Yes;
    PageType=ListPart;
    AutoSplitKey=Yes;
    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1907935204;1 ;ActionGroup;
                      CaptionML=[ENU=&Line;
                                 THA=&บรรทัด] }
      { 1902878204;2 ;Action    ;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=[ENU=Dimensions;
                                 THA=มิติ];
                      Image=Dimensions;
                      OnAction=BEGIN
                                 //This functionality was copied from page #50075. Unsupported part was commented. Please check it.
                                 {CurrPage.PettyCashLines.PAGE.}
                                 _ShowDimensions;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                GroupType=Repeater }

    { 1000000001;2;Field  ;
                SourceExpr=Type }

    { 1000000003;2;Field  ;
                SourceExpr="No." }

    { 1000000009;2;Field  ;
                SourceExpr="VAT Bus. Posting Group";
                Visible=FALSE }

    { 1000000011;2;Field  ;
                SourceExpr="VAT Prod. Posting Group" }

    { 1000000013;2;Field  ;
                SourceExpr="WHT Business Posting Group";
                Visible=FALSE }

    { 1000000015;2;Field  ;
                SourceExpr="WHT Product Posting Group" }

    { 1000000031;2;Field  ;
                SourceExpr="External Document No." }

    { 1000000033;2;Field  ;
                SourceExpr="Tax Invoice No.";
                Visible=FALSE }

    { 1000000035;2;Field  ;
                SourceExpr="Tax Invoice Date" }

    { 1000000005;2;Field  ;
                SourceExpr="Real Customer/Vendor Name";
                Visible=FALSE }

    { 1000000019;2;Field  ;
                SourceExpr=Description }

    { 1000000037;2;Field  ;
                SourceExpr="WHT Absorb Base" }

    { 1000000023;2;Field  ;
                SourceExpr="Amount Incl. VAT" }

    { 1000000039;2;Field  ;
                SourceExpr="VAT Base Amount" }

    { 1000000007;2;Field  ;
                SourceExpr="VAT Amount";
                Visible=FALSE }

    { 1000000021;2;Field  ;
                SourceExpr="VAT Difference";
                Visible=FALSE }

    { 1000000017;2;Field  ;
                SourceExpr="Actual Vendor No." }

    { 1000000025;2;Field  ;
                SourceExpr="Skip WHT" }

    { 1000000027;2;Field  ;
                SourceExpr="WHT Certificate No." }

    { 1000000029;2;Field  ;
                SourceExpr="Certificate Printed" }

  }
  CODE
  {

    PROCEDURE _ShowDimensions@19020529();
    BEGIN
      Rec.ShowDimensions;
    END;

    PROCEDURE ShowDimensions@10();
    BEGIN
      Rec.ShowDimensions;
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Localization TH
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   24.08.2006   KKE   Petty Cash.
    }
    END.
  }
}

OBJECT Page 50077 Posted Petty Cash Invoices
{
  OBJECT-PROPERTIES
  {
    Date=08/14/07;
    Time=[ 6:00:00 PM];
    Version List=AVATHA4.40;
  }
  PROPERTIES
  {
    Editable=No;
    SourceTable=Table55004;
    PageType=Card;
    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1000000016;1 ;ActionGroup;
                      CaptionML=[ENU=&Invoice;
                                 THA=&ใบแจ้งหนี้] }
      { 1000000018;2 ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=[ENU=Card;
                                 THA=บัตร];
                      RunObject=Page 50075;
                      RunPageLink=No.=FIELD(No.);
                      Image=EditLines }
      { 1000000019;2 ;Action    ;
                      ShortCutKey=F7;
                      CaptionML=[ENU=Statistics;
                                 THA=สถิติ];
                      RunObject=Page 50079;
                      RunPageLink=No.=FIELD(No.);
                      Promoted=Yes;
                      Image=Statistics;
                      PromotedCategory=Process }
      { 1000000020;2 ;Action    ;
                      CaptionML=[ENU=Co&mments;
                                 THA=ข้อ&คิดเห็น];
                      RunObject=Page 50074;
                      RunPageLink=Document Type=CONST(Posted Invoice),
                                  No.=FIELD(No.);
                      Image=ViewComments }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1000000017;1 ;Action    ;
                      CaptionML=[ENU=&Navigate;
                                 THA=&นำทางข้อมูล];
                      Promoted=Yes;
                      Image=Navigate;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 Navigate;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                GroupType=Repeater }

    { 1000000001;2;Field  ;
                SourceExpr="No." }

    { 1000000003;2;Field  ;
                SourceExpr="Petty Cash Vendor No." }

    { 1000000005;2;Field  ;
                SourceExpr=Name }

    { 1000000007;2;Field  ;
                SourceExpr="Petty Cash Amount" }

    { 1000000009;2;Field  ;
                SourceExpr="Posting Date" }

  }
  CODE
  {

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Localization TH
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   24.08.2006   KKE   Petty Cash.
    }
    END.
  }
}

OBJECT Page 50078 Petty Cash Statistics
{
  OBJECT-PROPERTIES
  {
    Date=08/14/07;
    Time=[ 6:00:00 PM];
    Version List=AVATHA4.40;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=ENU=Petty Cash Invoice Statistics;
    SourceTable=Table55001;
    PageType=Card;
    OnAfterGetRecord=BEGIN
                       CLEARALL;

                       IF "Currency Code" = '' THEN
                         Currency.InitRoundingPrecision
                       ELSE
                         Currency.GET("Currency Code");

                       PettyCashLine.SETRANGE("Document No.","No.");

                       IF PettyCashLine.FIND('-') THEN
                         REPEAT
                           VendAmount := VendAmount + PettyCashLine."VAT Base Amount";
                           AmountInclVAT := AmountInclVAT + PettyCashLine."Amount Incl. VAT";
                           AvgVATAmount := AvgVATAmount + PettyCashLine."Avg. VAT Amount";  //KKE : #002
                           IF NOT PettyCashLine."Skip WHT" THEN
                             IF WHTPostingSetup.GET(PettyCashLine."WHT Business Posting Group",PettyCashLine."WHT Product Posting Group") THEN
                               IF WHTPostingSetup."WHT %" <> 0 THEN
                                 WHTAmount := WHTAmount + PettyCashLine."VAT Base Amount (LCY)" * WHTPostingSetup."WHT %" / 100;
                         UNTIL PettyCashLine.NEXT = 0;
                       VATAmount := AmountInclVAT - VendAmount;
                       InvDiscAmount := ROUND(InvDiscAmount,Currency."Amount Rounding Precision");
                       WHTAmount := ROUND(WHTAmount,Currency."Amount Rounding Precision");

                       IF VATPercentage <= 0 THEN
                         VATAmountText := Text000
                       ELSE
                         VATAmountText := STRSUBSTNO(Text001,VATPercentage);

                       IF "Currency Code" = '' THEN
                         AmountLCY := VendAmount
                       ELSE
                         AmountLCY :=
                           CurrExchRate.ExchangeAmtFCYToLCY(
                             WORKDATE,"Currency Code",VendAmount,"Currency Factor");

                       IF NOT Vend.GET("Petty Cash Vendor No.") THEN
                         CLEAR(Vend);
                       Vend.CALCFIELDS("Balance (LCY)");

                       //PurchInvLine.CalcVATAmountLines(Rec,TempVATAmountLine);
                       //CurrForm.SubForm.FORM.SetTempVATAmountLine(TempVATAmountLine);
                       //CurrForm.SubForm.FORM.InitGlobals("Currency Code",FALSE,FALSE,FALSE,FALSE,0,0);
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 24  ;1   ;Group     ;
                CaptionML=[ENU=General;
                           THA=ทั่วไป] }

    { 2   ;2   ;Field     ;
                CaptionML=[ENU=Amount;
                           THA=จำนวน];
                SourceExpr=VendAmount + InvDiscAmount;
                AutoFormatType=1;
                AutoFormatExpr="Currency Code" }

    { 16  ;2   ;Field     ;
                CaptionML=[ENU=VAT Amount;
                           THA=จำนวน VAT];
                SourceExpr=VATAmount;
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                CaptionClass=FORMAT (VATAmountText) }

    { 20  ;2   ;Field     ;
                CaptionML=[ENU=Total Incl. VAT;
                           THA=ยอดรวมที่รวม VAT];
                SourceExpr=AmountInclVAT;
                AutoFormatType=1;
                AutoFormatExpr="Currency Code" }

    { 26  ;2   ;Field     ;
                CaptionML=[ENU=Amount (LCY);
                           THA=ยอดเงิน (LCY)];
                SourceExpr=AmountLCY;
                AutoFormatType=1 }

    { 1500000;2;Field     ;
                CaptionML=[ENU=WHT Amount (LCY);
                           THA=จำนวน WHT (LCY)];
                SourceExpr=WHTAmount }

    { 1000000000;2;Field  ;
                CaptionML=[ENU=VAT Amount;
                           THA=จำนวน VAT];
                SourceExpr=AvgVATAmount;
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                CaptionClass=FORMAT ('Avg. VAT Amount') }

    { 1901061301;1;Group  ;
                CaptionML=[ENU=Vendor;
                           THA=ผู้ขาย] }

    { 21  ;2   ;Field     ;
                CaptionML=[ENU=Balance (LCY);
                           THA=ดุล (LCY)];
                SourceExpr=Vend."Balance (LCY)";
                AutoFormatType=1 }

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=VAT Amount;THA=จำนวน VAT';
      Text001@1001 : TextConst 'ENU=%1% VAT;THA=%1% VAT';
      CurrExchRate@1002 : Record 330;
      PettyCashLine@1003 : Record 55002;
      Vend@1004 : Record 23;
      WHTPostingSetup@1000000001 : Record 28043;
      TempVATAmountLine@1005 : TEMPORARY Record 290;
      Currency@1018 : Record 4;
      VendAmount@1006 : Decimal;
      AmountInclVAT@1007 : Decimal;
      InvDiscAmount@1008 : Decimal;
      AmountLCY@1009 : Decimal;
      LineQty@1010 : Decimal;
      TotalNetWeight@1011 : Decimal;
      TotalGrossWeight@1012 : Decimal;
      TotalVolume@1013 : Decimal;
      TotalParcels@1014 : Decimal;
      VATAmount@1015 : Decimal;
      VATPercentage@1016 : Decimal;
      VATAmountText@1017 : Text[30];
      WHTAmount@1000000000 : Decimal;
      AvgVATAmount@1000000002 : Decimal;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Localization TH
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   24.08.2006   KKE   Petty Cash.
      Burda
      002   14.08.2007   KKE   Average VAT.
    }
    END.
  }
}

OBJECT Page 50079 Posted Petty Cash Statistics
{
  OBJECT-PROPERTIES
  {
    Date=08/14/07;
    Time=[ 6:00:00 PM];
    Version List=AVATHA4.40;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=ENU=Petty Cash Invoice Statistics;
    SourceTable=Table55004;
    PageType=Card;
    OnAfterGetRecord=BEGIN
                       CLEARALL;

                       IF "Currency Code" = '' THEN
                         Currency.InitRoundingPrecision
                       ELSE
                         Currency.GET("Currency Code");

                       PettyCashLine.SETRANGE("Document No.","No.");

                       IF PettyCashLine.FIND('-') THEN
                         REPEAT
                           VendAmount := VendAmount + PettyCashLine."VAT Base Amount";
                           AmountInclVAT := AmountInclVAT + PettyCashLine."Amount Incl. VAT";
                           AvgVATAmount := AvgVATAmount + PettyCashLine."Avg. VAT Amount";  //KKE : #002
                           IF WHTPostingSetup.GET(PettyCashLine."WHT Business Posting Group",PettyCashLine."WHT Product Posting Group") THEN
                             IF WHTPostingSetup."WHT %" <> 0 THEN
                               WHTAmount := WHTAmount +
                                 PettyCashLine."VAT Base Amount (LCY)" * WHTPostingSetup."WHT %" / 100;
                         UNTIL PettyCashLine.NEXT = 0;
                       VATAmount := AmountInclVAT - VendAmount;
                       InvDiscAmount := ROUND(InvDiscAmount,Currency."Amount Rounding Precision");
                       WHTAmount := ROUND(WHTAmount,Currency."Amount Rounding Precision");

                       IF VATPercentage <= 0 THEN
                         VATAmountText := Text000
                       ELSE
                         VATAmountText := STRSUBSTNO(Text001,VATPercentage);

                       IF "Currency Code" = '' THEN
                         AmountLCY := VendAmount
                       ELSE
                         AmountLCY :=
                           CurrExchRate.ExchangeAmtFCYToLCY(
                             WORKDATE,"Currency Code",VendAmount,"Currency Factor");

                       IF NOT Vend.GET("Petty Cash Vendor No.") THEN
                         CLEAR(Vend);
                       Vend.CALCFIELDS("Balance (LCY)");

                       //PurchInvLine.CalcVATAmountLines(Rec,TempVATAmountLine);
                       //CurrForm.SubForm.FORM.SetTempVATAmountLine(TempVATAmountLine);
                       //CurrForm.SubForm.FORM.InitGlobals("Currency Code",FALSE,FALSE,FALSE,FALSE,0,0);
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 24  ;1   ;Group     ;
                CaptionML=[ENU=General;
                           THA=ทั่วไป] }

    { 2   ;2   ;Field     ;
                CaptionML=[ENU=Amount;
                           THA=จำนวน];
                SourceExpr=VendAmount + InvDiscAmount;
                AutoFormatType=1;
                AutoFormatExpr="Currency Code" }

    { 16  ;2   ;Field     ;
                CaptionML=[ENU=VAT Amount;
                           THA=จำนวน VAT];
                SourceExpr=VATAmount;
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                CaptionClass=FORMAT (VATAmountText) }

    { 20  ;2   ;Field     ;
                CaptionML=[ENU=Total Incl. VAT;
                           THA=ยอดรวมที่รวม VAT];
                SourceExpr=AmountInclVAT;
                AutoFormatType=1;
                AutoFormatExpr="Currency Code" }

    { 26  ;2   ;Field     ;
                CaptionML=[ENU=Amount (LCY);
                           THA=ยอดเงิน (LCY)];
                SourceExpr=AmountLCY;
                AutoFormatType=1 }

    { 1500000;2;Field     ;
                CaptionML=[ENU=WHT Amount (LCY);
                           THA=จำนวน WHT (LCY)];
                SourceExpr=WHTAmount }

    { 1000000000;2;Field  ;
                CaptionML=[ENU=VAT Amount;
                           THA=จำนวน VAT];
                SourceExpr=AvgVATAmount;
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                CaptionClass=FORMAT ('Avg. VAT Amount') }

    { 1901061301;1;Group  ;
                CaptionML=[ENU=Vendor;
                           THA=ผู้ขาย] }

    { 21  ;2   ;Field     ;
                CaptionML=[ENU=Balance (LCY);
                           THA=ดุล (LCY)];
                SourceExpr=Vend."Balance (LCY)";
                AutoFormatType=1 }

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=VAT Amount;THA=จำนวน VAT';
      Text001@1001 : TextConst 'ENU=%1% VAT;THA=%1% VAT';
      CurrExchRate@1002 : Record 330;
      PettyCashLine@1003 : Record 55005;
      Vend@1004 : Record 23;
      WHTPostingSetup@1000000001 : Record 28043;
      TempVATAmountLine@1005 : TEMPORARY Record 290;
      Currency@1018 : Record 4;
      VendAmount@1006 : Decimal;
      AmountInclVAT@1007 : Decimal;
      InvDiscAmount@1008 : Decimal;
      AmountLCY@1009 : Decimal;
      LineQty@1010 : Decimal;
      TotalNetWeight@1011 : Decimal;
      TotalGrossWeight@1012 : Decimal;
      TotalVolume@1013 : Decimal;
      TotalParcels@1014 : Decimal;
      VATAmount@1015 : Decimal;
      VATPercentage@1016 : Decimal;
      VATAmountText@1017 : Text[30];
      WHTAmount@1000000000 : Decimal;
      AvgVATAmount@1000000002 : Decimal;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Localization TH
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   24.08.2006   KKE   Petty Cash.
      Burda
      002   14.08.2007   KKE   Average VAT.
    }
    END.
  }
}

OBJECT Page 50080 Settle Petty Cash
{
  OBJECT-PROPERTIES
  {
    Date=12/27/11;
    Time=10:26:09 AM;
    Modified=Yes;
    Version List=AVATHA4.40;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Settle Petty Cash;
               THA=เบิกชดเชยเงินสดย่อย];
    SourceTable=Table55006;
    PageType=Card;
    OnOpenPage=BEGIN
                 FILTERGROUP(2);
                 SETFILTER("Date Filter",'..%1',"Posting Date");
                 FILTERGROUP(0);
                 SETRANGE("No.");
               END;

    OnAfterGetRecord=BEGIN
                       OnAfterGetCurrRecord;
                     END;

    OnNewRecord=BEGIN
                  OnAfterGetCurrRecord;
                END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1000000029;1 ;ActionGroup;
                      CaptionML=[ENU=&Settle;
                                 THA=เบิกชดเชย] }
      { 1000000037;2 ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=[ENU=Card;
                                 THA=บัตร];
                      RunObject=Page 26;
                      RunPageLink=No.=FIELD(Petty Cash Vendor No.);
                      Image=EditLines }
      { 1000000038;2 ;Action    ;
                      CaptionML=[ENU=Co&mments;
                                 THA=ข้อ&คิดเห็น];
                      RunObject=Page 50074;
                      RunPageLink=Document Type=CONST(Settle),
                                  No.=FIELD(No.);
                      Image=ViewComments }
      { 1000000042;1 ;ActionGroup;
                      CaptionML=[ENU=&Payments;
                                 THA=&การชำระเงิน] }
      { 1000000044;2 ;Action    ;
                      CaptionML=[ENU=P&review Check;
                                 THA=ตรวจสอบ&มุมมองก่อนพิมพ์];
                      RunObject=Page 50083;
                      RunPageLink=No.=FIELD(No.) }
      { 1000000045;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Print Check;
                                 THA=พิมพ์เช็ค];
                      Image=PrintCheck;
                      OnAction=VAR
                                 SettlePettyCashHdr@1000000001 : Record 55006;
                                 CheckPettyCash@1000000002 : Report 50090;
                               BEGIN
                                 SettlePettyCashHdr.RESET;
                                 SettlePettyCashHdr.SETRANGE("No.","No.");
                                 CheckPettyCash.SETTABLEVIEW(SettlePettyCashHdr);
                                 CheckPettyCash.RUNMODAL;
                                 CLEAR(CheckPettyCash);

                                 //CODEUNIT.RUN(CODEUNIT::"Adjust Gen. Journal Balance",Rec);
                               END;
                                }
      { 1000000046;2 ;Action    ;
                      CaptionML=[ENU=Void Check;
                                 THA=โมฆะเช็ค];
                      Image=VoidCheck;
                      OnAction=BEGIN
                                 TESTFIELD("Bank Payment Type","Bank Payment Type"::"Computer Check");
                                 TESTFIELD("Cheque Printed",TRUE);
                                 IF CONFIRM(Text000,FALSE,"Cheque No.") THEN
                                   CheckManagement.VoidCheckPettyCash(Rec);
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1000000028;1 ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 THA=ฟั&งก์ชัน] }
      { 1000000040;2 ;Action    ;
                      CaptionML=[ENU=Suggest Petty Cash Line;
                                 THA=แนะนำบรรทัดเงินสดย่อย];
                      OnAction=VAR
                                 SettlePettyCashHdr@1000000001 : Record 55006;
                                 SuggestPettyCashLine@1000000002 : Report 50088;
                               BEGIN
                                 SettlePettyCashHdr.SETRANGE("No.","No.");
                                 SuggestPettyCashLine.SETTABLEVIEW(SettlePettyCashHdr);
                                 SuggestPettyCashLine.RUNMODAL;
                                 CLEAR(SuggestPettyCashLine);
                               END;
                                }
      { 1000000041;2 ;Separator  }
      { 1000000033;2 ;Action    ;
                      ShortCutKey=Ctrl+F9;
                      CaptionML=[ENU=Re&lease;
                                 THA=นำ&ออกใช้];
                      Image=ReleaseDoc;
                      OnAction=BEGIN
                                 Rec.Release;
                               END;
                                }
      { 1000000034;2 ;Action    ;
                      CaptionML=[ENU=Re&open;
                                 THA=เปิด&ใหม่];
                      Image=ReOpen;
                      OnAction=VAR
                                 ReleasePurchDoc@1001 : Codeunit 415;
                               BEGIN
                                 Rec.Reopen;
                               END;
                                }
      { 1000000027;1 ;ActionGroup;
                      CaptionML=[ENU=P&osting;
                                 THA=การ&ลงรายการบัญชี] }
      { 1000000030;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Test Report;
                                 THA=รายงานการทดสอบ];
                      Image=TestReport;
                      OnAction=VAR
                                 SettlePettyCashHdr@1000000001 : Record 55006;
                               BEGIN
                                 SettlePettyCashHdr.RESET;
                                 SettlePettyCashHdr.SETRANGE("No.","No.");
                                 REPORT.RUN(REPORT::"Settle Petty Cash - Test",TRUE,FALSE,SettlePettyCashHdr);
                               END;
                                }
      { 1000000031;2 ;Action    ;
                      ShortCutKey=F9;
                      CaptionML=[ENU=P&ost;
                                 THA=ลง&รายการบัญชี];
                      RunObject=Codeunit 55001;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Post;
                      PromotedCategory=Process }
      { 1000000032;2 ;Action    ;
                      ShortCutKey=Shift+F9;
                      CaptionML=[ENU=Post and &Print;
                                 THA=ลงรายการบัญชีและ&พิมพ์];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PostPrint;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 SettlePettyCashPost@1000000001 : Codeunit 55001;
                               BEGIN
                                 SettlePettyCashPost.CheckPostAndPrint(TRUE);
                                 SettlePettyCashPost.RUN(Rec);
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 1000000036;1 ;ActionGroup;
                      CaptionML=[ENU=P&rint;
                                 THA=&พิมพ์] }
      { 1000000039;2 ;Action    ;
                      CaptionML=ENU=Payment Voucher;
                      OnAction=VAR
                                 SettlePettyCashHdr@1000000001 : Record 55006;
                               BEGIN
                                 SettlePettyCashHdr.RESET;
                                 SettlePettyCashHdr.SETRANGE("No.","No.");
                                 REPORT.RUN(REPORT::"Payment Voucher - Petty Cash",TRUE,FALSE,SettlePettyCashHdr);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                CaptionML=[ENU=General;
                           THA=ทั่วไป] }

    { 1000000001;2;Field  ;
                SourceExpr="No.";
                OnAssistEdit=BEGIN
                               IF AssistEdit(xRec) THEN
                                 CurrPage.UPDATE;
                             END;
                              }

    { 1000000003;2;Field  ;
                SourceExpr="Petty Cash Vendor No.";
                OnValidate=BEGIN
                             PettyCashVendorNoOnAfterValida;
                           END;
                            }

    { 1000000005;2;Field  ;
                SourceExpr="Petty Cash Name" }

    { 1000000025;2;Field  ;
                SourceExpr="Payment Invoice Description" }

    { 1000000017;2;Field  ;
                SourceExpr="Settle Account Type" }

    { 1000000019;2;Field  ;
                SourceExpr="Settle Account No." }

    { 1000000013;2;Field  ;
                SourceExpr="Posting Date" }

    { 1000000015;2;Field  ;
                SourceExpr="Document Date" }

    { 1000000007;2;Field  ;
                SourceExpr="Petty Cash Amount" }

    { 1000000009;2;Field  ;
                SourceExpr="Balance Amount";
                OnDrillDown=VAR
                              VendLedgEntry@1000000001 : Record 25;
                              DtldVendLedgEntry@1000000000 : Record 380;
                            BEGIN
                              VendLedgEntry.RESET;
                              VendLedgEntry.SETRANGE("Vendor No.","Petty Cash Vendor No.");
                              VendLedgEntry.SETFILTER("Posting Date",'..%1',"Posting Date");
                              VendLedgEntry.SETCURRENTKEY("Vendor No.","Posting Date");
                              PAGE.RUN(0,VendLedgEntry);
                            END;
                             }

    { 1000000011;2;Field  ;
                CaptionML=[ENU=Balance Settle;
                           THA=เงินดุลเบิกชดเชย];
                SourceExpr=BalanceSettle;
                Editable=FALSE }

    { 1000000021;2;Field  ;
                SourceExpr=Status }

    { 1000000024;1;Part   ;
                SubPageLink=Settle Petty Cash No.=FIELD(No.);
                PagePartID=Page50081 }

    { 1900236101;1;Group  ;
                CaptionML=[ENU=Cheque;
                           THA=เช็ค] }

    { 1000000043;2;Field  ;
                SourceExpr="Bank Payment Type" }

    { 1000000052;2;Field  ;
                SourceExpr="Paid to Vendor Name" }

    { 1000000048;2;Field  ;
                SourceExpr="Cheque Printed" }

    { 1000000050;2;Field  ;
                SourceExpr="Cheque No." }

    { 1000000056;2;Field  ;
                SourceExpr="Cheque Date" }

  }
  CODE
  {
    VAR
      CheckManagement@1000000001 : Codeunit 367;
      BalanceSettle@1000000000 : Decimal;
      Text000@1000000002 : TextConst 'ENU=Void Check %1?;THA=โมฆะเช็ค %1 หรือ?';

    LOCAL PROCEDURE PettyCashVendorNoOnAfterValida@19036124();
    BEGIN
      IF ("Petty Cash Vendor No." <> xRec."Petty Cash Vendor No.") AND
         ("Petty Cash Vendor No." <> '')
      THEN BEGIN
        FILTERGROUP(2);
        SETFILTER("Date Filter",'..%1',"Posting Date");
        FILTERGROUP(0);
      END ELSE
        SETRANGE("Date Filter");
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE OnAfterGetCurrRecord@19077479();
    BEGIN
      xRec := Rec;
      FILTERGROUP(2);
      SETFILTER("Date Filter",'..%1',"Posting Date");
      FILTERGROUP(0);
      CALCFIELDS("Balance Settle","Balance Amount");
      BalanceSettle := "Balance Settle";
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Localization TH
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   24.08.2006   KKE   Petty Cash.
    }
    END.
  }
}

OBJECT Page 50081 Settle Petty Cash Subform
{
  OBJECT-PROPERTIES
  {
    Date=01/30/21;
    Time=[ 7:12:15 PM];
    Modified=Yes;
    Version List=AVATHA4.40;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Settle Petty Cash Subform;
               THA=แบบฟอร์มย่อยเบิกชดเชยเงินสดย่อย];
    SourceTable=Table55007;
    DelayedInsert=Yes;
    PageType=ListPart;
    AutoSplitKey=Yes;
    OnNewRecord=BEGIN
                  IF SettlePettyCashHdr.GET("Settle Petty Cash No.") THEN
                    "Petty Cash Vendor No." := SettlePettyCashHdr."Petty Cash Vendor No.";
                END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                GroupType=Repeater }

    { 1000000001;2;Field  ;
                SourceExpr="Petty Cash Vendor No." }

    { 1000000003;2;Field  ;
                SourceExpr="Entry No." }

    { 1000000005;2;Field  ;
                SourceExpr="Posting Date" }

    { 1000000007;2;Field  ;
                SourceExpr="Document Type" }

    { 1000000009;2;Field  ;
                SourceExpr="Document No." }

    { 1000000011;2;Field  ;
                SourceExpr=Description }

    { 1000000013;2;Field  ;
                SourceExpr="Currency Code";
                Visible=FALSE }

    { 1000000015;2;Field  ;
                SourceExpr="Amount Incl. VAT" }

    { 1000000017;2;Field  ;
                SourceExpr="Amount (LCY) Incl. VAT" }

    { 1000000019;2;Field  ;
                SourceExpr="WHT Amount (LCY)" }

  }
  CODE
  {
    VAR
      SettlePettyCashHdr@1000000000 : Record 55006;

    PROCEDURE CalcTotalAmount@1000000000() : Decimal;
    VAR
      SettlePettyCashLine@1000000000 : Record 55007;
    BEGIN
      SettlePettyCashLine.RESET;
      SettlePettyCashLine.SETRANGE("Settle Petty Cash No.","Settle Petty Cash No.");
      //PettyCashLine.SETFILTER("Line No.",'..%1',"Line No.");
      SettlePettyCashLine.CALCSUMS("Amount (LCY) Incl. VAT","WHT Amount (LCY)");
      EXIT(SettlePettyCashLine."Amount (LCY) Incl. VAT" + SettlePettyCashLine."WHT Amount (LCY)");
    END;

    PROCEDURE CalcBalanceAmt@1000000001() : Decimal;
    VAR
      SettlePettyCashHdr@1000000001 : Record 55006;
      SettlePettyCashLine@1000000000 : Record 55007;
    BEGIN
      IF NOT SettlePettyCashHdr.GET("Settle Petty Cash No.") THEN
       EXIT;
      SettlePettyCashHdr.CALCFIELDS("Balance Amount");
      SettlePettyCashLine.RESET;
      SettlePettyCashLine.SETRANGE("Settle Petty Cash No.","Settle Petty Cash No.");
      SettlePettyCashLine.SETFILTER("Line No.",'..%1',"Line No.");
      IF NOT SettlePettyCashLine.FIND('-') THEN
        SettlePettyCashLine.SETRANGE("Line No.");
      SettlePettyCashLine.CALCSUMS("Amount (LCY) Incl. VAT","WHT Amount (LCY)");
      EXIT(SettlePettyCashHdr."Balance Amount" + SettlePettyCashLine."Amount (LCY) Incl. VAT");
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Localization TH
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   24.08.2006   KKE   Petty Cash.
    }
    END.
  }
}

OBJECT Page 50082 Settle Petty Cash List
{
  OBJECT-PROPERTIES
  {
    Date=08/14/07;
    Time=[ 6:00:00 PM];
    Version List=AVATHA4.40;
  }
  PROPERTIES
  {
    Editable=No;
    SourceTable=Table55006;
    PageType=Card;
    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1000000024;1 ;ActionGroup;
                      CaptionML=ENU=&Settle }
      { 1000000025;2 ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=[ENU=Card;
                                 THA=บัตร];
                      RunObject=Page 50080;
                      RunPageLink=No.=FIELD(No.);
                      Image=EditLines }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                GroupType=Repeater }

    { 1000000001;2;Field  ;
                SourceExpr="No." }

    { 1000000003;2;Field  ;
                SourceExpr="Petty Cash Vendor No." }

    { 1000000005;2;Field  ;
                SourceExpr="Petty Cash Name" }

    { 1000000007;2;Field  ;
                SourceExpr="Posting Date" }

    { 1000000009;2;Field  ;
                SourceExpr="Document Date" }

    { 1000000011;2;Field  ;
                SourceExpr="Petty Cash Amount" }

    { 1000000013;2;Field  ;
                SourceExpr="Balance Amount" }

    { 1000000015;2;Field  ;
                SourceExpr="Balance Settle" }

    { 1000000017;2;Field  ;
                SourceExpr="Settle Account Type" }

    { 1000000019;2;Field  ;
                SourceExpr="Settle Account No." }

  }
  CODE
  {

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Localization TH
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   24.08.2006   KKE   Petty Cash.
    }
    END.
  }
}

OBJECT Page 50083 Check Preview - Petty Cash
{
  OBJECT-PROPERTIES
  {
    Date=02/23/07;
    Time=[ 6:00:00 PM];
    Version List=AVATHA4.40;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=[ENU=Check Preview;
               THA=ตรวจสอบมุมมองก่อนพิมพ์];
    SourceTable=Table55006;
    DataCaptionExpr="No." + ' ' + CheckToAddr[1];
    PageType=Card;
    OnOpenPage=BEGIN
                 CompanyInfo.GET;
                 FormatAddr.Company(CompanyAddr,CompanyInfo);
               END;

    OnAfterGetRecord=BEGIN
                       CalcCheck;
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 11  ;1   ;Group      }

    { 15  ;2   ;Field     ;
                SourceExpr=CompanyAddr[1] }

    { 16  ;2   ;Field     ;
                SourceExpr=CompanyAddr[2] }

    { 17  ;2   ;Field     ;
                SourceExpr=CompanyAddr[3] }

    { 18  ;2   ;Field     ;
                SourceExpr=CompanyAddr[4] }

    { 13  ;2   ;Field     ;
                CaptionClass=FORMAT (NumberText[1]) }

    { 14  ;2   ;Field     ;
                CaptionClass=FORMAT (NumberText[2]) }

    { 1   ;2   ;Field     ;
                CaptionClass=Text19036990;
                MultiLine=Yes }

    { 2   ;2   ;Field     ;
                SourceExpr=CheckToAddr[1] }

    { 8   ;2   ;Field     ;
                SourceExpr=CheckToAddr[2] }

    { 9   ;2   ;Field     ;
                SourceExpr=CheckToAddr[3] }

    { 10  ;2   ;Field     ;
                SourceExpr=CheckToAddr[4] }

    { 6   ;2   ;Field     ;
                CaptionML=[ENU=Date;
                           THA=วันที่];
                SourceExpr="Cheque Date" }

    { 7   ;2   ;Field     ;
                CaptionML=[ENU=Amount;
                           THA=จำนวน];
                SourceExpr=CheckAmount;
                AutoFormatType=1;
                AutoFormatExpr="Currency Code" }

    { 1500003;2;Field     ;
                CaptionML=[ENU=WHT;
                           THA=WHT];
                SourceExpr=0;
                AutoFormatType=1;
                AutoFormatExpr="Currency Code" }

    { 5   ;2   ;Field     ;
                SourceExpr="No." }

    { 19  ;2   ;Field     ;
                SourceExpr=CheckStatusText }

    { 1500002;2;Field     ;
                SourceExpr=CheckAmount;
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                CaptionClass=FORMAT ('Total ' + "Currency Code") }

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Printed Check;THA=เช็คที่พิมพ์แล้ว';
      Text001@1001 : TextConst 'ENU=Not Printed Check;THA=ไม่ใช่เช็คที่พิมพ์';
      GenJnlLine@1002 : Record 81;
      Cust@1003 : Record 18;
      Vend@1004 : Record 23;
      BankAcc@1005 : Record 270;
      CompanyInfo@1006 : Record 79;
      CheckReport@1007 : Report 1401;
      FormatAddr@1008 : Codeunit 365;
      CheckToAddr@1009 : ARRAY [8] OF Text[50];
      CompanyAddr@1010 : ARRAY [8] OF Text[50];
      NumberText@1011 : ARRAY [2] OF Text[80];
      CheckStatusText@1012 : Text[30];
      CheckAmount@1013 : Decimal;
      Text19036990@19047525 : TextConst 'ENU=Pay to the order of;THA=จ่ายตามใบสั่งของ';

    LOCAL PROCEDURE CalcCheck@1();
    VAR
      GenJnlLine1@1500000 : Record 81;
    BEGIN
      IF "Cheque Printed" THEN
        CheckStatusText := Text000
      ELSE
        CheckStatusText := Text001;

      CALCFIELDS("Balance Settle");
      CheckAmount := -"Balance Settle";

      IF CheckAmount < 0 THEN
        CheckAmount := 0;

      CheckReport.InitTextVariable;
      CheckReport.FormatNoText(NumberText,CheckAmount,"Currency Code");

      Vend.GET("Petty Cash Vendor No.");
      Vend.Contact := '';
      //FormatAddr.Vendor(CheckToAddr,Vend);
      //KKE : #002 +
      IF "Paid to Vendor Name" <> '' THEN
        CheckToAddr[1] := "Paid to Vendor Name"
      ELSE
        IF Vend."Name (Thai)" <> '' THEN
          CheckToAddr[1] := Vend."Name (Thai)"
        ELSE
          CheckToAddr[1] := Vend.Name + Vend."Name 2";
      //KKE : #002 -
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Localization TH
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   23.08.2006   KKE   Check Preview - Petty Cash.
      002   24.01.2007   KKE   Display 'Paid to Vendor Name'
    }
    END.
  }
}

OBJECT Page 50084 Cash Advance Setup
{
  OBJECT-PROPERTIES
  {
    Date=02/21/07;
    Time=[ 6:00:00 PM];
    Version List=AVATHA4.40;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Cash Advance Setup;
               THA=เซ็ตอัพเงินทดรองจ่าย];
    SourceTable=Table55050;
    PageType=Card;
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                CaptionML=[ENU=General;
                           THA=ทั่วไป] }

    { 1000000001;2;Field  ;
                SourceExpr="Cash Advance Nos." }

    { 1000000009;2;Field  ;
                SourceExpr="Settle Cash Advance Nos." }

    { 1000000003;2;Field  ;
                SourceExpr="Bank Account No." }

    { 1000000007;2;Field  ;
                SourceExpr="Allow VAT Difference" }

  }
  CODE
  {

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Localization TH
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   30.08.2006   KKE   Cash Advance.
    }
    END.
  }
}

OBJECT Page 50085 Cash Advance Payment
{
  OBJECT-PROPERTIES
  {
    Date=06/21/12;
    Time=[ 9:44:51 AM];
    Modified=Yes;
    Version List=AVATHA4.40;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Cash Advance Payment;
               THA=การชำระเงินเงินทดรองจ่าย];
    SaveValues=Yes;
    SourceTable=Table81;
    DelayedInsert=Yes;
    DataCaptionFields=Journal Batch Name;
    PageType=Card;
    AutoSplitKey=Yes;
    OnInit=BEGIN
             TotalBalanceVisible := TRUE;
             BalanceVisible := TRUE;
             "WHT Certificate No.Editable" := TRUE;
           END;

    OnOpenPage=VAR
                 JnlSelected@1000 : Boolean;
               BEGIN
                 GenJnlManagement.TemplateSelection(PAGE::"Cash Advance Payment",9,FALSE,Rec,JnlSelected);
                 IF NOT JnlSelected THEN
                   ERROR('');
                 GenJnlManagement.OpenJnl(CurrentJnlBatchName,Rec);
               END;

    OnAfterGetRecord=BEGIN
                       ShowShortcutDimCode(ShortcutDimCode);
                       //KKE : #002 +
                       IF "Certificate Printed" THEN
                         "WHT Certificate No.Editable" := FALSE
                       ELSE BEGIN
                         GenJnlBatch.GET("Journal Template Name","Journal Batch Name");
                         "WHT Certificate No.Editable" := GenJnlBatch."Allow Manual WHT Cert. No.";
                       END;
                       //KKE : #002 -
                       OnAfterGetCurrRecord;
                     END;

    OnNewRecord=BEGIN
                  UpdateBalance;
                  SetUpNewLine(xRec,Balance,BelowxRec);
                  CLEAR(ShortcutDimCode);

                  "Account Type" := "Account Type"::Vendor;
                  OnAfterGetCurrRecord;
                END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 57      ;1   ;ActionGroup;
                      CaptionML=[ENU=&Line;
                                 THA=&บรรทัด] }
      { 58      ;2   ;Action    ;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=[ENU=Dimensions;
                                 THA=มิติ];
                      RunObject=Page 545;
                      RunPageLink=Table ID=CONST(81),
                                  Journal Template Name=FIELD(Journal Template Name),
                                  Journal Batch Name=FIELD(Journal Batch Name),
                                  Journal Line No.=FIELD(Line No.);
                      Image=Dimensions }
      { 37      ;1   ;ActionGroup;
                      CaptionML=[ENU=A&ccount;
                                 THA=&บัญชี] }
      { 38      ;2   ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=[ENU=Card;
                                 THA=บัตร];
                      RunObject=Codeunit 15;
                      Image=EditLines }
      { 39      ;2   ;Action    ;
                      ShortCutKey=Ctrl+F7;
                      CaptionML=[ENU=Ledger E&ntries;
                                 THA=รายการ&บัญชีแยกประเภท];
                      RunObject=Codeunit 14 }
      { 41      ;1   ;ActionGroup;
                      CaptionML=[ENU=&Payments;
                                 THA=&การชำระเงิน] }
      { 42      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Suggest Vendor Payments;
                                 THA=แนะนำการชำระเงินของผู้ขาย];
                      Image=SuggestVendorPayments;
                      OnAction=BEGIN
                                 CreateVendorPmtSuggestion.SetGenJnlLine(Rec);
                                 CreateVendorPmtSuggestion.RUNMODAL;
                                 CLEAR(CreateVendorPmtSuggestion);
                               END;
                                }
      { 63      ;2   ;Action    ;
                      CaptionML=[ENU=P&review Check;
                                 THA=ตรวจสอบ&มุมมองก่อนพิมพ์];
                      RunObject=Page 404;
                      RunPageLink=Journal Template Name=FIELD(Journal Template Name),
                                  Journal Batch Name=FIELD(Journal Batch Name),
                                  Line No.=FIELD(Line No.) }
      { 64      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Print Check;
                                 THA=พิมพ์เช็ค];
                      Image=PrintCheck;
                      OnAction=BEGIN
                                 GenJnlLine.RESET;
                                 GenJnlLine.COPY(Rec);
                                 GenJnlLine.SETRANGE("Journal Template Name","Journal Template Name");
                                 GenJnlLine.SETRANGE("Journal Batch Name","Journal Batch Name");
                                 DocPrint.PrintCheck(GenJnlLine);
                                 CODEUNIT.RUN(CODEUNIT::"Adjust Gen. Journal Balance",Rec);
                               END;
                                }
      { 65      ;2   ;Action    ;
                      CaptionML=[ENU=Void Check;
                                 THA=โมฆะเช็ค];
                      Image=VoidCheck;
                      OnAction=BEGIN
                                 TESTFIELD("Bank Payment Type","Bank Payment Type"::"Computer Check");
                                 TESTFIELD("Check Printed",TRUE);
                                 IF CONFIRM(Text000,FALSE,"Document No.") THEN
                                   CheckManagement.VoidCheck(Rec);
                               END;
                                }
      { 66      ;2   ;Action    ;
                      CaptionML=[ENU=Void &All Checks;
                                 THA=โมฆะ &เช็คทั้งหมด];
                      OnAction=BEGIN
                                 IF CONFIRM(Text001,FALSE) THEN BEGIN
                                   GenJnlLine.RESET;
                                   GenJnlLine.COPY(Rec);
                                   GenJnlLine.SETRANGE("Bank Payment Type","Bank Payment Type"::"Computer Check");
                                   GenJnlLine.SETRANGE("Check Printed",TRUE);
                                   IF GenJnlLine.FIND('-') THEN
                                     REPEAT
                                       GenJnlLine2 := GenJnlLine;
                                       CheckManagement.VoidCheck(GenJnlLine2);
                                     UNTIL GenJnlLine.NEXT = 0;
                                 END;
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1000000000;1 ;ActionGroup;
                      CaptionML=[ENU=P&rint;
                                 THA=&พิมพ์] }
      { 1000000001;2 ;Action    ;
                      CaptionML=ENU=Payment Voucher;
                      OnAction=BEGIN
                                 GenJnlLine.RESET;
                                 GenJnlLine.SETRANGE("Journal Template Name","Journal Template Name");
                                 GenJnlLine.SETRANGE("Journal Batch Name","Journal Batch Name");
                                 GenJnlLine.SETRANGE("Document No.","Document No.");
                                 REPORT.RUN(REPORT::"Payment Voucher",TRUE,FALSE,GenJnlLine);
                               END;
                                }
      { 40      ;1   ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 THA=ฟังก์&ชัน] }
      { 93      ;2   ;Action    ;
                      ShortCutKey=Shift+F11;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Apply Entries;
                                 THA=ใช้รายการ];
                      RunObject=Codeunit 225;
                      Image=ApplyEntries }
      { 94      ;2   ;Action    ;
                      CaptionML=[ENU=Insert Conv. LCY Rndg. Lines;
                                 THA=แทรกบรรทัดการปัดเศษจากการแปลง LCY];
                      RunObject=Codeunit 407 }
      { 1500002 ;2   ;Separator  }
      { 1500003 ;2   ;Action    ;
                      CaptionML=[ENU=Cancel Post Dated Check;
                                 THA=ยกเลิกเช็คจ่ายล่วงหน้า];
                      OnAction=BEGIN
                                 PostDatedCheckMgt.CancelCheck(Rec);
                               END;
                                }
      { 43      ;1   ;ActionGroup;
                      CaptionML=[ENU=P&osting;
                                 THA=การ&ลงรายการบัญชี] }
      { 44      ;2   ;Action    ;
                      ShortCutKey=Ctrl+F11;
                      CaptionML=[ENU=Reconcile;
                                 THA=กระทบยอด];
                      Image=Reconcile;
                      OnAction=BEGIN
                                 GLReconcile.SetGenJnlLine(Rec);
                                 GLReconcile.RUN;
                               END;
                                }
      { 45      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Test Report;
                                 THA=รายงานการทดสอบ];
                      Image=TestReport;
                      OnAction=BEGIN
                                 ReportPrint.PrintGenJnlLine(Rec);
                               END;
                                }
      { 46      ;2   ;Action    ;
                      ShortCutKey=F9;
                      CaptionML=[ENU=P&ost;
                                 THA=ลง&รายการบัญชี];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Post;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CODEUNIT.RUN(CODEUNIT::"Gen. Jnl.-Post",Rec);
                                 CurrentJnlBatchName := GETRANGEMAX("Journal Batch Name");
                                 COMMIT;
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 47      ;2   ;Action    ;
                      ShortCutKey=Shift+F9;
                      CaptionML=[ENU=Post and &Print;
                                 THA=ลงรายการบัญชีและ&พิมพ์];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PostPrint;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CODEUNIT.RUN(CODEUNIT::"Gen. Jnl.-Post+Print",Rec);
                                 CurrentJnlBatchName := GETRANGEMAX("Journal Batch Name");
                                 COMMIT;
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 33  ;1   ;Field     ;
                Lookup=Yes;
                CaptionML=[ENU=Batch Name;
                           THA=ชื่อชุดงาน];
                SourceExpr=CurrentJnlBatchName;
                OnValidate=BEGIN
                             GenJnlManagement.CheckName(CurrentJnlBatchName,Rec);
                               CurrentJnlBatchNameOnAfterVali;
                           END;

                OnLookup=BEGIN
                           CurrPage.SAVERECORD;
                           GenJnlManagement.LookupName(CurrentJnlBatchName,Rec);
                           CurrPage.UPDATE(FALSE);
                         END;
                          }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                SourceExpr="Posting Date" }

    { 35  ;2   ;Field     ;
                SourceExpr="Document Date";
                Visible=FALSE }

    { 4   ;2   ;Field     ;
                SourceExpr="Document Type" }

    { 6   ;2   ;Field     ;
                SourceExpr="Document No." }

    { 83  ;2   ;Field     ;
                SourceExpr="External Document No.";
                Visible=TRUE }

    { 8   ;2   ;Field     ;
                SourceExpr="Account Type";
                OnValidate=BEGIN
                             GenJnlManagement.GetAccounts(Rec,AccName,BalAccName);
                           END;
                            }

    { 10  ;2   ;Field     ;
                SourceExpr="Account No.";
                OnValidate=BEGIN
                             GenJnlManagement.GetAccounts(Rec,AccName,BalAccName);
                             ShowShortcutDimCode(ShortcutDimCode);
                           END;

                OnLookup=VAR
                           Vendor@1000000000 : Record 23;
                           GLAcc@1000000003 : Record 15;
                           Cust@1000000004 : Record 18;
                           Bank@1000000005 : Record 270;
                           FA@1000000006 : Record 5600;
                           ICPartner@1000000007 : Record 413;
                         BEGIN
                           CASE "Account Type" OF
                             "Account Type"::Vendor:
                               BEGIN
                                 Vendor.SETRANGE("Cash Advance",TRUE);
                                 IF PAGE.RUNMODAL(0,Vendor) = ACTION::LookupOK THEN BEGIN
                                   Text := Vendor."No.";
                                   EXIT(TRUE);
                                 END;
                               END;
                             "Account Type"::"G/L Account":
                               BEGIN
                                 IF PAGE.RUNMODAL(0,GLAcc) = ACTION::LookupOK THEN BEGIN
                                   Text := GLAcc."No.";
                                   EXIT(TRUE);
                                 END;
                               END;
                             "Account Type"::Customer:
                               BEGIN
                                 IF PAGE.RUNMODAL(0,Cust) = ACTION::LookupOK THEN BEGIN
                                   Text := Cust."No.";
                                   EXIT(TRUE);
                                 END;
                               END;
                             "Account Type"::"Bank Account":
                               BEGIN
                                 IF PAGE.RUNMODAL(0,Bank) = ACTION::LookupOK THEN BEGIN
                                   Text := Bank."No.";
                                   EXIT(TRUE);
                                 END;
                               END;
                             "Account Type"::"Fixed Asset":
                               BEGIN
                                 IF PAGE.RUNMODAL(0,FA) = ACTION::LookupOK THEN BEGIN
                                   Text := FA."No.";
                                   EXIT(TRUE);
                                 END;
                               END;
                             "Account Type"::"IC Partner":
                               BEGIN
                                 IF PAGE.RUNMODAL(0,ICPartner) = ACTION::LookupOK THEN BEGIN
                                   Text := ICPartner.Code;
                                   EXIT(TRUE);
                                 END;
                               END;
                           END;
                         END;
                          }

    { 12  ;2   ;Field     ;
                SourceExpr=Description }

    { 1000000015;2;Field  ;
                SourceExpr="Payee Name";
                Visible=FALSE }

    { 1500007;2;Field     ;
                SourceExpr="WHT Business Posting Group";
                Visible=FALSE }

    { 1500009;2;Field     ;
                SourceExpr="WHT Product Posting Group";
                Visible=FALSE }

    { 53  ;2   ;Field     ;
                SourceExpr="Salespers./Purch. Code";
                Visible=FALSE }

    { 95  ;2   ;Field     ;
                SourceExpr="Campaign No.";
                Visible=FALSE }

    { 55  ;2   ;Field     ;
                AssistEdit=Yes;
                SourceExpr="Currency Code";
                OnAssistEdit=BEGIN
                               ChangeExchangeRate.SetParameter("Currency Code","Currency Factor","Posting Date");
                               IF ChangeExchangeRate.RUNMODAL = ACTION::OK THEN BEGIN
                                 VALIDATE("Currency Factor",ChangeExchangeRate.GetParameter);
                               END;
                               CLEAR(ChangeExchangeRate);
                             END;
                              }

    { 77  ;2   ;Field     ;
                SourceExpr="Gen. Posting Type";
                Visible=FALSE }

    { 79  ;2   ;Field     ;
                SourceExpr="Gen. Bus. Posting Group";
                Visible=FALSE }

    { 81  ;2   ;Field     ;
                SourceExpr="Gen. Prod. Posting Group";
                Visible=FALSE }

    { 85  ;2   ;Field     ;
                SourceExpr="VAT Bus. Posting Group";
                Visible=FALSE }

    { 87  ;2   ;Field     ;
                SourceExpr="VAT Prod. Posting Group";
                Visible=FALSE }

    { 1500000;2;Field     ;
                SourceExpr="WHT Payment";
                Visible=FALSE }

    { 1500005;2;Field     ;
                SourceExpr="Skip WHT";
                Visible=FALSE }

    { 1000000017;2;Field  ;
                SourceExpr="One Doc. Per WHT Slip" }

    { 1000000019;2;Field  ;
                SourceExpr="WHT Certificate No.";
                Editable="WHT Certificate No.Editable" }

    { 1000000021;2;Field  ;
                SourceExpr="Certificate Printed" }

    { 14  ;2   ;Field     ;
                SourceExpr=Amount }

    { 97  ;2   ;Field     ;
                SourceExpr="VAT Amount";
                Visible=FALSE }

    { 101 ;2   ;Field     ;
                SourceExpr="VAT Difference";
                Visible=FALSE }

    { 1500011;2;Field     ;
                SourceExpr="Vendor Exchange Rate (ACY)";
                Visible=FALSE }

    { 99  ;2   ;Field     ;
                SourceExpr="Bal. VAT Amount";
                Visible=FALSE }

    { 103 ;2   ;Field     ;
                SourceExpr="Bal. VAT Difference";
                Visible=FALSE }

    { 61  ;2   ;Field     ;
                SourceExpr="Bal. Account Type" }

    { 16  ;2   ;Field     ;
                SourceExpr="Bal. Account No.";
                OnValidate=BEGIN
                             GenJnlManagement.GetAccounts(Rec,AccName,BalAccName);
                             ShowShortcutDimCode(ShortcutDimCode);
                           END;
                            }

    { 71  ;2   ;Field     ;
                SourceExpr="Bal. Gen. Posting Type";
                Visible=FALSE }

    { 73  ;2   ;Field     ;
                SourceExpr="Bal. Gen. Bus. Posting Group";
                Visible=FALSE }

    { 75  ;2   ;Field     ;
                SourceExpr="Bal. Gen. Prod. Posting Group";
                Visible=FALSE }

    { 89  ;2   ;Field     ;
                SourceExpr="Bal. VAT Bus. Posting Group";
                Visible=FALSE }

    { 91  ;2   ;Field     ;
                SourceExpr="Bal. VAT Prod. Posting Group";
                Visible=FALSE }

    { 49  ;2   ;Field     ;
                SourceExpr="Shortcut Dimension 1 Code";
                Visible=FALSE }

    { 51  ;2   ;Field     ;
                SourceExpr="Shortcut Dimension 2 Code";
                Visible=FALSE }

    { 300 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[3];
                CaptionClass='1,2,3';
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(3,ShortcutDimCode[3]);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(3,ShortcutDimCode[3]);
                         END;
                          }

    { 302 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[4];
                CaptionClass='1,2,4';
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(4,ShortcutDimCode[4]);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(4,ShortcutDimCode[4]);
                         END;
                          }

    { 304 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[5];
                CaptionClass='1,2,5';
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(5,ShortcutDimCode[5]);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(5,ShortcutDimCode[5]);
                         END;
                          }

    { 306 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[6];
                CaptionClass='1,2,6';
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(6,ShortcutDimCode[6]);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(6,ShortcutDimCode[6]);
                         END;
                          }

    { 308 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[7];
                CaptionClass='1,2,7';
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(7,ShortcutDimCode[7]);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(7,ShortcutDimCode[7]);
                         END;
                          }

    { 310 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[8];
                CaptionClass='1,2,8';
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(8,ShortcutDimCode[8]);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(8,ShortcutDimCode[8]);
                         END;
                          }

    { 18  ;2   ;Field     ;
                SourceExpr="Applies-to Doc. Type";
                Visible=FALSE }

    { 20  ;2   ;Field     ;
                SourceExpr="Applies-to Doc. No.";
                Visible=FALSE }

    { 22  ;2   ;Field     ;
                SourceExpr="Applies-to ID";
                Visible=FALSE }

    { 67  ;2   ;Field     ;
                SourceExpr="Bank Payment Type" }

    { 59  ;2   ;Field     ;
                SourceExpr="Check Printed";
                Visible=FALSE }

    { 69  ;2   ;Field     ;
                SourceExpr="Reason Code";
                Visible=FALSE }

    { 24  ;1   ;Group      }

    { 29  ;2   ;Field     ;
                CaptionML=[ENU=Account Name;
                           THA=ชื่อบัญชี];
                SourceExpr=AccName;
                Editable=FALSE }

    { 31  ;2   ;Field     ;
                CaptionML=[ENU=Bal. Account Name;
                           THA=ชื่อบัญชีดุล];
                SourceExpr=BalAccName;
                Editable=FALSE }

    { 25  ;2   ;Field     ;
                Name=Balance;
                CaptionML=[ENU=Balance;
                           THA=ดุล];
                SourceExpr=Balance+"Balance (LCY)"-xRec."Balance (LCY)";
                AutoFormatType=1;
                Visible=BalanceVisible;
                Editable=FALSE }

    { 27  ;2   ;Field     ;
                Name=TotalBalance;
                CaptionML=[ENU=Total Balance;
                           THA=รวมดุล];
                SourceExpr=TotalBalance+"Balance (LCY)"-xRec."Balance (LCY)";
                AutoFormatType=1;
                Visible=TotalBalanceVisible;
                Editable=FALSE }

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Void Check %1?;THA=โมฆะเช็ค %1 หรือ?';
      Text001@1001 : TextConst 'ENU=Void all printed checks?;THA=โมฆะเช็คทั้งหมดที่พิมพ์หรือ?';
      ChangeExchangeRate@1002 : Page 511;
      GenJnlLine@1003 : Record 81;
      GenJnlLine2@1004 : Record 81;
      GLReconcile@1005 : Page 345;
      CreateVendorPmtSuggestion@1006 : Report 393;
      GenJnlManagement@1007 : Codeunit 230;
      ReportPrint@1008 : Codeunit 228;
      DocPrint@1009 : Codeunit 229;
      CheckManagement@1010 : Codeunit 367;
      WHTManagement@1500001 : Codeunit 28040;
      PostDatedCheckMgt@1500000 : Codeunit 28090;
      CurrentJnlBatchName@1011 : Code[10];
      AccName@1012 : Text[50];
      BalAccName@1013 : Text[50];
      Balance@1014 : Decimal;
      TotalBalance@1015 : Decimal;
      ShowBalance@1016 : Boolean;
      ShowTotalBalance@1017 : Boolean;
      ShortcutDimCode@1018 : ARRAY [8] OF Code[20];
      TType@1500008 : 'Vendor,Customer';
      C_0001@1000000002 : TextConst 'ENU=Do you want to get WHT from petty cash?';
      C_0002@1000000001 : TextConst 'ENU=Successfully Inserted.;THA=บันทึกรายการเรียบร้อยแล้ว';
      C_0003@1000000000 : TextConst 'ENU=WHT Entries does not exists.;THA=ไม่พบรายการภาษีหัก ณ ที่จ่าย';
      GenJnlBatch@1000000003 : Record 232;
      "WHT Certificate No.Editable"@19059849 : Boolean INDATASET;
      BalanceVisible@19073040 : Boolean INDATASET;
      TotalBalanceVisible@19063333 : Boolean INDATASET;

    LOCAL PROCEDURE UpdateBalance@1();
    BEGIN
      GenJnlManagement.CalcBalance(
        Rec,xRec,Balance,TotalBalance,ShowBalance,ShowTotalBalance);
      BalanceVisible := ShowBalance;
      TotalBalanceVisible := ShowTotalBalance;
    END;

    LOCAL PROCEDURE CurrentJnlBatchNameOnAfterVali@19002411();
    BEGIN
      CurrPage.SAVERECORD;
      GenJnlManagement.SetName(CurrentJnlBatchName,Rec);
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE OnAfterGetCurrRecord@19077479();
    BEGIN
      xRec := Rec;
      GenJnlManagement.GetAccounts(Rec,AccName,BalAccName);
      UpdateBalance;
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Localization Demo TH
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   30.08.2006   KKE   -Cash Advance
      002   30.08.2006   KKE   -Modify program to be able to manual input WHT Certificate No.
    }
    END.
  }
}

OBJECT Page 50086 Cash Advance Invoice
{
  OBJECT-PROPERTIES
  {
    Date=12/12/11;
    Time=[ 2:46:15 PM];
    Version List=AVATHA4.40;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Cash Advance Invoice;
               THA=ใบแจ้งหนี้เงินทดรองจ่าย];
    SourceTable=Table55051;
    PageType=Card;
    OnOpenPage=BEGIN
                 FILTERGROUP(2);
                 SETFILTER("Date Filter",'..%1',"Posting Date");
                 FILTERGROUP(0);
                 SETRANGE("No.");
               END;

    OnAfterGetRecord=BEGIN
                       OnAfterGetCurrRecord;
                     END;

    OnNewRecord=BEGIN
                  OnAfterGetCurrRecord;
                END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1000000037;1 ;ActionGroup;
                      CaptionML=[ENU=&Invoice;
                                 THA=&ใบแจ้งหนี้] }
      { 1000000039;2 ;Action    ;
                      ShortCutKey=F7;
                      CaptionML=[ENU=Statistics;
                                 THA=สถิติ];
                      RunObject=Page 50093;
                      RunPageLink=No.=FIELD(No.);
                      Promoted=Yes;
                      Image=Statistics;
                      PromotedCategory=Process }
      { 1000000040;2 ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=[ENU=Card;
                                 THA=บัตร];
                      RunObject=Page 26;
                      RunPageLink=No.=FIELD(Cash Advance Vendor No.);
                      Image=EditLines }
      { 1000000041;2 ;Action    ;
                      CaptionML=[ENU=Co&mments;
                                 THA=ข้อ&คิดเห็น];
                      RunObject=Page 50089;
                      RunPageLink=Document Type=CONST(Invoice),
                                  No.=FIELD(No.);
                      Image=ViewComments }
      { 1000000042;2 ;Action    ;
                      CaptionML=[ENU=Dimensions;
                                 THA=มิติ];
                      Image=Dimensions;
                      OnAction=BEGIN
                                 Rec.ShowDocDim;
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1000000026;1 ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 THA=ฟั&งก์ชัน] }
      { 1000000069;2 ;Action    ;
                      ShortCutKey=Ctrl+F9;
                      CaptionML=[ENU=Re&lease;
                                 THA=นำ&ออกใช้];
                      Image=ReleaseDoc;
                      OnAction=BEGIN
                                 Rec.Release;
                               END;
                                }
      { 1000000070;2 ;Action    ;
                      CaptionML=[ENU=Re&open;
                                 THA=เปิด&ใหม่];
                      Image=ReOpen;
                      OnAction=VAR
                                 ReleasePurchDoc@1001 : Codeunit 415;
                               BEGIN
                                 Rec.Reopen;
                               END;
                                }
      { 1000000054;1 ;ActionGroup;
                      CaptionML=[ENU=P&osting;
                                 THA=การ&ลงรายการบัญชี] }
      { 1000000060;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Test Report;
                                 THA=รายงานการทดสอบ];
                      Image=TestReport;
                      OnAction=VAR
                                 CashAdvHdr@1000000001 : Record 55051;
                               BEGIN
                                 CashAdvHdr.RESET;
                                 CashAdvHdr.SETRANGE("No.","No.");
                                 REPORT.RUN(REPORT::"Cash Advance Test",TRUE,FALSE,CashAdvHdr);
                               END;
                                }
      { 1000000061;2 ;Action    ;
                      ShortCutKey=F9;
                      CaptionML=[ENU=P&ost;
                                 THA=ลง&รายการบัญชี];
                      RunObject=Codeunit 55050;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Post;
                      PromotedCategory=Process }
      { 1000000062;2 ;Action    ;
                      ShortCutKey=Shift+F9;
                      CaptionML=[ENU=Post and &Print;
                                 THA=ลงรายการบัญชีและ&พิมพ์];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PostPrint;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 CashAdvancePost@1000000001 : Codeunit 55050;
                               BEGIN
                                 CashAdvancePost.CheckPostAndPrint(TRUE);
                                 CashAdvancePost.RUN(Rec);
                                 CurrPage.UPDATE(FALSE);
                                 CLEAR(CashAdvancePost);
                               END;
                                }
      { 1000000056;1 ;ActionGroup;
                      CaptionML=[ENU=&Print;
                                 THA=&พิมพ์] }
      { 1000000065;2 ;Action    ;
                      CaptionML=[ENU=Clear Advance;
                                 THA=ใบสำคัญเงินทดรองจ่าย];
                      OnAction=VAR
                                 CashAdvHdr@1000000001 : Record 55051;
                               BEGIN
                                 CashAdvHdr.RESET;
                                 CashAdvHdr.SETRANGE("No.","No.");
                                 REPORT.RUN(REPORT::"Purchase Voucher -Cash Advance",TRUE,FALSE,CashAdvHdr);
                               END;
                                }
      { 1000000027;2 ;Action    ;
                      CaptionML=[ENU=WHT Slip;
                                 THA=ใบหักภาษี ณ ที่จ่าย];
                      OnAction=VAR
                                 CashAdvHdr@1000000001 : Record 55051;
                               BEGIN
                                 TESTFIELD(Status,Status::Released);
                                 CashAdvHdr.RESET;
                                 CashAdvHdr.SETRANGE("No.","No.");
                                 REPORT.RUN(REPORT::"Page 50 BIS -Cash Advance",TRUE,FALSE,CashAdvHdr);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                CaptionML=[ENU=General;
                           THA=ทั่วไป] }

    { 1000000001;2;Field  ;
                SourceExpr="No.";
                OnAssistEdit=BEGIN
                               IF AssistEdit(xRec) THEN
                                 CurrPage.UPDATE;
                             END;
                              }

    { 1000000003;2;Field  ;
                SourceExpr="Cash Advance Vendor No.";
                OnValidate=BEGIN
                             CashAdvanceVendorNoOnAfterVali;
                           END;
                            }

    { 1000000005;2;Field  ;
                SourceExpr=Name }

    { 1000000024;2;Field  ;
                SourceExpr="Name 2" }

    { 1000000007;2;Field  ;
                SourceExpr="Invoice Description" }

    { 1000000028;2;Field  ;
                SourceExpr="Printing WHT Slip (Doc:WHT)" }

    { 1000000009;2;Field  ;
                SourceExpr="Document Date" }

    { 1000000011;2;Field  ;
                SourceExpr="Posting Date";
                OnValidate=BEGIN
                             PostingDateOnAfterValidate;
                           END;
                            }

    { 1000000013;2;Field  ;
                SourceExpr="Balance Amount";
                OnDrillDown=VAR
                              VendLedgEntry@1000000001 : Record 25;
                              DtldVendLedgEntry@1000000000 : Record 380;
                            BEGIN
                              DtldVendLedgEntry.SETRANGE("Vendor No.","Cash Advance Vendor No.");
                              VendLedgEntry.DrillDownOnEntries(DtldVendLedgEntry);
                            END;
                             }

    { 1000000015;2;Field  ;
                SourceExpr="Balance Amount Settle" }

    { 1000000057;2;Field  ;
                SourceExpr=Status }

    { 1000000034;1;Part   ;
                Name=CashAdvLines;
                SubPageLink=Document No.=FIELD(No.);
                PagePartID=Page50087 }

    { 1905885101;1;Group  ;
                CaptionML=[ENU=Invoicing;
                           THA=การออกใบแจ้งหนี้] }

    { 1000000017;2;Field  ;
                SourceExpr="Shortcut Dimension 1 Code";
                OnValidate=BEGIN
                             ShortcutDimension1CodeOnAfterV;
                           END;
                            }

    { 1000000019;2;Field  ;
                SourceExpr="Shortcut Dimension 2 Code";
                OnValidate=BEGIN
                             ShortcutDimension2CodeOnAfterV;
                           END;
                            }

    { 1000000032;2;Field  ;
                SourceExpr="Location Code" }

    { 1000000046;2;Field  ;
                SourceExpr="VAT Bus. Posting Group" }

    { 1000000030;2;Field  ;
                SourceExpr="WHT Business Posting Group" }

    { 1907468901;1;Group  ;
                CaptionML=[ENU=Foreign Trade;
                           THA=การค้าต่างประเทศ] }

    { 1000000021;2;Field  ;
                SourceExpr="Currency Code";
                OnAssistEdit=BEGIN
                               ChangeExchangeRate.SetParameter("Currency Code","Currency Factor","Posting Date");
                               IF ChangeExchangeRate.RUNMODAL = ACTION::OK THEN BEGIN
                                 VALIDATE("Currency Factor",ChangeExchangeRate.GetParameter);
                                 CurrPage.UPDATE;
                               END;
                               CLEAR(ChangeExchangeRate);
                             END;
                              }

  }
  CODE
  {
    VAR
      ChangeExchangeRate@1000000000 : Page 511;
      TotalAmount@1000000001 : Decimal;

    LOCAL PROCEDURE CashAdvanceVendorNoOnAfterVali@19020242();
    BEGIN
      IF ("Cash Advance Vendor No." <> xRec."Cash Advance Vendor No.") AND
         ("Cash Advance Vendor No." <> '')
      THEN BEGIN
        FILTERGROUP(2);
        SETFILTER("Date Filter",'..%1',"Posting Date");
        FILTERGROUP(0);
      END ELSE
        SETRANGE("Date Filter");
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE PostingDateOnAfterValidate@19003005();
    BEGIN
      FILTERGROUP(2);
      SETFILTER("Date Filter",'..%1',"Posting Date");
      FILTERGROUP(0);
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ShortcutDimension1CodeOnAfterV@19029405();
    BEGIN
      CurrPage.CashAdvLines.PAGE.UpdateForm(TRUE);
    END;

    LOCAL PROCEDURE ShortcutDimension2CodeOnAfterV@19008725();
    BEGIN
      CurrPage.CashAdvLines.PAGE.UpdateForm(TRUE);
    END;

    LOCAL PROCEDURE OnAfterGetCurrRecord@19077479();
    BEGIN
      xRec := Rec;
      FILTERGROUP(2);
      SETFILTER("Date Filter",'..%1',"Posting Date");
      FILTERGROUP(0);
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Localization TH
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   30.08.2006   KKE   Cash Advance.
    }
    END.
  }
}

OBJECT Page 50087 Cash Advance Invoice Subform
{
  OBJECT-PROPERTIES
  {
    Date=01/30/21;
    Time=[ 7:12:39 PM];
    Modified=Yes;
    Version List=AVATHA4.40;
  }
  PROPERTIES
  {
    SourceTable=Table55052;
    DelayedInsert=Yes;
    PageType=ListPart;
    AutoSplitKey=Yes;
    OnAfterGetRecord=BEGIN
                       ShowShortcutDimCode(ShortcutDimCode);

                       IF NOT CashAdvHdr.GET("Document No.") THEN
                         CashAdvHdr.INIT;

                       //KKE : #002 +
                       GLSetup.GET;
                       IF NOT DimVal.GET(GLSetup."Shortcut Dimension 6 Code",ShortcutDimCode[6]) THEN
                         DimVal.INIT;
                       //KKE : #002 -
                       OnAfterGetCurrRecord;
                     END;

    OnNewRecord=BEGIN
                  Type := xRec.Type;
                  CLEAR(ShortcutDimCode);

                  DimVal.INIT;  //KKE : #002
                  OnAfterGetCurrRecord;
                END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1907935204;1 ;ActionGroup;
                      CaptionML=[ENU=&Line;
                                 THA=&บรรทัด] }
      { 1902878204;2 ;Action    ;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=[ENU=Dimensions;
                                 THA=มิติ];
                      Image=Dimensions;
                      OnAction=BEGIN
                                 //This functionality was copied from page #50086. Unsupported part was commented. Please check it.
                                 {CurrPage.CashAdvLines.PAGE.}
                                 _ShowDimensions;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                GroupType=Repeater }

    { 1000000001;2;Field  ;
                SourceExpr=Type }

    { 1000000003;2;Field  ;
                SourceExpr="No." }

    { 1000000060;2;Field  ;
                SourceExpr="Gen. Bus. Posting Group" }

    { 1000000062;2;Field  ;
                SourceExpr="Gen. Prod. Posting Group" }

    { 1000000009;2;Field  ;
                SourceExpr="VAT Bus. Posting Group";
                Visible=FALSE }

    { 1000000011;2;Field  ;
                SourceExpr="VAT Prod. Posting Group" }

    { 1000000013;2;Field  ;
                SourceExpr="WHT Business Posting Group" }

    { 1000000015;2;Field  ;
                SourceExpr="WHT Product Posting Group" }

    { 1000000042;2;Field  ;
                SourceExpr="External Document No." }

    { 1000000038;2;Field  ;
                SourceExpr="Tax Invoice No.";
                Visible=FALSE }

    { 1000000040;2;Field  ;
                SourceExpr="Tax Invoice Date" }

    { 1000000019;2;Field  ;
                SourceExpr=Description }

    { 1000000076;2;Field  ;
                SourceExpr="WHT Absorb Base" }

    { 1000000023;2;Field  ;
                SourceExpr="Amount Incl. VAT" }

    { 1000000078;2;Field  ;
                SourceExpr="VAT Base Amount";
                Visible=FALSE }

    { 1000000007;2;Field  ;
                SourceExpr="VAT Amount";
                Visible=FALSE }

    { 1000000021;2;Field  ;
                SourceExpr="VAT Difference";
                Visible=FALSE }

    { 1000000064;2;Field  ;
                CaptionML=ENU=Posting Date;
                SourceExpr=CashAdvHdr."Posting Date";
                Editable=FALSE }

    { 1000000017;2;Field  ;
                SourceExpr="Actual Vendor No." }

    { 1000000005;2;Field  ;
                SourceExpr="Real Customer/Vendor Name" }

    { 1000000070;2;Field  ;
                SourceExpr="Bank Account No." }

    { 1000000072;2;Field  ;
                SourceExpr="Balance Amount Settle" }

    { 1000000066;2;Field  ;
                SourceExpr="Bank Code" }

    { 1000000068;2;Field  ;
                SourceExpr="Bank Branch No." }

    { 1000000044;2;Field  ;
                SourceExpr="Shortcut Dimension 1 Code" }

    { 1000000046;2;Field  ;
                SourceExpr="Shortcut Dimension 2 Code" }

    { 1000000048;2;Field  ;
                SourceExpr=ShortcutDimCode[3];
                CaptionClass='1,2,3';
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(3,ShortcutDimCode[3]);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(3,ShortcutDimCode[3]);
                         END;
                          }

    { 1000000050;2;Field  ;
                SourceExpr=ShortcutDimCode[4];
                CaptionClass='1,2,4';
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(4,ShortcutDimCode[4]);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(4,ShortcutDimCode[4]);
                         END;
                          }

    { 1000000052;2;Field  ;
                SourceExpr=ShortcutDimCode[5];
                CaptionClass='1,2,5';
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(5,ShortcutDimCode[5]);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(5,ShortcutDimCode[5]);
                         END;
                          }

    { 1000000054;2;Field  ;
                SourceExpr=ShortcutDimCode[6];
                CaptionClass='1,2,6';
                OnValidate=BEGIN
                             ValidateShortcutDimCode(6,ShortcutDimCode[6]);
                             //KKE : #002 +
                             GLSetup.GET;
                             IF NOT DimVal.GET(GLSetup."Shortcut Dimension 6 Code",ShortcutDimCode[6]) THEN
                               DimVal.INIT;
                             //KKE : #002 -
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(6,ShortcutDimCode[6]);
                           //KKE : #002 +
                           GLSetup.GET;
                           IF NOT DimVal.GET(GLSetup."Shortcut Dimension 6 Code",ShortcutDimCode[6]) THEN
                             DimVal.INIT;
                           //KKE : #002 -
                         END;
                          }

    { 1000000074;2;Field  ;
                CaptionML=ENU=Column Name Description;
                SourceExpr=DimVal.Name;
                Editable=FALSE }

    { 1000000056;2;Field  ;
                SourceExpr=ShortcutDimCode[7];
                CaptionClass='1,2,7';
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(7,ShortcutDimCode[7]);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(7,ShortcutDimCode[7]);
                         END;
                          }

    { 1000000058;2;Field  ;
                SourceExpr=ShortcutDimCode[8];
                CaptionClass='1,2,8';
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(8,ShortcutDimCode[8]);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(8,ShortcutDimCode[8]);
                         END;
                          }

    { 1000000025;2;Field  ;
                SourceExpr="Skip WHT" }

    { 1000000027;2;Field  ;
                SourceExpr="WHT Certificate No." }

    { 1000000029;2;Field  ;
                SourceExpr="Certificate Printed" }

    { 1000000031;1;Group   }

    { 1000000037;2;Field  ;
                CaptionML=[ENU=Account Name;
                           THA=ชื่อบัญชี];
                SourceExpr=GLAcc.Name;
                Editable=FALSE }

    { 1000000032;2;Field  ;
                Name=Balance;
                CaptionML=[ENU=Balance;
                           THA=ดุล];
                SourceExpr=CalcBalanceAmt;
                AutoFormatType=1;
                Editable=FALSE }

    { 1000000034;2;Field  ;
                Name=TotalBalance;
                CaptionML=[ENU=Total Amount;
                           THA=รวมจำนวนเงิน];
                SourceExpr=CalcTotalAmount;
                AutoFormatType=1;
                Editable=FALSE }

  }
  CODE
  {
    VAR
      GLAcc@1000000000 : Record 15;
      CashAdvHdr@1000000002 : Record 55051;
      ShortcutDimCode@1000000001 : ARRAY [8] OF Code[20];
      GLSetup@1000000004 : Record 98;
      DimVal@1000000003 : Record 349;

    PROCEDURE _ShowDimensions@19020529();
    BEGIN
      Rec.ShowDimensions;
    END;

    PROCEDURE ShowDimensions@10();
    BEGIN
      Rec.ShowDimensions;
    END;

    PROCEDURE UpdateForm@12(SetSaveRecord@1000 : Boolean);
    BEGIN
      CurrPage.UPDATE(SetSaveRecord);
    END;

    PROCEDURE CalcTotalAmount@1000000000() : Decimal;
    VAR
      CashAdvLine@1000000000 : Record 55052;
    BEGIN
      CashAdvLine.RESET;
      CashAdvLine.SETRANGE("Document No.","Document No.");
      //PettyCashLine.SETFILTER("Line No.",'..%1',"Line No.");
      CashAdvLine.CALCSUMS("Amount (LCY) Incl. VAT","Balance Amount Settle");
      EXIT(CashAdvLine."Balance Amount Settle");
    END;

    PROCEDURE CalcBalanceAmt@1000000001() : Decimal;
    VAR
      CashAdvHdr@1000000001 : Record 55051;
      CashAdvLine@1000000000 : Record 55052;
    BEGIN
      IF NOT CashAdvHdr.GET("Document No.") THEN
        EXIT;
      CashAdvHdr.CALCFIELDS("Balance Amount Settle");
      CashAdvLine.RESET;
      CashAdvLine.SETRANGE("Document No.","Document No.");
      CashAdvLine.SETFILTER("Line No.",'..%1',"Line No.");
      IF NOT CashAdvLine.FIND('-') THEN
        CashAdvLine.SETRANGE("Line No.");
      CashAdvLine.CALCSUMS("Amount (LCY) Incl. VAT","Balance Amount Settle");
      EXIT(CashAdvHdr."Balance Amount Settle" - CashAdvLine."Balance Amount Settle");
    END;

    LOCAL PROCEDURE OnAfterGetCurrRecord@19077479();
    BEGIN
      xRec := Rec;
      IF NOT GLAcc.GET("No.") THEN
        GLAcc.INIT;
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Localization TH
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   30.08.2006   KKE   Cash Advance.
      Project: Burda
      002   08.11.2007   KKE   Show Description for Dim6.
    }
    END.
  }
}

OBJECT Page 50088 Cash Advance Invoices
{
  OBJECT-PROPERTIES
  {
    Date=08/14/07;
    Time=[ 6:00:00 PM];
    Version List=AVATHA4.40;
  }
  PROPERTIES
  {
    Editable=No;
    SourceTable=Table55051;
    PageType=Card;
    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1000000016;1 ;ActionGroup;
                      CaptionML=[ENU=&Invoice;
                                 THA=&ใบแจ้งหนี้] }
      { 1000000017;2 ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=[ENU=Card;
                                 THA=บัตร];
                      RunObject=Page 50086;
                      RunPageLink=No.=FIELD(No.);
                      Image=EditLines }
      { 1000000018;2 ;Action    ;
                      ShortCutKey=F7;
                      CaptionML=[ENU=Statistics;
                                 THA=สถิติ];
                      RunObject=Page 50093;
                      RunPageLink=No.=FIELD(No.);
                      Promoted=Yes;
                      Image=Statistics;
                      PromotedCategory=Process }
      { 1000000019;2 ;Action    ;
                      CaptionML=[ENU=Co&mments;
                                 THA=ข้อ&คิดเห็น];
                      RunObject=Page 50089;
                      RunPageLink=Document Type=CONST(Invoice),
                                  No.=FIELD(No.);
                      Image=ViewComments }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                GroupType=Repeater }

    { 1000000001;2;Field  ;
                SourceExpr="No." }

    { 1000000003;2;Field  ;
                SourceExpr="Cash Advance Vendor No." }

    { 1000000005;2;Field  ;
                SourceExpr=Name }

    { 1000000009;2;Field  ;
                SourceExpr="Posting Date" }

    { 1000000011;2;Field  ;
                SourceExpr="Balance Amount Settle" }

  }
  CODE
  {

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Localization TH
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   30.08.2006   KKE   Cash Advance.
    }
    END.
  }
}

OBJECT Page 50089 Cash Advance Comment Sheet
{
  OBJECT-PROPERTIES
  {
    Date=02/22/07;
    Time=[ 6:00:00 PM];
    Version List=AVATHA4.40;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Comment Sheet;
               THA=ใบแสดงข้อคิดเห็น];
    MultipleNewLines=Yes;
    SourceTable=Table55053;
    DelayedInsert=Yes;
    DataCaptionFields=Document Type,No.;
    PageType=Card;
    AutoSplitKey=Yes;
    OnNewRecord=BEGIN
                  SetUpNewLine;
                END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                SourceExpr=Date }

    { 4   ;2   ;Field     ;
                SourceExpr=Comment }

    { 6   ;2   ;Field     ;
                SourceExpr=Code;
                Visible=FALSE }

  }
  CODE
  {

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Localization TH
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   30.08.2006   KKE   Cash Advance.
    }
    END.
  }
}

OBJECT Page 50090 Posted Cash Advance Invoice
{
  OBJECT-PROPERTIES
  {
    Date=08/30/07;
    Time=[ 5:36:31 PM];
    Version List=AVATHA4.40;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Posted Cash Advance Invoice;
               THA=ใบแจ้งหนี้เงินทดรองจ่ายที่ลงรายการบัญชีแล้ว];
    InsertAllowed=No;
    SourceTable=Table55054;
    PageType=Card;
    OnOpenPage=BEGIN
                 SETRANGE("No.");
               END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1000000016;1 ;ActionGroup;
                      CaptionML=[ENU=&Invoice;
                                 THA=&ใบแจ้งหนี้] }
      { 1000000045;2 ;Action    ;
                      ShortCutKey=F7;
                      CaptionML=[ENU=Statistics;
                                 THA=สถิติ];
                      RunObject=Page 50094;
                      RunPageLink=No.=FIELD(No.);
                      Promoted=Yes;
                      Image=Statistics;
                      PromotedCategory=Process }
      { 1000000046;2 ;Action    ;
                      CaptionML=[ENU=Co&mments;
                                 THA=ข้อ&คิดเห็น];
                      RunObject=Page 50089;
                      RunPageLink=Document Type=CONST(Posted Invoice),
                                  No.=FIELD(No.);
                      Image=ViewComments }
      { 1000000047;2 ;Action    ;
                      CaptionML=[ENU=Dimensions;
                                 THA=มิติ];
                      RunObject=Page 547;
                      RunPageLink=Table ID=CONST(55054),
                                  Document No.=FIELD(No.),
                                  Line No.=CONST(0);
                      Image=Dimensions }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1000000015;1 ;Action    ;
                      CaptionML=[ENU=&Navigate;
                                 THA=&นำทางข้อมูล];
                      Promoted=Yes;
                      Image=Navigate;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 Navigate;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                CaptionML=[ENU=General;
                           THA=ทั่วไป] }

    { 1000000001;2;Field  ;
                SourceExpr="No.";
                Editable=FALSE }

    { 1000000003;2;Field  ;
                SourceExpr="Cash Advance Vendor No.";
                Editable=FALSE }

    { 1000000005;2;Field  ;
                SourceExpr=Name;
                Editable=FALSE }

    { 1000000024;2;Field  ;
                SourceExpr="Name 2";
                Editable=FALSE }

    { 1000000007;2;Field  ;
                SourceExpr="Invoice Description";
                Editable=FALSE }

    { 1000000028;2;Field  ;
                SourceExpr="Printing WHT Slip (Doc:WHT)";
                Editable=FALSE }

    { 1000000009;2;Field  ;
                SourceExpr="Document Date";
                Editable=FALSE }

    { 1000000011;2;Field  ;
                SourceExpr="Posting Date";
                Editable=FALSE }

    { 1000000037;2;Field  ;
                SourceExpr="Balance Amount Settle";
                Editable=FALSE }

    { 1000000034;1;Part   ;
                Name=CashAdvLines;
                SubPageLink=Document No.=FIELD(No.);
                PagePartID=Page50091 }

    { 1905885101;1;Group  ;
                CaptionML=[ENU=Invoicing;
                           THA=การออกใบแจ้งหนี้] }

    { 1000000017;2;Field  ;
                SourceExpr="Shortcut Dimension 1 Code";
                Editable=FALSE }

    { 1000000019;2;Field  ;
                SourceExpr="Shortcut Dimension 2 Code";
                Editable=FALSE }

    { 1000000032;2;Field  ;
                SourceExpr="Location Code";
                Editable=FALSE }

    { 1000000026;2;Field  ;
                SourceExpr="VAT Bus. Posting Group";
                Editable=FALSE }

    { 1907468901;1;Group  ;
                CaptionML=[ENU=Foreign Trade;
                           THA=การค้าต่างประเทศ] }

    { 1000000021;2;Field  ;
                SourceExpr="Currency Code";
                Editable=FALSE;
                OnAssistEdit=BEGIN
                               ChangeExchangeRate.SetParameter("Currency Code","Currency Factor","Posting Date");
                               IF ChangeExchangeRate.RUNMODAL = ACTION::OK THEN BEGIN
                                 VALIDATE("Currency Factor",ChangeExchangeRate.GetParameter);
                                 CurrPage.UPDATE;
                               END;
                               CLEAR(ChangeExchangeRate);
                             END;
                              }

  }
  CODE
  {
    VAR
      ChangeExchangeRate@1000000000 : Page 511;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Localization TH
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   30.08.2006   KKE   Cash Advance.
    }
    END.
  }
}

OBJECT Page 50091 Posted Cash Advance Inv. Subf
{
  OBJECT-PROPERTIES
  {
    Date=01/30/21;
    Time=[ 7:13:00 PM];
    Modified=Yes;
    Version List=AVATHA4.40;
  }
  PROPERTIES
  {
    Editable=No;
    SourceTable=Table55055;
    DelayedInsert=Yes;
    PageType=ListPart;
    AutoSplitKey=Yes;
    OnAfterGetRecord=BEGIN
                       IF NOT CashAdvInvHdr.GET("Document No.") THEN
                         CashAdvInvHdr.INIT;
                     END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1907935204;1 ;ActionGroup;
                      CaptionML=[ENU=&Line;
                                 THA=&บรรทัด] }
      { 1902878204;2 ;Action    ;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=[ENU=Dimensions;
                                 THA=มิติ];
                      Image=Dimensions;
                      OnAction=BEGIN
                                 //This functionality was copied from page #50090. Unsupported part was commented. Please check it.
                                 {CurrPage.CashAdvLines.PAGE.}
                                 _ShowDimensions;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                GroupType=Repeater }

    { 1000000001;2;Field  ;
                SourceExpr=Type }

    { 1000000003;2;Field  ;
                SourceExpr="No." }

    { 1000000009;2;Field  ;
                SourceExpr="VAT Bus. Posting Group";
                Visible=FALSE }

    { 1000000011;2;Field  ;
                SourceExpr="VAT Prod. Posting Group" }

    { 1000000013;2;Field  ;
                SourceExpr="WHT Business Posting Group";
                Visible=FALSE }

    { 1000000015;2;Field  ;
                SourceExpr="WHT Product Posting Group" }

    { 1000000031;2;Field  ;
                SourceExpr="External Document No." }

    { 1000000033;2;Field  ;
                SourceExpr="Tax Invoice No.";
                Visible=FALSE }

    { 1000000035;2;Field  ;
                SourceExpr="Tax Invoice Date" }

    { 1000000005;2;Field  ;
                SourceExpr="Real Customer/Vendor Name";
                Visible=FALSE }

    { 1000000019;2;Field  ;
                SourceExpr=Description }

    { 1000000049;2;Field  ;
                SourceExpr="WHT Absorb Base" }

    { 1000000023;2;Field  ;
                SourceExpr="Amount Incl. VAT" }

    { 1000000007;2;Field  ;
                SourceExpr="VAT Amount";
                Visible=FALSE }

    { 1000000021;2;Field  ;
                SourceExpr="VAT Difference";
                Visible=FALSE }

    { 1000000047;2;Field  ;
                CaptionML=ENU=Posting Date;
                SourceExpr=CashAdvInvHdr."Posting Date";
                Editable=FALSE }

    { 1000000017;2;Field  ;
                SourceExpr="Actual Vendor No." }

    { 1000000037;2;Field  ;
                SourceExpr="Real Customer/Vendor Name" }

    { 1000000045;2;Field  ;
                SourceExpr="Bank Account No." }

    { 1000000039;2;Field  ;
                SourceExpr="Balance Amount Settle" }

    { 1000000041;2;Field  ;
                SourceExpr="Bank Code" }

    { 1000000043;2;Field  ;
                SourceExpr="Bank Branch No." }

    { 1000000025;2;Field  ;
                SourceExpr="Skip WHT" }

    { 1000000027;2;Field  ;
                SourceExpr="WHT Certificate No." }

    { 1000000029;2;Field  ;
                SourceExpr="Certificate Printed" }

  }
  CODE
  {
    VAR
      CashAdvInvHdr@1000000000 : Record 55054;

    PROCEDURE _ShowDimensions@19020529();
    BEGIN
      Rec.ShowDimensions;
    END;

    PROCEDURE ShowDimensions@10();
    BEGIN
      Rec.ShowDimensions;
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Localization TH
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   30.08.2006   KKE   Cash Advance.
    }
    END.
  }
}

OBJECT Page 50092 Posted Cash Advance Invoices
{
  OBJECT-PROPERTIES
  {
    Date=08/14/07;
    Time=[ 6:00:00 PM];
    Version List=AVATHA4.40;
  }
  PROPERTIES
  {
    Editable=No;
    SourceTable=Table55054;
    PageType=Card;
    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1000000016;1 ;ActionGroup;
                      CaptionML=[ENU=&Invoice;
                                 THA=&ใบแจ้งหนี้] }
      { 1000000018;2 ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=[ENU=Card;
                                 THA=บัตร];
                      RunObject=Page 50090;
                      RunPageLink=No.=FIELD(No.);
                      Image=EditLines }
      { 1000000019;2 ;Action    ;
                      ShortCutKey=F7;
                      CaptionML=[ENU=Statistics;
                                 THA=สถิติ];
                      RunObject=Page 50094;
                      RunPageLink=No.=FIELD(No.);
                      Promoted=Yes;
                      Image=Statistics;
                      PromotedCategory=Process }
      { 1000000020;2 ;Action    ;
                      CaptionML=[ENU=Co&mments;
                                 THA=ข้อ&คิดเห็น];
                      RunObject=Page 50089;
                      RunPageLink=Document Type=CONST(Posted Invoice),
                                  No.=FIELD(No.);
                      Image=ViewComments }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1000000017;1 ;Action    ;
                      CaptionML=[ENU=&Navigate;
                                 THA=&นำทางข้อมูล];
                      Promoted=Yes;
                      Image=Navigate;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 Navigate;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                GroupType=Repeater }

    { 1000000001;2;Field  ;
                SourceExpr="No." }

    { 1000000003;2;Field  ;
                SourceExpr="Cash Advance Vendor No." }

    { 1000000005;2;Field  ;
                SourceExpr=Name }

    { 1000000009;2;Field  ;
                SourceExpr="Posting Date" }

  }
  CODE
  {

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Localization TH
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   30.08.2006   KKE   Cash Advance.
    }
    END.
  }
}

OBJECT Page 50093 Cash Advance Statistics
{
  OBJECT-PROPERTIES
  {
    Date=08/14/07;
    Time=[ 6:00:00 PM];
    Version List=AVATHA4.40;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=ENU=Cash Advance Invoice Statistics;
    SourceTable=Table55051;
    PageType=Card;
    OnAfterGetRecord=BEGIN
                       CLEARALL;

                       IF "Currency Code" = '' THEN
                         Currency.InitRoundingPrecision
                       ELSE
                         Currency.GET("Currency Code");

                       CashAdvLine.SETRANGE("Document No.","No.");

                       IF CashAdvLine.FIND('-') THEN
                         REPEAT
                           VendAmount := VendAmount + CashAdvLine."VAT Base Amount";
                           AmountInclVAT := AmountInclVAT + CashAdvLine."Amount Incl. VAT";
                           AvgVATAmount := AvgVATAmount + CashAdvLine."Avg. VAT Amount";  //KKE : #002
                           IF NOT CashAdvLine."Skip WHT" THEN
                             IF WHTPostingSetup.GET(CashAdvLine."WHT Business Posting Group",CashAdvLine."WHT Product Posting Group") THEN
                               IF WHTPostingSetup."WHT %" <> 0 THEN
                                 WHTAmount := WHTAmount + CashAdvLine."VAT Base Amount (LCY)" * WHTPostingSetup."WHT %" / 100;
                         UNTIL CashAdvLine.NEXT = 0;
                       VATAmount := AmountInclVAT - VendAmount;
                       InvDiscAmount := ROUND(InvDiscAmount,Currency."Amount Rounding Precision");
                       WHTAmount := ROUND(WHTAmount,Currency."Amount Rounding Precision");

                       IF VATPercentage <= 0 THEN
                         VATAmountText := Text000
                       ELSE
                         VATAmountText := STRSUBSTNO(Text001,VATPercentage);

                       IF "Currency Code" = '' THEN
                         AmountLCY := VendAmount
                       ELSE
                         AmountLCY :=
                           CurrExchRate.ExchangeAmtFCYToLCY(
                             WORKDATE,"Currency Code",VendAmount,"Currency Factor");

                       IF NOT Vend.GET("Cash Advance Vendor No.") THEN
                         CLEAR(Vend);
                       Vend.CALCFIELDS("Balance (LCY)");

                       //PurchInvLine.CalcVATAmountLines(Rec,TempVATAmountLine);
                       //CurrForm.SubForm.FORM.SetTempVATAmountLine(TempVATAmountLine);
                       //CurrForm.SubForm.FORM.InitGlobals("Currency Code",FALSE,FALSE,FALSE,FALSE,0,0);
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 24  ;1   ;Group     ;
                CaptionML=[ENU=General;
                           THA=ทั่วไป] }

    { 2   ;2   ;Field     ;
                CaptionML=[ENU=Amount;
                           THA=จำนวน];
                SourceExpr=VendAmount + InvDiscAmount;
                AutoFormatType=1;
                AutoFormatExpr="Currency Code" }

    { 16  ;2   ;Field     ;
                CaptionML=[ENU=VAT Amount;
                           THA=จำนวน VAT];
                SourceExpr=VATAmount;
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                CaptionClass=FORMAT (VATAmountText) }

    { 20  ;2   ;Field     ;
                CaptionML=[ENU=Total Incl. VAT;
                           THA=ยอดรวมที่รวม VAT];
                SourceExpr=AmountInclVAT;
                AutoFormatType=1;
                AutoFormatExpr="Currency Code" }

    { 26  ;2   ;Field     ;
                CaptionML=[ENU=Amount (LCY);
                           THA=ยอดเงิน (LCY)];
                SourceExpr=AmountLCY;
                AutoFormatType=1 }

    { 1500000;2;Field     ;
                CaptionML=[ENU=WHT Amount (LCY);
                           THA=จำนวน WHT (LCY)];
                SourceExpr=WHTAmount }

    { 1000000000;2;Field  ;
                CaptionML=[ENU=VAT Amount;
                           THA=จำนวน VAT];
                SourceExpr=AvgVATAmount;
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                CaptionClass=FORMAT ('Avg. VAT Amount') }

    { 1901061301;1;Group  ;
                CaptionML=[ENU=Vendor;
                           THA=ผู้ขาย] }

    { 21  ;2   ;Field     ;
                CaptionML=[ENU=Balance (LCY);
                           THA=ดุล (LCY)];
                SourceExpr=Vend."Balance (LCY)";
                AutoFormatType=1 }

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=VAT Amount;THA=จำนวน VAT';
      Text001@1001 : TextConst 'ENU=%1% VAT;THA=%1% VAT';
      CurrExchRate@1002 : Record 330;
      CashAdvLine@1003 : Record 55052;
      Vend@1004 : Record 23;
      WHTPostingSetup@1000000001 : Record 28043;
      TempVATAmountLine@1005 : TEMPORARY Record 290;
      Currency@1018 : Record 4;
      VendAmount@1006 : Decimal;
      AmountInclVAT@1007 : Decimal;
      InvDiscAmount@1008 : Decimal;
      AmountLCY@1009 : Decimal;
      LineQty@1010 : Decimal;
      TotalNetWeight@1011 : Decimal;
      TotalGrossWeight@1012 : Decimal;
      TotalVolume@1013 : Decimal;
      TotalParcels@1014 : Decimal;
      VATAmount@1015 : Decimal;
      VATPercentage@1016 : Decimal;
      VATAmountText@1017 : Text[30];
      WHTAmount@1000000000 : Decimal;
      AvgVATAmount@1000000002 : Decimal;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Localization TH
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   30.08.2006   KKE   Cash Advance.
      Burda
      002   14.08.2007   KKE   Average VAT.
    }
    END.
  }
}

OBJECT Page 50094 Posted Cash Advance Statistics
{
  OBJECT-PROPERTIES
  {
    Date=08/14/07;
    Time=[ 6:00:00 PM];
    Version List=AVATHA4.40;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=ENU=Posted Cash Advance Statistics;
    SourceTable=Table55054;
    PageType=Card;
    OnAfterGetRecord=BEGIN
                       CLEARALL;

                       IF "Currency Code" = '' THEN
                         Currency.InitRoundingPrecision
                       ELSE
                         Currency.GET("Currency Code");

                       CashAdvLine.SETRANGE("Document No.","No.");

                       IF CashAdvLine.FIND('-') THEN
                         REPEAT
                           VendAmount := VendAmount + CashAdvLine."VAT Base Amount";
                           AmountInclVAT := AmountInclVAT + CashAdvLine."Amount Incl. VAT";
                           AvgVATAmount := AvgVATAmount + CashAdvLine."Avg. VAT Amount";  //KKE : #002
                           IF WHTPostingSetup.GET(CashAdvLine."WHT Business Posting Group",CashAdvLine."WHT Product Posting Group") THEN
                             IF WHTPostingSetup."WHT %" <> 0 THEN
                               WHTAmount := WHTAmount +
                                 CashAdvLine."VAT Base Amount (LCY)" * WHTPostingSetup."WHT %" / 100;
                         UNTIL CashAdvLine.NEXT = 0;
                       VATAmount := AmountInclVAT - VendAmount;
                       InvDiscAmount := ROUND(InvDiscAmount,Currency."Amount Rounding Precision");
                       WHTAmount := ROUND(WHTAmount,Currency."Amount Rounding Precision");

                       IF VATPercentage <= 0 THEN
                         VATAmountText := Text000
                       ELSE
                         VATAmountText := STRSUBSTNO(Text001,VATPercentage);

                       IF "Currency Code" = '' THEN
                         AmountLCY := VendAmount
                       ELSE
                         AmountLCY :=
                           CurrExchRate.ExchangeAmtFCYToLCY(
                             WORKDATE,"Currency Code",VendAmount,"Currency Factor");

                       IF NOT Vend.GET("Cash Advance Vendor No.") THEN
                         CLEAR(Vend);
                       Vend.CALCFIELDS("Balance (LCY)");

                       //PurchInvLine.CalcVATAmountLines(Rec,TempVATAmountLine);
                       //CurrForm.SubForm.FORM.SetTempVATAmountLine(TempVATAmountLine);
                       //CurrForm.SubForm.FORM.InitGlobals("Currency Code",FALSE,FALSE,FALSE,FALSE,0,0);
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 24  ;1   ;Group     ;
                CaptionML=[ENU=General;
                           THA=ทั่วไป] }

    { 2   ;2   ;Field     ;
                CaptionML=[ENU=Amount;
                           THA=จำนวน];
                SourceExpr=VendAmount + InvDiscAmount;
                AutoFormatType=1;
                AutoFormatExpr="Currency Code" }

    { 16  ;2   ;Field     ;
                CaptionML=[ENU=VAT Amount;
                           THA=จำนวน VAT];
                SourceExpr=VATAmount;
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                CaptionClass=FORMAT (VATAmountText) }

    { 20  ;2   ;Field     ;
                CaptionML=[ENU=Total Incl. VAT;
                           THA=ยอดรวมที่รวม VAT];
                SourceExpr=AmountInclVAT;
                AutoFormatType=1;
                AutoFormatExpr="Currency Code" }

    { 26  ;2   ;Field     ;
                CaptionML=[ENU=Amount (LCY);
                           THA=ยอดเงิน (LCY)];
                SourceExpr=AmountLCY;
                AutoFormatType=1 }

    { 1500000;2;Field     ;
                CaptionML=[ENU=WHT Amount (LCY);
                           THA=จำนวน WHT (LCY)];
                SourceExpr=WHTAmount }

    { 1000000000;2;Field  ;
                CaptionML=[ENU=VAT Amount;
                           THA=จำนวน VAT];
                SourceExpr=AvgVATAmount;
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                CaptionClass=FORMAT ('Avg. VAT Amount') }

    { 1901061301;1;Group  ;
                CaptionML=[ENU=Vendor;
                           THA=ผู้ขาย] }

    { 21  ;2   ;Field     ;
                CaptionML=[ENU=Balance (LCY);
                           THA=ดุล (LCY)];
                SourceExpr=Vend."Balance (LCY)";
                AutoFormatType=1 }

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=VAT Amount;THA=จำนวน VAT';
      Text001@1001 : TextConst 'ENU=%1% VAT;THA=%1% VAT';
      CurrExchRate@1002 : Record 330;
      CashAdvLine@1003 : Record 55055;
      Vend@1004 : Record 23;
      WHTPostingSetup@1000000001 : Record 28043;
      TempVATAmountLine@1005 : TEMPORARY Record 290;
      Currency@1018 : Record 4;
      VendAmount@1006 : Decimal;
      AmountInclVAT@1007 : Decimal;
      InvDiscAmount@1008 : Decimal;
      AmountLCY@1009 : Decimal;
      LineQty@1010 : Decimal;
      TotalNetWeight@1011 : Decimal;
      TotalGrossWeight@1012 : Decimal;
      TotalVolume@1013 : Decimal;
      TotalParcels@1014 : Decimal;
      VATAmount@1015 : Decimal;
      VATPercentage@1016 : Decimal;
      VATAmountText@1017 : Text[30];
      WHTAmount@1000000000 : Decimal;
      AvgVATAmount@1000000002 : Decimal;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Localization TH
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   30.08.2006   KKE   Cash Advance.
      Burda
      002   14.08.2007   KKE   Average VAT.
    }
    END.
  }
}

OBJECT Page 50095 Settle Cash Advance
{
  OBJECT-PROPERTIES
  {
    Date=12/12/11;
    Time=[ 2:46:25 PM];
    Version List=AVATHA4.40;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Settle Cash Advance;
               THA=เบิกชดเชยเงินทดรองจ่าย];
    SourceTable=Table55056;
    PageType=Card;
    OnOpenPage=BEGIN
                 FILTERGROUP(2);
                 SETFILTER("Date Filter",'..%1',"Posting Date");
                 FILTERGROUP(0);
                 SETRANGE("No.");
               END;

    OnAfterGetRecord=BEGIN
                       OnAfterGetCurrRecord;
                     END;

    OnNewRecord=BEGIN
                  OnAfterGetCurrRecord;
                END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1000000029;1 ;ActionGroup;
                      CaptionML=[ENU=&Settle;
                                 THA=เบิกชดเชย] }
      { 1000000037;2 ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=[ENU=Card;
                                 THA=บัตร];
                      RunObject=Page 26;
                      RunPageLink=No.=FIELD(Cash Advance Vendor No.);
                      Image=EditLines }
      { 1000000038;2 ;Action    ;
                      CaptionML=[ENU=Co&mments;
                                 THA=ข้อ&คิดเห็น];
                      RunObject=Page 50074;
                      RunPageLink=Document Type=CONST(Settle),
                                  No.=FIELD(No.);
                      Image=ViewComments }
      { 1000000042;1 ;ActionGroup;
                      CaptionML=[ENU=&Payments;
                                 THA=&การชำระเงิน] }
      { 1000000044;2 ;Action    ;
                      CaptionML=[ENU=P&review Check;
                                 THA=ตรวจสอบ&มุมมองก่อนพิมพ์];
                      RunObject=Page 50098;
                      RunPageLink=No.=FIELD(No.) }
      { 1000000045;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Print Check;
                                 THA=พิมพ์เช็ค];
                      Image=PrintCheck;
                      OnAction=VAR
                                 SettleCashAdvHdr@1000000001 : Record 55056;
                                 CheckCashAdv@1000000002 : Report 50098;
                               BEGIN
                                 SettleCashAdvHdr.RESET;
                                 SettleCashAdvHdr.SETRANGE("No.","No.");
                                 CheckCashAdv.SETTABLEVIEW(SettleCashAdvHdr);
                                 CheckCashAdv.RUNMODAL;
                                 CLEAR(CheckCashAdv);
                               END;
                                }
      { 1000000046;2 ;Action    ;
                      CaptionML=[ENU=Void Check;
                                 THA=โมฆะเช็ค];
                      Image=VoidCheck;
                      OnAction=BEGIN
                                 TESTFIELD("Bank Payment Type","Bank Payment Type"::"Computer Check");
                                 TESTFIELD("Cheque Printed",TRUE);
                                 IF CONFIRM(Text000,FALSE,"Cheque No.") THEN
                                   CheckManagement.VoidCheckCashAdv(Rec);
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1000000028;1 ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 THA=ฟั&งก์ชัน] }
      { 1000000040;2 ;Action    ;
                      CaptionML=[ENU=Get Vendor Ledger Entries;
                                 THA=รับรายการแยกประเภทบัญชีผู้ขาย];
                      OnAction=BEGIN
                                 CODEUNIT.RUN(CODEUNIT::"Cash Adv. - Get Vend. Ledge",Rec);
                               END;
                                }
      { 1000000041;2 ;Separator  }
      { 1000000033;2 ;Action    ;
                      ShortCutKey=Ctrl+F9;
                      CaptionML=[ENU=Re&lease;
                                 THA=นำ&ออกใช้];
                      Image=ReleaseDoc;
                      OnAction=BEGIN
                                 Rec.Release;
                               END;
                                }
      { 1000000034;2 ;Action    ;
                      CaptionML=[ENU=Re&open;
                                 THA=เปิด&ใหม่];
                      Image=ReOpen;
                      OnAction=VAR
                                 ReleasePurchDoc@1001 : Codeunit 415;
                               BEGIN
                                 Rec.Reopen;
                               END;
                                }
      { 1000000027;1 ;ActionGroup;
                      CaptionML=[ENU=P&osting;
                                 THA=การ&ลงรายการบัญชี] }
      { 1000000030;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Test Report;
                                 THA=รายงานการทดสอบ];
                      Image=TestReport;
                      OnAction=VAR
                                 SettleCashAdvHdr@1000000001 : Record 55056;
                               BEGIN
                                 SettleCashAdvHdr.RESET;
                                 SettleCashAdvHdr.SETRANGE("No.","No.");
                                 REPORT.RUN(REPORT::"Settle Cash Advance - Test",TRUE,FALSE,SettleCashAdvHdr);
                               END;
                                }
      { 1000000031;2 ;Action    ;
                      ShortCutKey=F9;
                      CaptionML=[ENU=P&ost;
                                 THA=ลง&รายการบัญชี];
                      RunObject=Codeunit 55051;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Post;
                      PromotedCategory=Process }
      { 1000000032;2 ;Action    ;
                      ShortCutKey=Shift+F9;
                      CaptionML=[ENU=Post and &Print;
                                 THA=ลงรายการบัญชีและ&พิมพ์];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PostPrint;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 SettleCashAdvPost@1000000001 : Codeunit 55051;
                               BEGIN
                                 SettleCashAdvPost.CheckPostAndPrint(TRUE);
                                 SettleCashAdvPost.RUN(Rec);
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 1000000036;1 ;ActionGroup;
                      CaptionML=[ENU=P&rint;
                                 THA=&พิมพ์] }
      { 1000000039;2 ;Action    ;
                      CaptionML=ENU=Payment Voucher;
                      OnAction=VAR
                                 SettleCashAdvHdr@1000000001 : Record 55056;
                               BEGIN
                                 SettleCashAdvHdr.RESET;
                                 SettleCashAdvHdr.SETRANGE("No.","No.");
                                 REPORT.RUN(REPORT::"Payment Voucher - Cash Advance",TRUE,FALSE,SettleCashAdvHdr);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                CaptionML=[ENU=General;
                           THA=ทั่วไป] }

    { 1000000001;2;Field  ;
                SourceExpr="No.";
                OnAssistEdit=BEGIN
                               IF AssistEdit(xRec) THEN
                                 CurrPage.UPDATE;
                             END;
                              }

    { 1000000003;2;Field  ;
                SourceExpr="Cash Advance Vendor No.";
                OnValidate=BEGIN
                             CashAdvanceVendorNoOnAfterVali;
                           END;
                            }

    { 1000000005;2;Field  ;
                SourceExpr="Cash Advance Name" }

    { 1000000025;2;Field  ;
                SourceExpr="Payment Invoice Description" }

    { 1000000017;2;Field  ;
                SourceExpr="Settle Account Type" }

    { 1000000019;2;Field  ;
                SourceExpr="Settle Account No." }

    { 1000000013;2;Field  ;
                SourceExpr="Posting Date" }

    { 1000000015;2;Field  ;
                SourceExpr="Document Date" }

    { 1000000011;2;Field  ;
                CaptionML=[ENU=Balance Settle;
                           THA=เงินดุลเบิกชดเชย];
                SourceExpr=BalanceSettle;
                Editable=FALSE }

    { 1000000021;2;Field  ;
                SourceExpr=Status }

    { 1000000024;1;Part   ;
                SubPageLink=Settle Cash Advance No.=FIELD(No.);
                PagePartID=Page50096 }

    { 1900236101;1;Group  ;
                CaptionML=[ENU=Cheque;
                           THA=เช็ค] }

    { 1000000043;2;Field  ;
                SourceExpr="Bank Payment Type" }

    { 1000000052;2;Field  ;
                SourceExpr="Paid to Vendor Name" }

    { 1000000048;2;Field  ;
                SourceExpr="Cheque Printed" }

    { 1000000050;2;Field  ;
                SourceExpr="Cheque No." }

    { 1000000009;2;Field  ;
                SourceExpr="Cheque Date" }

  }
  CODE
  {
    VAR
      CheckManagement@1000000001 : Codeunit 367;
      BalanceSettle@1000000000 : Decimal;
      Text000@1000000002 : TextConst 'ENU=Void Check %1?;THA=โมฆะเช็ค %1 หรือ?';

    LOCAL PROCEDURE CashAdvanceVendorNoOnAfterVali@19020242();
    BEGIN
      IF ("Cash Advance Vendor No." <> xRec."Cash Advance Vendor No.") AND
         ("Cash Advance Vendor No." <> '')
      THEN BEGIN
        FILTERGROUP(2);
        SETFILTER("Date Filter",'..%1',"Posting Date");
        FILTERGROUP(0);
      END ELSE
        SETRANGE("Date Filter");
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE OnAfterGetCurrRecord@19077479();
    BEGIN
      xRec := Rec;
      FILTERGROUP(2);
      SETFILTER("Date Filter",'..%1',"Posting Date");
      FILTERGROUP(0);
      CALCFIELDS("Balance Settle","Balance Amount");
      BalanceSettle := "Balance Settle";
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Localization TH
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   30.08.2006   KKE   Cash Advance.
    }
    END.
  }
}

OBJECT Page 50096 Settle Cash Advance Subform
{
  OBJECT-PROPERTIES
  {
    Date=01/30/21;
    Time=[ 7:13:23 PM];
    Modified=Yes;
    Version List=AVATHA4.40;
  }
  PROPERTIES
  {
    SourceTable=Table55057;
    DelayedInsert=Yes;
    PageType=ListPart;
    AutoSplitKey=Yes;
    OnNewRecord=BEGIN
                  IF SettleCashAdvHdr.GET("Settle Cash Advance No.") THEN
                    "Cash Advance Vendor No." := SettleCashAdvHdr."Cash Advance Vendor No.";
                END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                GroupType=Repeater }

    { 1000000001;2;Field  ;
                SourceExpr="Cash Advance Vendor No." }

    { 1000000003;2;Field  ;
                SourceExpr="Entry No." }

    { 1000000005;2;Field  ;
                SourceExpr="Posting Date" }

    { 1000000007;2;Field  ;
                SourceExpr="Document Type" }

    { 1000000009;2;Field  ;
                SourceExpr="Document No." }

    { 1000000011;2;Field  ;
                SourceExpr=Description }

    { 1000000013;2;Field  ;
                SourceExpr="Currency Code";
                Visible=FALSE }

    { 1000000015;2;Field  ;
                SourceExpr="Amount Incl. VAT" }

    { 1000000017;2;Field  ;
                SourceExpr="Amount (LCY) Incl. VAT" }

    { 1000000019;2;Field  ;
                SourceExpr="WHT Amount (LCY)" }

  }
  CODE
  {
    VAR
      SettleCashAdvHdr@1000000000 : Record 55056;

    PROCEDURE CalcTotalAmount@1000000000() : Decimal;
    VAR
      SettleCashAdvLine@1000000000 : Record 55057;
    BEGIN
      SettleCashAdvLine.RESET;
      SettleCashAdvLine.SETRANGE("Settle Cash Advance No.","Settle Cash Advance No.");
      //CashAdvLine.SETFILTER("Line No.",'..%1',"Line No.");
      SettleCashAdvLine.CALCSUMS("Amount (LCY) Incl. VAT","WHT Amount (LCY)");
      EXIT(SettleCashAdvLine."Amount (LCY) Incl. VAT" + SettleCashAdvLine."WHT Amount (LCY)");
    END;

    PROCEDURE CalcBalanceAmt@1000000001() : Decimal;
    VAR
      SettleCashAdvHdr@1000000001 : Record 55056;
      SettleCashAdvLine@1000000000 : Record 55057;
    BEGIN
      IF NOT SettleCashAdvHdr.GET("Settle Cash Advance No.") THEN
       EXIT;
      SettleCashAdvHdr.CALCFIELDS("Balance Amount");
      SettleCashAdvLine.RESET;
      SettleCashAdvLine.SETRANGE("Settle Cash Advance No.","Settle Cash Advance No.");
      SettleCashAdvLine.SETFILTER("Line No.",'..%1',"Line No.");
      IF NOT SettleCashAdvLine.FIND('-') THEN
        SettleCashAdvLine.SETRANGE("Line No.");
      SettleCashAdvLine.CALCSUMS("Amount (LCY) Incl. VAT","WHT Amount (LCY)");
      EXIT(SettleCashAdvHdr."Balance Amount" + SettleCashAdvLine."Amount (LCY) Incl. VAT");
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Localization TH
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   30.08.2006   KKE   Cash Advance.
    }
    END.
  }
}

OBJECT Page 50097 Settle Cash Advance List
{
  OBJECT-PROPERTIES
  {
    Date=08/14/07;
    Time=[ 6:00:00 PM];
    Version List=AVATHA4.40;
  }
  PROPERTIES
  {
    Editable=No;
    SourceTable=Table55056;
    PageType=Card;
    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1000000024;1 ;ActionGroup;
                      CaptionML=ENU=&Settle }
      { 1000000025;2 ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=[ENU=Card;
                                 THA=บัตร];
                      RunObject=Page 50095;
                      RunPageLink=No.=FIELD(No.);
                      Image=EditLines }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                GroupType=Repeater }

    { 1000000001;2;Field  ;
                SourceExpr="No." }

    { 1000000003;2;Field  ;
                SourceExpr="Cash Advance Vendor No." }

    { 1000000005;2;Field  ;
                SourceExpr="Cash Advance Name" }

    { 1000000007;2;Field  ;
                SourceExpr="Posting Date" }

    { 1000000009;2;Field  ;
                SourceExpr="Document Date" }

    { 1000000013;2;Field  ;
                SourceExpr="Balance Amount" }

    { 1000000015;2;Field  ;
                SourceExpr="Balance Settle" }

    { 1000000017;2;Field  ;
                SourceExpr="Settle Account Type" }

    { 1000000019;2;Field  ;
                SourceExpr="Settle Account No." }

  }
  CODE
  {

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Localization TH
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   30.08.2006   KKE   Cash Advance.
    }
    END.
  }
}

OBJECT Page 50098 Check Preview - Cash Advance
{
  OBJECT-PROPERTIES
  {
    Date=02/23/07;
    Time=[ 6:00:00 PM];
    Version List=AVATHA4.40;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=[ENU=Check Preview;
               THA=ตรวจสอบมุมมองก่อนพิมพ์];
    SourceTable=Table55056;
    DataCaptionExpr="No." + ' ' + CheckToAddr[1];
    PageType=Card;
    OnOpenPage=BEGIN
                 CompanyInfo.GET;
                 FormatAddr.Company(CompanyAddr,CompanyInfo);
               END;

    OnAfterGetRecord=BEGIN
                       CalcCheck;
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 11  ;1   ;Group      }

    { 15  ;2   ;Field     ;
                SourceExpr=CompanyAddr[1] }

    { 16  ;2   ;Field     ;
                SourceExpr=CompanyAddr[2] }

    { 17  ;2   ;Field     ;
                SourceExpr=CompanyAddr[3] }

    { 18  ;2   ;Field     ;
                SourceExpr=CompanyAddr[4] }

    { 13  ;2   ;Field     ;
                CaptionClass=FORMAT (NumberText[1]) }

    { 14  ;2   ;Field     ;
                CaptionClass=FORMAT (NumberText[2]) }

    { 1   ;2   ;Field     ;
                CaptionClass=Text19036990;
                MultiLine=Yes }

    { 2   ;2   ;Field     ;
                SourceExpr=CheckToAddr[1] }

    { 8   ;2   ;Field     ;
                SourceExpr=CheckToAddr[2] }

    { 9   ;2   ;Field     ;
                SourceExpr=CheckToAddr[3] }

    { 10  ;2   ;Field     ;
                SourceExpr=CheckToAddr[4] }

    { 6   ;2   ;Field     ;
                CaptionML=[ENU=Date;
                           THA=วันที่];
                SourceExpr="Cheque Date" }

    { 7   ;2   ;Field     ;
                CaptionML=[ENU=Amount;
                           THA=จำนวน];
                SourceExpr=CheckAmount;
                AutoFormatType=1;
                AutoFormatExpr="Currency Code" }

    { 1500003;2;Field     ;
                CaptionML=[ENU=WHT;
                           THA=WHT];
                SourceExpr=0;
                AutoFormatType=1;
                AutoFormatExpr="Currency Code" }

    { 5   ;2   ;Field     ;
                SourceExpr="No." }

    { 19  ;2   ;Field     ;
                SourceExpr=CheckStatusText }

    { 1500002;2;Field     ;
                SourceExpr=CheckAmount;
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                CaptionClass=FORMAT ('Total ' + "Currency Code") }

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Printed Check;THA=เช็คที่พิมพ์แล้ว';
      Text001@1001 : TextConst 'ENU=Not Printed Check;THA=ไม่ใช่เช็คที่พิมพ์';
      GenJnlLine@1002 : Record 81;
      Cust@1003 : Record 18;
      Vend@1004 : Record 23;
      BankAcc@1005 : Record 270;
      CompanyInfo@1006 : Record 79;
      CheckReport@1007 : Report 1401;
      FormatAddr@1008 : Codeunit 365;
      CheckToAddr@1009 : ARRAY [8] OF Text[50];
      CompanyAddr@1010 : ARRAY [8] OF Text[50];
      NumberText@1011 : ARRAY [2] OF Text[80];
      CheckStatusText@1012 : Text[30];
      CheckAmount@1013 : Decimal;
      Text19036990@19047525 : TextConst 'ENU=Pay to the order of;THA=จ่ายตามใบสั่งของ';

    LOCAL PROCEDURE CalcCheck@1();
    VAR
      GenJnlLine1@1500000 : Record 81;
    BEGIN
      IF "Cheque Printed" THEN
        CheckStatusText := Text000
      ELSE
        CheckStatusText := Text001;

      CALCFIELDS("Balance Settle");
      CheckAmount := -"Balance Settle";
      IF CheckAmount < 0 THEN
        CheckAmount := 0;

      CheckReport.InitTextVariable;
      CheckReport.FormatNoText(NumberText,CheckAmount,"Currency Code");

      Vend.GET("Cash Advance Vendor No.");
      Vend.Contact := '';
      //FormatAddr.Vendor(CheckToAddr,Vend);
      //KKE : #002 +
      IF "Paid to Vendor Name" <> '' THEN
        CheckToAddr[1] := "Paid to Vendor Name"
      ELSE
        IF Vend."Name (Thai)" <> '' THEN
          CheckToAddr[1] := Vend."Name (Thai)"
        ELSE
          CheckToAddr[1] := Vend.Name + Vend."Name 2";
      //KKE : #002 -
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Localization TH
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   23.08.2006   KKE   Check Preview - Cash Advance.
      002   24.01.2007   KKE   Display 'Paid to Vendor Name'
    }
    END.
  }
}

OBJECT Page 50099 Get Vendor Ledger Entries
{
  OBJECT-PROPERTIES
  {
    Date=03/01/07;
    Time=[ 6:00:00 PM];
    Version List=AVATHA4.40;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=ENU=Get Vendor Ledger Entries;
    SourceTable=Table25;
    PageType=Card;
    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 42      ;1   ;Action    ;
                      CaptionML=[ENU=OK;
                                 THA=ตกลง];
                      Promoted=Yes;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CurrPage.SETSELECTIONFILTER(Rec);
                                 GetVendLedgEntries.SetSettleHeader(SettleCashAdvHeader);
                                 GetVendLedgEntries.CreateSettleLines(Rec);
                                 CurrPage.CLOSE;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 1000000016;2;Field  ;
                SourceExpr="Entry No." }

    { 1000000000;2;Field  ;
                SourceExpr="Posting Date" }

    { 1000000002;2;Field  ;
                SourceExpr="Document Type" }

    { 1000000014;2;Field  ;
                SourceExpr="Document No." }

    { 12  ;2   ;Field     ;
                SourceExpr=Description }

    { 1000000004;2;Field  ;
                SourceExpr=Amount }

    { 1000000006;2;Field  ;
                SourceExpr="Remaining Amount" }

    { 1000000008;2;Field  ;
                SourceExpr="Amount (LCY)" }

    { 29  ;2   ;Field     ;
                Lookup=No;
                DrillDown=No;
                SourceExpr="Currency Code";
                Visible=FALSE }

    { 1000000010;2;Field  ;
                SourceExpr="Global Dimension 1 Code" }

    { 1000000012;2;Field  ;
                SourceExpr="Global Dimension 2 Code" }

  }
  CODE
  {
    VAR
      PostedCashAdvHdr@1000 : Record 55054;
      SettleCashAdvHeader@1001 : Record 55056;
      GetVendLedgEntries@1003 : Codeunit 55052;

    PROCEDURE SetSettleCashAdvHeader@1(VAR SettleCashAdvHeader2@1000 : Record 55056);
    BEGIN
      SettleCashAdvHeader.GET(SettleCashAdvHeader2."No.");
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Localization TH
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   30.08.2006   KKE   Cash Advance.
    }
    END.
  }
}

OBJECT Page 50100 Ads. Booking Lines
{
  OBJECT-PROPERTIES
  {
    Date=06/22/07;
    Time=[ 6:00:00 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    Editable=No;
    SourceTable=Table50038;
    PageType=Card;
    OnAfterGetRecord=BEGIN
                       IF NOT Salesperson.GET("Salesperson Code") THEN
                         CLEAR(Salesperson);
                     END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1000000048;1 ;ActionGroup;
                      CaptionML=[ENU=&Line;
                                 THA=&บรรทัด] }
      { 1000000050;2 ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=[ENU=Card;
                                 THA=บัตร];
                      RunObject=Page 50048;
                      RunPageLink=No.=FIELD(Booking No.);
                      Image=EditLines }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                GroupType=Repeater }

    { 1000000052;2;Field  ;
                SourceExpr="Booking No." }

    { 1000000054;2;Field  ;
                SourceExpr="Line No." }

    { 1000000001;2;Field  ;
                SourceExpr="Ads. Item No." }

    { 1000000049;2;Field  ;
                SourceExpr="Line Status" }

    { 1000000042;2;Field  ;
                SourceExpr="Salesperson Code" }

    { 1000000058;2;Field  ;
                CaptionML=ENU=Salesperson Name;
                SourceExpr=Salesperson.Name }

    { 1000000044;2;Field  ;
                SourceExpr="Sell-to Customer No." }

    { 1000000046;2;Field  ;
                SourceExpr="Bill-to Customer No." }

    { 1000000003;2;Field  ;
                SourceExpr="Magazine Code" }

    { 1000000005;2;Field  ;
                SourceExpr="Volume No." }

    { 1000000007;2;Field  ;
                SourceExpr="Issue No." }

    { 1000000009;2;Field  ;
                SourceExpr="Issue Date" }

    { 1000000011;2;Field  ;
                SourceExpr="Booking Revenue Code" }

    { 1000000013;2;Field  ;
                SourceExpr="Booking Revenue Type" }

    { 1000000015;2;Field  ;
                SourceExpr="Counting Unit" }

    { 1000000017;2;Field  ;
                SourceExpr=Quantity }

    { 1000000056;2;Field  ;
                SourceExpr="Total Counting Unit" }

    { 1000000019;2;Field  ;
                SourceExpr="Base Unit of Measure" }

    { 1000000021;2;Field  ;
                SourceExpr="Unit Price Excl. VAT" }

    { 1000000023;2;Field  ;
                SourceExpr="Amount Including VAT" }

    { 1000000025;2;Field  ;
                SourceExpr="Ads. Size" }

    { 1000000027;2;Field  ;
                SourceExpr="Ads. Type" }

    { 1000000029;2;Field  ;
                SourceExpr="Ads. Sub-Type" }

    { 1000000031;2;Field  ;
                SourceExpr="Ads. Position" }

    { 1000000033;2;Field  ;
                SourceExpr="Ads. Product" }

    { 1000000035;2;Field  ;
                SourceExpr="Owner Customer" }

    { 1000000037;2;Field  ;
                SourceExpr="Product Category" }

  }
  CODE
  {
    VAR
      AdsBookingLine@1000000000 : Record 50038;
      Salesperson@1000000003 : Record 13;
      SellToCustFilter@1000000001 : Code[20];
      BillToCustFilter@1000000002 : Code[20];

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   09.05.2007   KKE   New form for "Ads. Booking Lines" - Ads. Sales Module
    }
    END.
  }
}

OBJECT Page 50101 Archived Ads. Booking Lines
{
  OBJECT-PROPERTIES
  {
    Date=06/10/07;
    Time=[ 6:00:00 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    Editable=No;
    SourceTable=Table50040;
    PageType=Card;
    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1000000048;1 ;ActionGroup;
                      CaptionML=[ENU=&Line;
                                 THA=&บรรทัด] }
      { 1000000049;2 ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=[ENU=Card;
                                 THA=บัตร];
                      RunObject=Page 50051;
                      RunPageLink=No.=FIELD(Booking No.);
                      Image=EditLines }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                GroupType=Repeater }

    { 1000000052;2;Field  ;
                SourceExpr="Booking No." }

    { 1000000001;2;Field  ;
                SourceExpr="Ads. Item No." }

    { 1000000042;2;Field  ;
                SourceExpr="Salesperson Code" }

    { 1000000044;2;Field  ;
                SourceExpr="Sell-to Customer No." }

    { 1000000046;2;Field  ;
                SourceExpr="Bill-to Customer No." }

    { 1000000003;2;Field  ;
                SourceExpr="Magazine Code" }

    { 1000000005;2;Field  ;
                SourceExpr="Volume No." }

    { 1000000007;2;Field  ;
                SourceExpr="Issue No." }

    { 1000000009;2;Field  ;
                SourceExpr="Issue Date" }

    { 1000000011;2;Field  ;
                SourceExpr="Booking Revenue Code" }

    { 1000000013;2;Field  ;
                SourceExpr="Booking Revenue Type" }

    { 1000000015;2;Field  ;
                SourceExpr="Counting Unit" }

    { 1000000017;2;Field  ;
                SourceExpr=Quantity }

    { 1000000050;2;Field  ;
                SourceExpr="Total Counting Unit" }

    { 1000000019;2;Field  ;
                SourceExpr="Base Unit of Measure" }

    { 1000000021;2;Field  ;
                SourceExpr="Unit Price Excl. VAT" }

    { 1000000023;2;Field  ;
                SourceExpr="Amount Including VAT" }

    { 1000000025;2;Field  ;
                SourceExpr="Ads. Size" }

    { 1000000027;2;Field  ;
                SourceExpr="Ads. Type" }

    { 1000000029;2;Field  ;
                SourceExpr="Ads. Sub-Type" }

    { 1000000031;2;Field  ;
                SourceExpr="Ads. Position" }

    { 1000000033;2;Field  ;
                SourceExpr="Ads. Product" }

    { 1000000035;2;Field  ;
                SourceExpr="Owner Customer" }

    { 1000000037;2;Field  ;
                SourceExpr="Product Category" }

  }
  CODE
  {
    VAR
      AdsBookingLine@1000000000 : Record 50038;
      SellToCustFilter@1000000001 : Code[20];
      BillToCustFilter@1000000002 : Code[20];

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   09.05.2007   KKE   New form for "Archived Ads. Booking Lines" - Ads. Sales Module
    }
    END.
  }
}

OBJECT Page 50102 Ads. Booking Worksheet
{
  OBJECT-PROPERTIES
  {
    Date=10/22/10;
    Time=[ 2:56:08 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    SourceTable=Table50038;
    SourceTableView=SORTING(Ads. Item No.,Line Status,Magazine Code);
    PageType=Card;
    OnOpenPage=BEGIN
                 //KKE : #002 +
                 UserSetup.GET(USERID);
                 CASE UserSetup."Ads. Booking Filter" OF
                   UserSetup."Ads. Booking Filter"::" ":
                     ERROR(Text001);
                   UserSetup."Ads. Booking Filter"::Salesperson:
                     BEGIN
                       UserSetup.TESTFIELD("Salesperson Code");
                       Salesperson.SETFILTER(Code,UserSetup."Salesperson Code");
                       FILTERGROUP(2);
                       SETFILTER("Salesperson Code",Salesperson.GETFILTER(Code));
                       FILTERGROUP(0);
                     END;
                   UserSetup."Ads. Booking Filter"::Team:
                     BEGIN
                       UserSetup.TESTFIELD("Salesperson Code");
                       TeamSales.SETRANGE("Salesperson Code",UserSetup."Salesperson Code");
                       IF NOT TeamSales.FIND('-') THEN
                         Salesperson.SETFILTER(Code,UserSetup."Salesperson Code")
                       ELSE BEGIN
                         REPEAT
                           IF STRLEN(TeamSalesFilter + TeamSales."Team Code") < 500 THEN
                             IF TeamSalesFilter = '' THEN
                               TeamSalesFilter := TeamSales."Team Code"
                             ELSE
                               TeamSalesFilter := TeamSalesFilter + '|' + TeamSales."Team Code";
                         UNTIL TeamSales.NEXT=0;
                         TeamSales.RESET;
                         TeamSales.SETFILTER("Team Code",TeamSalesFilter);
                         TeamSales.FIND('-');
                         REPEAT
                           IF STRLEN(SalespersonFilter + TeamSales."Team Code") < 500 THEN
                             IF SalespersonFilter = '' THEN
                               SalespersonFilter := TeamSales."Salesperson Code"
                             ELSE
                               SalespersonFilter := SalespersonFilter + '|' + TeamSales."Salesperson Code";
                         UNTIL TeamSales.NEXT=0;
                         Salesperson.SETFILTER(Code,SalespersonFilter);
                         FILTERGROUP(2);
                         SETFILTER("Salesperson Code",Salesperson.GETFILTER(Code));
                         FILTERGROUP(0);
                       END;
                     END;
                   UserSetup."Ads. Booking Filter"::All:
                     BEGIN
                       Salesperson.RESET;
                     END;
                 END;
                 //KKE : #002 -
               END;

    OnAfterGetRecord=BEGIN
                       IF NOT Salesperson.GET("Salesperson Code") THEN
                         CLEAR(Salesperson);
                       IF NOT SellToCustomer.GET("Sell-to Customer No.") THEN
                         CLEAR(SellToCustomer);
                       IF NOT BillToCustomer.GET("Bill-to Customer No.") THEN
                         CLEAR(BillToCustomer);
                       IF NOT AdsPosition.GET("Ads. Position") THEN
                         CLEAR(AdsPosition);
                       IF NOT AdsProduct.GET("Ads. Product") THEN
                         CLEAR(AdsProduct);
                       IF NOT AdsSize.GET("Ads. Size") THEN
                         CLEAR(AdsSize);
                       IF NOT AdsType.GET("Ads. Type") THEN
                         CLEAR(AdsType);
                       IF NOT AdsSubType.GET("Ads. Type","Ads. Sub-Type") THEN
                         CLEAR(AdsSubType);
                       IF NOT ProductCategory.GET("Product Category") THEN
                         CLEAR(ProductCategory);
                       IF NOT BookingRev.GET("Booking Revenue Code") THEN
                         CLEAR(BookingRev);
                       IF NOT OwnerCust.GET("Owner Customer") THEN
                         CLEAR(OwnerCust);
                     END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1000000044;1 ;ActionGroup;
                      CaptionML=ENU=F&unctions }
      { 1000000046;2 ;Action    ;
                      CaptionML=ENU=Approve Booking;
                      OnAction=VAR
                                 AdsBookingLine@1000000001 : Record 50038;
                               BEGIN
                                 CurrPage.SETSELECTIONFILTER(AdsBookingLine);
                                 IF AdsBookingLine.FIND('-') THEN
                                   REPEAT
                                     AdsBookingLine.ApproveBooking;
                                   UNTIL AdsBookingLine.NEXT=0;
                               END;
                                }
      { 1000000047;2 ;Action    ;
                      CaptionML=ENU=Reject Booking;
                      OnAction=VAR
                                 AdsBookingLine@1000000001 : Record 50038;
                               BEGIN
                                 CurrPage.SETSELECTIONFILTER(AdsBookingLine);
                                 IF AdsBookingLine.FIND('-') THEN
                                   REPEAT
                                     AdsBookingLine.RejectBooking;
                                   UNTIL AdsBookingLine.NEXT=0;
                               END;
                                }
      { 1000000048;2 ;Separator  }
      { 1000000051;2 ;Action    ;
                      CaptionML=ENU=Un-Approve Booking;
                      OnAction=VAR
                                 AdsBookingLine@1000000001 : Record 50038;
                               BEGIN
                                 CurrPage.SETSELECTIONFILTER(AdsBookingLine);
                                 IF AdsBookingLine.FIND('-') THEN
                                   REPEAT
                                     AdsBookingLine.UnApproveBooking;
                                   UNTIL AdsBookingLine.NEXT=0;
                               END;
                                }
      { 1000000052;2 ;Action    ;
                      CaptionML=ENU=Un-Reject Booking;
                      OnAction=VAR
                                 AdsBookingLine@1000000001 : Record 50038;
                               BEGIN
                                 CurrPage.SETSELECTIONFILTER(AdsBookingLine);
                                 IF AdsBookingLine.FIND('-') THEN
                                   REPEAT
                                     AdsBookingLine.UnRejectBooking;
                                   UNTIL AdsBookingLine.NEXT=0;
                               END;
                                }
      { 1000000053;2 ;Separator  }
      { 1000000054;2 ;Action    ;
                      CaptionML=ENU=Closed Booking;
                      OnAction=VAR
                                 AdsBookingLine@1000000001 : Record 50038;
                               BEGIN
                                 CurrPage.SETSELECTIONFILTER(AdsBookingLine);
                                 IF AdsBookingLine.FIND('-') THEN
                                   REPEAT
                                     AdsBookingLine.CloseBooking;
                                   UNTIL AdsBookingLine.NEXT=0;
                               END;
                                }
      { 1000000055;2 ;Separator  }
      { 1000000056;2 ;Action    ;
                      CaptionML=ENU=Create Ads. Invoice;
                      OnAction=VAR
                                 AdsBookingLine@1000000002 : Record 50038;
                                 CreateSalesInv@1000000000 : Report 50027;
                               BEGIN
                                 CLEAR(CreateSalesInv);
                                 CurrPage.SETSELECTIONFILTER(AdsBookingLine);
                                 AdsBookingLine.SETPERMISSIONFILTER;
                                 IF AdsBookingLine.GETFILTER("Magazine Code") = '' THEN
                                   AdsBookingLine.SETRANGE("Magazine Code");
                                 IF AdsBookingLine.COUNT > 1 THEN
                                   CreateSalesInv.InitRequest("Booking No.",'',
                                     "Sell-to Customer No.","Bill-to Customer No.",
                                     "Ads. Product",TRUE)
                                 ELSE
                                   CreateSalesInv.InitRequest("Booking No.","Ads. Item No.",
                                     "Sell-to Customer No.","Bill-to Customer No.",
                                     "Ads. Product",FALSE);
                                 CreateSalesInv.SETTABLEVIEW(AdsBookingLine);
                                 CreateSalesInv.RUNMODAL();
                               END;
                                }
      { 1000000045;1 ;Action    ;
                      CaptionML=ENU=&Print;
                      Promoted=Yes;
                      Image=Print;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 REPORT.RUN(REPORT::"Ads. Booking Worksheet",TRUE,FALSE,Rec);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000049;1;Field  ;
                CaptionML=ENU=Ads Item No. Filter;
                SourceExpr=AdsItemNoFilter;
                OnValidate=BEGIN
                             AdsItemNoFilterOnAfterValidate;
                           END;

                OnLookup=VAR
                           AdsItem@1000000002 : Record 50036;
                         BEGIN
                           IF PAGE.RUNMODAL(0,AdsItem) = ACTION::LookupOK THEN BEGIN
                             Text := AdsItem."Ads. Item No.";
                             EXIT(TRUE);
                           END;
                         END;
                          }

    { 1000000085;1;Field  ;
                CaptionML=ENU=Booking Date Filter;
                SourceExpr=BookingDateFilter;
                OnValidate=BEGIN
                             BookingDateFilterOnAfterValida;
                           END;
                            }

    { 1000000000;1;Group  ;
                Editable=FALSE;
                GroupType=Repeater }

    { 1000000075;2;Field  ;
                SourceExpr="Booking No.";
                Visible=FALSE }

    { 1000000077;2;Field  ;
                SourceExpr="Line No.";
                Visible=FALSE }

    { 1000000001;2;Field  ;
                SourceExpr="Ads. Item No." }

    { 1000000035;2;Field  ;
                SourceExpr="Line Status";
                Style=Strong;
                StyleExpr=TRUE }

    { 1000000111;2;Field  ;
                SourceExpr="Cancelled Date" }

    { 1000000087;2;Field  ;
                SourceExpr="Planning Status";
                Visible=FALSE }

    { 1000000071;2;Field  ;
                SourceExpr="Cash Invoice No.";
                Visible=FALSE }

    { 1000000073;2;Field  ;
                SourceExpr="Barter Invoice No.";
                Visible=FALSE }

    { 1000000003;2;Field  ;
                SourceExpr="Sell-to Customer No." }

    { 1000000099;2;Field  ;
                CaptionML=ENU=Sell-to Customer Name;
                SourceExpr=SellToCustomer.Name;
                Visible=FALSE;
                Editable=FALSE }

    { 1000000057;2;Field  ;
                SourceExpr="Bill-to Customer No." }

    { 1000000093;2;Field  ;
                CaptionML=ENU=Bill-to Customer Name;
                SourceExpr=BillToCustomer.Name;
                Editable=FALSE }

    { 1000000005;2;Field  ;
                SourceExpr="Salesperson Code" }

    { 1000000083;2;Field  ;
                CaptionML=ENU=Salesperson Name;
                SourceExpr=Salesperson.Name;
                Editable=FALSE }

    { 1000000089;2;Field  ;
                SourceExpr=Remark }

    { 1000000007;2;Field  ;
                SourceExpr="Magazine Code";
                Visible=FALSE }

    { 1000000009;2;Field  ;
                SourceExpr="Volume No.";
                Visible=FALSE }

    { 1000000011;2;Field  ;
                SourceExpr="Issue No.";
                Visible=FALSE }

    { 1000000081;2;Field  ;
                SourceExpr="Booking Revenue Code" }

    { 1000000101;2;Field  ;
                CaptionML=ENU=Booking Revenue Description;
                SourceExpr=BookingRev.Description;
                Editable=FALSE }

    { 1000000013;2;Field  ;
                SourceExpr="Booking Revenue Type" }

    { 1000000015;2;Field  ;
                SourceExpr="Ads. Type" }

    { 1000000105;2;Field  ;
                CaptionML=ENU=Ads. Type Description;
                SourceExpr=AdsType.Description;
                Editable=FALSE }

    { 1000000017;2;Field  ;
                SourceExpr="Ads. Sub-Type" }

    { 1000000107;2;Field  ;
                CaptionML=ENU=Ads. Sub-Type Description;
                SourceExpr=AdsSubType.Description;
                Editable=FALSE }

    { 1000000019;2;Field  ;
                SourceExpr="Ads. Size" }

    { 1000000109;2;Field  ;
                CaptionML=ENU=Ads. Size Description;
                SourceExpr=AdsSize.Description;
                Editable=FALSE }

    { 1000000021;2;Field  ;
                SourceExpr="Ads. Position" }

    { 1000000091;2;Field  ;
                CaptionML=ENU=Ads. Position Description;
                SourceExpr=AdsPosition.Description;
                Editable=FALSE }

    { 1000000023;2;Field  ;
                SourceExpr="Ads. Product" }

    { 1000000095;2;Field  ;
                CaptionML=ENU=Ads. Product Description;
                SourceExpr=AdsProduct.Description;
                Editable=FALSE }

    { 1000000025;2;Field  ;
                SourceExpr="Product Category" }

    { 1000000097;2;Field  ;
                CaptionML=ENU=Product Category Description;
                SourceExpr=ProductCategory.Description;
                Editable=FALSE }

    { 1000000027;2;Field  ;
                SourceExpr="Owner Customer" }

    { 1000000103;2;Field  ;
                CaptionML=ENU=Owner Customer Name;
                SourceExpr=OwnerCust.Name;
                Editable=FALSE }

    { 1000000059;2;Field  ;
                SourceExpr="Create Sales Invoice";
                Visible=FALSE }

    { 1000000061;2;Field  ;
                SourceExpr="Cash Invoice Amount";
                Visible=FALSE }

    { 1000000063;2;Field  ;
                SourceExpr="Bill Revenue G/L Account";
                Visible=FALSE }

    { 1000000065;2;Field  ;
                SourceExpr="Barter Amount";
                Visible=FALSE }

    { 1000000067;2;Field  ;
                SourceExpr="Barter G/L Account";
                Visible=FALSE }

    { 1000000069;2;Field  ;
                SourceExpr="Barter Required Document";
                Visible=FALSE }

    { 1000000029;2;Field  ;
                SourceExpr="Counting Unit" }

    { 1000000031;2;Field  ;
                SourceExpr=Quantity }

    { 1000000033;2;Field  ;
                SourceExpr="Unit Price Excl. VAT" }

    { 1000000037;2;Field  ;
                SourceExpr="Waiting List No." }

    { 1000000079;2;Field  ;
                SourceExpr="Scheduled Invoice Date" }

    { 1000000039;2;Field  ;
                SourceExpr=Closed }

  }
  CODE
  {
    VAR
      Salesperson@1000000001 : Record 13;
      UserSetup@1000000003 : Record 91;
      TeamSales@1000000005 : Record 5084;
      AdsPosition@1000000008 : Record 50029;
      AdsProduct@1000000010 : Record 50031;
      AdsSize@1000000017 : Record 50028;
      AdsType@1000000016 : Record 50032;
      AdsSubType@1000000015 : Record 50033;
      ProductCategory@1000000011 : Record 50030;
      BillToCustomer@1000000009 : Record 18;
      SellToCustomer@1000000012 : Record 18;
      OwnerCust@1000000014 : Record 18;
      BookingRev@1000000013 : Record 50027;
      AdsItemNoFilter@1000000000 : Text[250];
      BookingDateFilter@1000000002 : Date;
      Text001@1000000004 : TextConst 'ENU=You do not have permision to see Ads. Booking Worksheet.';
      TeamSalesFilter@1000000007 : Text[500];
      SalespersonFilter@1000000006 : Text[500];

    LOCAL PROCEDURE AdsItemNoFilterOnAfterValidate@19042160();
    BEGIN
      SETFILTER("Ads. Item No.",AdsItemNoFilter);
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE BookingDateFilterOnAfterValida@19076803();
    BEGIN
      SETFILTER("Booking Date",'%1',BookingDateFilter);
      CurrPage.UPDATE;
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   11.05.2007   KKE   New form for "Ads. Booking Worksheet" - Ads. Sales Module
      002   28.08.2007   KKE   User permission for salesperson.
      003   18.09.2007   KKE   Add column Bill-to Customer Name.
      004   19.10.2010   GKU   Add field "Status Date"
    }
    END.
  }
}

OBJECT Page 50103 Archived Ads. Billing
{
  OBJECT-PROPERTIES
  {
    Date=06/01/07;
    Time=[ 6:00:00 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    Editable=No;
    SourceTable=Table50052;
    PageType=Card;
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                CaptionML=ENU=General }

    { 1000000001;2;Field  ;
                SourceExpr="No." }

    { 1000000003;2;Field  ;
                SourceExpr="Bill-to Customer No." }

    { 1000000005;2;Field  ;
                SourceExpr="Bill-to Name" }

    { 1000000007;2;Field  ;
                SourceExpr="Bill-to Address" }

    { 1000000009;2;Field  ;
                SourceExpr="Bill-to Address 2" }

    { 1000000011;2;Field  ;
                SourceExpr="Bill-to Address 3" }

    { 1000000036;2;Field  ;
                CaptionML=[ENU=Bill-to Post Code/City;
                           THA=เก็บเงินที่รหัสไปรษณีย์/เมือง];
                SourceExpr="Bill-to Post Code" }

    { 1000000040;2;Field  ;
                SourceExpr="Bill-to City" }

    { 1000000034;2;Field  ;
                SourceExpr="Bill-to County" }

    { 1000000041;2;Field  ;
                CaptionML=[ENU=Bill-to County/Country Code;
                           THA=เก็บเงินที่เขต/รหัสประเทศ];
                SourceExpr="Bill-to Country Code" }

    { 1000000032;2;Field  ;
                SourceExpr="Bill-to Contact" }

    { 1000000023;2;Field  ;
                SourceExpr=Remark }

    { 1000000025;2;Field  ;
                SourceExpr="Billing Date" }

    { 1000000027;2;Field  ;
                SourceExpr="Expected Receipt Date" }

    { 1000000018;2;Field  ;
                SourceExpr="Due Date" }

    { 1000000029;2;Field  ;
                SourceExpr=Status }

    { 1000000013;1;Part   ;
                Name=BillingSubform;
                SubPageLink=Billing No.=FIELD(No.);
                PagePartID=Page50104 }

  }
  CODE
  {

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   01.06.2007   KKE   New form for "Archived Ads. Billing" - Ads. Sales Module
    }
    END.
  }
}

OBJECT Page 50104 Archived Ads. Billing Subform
{
  OBJECT-PROPERTIES
  {
    Date=01/30/21;
    Time=[ 7:13:43 PM];
    Modified=Yes;
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    Editable=No;
    SourceTable=Table50053;
    PageType=ListPart;
    AutoSplitKey=Yes;
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                GroupType=Repeater }

    { 1000000015;2;Field  ;
                SourceExpr="Line No.";
                Visible=FALSE }

    { 1000000021;2;Field  ;
                SourceExpr="Cust. Ledger Entry No." }

    { 1000000017;2;Field  ;
                SourceExpr="Bill-to Customer No.";
                Visible=FALSE }

    { 1000000001;2;Field  ;
                SourceExpr="Document Type" }

    { 1000000003;2;Field  ;
                SourceExpr="Document No." }

    { 1000000027;2;Field  ;
                SourceExpr="Due Date" }

    { 1000000019;2;Field  ;
                SourceExpr=Description }

    { 1000000007;2;Field  ;
                SourceExpr="Salesperson Code" }

    { 1000000009;2;Field  ;
                SourceExpr="Zone Area" }

    { 1000000011;2;Field  ;
                SourceExpr="Sale Type" }

    { 1000000013;2;Field  ;
                SourceExpr="Original Amount" }

    { 1000000005;2;Field  ;
                SourceExpr="Remaining Amount" }

    { 1000000023;2;Field  ;
                SourceExpr="Remaining Amt. (LCY)" }

    { 1000000025;2;Field  ;
                SourceExpr="Billing Amount";
                Style=Strong;
                StyleExpr=TRUE }

  }
  CODE
  {
    VAR
      AdsBookingHeader@1000000000 : Record 50050;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   01.06.2007   KKE   New form for "Archived Ads. Billing Subform" - Ads. Sales Module
    }
    END.
  }
}

OBJECT Page 50105 Archived Ads. Billing List
{
  OBJECT-PROPERTIES
  {
    Date=06/01/07;
    Time=[ 6:00:00 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    Editable=No;
    SourceTable=Table50052;
    PageType=Card;
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                GroupType=Repeater }

    { 1000000001;2;Field  ;
                SourceExpr="No." }

    { 1000000003;2;Field  ;
                SourceExpr="Bill-to Customer No." }

    { 1000000005;2;Field  ;
                SourceExpr="Bill-to Name" }

    { 1000000014;2;Field  ;
                SourceExpr=Status }

    { 1000000007;2;Field  ;
                SourceExpr="Billing Date" }

    { 1000000009;2;Field  ;
                SourceExpr="Expected Receipt Date" }

  }
  CODE
  {

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   01.06.2007   KKE   New form for "Archived Ads. Billing List" - Ads. Sales Module
    }
    END.
  }
}

OBJECT Page 50106 Sales Tax Invoice/Receipt
{
  OBJECT-PROPERTIES
  {
    Date=09/17/07;
    Time=[ 6:10:01 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Sales Tax Invoice/Receipt;
    SourceTable=Table50054;
    PageType=Card;
    RefreshOnActivate=Yes;
    OnOpenPage=BEGIN
                 IF UserMgt.GetSalesFilter() <> '' THEN BEGIN
                   FILTERGROUP(2);
                   SETRANGE("Responsibility Center",UserMgt.GetSalesFilter());
                   FILTERGROUP(0);
                 END;
               END;

    OnNewRecord=BEGIN
                  "Responsibility Center" := UserMgt.GetSalesFilter();
                END;

    OnDeleteRecord=BEGIN
                     CurrPage.SAVERECORD;
                     //EXIT(ConfirmDeletion);
                   END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1000000027;1 ;ActionGroup;
                      CaptionML=ENU=&Tax Invoice }
      { 1000000029;2 ;Action    ;
                      ShortCutKey=F7;
                      CaptionML=[ENU=Statistics;
                                 THA=สถิติ];
                      RunObject=Page 50109;
                      RunPageLink=No.=FIELD(No.);
                      Promoted=Yes;
                      Image=Statistics;
                      PromotedCategory=Process }
      { 1000000030;2 ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=[ENU=Card;
                                 THA=บัตร];
                      RunObject=Page 21;
                      RunPageLink=No.=FIELD(Sell-to Customer No.);
                      Image=EditLines }
      { 1000000031;2 ;Action    ;
                      CaptionML=[ENU=Co&mments;
                                 THA=ข้อ&คิดเห็น];
                      RunObject=Page 67;
                      RunPageLink=Document Type=CONST(Issued Tax Invoice),
                                  No.=FIELD(No.);
                      Image=ViewComments }
      { 1000000004;2 ;Action    ;
                      CaptionML=ENU=Invoices;
                      RunObject=Page 143;
                      Visible=No;
                      Image=Invoice }
      { 1000000034;2 ;Action    ;
                      CaptionML=[ENU=Dimensions;
                                 THA=มิติ];
                      RunObject=Page 547;
                      RunPageLink=Table ID=CONST(50054),
                                  Document No.=FIELD(No.),
                                  Line No.=CONST(0);
                      Image=Dimensions }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 66      ;1   ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 THA=ฟั&งก์ชัน] }
      { 68      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Copy Document;
                                 THA=คัดลอกเอกสาร];
                      Image=CopyDocument;
                      OnAction=BEGIN
                                 CopySalesDoc.SetSalesTaxInvHeader(Rec);
                                 CopySalesDoc.RUNMODAL;
                                 CLEAR(CopySalesDoc);
                               END;
                                }
      { 1000000021;2 ;Action    ;
                      CaptionML=ENU=Cancel Tax Invoice;
                      OnAction=BEGIN
                                 Rec.CancelTaxInvoice;
                               END;
                                }
      { 1000000012;1 ;ActionGroup;
                      CaptionML=[ENU=&Print;
                                 THA=&พิมพ์] }
      { 1000000020;2 ;Action    ;
                      CaptionML=ENU=Tax Invoice;
                      OnAction=VAR
                                 SalesTaxInvHeader@1000000000 : Record 50054;
                                 SalesTaxInvoiceReceipt@1000000002 : Report 50056;
                               BEGIN
                                 TESTFIELD("Cancel Tax Invoice",FALSE);
                                 IF NOT CONFIRM(Text001,FALSE) THEN
                                   EXIT;
                                 SalesTaxInvHeader.RESET;
                                 SalesTaxInvHeader.SETRANGE("No.","No.");
                                 SalesTaxInvoiceReceipt.SETTABLEVIEW(SalesTaxInvHeader);
                                 SalesTaxInvoiceReceipt.RUNMODAL;
                                 CLEAR(SalesTaxInvoiceReceipt);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                CaptionML=[ENU=General;
                           THA=ทั่วไป] }

    { 2   ;2   ;Field     ;
                SourceExpr="No.";
                OnAssistEdit=BEGIN
                               IF AssistEdit(xRec) THEN
                                 CurrPage.UPDATE;
                             END;
                              }

    { 4   ;2   ;Field     ;
                SourceExpr="Sell-to Customer No.";
                OnValidate=BEGIN
                             SelltoCustomerNoOnAfterValidat;
                           END;
                            }

    { 157 ;2   ;Field     ;
                SourceExpr="Sell-to Contact No." }

    { 6   ;2   ;Field     ;
                SourceExpr="Sell-to Customer Name" }

    { 81  ;2   ;Field     ;
                SourceExpr="Sell-to Address" }

    { 83  ;2   ;Field     ;
                SourceExpr="Sell-to Address 2" }

    { 1000000000;2;Field  ;
                SourceExpr="Sell-to Address 3" }

    { 72  ;2   ;Field     ;
                CaptionML=[ENU=Sell-to Post Code/City;
                           THA=ขายไปที่รหัสไปรษณีย์/เมือง];
                SourceExpr="Sell-to Post Code" }

    { 86  ;2   ;Field     ;
                SourceExpr="Sell-to City" }

    { 1500000;2;Field     ;
                SourceExpr="Sell-to County" }

    { 1500002;2;Field     ;
                CaptionML=[ENU=Sell-to County/Country Code;
                           THA=ขายไปที่เขต/รหัสประเทศ];
                SourceExpr="Sell-to Country Code" }

    { 8   ;2   ;Field     ;
                SourceExpr="Sell-to Contact" }

    { 1000000008;2;Field  ;
                SourceExpr="Invoice Description" }

    { 12  ;2   ;Field     ;
                SourceExpr="Posting Date" }

    { 45  ;2   ;Field     ;
                SourceExpr="Document Date" }

    { 1000000005;2;Field  ;
                SourceExpr="Order No." }

    { 1000000011;2;Field  ;
                SourceExpr="Issued Tax Invoice/Receipt" }

    { 1000000014;2;Field  ;
                SourceExpr="Issued Tax Invoice/Receipt No." }

    { 1000000016;2;Field  ;
                SourceExpr="Issued Date / Time" }

    { 1000000018;2;Field  ;
                SourceExpr="Issued by" }

    { 1000000022;2;Field  ;
                SourceExpr="Cancel Tax Invoice" }

    { 1000000024;2;Field  ;
                SourceExpr="Cancelled Date / Time" }

    { 1000000026;2;Field  ;
                SourceExpr="Cancelled by" }

    { 1000000036;2;Field  ;
                SourceExpr="Prepaid WHT" }

    { 58  ;1   ;Part      ;
                Name=SalesTaxInvLines;
                SubPageLink=Document No.=FIELD(No.);
                PagePartID=Page50107 }

    { 1905885101;1;Group  ;
                CaptionML=[ENU=Invoicing;
                           THA=การออกใบส่งของ] }

    { 16  ;2   ;Field     ;
                SourceExpr="Bill-to Customer No.";
                OnValidate=BEGIN
                             BilltoCustomerNoOnAfterValidat;
                           END;
                            }

    { 159 ;2   ;Field     ;
                SourceExpr="Bill-to Contact No." }

    { 18  ;2   ;Field     ;
                SourceExpr="Bill-to Name" }

    { 20  ;2   ;Field     ;
                SourceExpr="Bill-to Address" }

    { 22  ;2   ;Field     ;
                SourceExpr="Bill-to Address 2" }

    { 1000000002;2;Field  ;
                SourceExpr="Bill-to Address 3" }

    { 89  ;2   ;Field     ;
                CaptionML=[ENU=Bill-to Post Code/City;
                           THA=เก็บเงินที่รหัสไปรษณีย์/เมือง];
                SourceExpr="Bill-to Post Code" }

    { 24  ;2   ;Field     ;
                SourceExpr="Bill-to City" }

    { 1500004;2;Field     ;
                SourceExpr="Bill-to County" }

    { 1500006;2;Field     ;
                CaptionML=[ENU=Bill-to County/Country Code;
                           THA=เก็บเงินที่เขต/รหัสประเทศ];
                SourceExpr="Bill-to Country Code" }

    { 26  ;2   ;Field     ;
                SourceExpr="Bill-to Contact" }

    { 84  ;2   ;Field     ;
                SourceExpr="Shortcut Dimension 1 Code";
                OnValidate=BEGIN
                             ShortcutDimension1CodeOnAfterV;
                           END;
                            }

    { 92  ;2   ;Field     ;
                SourceExpr="Shortcut Dimension 2 Code";
                OnValidate=BEGIN
                             ShortcutDimension2CodeOnAfterV;
                           END;
                            }

    { 28  ;2   ;Field     ;
                SourceExpr="Payment Terms Code" }

    { 30  ;2   ;Field     ;
                SourceExpr="Due Date" }

    { 32  ;2   ;Field     ;
                SourceExpr="Payment Discount %" }

    { 34  ;2   ;Field     ;
                SourceExpr="Pmt. Discount Date" }

    { 105 ;2   ;Field     ;
                SourceExpr="Payment Method Code" }

    { 131 ;2   ;Field     ;
                SourceExpr="Prices Including VAT";
                OnValidate=BEGIN
                             PricesIncludingVATOnAfterValid;
                           END;
                            }

    { 1000000033;2;Field  ;
                SourceExpr="Customer Order No." }

    { 1000000041;2;Field  ;
                SourceExpr="No. Printed" }

    { 1907468901;1;Group  ;
                CaptionML=[ENU=Foreign Trade;
                           THA=การค้าต่างประเทศ] }

    { 111 ;2   ;Field     ;
                SourceExpr="Currency Code";
                OnAssistEdit=BEGIN
                               ChangeExchangeRate.SetParameter("Currency Code","Currency Factor","Posting Date");
                               IF ChangeExchangeRate.RUNMODAL = ACTION::OK THEN BEGIN
                                 VALIDATE("Currency Factor",ChangeExchangeRate.GetParameter);
                                 CurrPage.UPDATE;
                               END;
                               CLEAR(ChangeExchangeRate);
                             END;
                              }

    { 1903041301;1;Group  ;
                CaptionML=[ENU=Address (Thai);
                           THA=ที่อยู่(ไทย)] }

    { 1000000043;2;Field  ;
                SourceExpr="Sell-to Name (Thai)" }

    { 1000000044;2;Field  ;
                SourceExpr="Sell-to Address (Thai)";
                MultiLine=Yes }

    { 1000000045;2;Field  ;
                SourceExpr="Bill-to Name (Thai)" }

    { 1000000049;2;Field  ;
                SourceExpr="Bill-to Address (Thai)";
                MultiLine=Yes }

    { 1000000051;2;Field  ;
                SourceExpr="Ship-to Name (Thai)" }

    { 1000000053;2;Field  ;
                SourceExpr="Ship-to Address (Thai)";
                MultiLine=Yes }

  }
  CODE
  {
    VAR
      CopySalesDoc@1001 : Report 50028;
      MoveNegSalesLines@1007 : Report 6699;
      ReportPrint@1002 : Codeunit 228;
      DocPrint@1003 : Codeunit 229;
      ArchiveManagement@1008 : Codeunit 5063;
      SalesInfoPaneMgt@1009 : Codeunit 7171;
      SalesSetup@1004 : Record 311;
      ChangeExchangeRate@1005 : Page 511;
      UserMgt@1006 : Codeunit 5700;
      Text000@1000000000 : TextConst 'ENU=Unable to execute this function while in view only mode.;THA=ไม่สามารถใช้ฟังก์ชันนี้ขณะที่อยู่ในโหมดดูอย่างเดียว';
      Text001@1000000001 : TextConst 'ENU=กรุณาตรวจสอบข้อมูลให้เรียบร้อยก่อนทำการพิมพ์ Tax Invoice\คุณต้องการทำรายการต่อหรือไม่?';

    PROCEDURE UpdateAllowed@1() : Boolean;
    BEGIN
      IF CurrPage.EDITABLE = FALSE THEN
        ERROR(Text000);
      EXIT(TRUE);
    END;

    LOCAL PROCEDURE SelltoCustomerNoOnAfterValidat@19034782();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE BilltoCustomerNoOnAfterValidat@19044114();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ShortcutDimension1CodeOnAfterV@19029405();
    BEGIN
      CurrPage.SalesTaxInvLines.PAGE.UpdateForm(TRUE);
    END;

    LOCAL PROCEDURE ShortcutDimension2CodeOnAfterV@19008725();
    BEGIN
      CurrPage.SalesTaxInvLines.PAGE.UpdateForm(TRUE);
    END;

    LOCAL PROCEDURE PricesIncludingVATOnAfterValid@19009096();
    BEGIN
      CurrPage.UPDATE;
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   15.05.2007   KKE   -Sales Tax Invoice/Receipt.
    }
    END.
  }
}

OBJECT Page 50107 Sales Tax Invoice/Receipt Sub
{
  OBJECT-PROPERTIES
  {
    Date=01/30/21;
    Time=[ 7:14:04 PM];
    Modified=Yes;
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Sales Tax Invoice/Receipt Subf;
    MultipleNewLines=Yes;
    InsertAllowed=No;
    SourceTable=Table50055;
    DelayedInsert=Yes;
    PageType=ListPart;
    AutoSplitKey=Yes;
    OnNewRecord=BEGIN
                  Type := xRec.Type;
                END;

    OnModifyRecord=BEGIN
                     IF Description = xRec.Description THEN
                       ERROR(Text000);
                   END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1907935204;1 ;ActionGroup;
                      CaptionML=[ENU=&Line;
                                 THA=&บรรทัด] }
      { 1902085804;2 ;Action    ;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=[ENU=Dimensions;
                                 THA=มิติ];
                      Image=Dimensions;
                      OnAction=BEGIN
                                 //This functionality was copied from page #50106. Unsupported part was commented. Please check it.
                                 {CurrPage.SalesTaxInvLines.PAGE.}
                                 _ShowDimensions;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 1000000004;2;Field  ;
                SourceExpr="Posted Document Type" }

    { 1000000006;2;Field  ;
                SourceExpr="Posted Document No." }

    { 2   ;2   ;Field     ;
                SourceExpr=Type }

    { 4   ;2   ;Field     ;
                SourceExpr="No." }

    { 1000000000;2;Field  ;
                SourceExpr="VAT Bus. Posting Group";
                Visible=FALSE }

    { 1000000002;2;Field  ;
                SourceExpr="VAT Prod. Posting Group" }

    { 6   ;2   ;Field     ;
                SourceExpr=Description }

    { 8   ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr=Quantity }

    { 24  ;2   ;Field     ;
                SourceExpr="Unit of Measure Code" }

    { 10  ;2   ;Field     ;
                SourceExpr="Unit of Measure";
                Visible=FALSE }

    { 66  ;2   ;Field     ;
                SourceExpr="Unit Cost (LCY)";
                Visible=FALSE }

    { 12  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Unit Price" }

    { 30  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Line Amount" }

    { 16  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Line Discount %" }

    { 52  ;2   ;Field     ;
                SourceExpr="Line Discount Amount";
                Visible=FALSE }

    { 50  ;2   ;Field     ;
                SourceExpr="Allow Invoice Disc.";
                Visible=FALSE }

    { 40  ;2   ;Field     ;
                SourceExpr="Job No.";
                Visible=FALSE }

    { 32  ;2   ;Field     ;
                SourceExpr="Appl.-to Job Entry";
                Visible=FALSE }

    { 28  ;2   ;Field     ;
                SourceExpr="Apply and Close (Job)";
                Visible=FALSE }

    { 44  ;2   ;Field     ;
                SourceExpr="Appl.-to Item Entry";
                Visible=FALSE }

    { 72  ;2   ;Field     ;
                SourceExpr="Shortcut Dimension 1 Code";
                Visible=FALSE }

    { 70  ;2   ;Field     ;
                SourceExpr="Shortcut Dimension 2 Code";
                Visible=FALSE }

  }
  CODE
  {
    VAR
      Text000@1000000000 : TextConst 'ENU=test';

    PROCEDURE _ShowDimensions@19020529();
    BEGIN
      Rec.ShowDimensions;
    END;

    PROCEDURE ShowDimensions@8();
    BEGIN
      Rec.ShowDimensions;
    END;

    PROCEDURE UpdateForm@12(SetSaveRecord@1000 : Boolean);
    BEGIN
      CurrPage.UPDATE(SetSaveRecord);
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   15.05.2007   KKE   -Sales Tax Invoice/Receipt.
    }
    END.
  }
}

OBJECT Page 50108 Sales Tax Invoice/Receipts
{
  OBJECT-PROPERTIES
  {
    Date=05/17/07;
    Time=[ 6:00:00 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=ENU=Sales Tax Invoice/Receipts;
    SourceTable=Table50054;
    PageType=Card;
    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 19      ;1   ;ActionGroup;
                      CaptionML=[ENU=&Invoice;
                                 THA=&ใบส่งของ] }
      { 26      ;2   ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=[ENU=Card;
                                 THA=บัตร];
                      RunObject=Page 50007;
                      RunPageLink=Promotion Date=FIELD(No.);
                      Image=EditLines }
      { 31      ;2   ;Action    ;
                      ShortCutKey=F7;
                      CaptionML=[ENU=Statistics;
                                 THA=สถิติ];
                      RunObject=Page 397;
                      RunPageLink=No.=FIELD(No.);
                      Promoted=Yes;
                      Image=Statistics;
                      PromotedCategory=Process }
      { 32      ;2   ;Action    ;
                      CaptionML=[ENU=Co&mments;
                                 THA=ข้อ&คิดเห็น];
                      RunObject=Page 67;
                      RunPageLink=Document Type=CONST(Issued Tax Invoice),
                                  No.=FIELD(No.);
                      Image=ViewComments }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                SourceExpr="No." }

    { 4   ;2   ;Field     ;
                SourceExpr="Sell-to Customer No." }

    { 6   ;2   ;Field     ;
                SourceExpr="Sell-to Customer Name" }

    { 1000000000;2;Field  ;
                SourceExpr="External Document No." }

    { 37  ;2   ;Field     ;
                SourceExpr="Currency Code" }

    { 13  ;2   ;Field     ;
                SourceExpr=Amount;
                OnDrillDown=BEGIN
                              SETRANGE("No.");
                              PAGE.RUNMODAL(PAGE::"Posted Sales Invoice",Rec)
                            END;
                             }

    { 15  ;2   ;Field     ;
                SourceExpr="Amount Including VAT";
                OnDrillDown=BEGIN
                              SETRANGE("No.");
                              PAGE.RUNMODAL(PAGE::"Posted Sales Invoice",Rec)
                            END;
                             }

    { 27  ;2   ;Field     ;
                SourceExpr="Sell-to Post Code";
                Visible=FALSE }

    { 23  ;2   ;Field     ;
                SourceExpr="Sell-to Country Code";
                Visible=FALSE }

    { 35  ;2   ;Field     ;
                SourceExpr="Sell-to Contact";
                Visible=FALSE }

    { 147 ;2   ;Field     ;
                SourceExpr="Bill-to Customer No.";
                Visible=FALSE }

    { 145 ;2   ;Field     ;
                SourceExpr="Bill-to Name";
                Visible=FALSE }

    { 33  ;2   ;Field     ;
                SourceExpr="Bill-to Post Code";
                Visible=FALSE }

    { 29  ;2   ;Field     ;
                SourceExpr="Bill-to Country Code";
                Visible=FALSE }

    { 129 ;2   ;Field     ;
                SourceExpr="Bill-to Contact";
                Visible=FALSE }

    { 125 ;2   ;Field     ;
                SourceExpr="Ship-to Code";
                Visible=FALSE }

    { 123 ;2   ;Field     ;
                SourceExpr="Ship-to Name";
                Visible=FALSE }

    { 21  ;2   ;Field     ;
                SourceExpr="Ship-to Post Code";
                Visible=FALSE }

    { 17  ;2   ;Field     ;
                SourceExpr="Ship-to Country Code";
                Visible=FALSE }

    { 113 ;2   ;Field     ;
                SourceExpr="Ship-to Contact";
                Visible=FALSE }

    { 109 ;2   ;Field     ;
                SourceExpr="Posting Date";
                Visible=FALSE }

    { 69  ;2   ;Field     ;
                SourceExpr="Salesperson Code";
                Visible=FALSE }

    { 91  ;2   ;Field     ;
                SourceExpr="Shortcut Dimension 1 Code";
                Visible=FALSE }

    { 89  ;2   ;Field     ;
                SourceExpr="Shortcut Dimension 2 Code";
                Visible=FALSE }

    { 93  ;2   ;Field     ;
                SourceExpr="Location Code";
                Visible=TRUE }

    { 8   ;2   ;Field     ;
                SourceExpr="No. Printed" }

  }
  CODE
  {
    VAR
      SalesInvHeader@1000 : Record 112;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   15.05.2007   KKE   -Sales Tax Invoice/Receipt.
    }
    END.
  }
}

OBJECT Page 50109 Sales Tax Invoice Statistics
{
  OBJECT-PROPERTIES
  {
    Date=06/22/07;
    Time=[ 6:00:00 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Sales Tax Invoice Statistics;
               THA=สถิติเกี่ยวกับใบกำกับภาษีของการขาย];
    SourceTable=Table50054;
    PageType=Card;
    OnOpenPage=BEGIN
                 SalesSetup.GET;
                 AllowInvDisc :=
                   NOT (SalesSetup."Calc. Inv. Discount" AND CustInvDiscRecExists("Invoice Disc. Code"));
                 AllowVATDifference :=
                   SalesSetup."Allow VAT Difference";
                 CurrPage.EDITABLE :=
                   AllowVATDifference OR AllowInvDisc;
                 SetVATSpecification;
               END;

    OnAfterGetRecord=BEGIN
                       CurrPage.CAPTION(Text002);
                       IF PrevNo = "No." THEN
                         EXIT;
                       PrevNo := "No.";
                       FILTERGROUP(2);
                       SETRANGE("No.",PrevNo);
                       FILTERGROUP(0);
                       CLEAR(SalesTaxInvLine);

                       IF "Currency Code" = '' THEN
                         currency.InitRoundingPrecision
                       ELSE
                         currency.GET("Currency Code");

                       SalesTaxInvLine.SETRANGE("Document No.","No.");
                       IF SalesTaxInvLine.FIND('-') THEN
                         REPEAT
                           CustAmount := CustAmount + SalesTaxInvLine.Amount;
                           AmountInclVAT := AmountInclVAT + SalesTaxInvLine."Amount Including VAT" + SalesTaxInvLine."VAT Difference";
                           IF "Prices Including VAT" THEN
                             InvDiscAmount := InvDiscAmount + SalesTaxInvLine."Inv. Discount Amount" / (1 + SalesTaxInvLine."VAT %" / 100)
                           ELSE
                             InvDiscAmount := InvDiscAmount + SalesTaxInvLine."Inv. Discount Amount";
                           CostLCY := CostLCY + (SalesTaxInvLine.Quantity * SalesTaxInvLine."Unit Cost (LCY)");
                           LineQty := LineQty + SalesTaxInvLine.Quantity;
                           TotalNetWeight := TotalNetWeight + (SalesTaxInvLine.Quantity * SalesTaxInvLine."Net Weight");
                           TotalGrossWeight := TotalGrossWeight + (SalesTaxInvLine.Quantity * SalesTaxInvLine."Gross Weight");
                           TotalVolume := TotalVolume + (SalesTaxInvLine.Quantity * SalesTaxInvLine."Unit Volume");
                           IF SalesTaxInvLine."Units per Parcel" > 0 THEN
                             TotalParcels := TotalParcels + ROUND(SalesTaxInvLine.Quantity / SalesTaxInvLine."Units per Parcel",1,'>');
                           IF SalesTaxInvLine."VAT %" <> VATPercentage THEN
                             IF VATPercentage = 0 THEN
                               VATPercentage := SalesTaxInvLine."VAT %"
                             ELSE
                               VATPercentage := -1;
                         UNTIL SalesTaxInvLine.NEXT = 0;
                       VATAmount := AmountInclVAT - CustAmount;
                       InvDiscAmount := ROUND(InvDiscAmount,currency."Amount Rounding Precision");

                       IF VATPercentage <= 0 THEN
                         VATAmountText := Text000
                       ELSE
                         VATAmountText := STRSUBSTNO(Text001,VATPercentage);

                       IF "Currency Code" = '' THEN
                         AmountLCY := CustAmount
                       ELSE
                         AmountLCY :=
                           CurrExchRate.ExchangeAmtFCYToLCY(
                             WORKDATE,"Currency Code",CustAmount,"Currency Factor");
                       ProfitLCY := AmountLCY - CostLCY;
                       IF AmountLCY <> 0 THEN
                         ProfitPct := ROUND(100 * ProfitLCY / AmountLCY,0.1);

                       IF Cust.GET("Bill-to Customer No.") THEN
                         Cust.CALCFIELDS("Balance (LCY)")
                       ELSE
                         CLEAR(Cust);
                       IF Cust."Credit Limit (LCY)" = 0 THEN
                         CreditLimitLCYExpendedPct := 0
                       ELSE
                         IF Cust."Balance (LCY)" / Cust."Credit Limit (LCY)" < 0 THEN
                           CreditLimitLCYExpendedPct := 0
                         ELSE
                           IF Cust."Balance (LCY)" / Cust."Credit Limit (LCY)" > 1 THEN
                             CreditLimitLCYExpendedPct := 10000
                           ELSE
                             CreditLimitLCYExpendedPct := ROUND(Cust."Balance (LCY)" / Cust."Credit Limit (LCY)" * 10000,1);
                       SalesTaxInvLine.CalcVATAmountLines(Rec,TempVATAmountLine);
                       CurrPage.Subform.PAGE.SetTempVATAmountLine(TempVATAmountLine);
                       //CurrForm.Subform.FORM.InitGlobals("Currency Code",FALSE,FALSE,FALSE,FALSE,"VAT Base Discount %",1);
                       SetVATSpecification;
                     END;

    OnQueryClosePage=BEGIN
                       GetVATSpecification;
                       IF TempVATAmountLine.GetAnyLineModified THEN
                         UpdateVATOnSalesTaxInvLines;
                       EXIT(TRUE);
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 36  ;1   ;Group     ;
                CaptionML=[ENU=General;
                           THA=ทั่วไป] }

    { 2   ;2   ;Field     ;
                CaptionML=[ENU=Amount;
                           THA=จำนวน];
                SourceExpr=CustAmount + InvDiscAmount;
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                Editable=FALSE }

    { 6   ;2   ;Field     ;
                CaptionML=[ENU=Inv. Discount Amount;
                           THA=ยอดเงินส่วนลดในใบส่งของ];
                SourceExpr=InvDiscAmount;
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                Editable=FALSE }

    { 12  ;2   ;Field     ;
                CaptionML=[ENU=Total;
                           THA=ยอดรวม];
                SourceExpr=CustAmount;
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                Editable=FALSE }

    { 16  ;2   ;Field     ;
                CaptionML=[ENU=VAT Amount;
                           THA=จำนวน VAT];
                SourceExpr=VATAmount;
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                CaptionClass=FORMAT (VATAmountText);
                Editable=FALSE }

    { 20  ;2   ;Field     ;
                CaptionML=[ENU=Total Incl. VAT;
                           THA=ยอดรวมที่รวม VAT];
                SourceExpr=AmountInclVAT;
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                Editable=FALSE }

    { 26  ;2   ;Field     ;
                CaptionML=[ENU=Sales (LCY);
                           THA=ยอดขาย (LCY)];
                SourceExpr=AmountLCY;
                AutoFormatType=1;
                Editable=FALSE }

    { 28  ;2   ;Field     ;
                CaptionML=[ENU=Cost (LCY);
                           THA=ต้นทุน (LCY)];
                SourceExpr=CostLCY;
                AutoFormatType=1;
                Editable=FALSE }

    { 30  ;2   ;Field     ;
                CaptionML=[ENU=Profit (LCY);
                           THA=กำไร (LCY)];
                SourceExpr=ProfitLCY;
                AutoFormatType=1;
                Editable=FALSE }

    { 32  ;2   ;Field     ;
                CaptionML=[ENU=Profit %;
                           THA=% กำไร];
                DecimalPlaces=1:1;
                SourceExpr=ProfitPct;
                Editable=FALSE }

    { 3   ;2   ;Field     ;
                CaptionML=[ENU=Quantity;
                           THA=ปริมาณ];
                DecimalPlaces=0:5;
                SourceExpr=LineQty;
                Editable=FALSE }

    { 13  ;2   ;Field     ;
                CaptionML=[ENU=Parcels;
                           THA=หีบห่อ];
                DecimalPlaces=0:5;
                SourceExpr=TotalParcels;
                Editable=FALSE }

    { 7   ;2   ;Field     ;
                CaptionML=[ENU=Net Weight;
                           THA=น้ำหนักสุทธิ];
                DecimalPlaces=0:5;
                SourceExpr=TotalNetWeight;
                Editable=FALSE }

    { 10  ;2   ;Field     ;
                CaptionML=[ENU=Gross Weight;
                           THA=น้ำหนักรวม];
                DecimalPlaces=0:5;
                SourceExpr=TotalGrossWeight;
                Editable=FALSE }

    { 17  ;2   ;Field     ;
                CaptionML=[ENU=Volume;
                           THA=ปริมาณ];
                DecimalPlaces=0:5;
                SourceExpr=TotalVolume;
                Editable=FALSE }

    { 18  ;1   ;Part      ;
                Name=Subform;
                PagePartID=Page576 }

    { 1903289601;1;Group  ;
                CaptionML=[ENU=Customer;
                           THA=ลูกค้า] }

    { 24  ;2   ;Field     ;
                CaptionML=[ENU=Balance (LCY);
                           THA=ดุล (LCY)];
                SourceExpr=Cust."Balance (LCY)";
                AutoFormatType=1;
                Editable=FALSE }

    { 21  ;2   ;Field     ;
                CaptionML=[ENU=Credit Limit (LCY);
                           THA=วงเงินสินเชื่อ (LCY)];
                SourceExpr=Cust."Credit Limit (LCY)";
                AutoFormatType=1;
                Editable=FALSE }

    { 37  ;2   ;Field     ;
                ExtendedDatatype=Ratio;
                CaptionML=[ENU=Expended % of Credit Limit (LCY);
                           THA=% ของวงเงินสินเชื่อที่ใช้(LCY)];
                ToolTipML=[ENU=Expended % of Credit Limit (LCY);
                           THA=% ของวงเงินสินเชื่อที่ใช้(LCY)];
                SourceExpr=CreditLimitLCYExpendedPct }

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=VAT Amount;THA=จำนวน VAT';
      Text001@1001 : TextConst 'ENU=%1% VAT;THA=%1% VAT';
      SalesSetup@1000000000 : Record 311;
      CurrExchRate@1002 : Record 330;
      SalesTaxInvLine@1003 : Record 50055;
      Cust@1004 : Record 18;
      TempVATAmountLine@1005 : TEMPORARY Record 290;
      currency@1022 : Record 4;
      PrevNo@1000000004 : Code[20];
      CustAmount@1006 : Decimal;
      AmountInclVAT@1007 : Decimal;
      InvDiscAmount@1008 : Decimal;
      VATAmount@1009 : Decimal;
      CostLCY@1010 : Decimal;
      ProfitLCY@1011 : Decimal;
      ProfitPct@1012 : Decimal;
      LineQty@1013 : Decimal;
      TotalNetWeight@1014 : Decimal;
      TotalGrossWeight@1015 : Decimal;
      TotalVolume@1016 : Decimal;
      TotalParcels@1017 : Decimal;
      AmountLCY@1018 : Decimal;
      CreditLimitLCYExpendedPct@1019 : Decimal;
      VATPercentage@1020 : Decimal;
      VATAmountText@1021 : Text[30];
      AllowInvDisc@1000000002 : Boolean;
      AllowVATDifference@1000000001 : Boolean;
      Text002@1000000003 : TextConst 'ENU=Sales Tax Invoice Statistics;THA=สถิติการขาย %1';

    LOCAL PROCEDURE UpdateHeaderInfo@5();
    VAR
      CurrExchRate@1000 : Record 330;
      UseDate@1001 : Date;
    BEGIN
      {
      VATAmount := TempVATAmountLine."VAT Amount";
      AmountInclVAT := TempVATAmountLine."Amount Including VAT";

      TotalSalesLine."Inv. Discount Amount" := TempVATAmountLine.GetTotalInvDiscAmount;
      TotalAmount1 :=
        TotalSalesLine."Line Amount" - TotalSalesLine."Inv. Discount Amount";
      VATAmount := TempVATAmountLine.GetTotalVATAmount;
      IF "Prices Including VAT" THEN BEGIN
        TotalAmount1 := TempVATAmountLine.GetTotalAmountInclVAT;
        TotalAmount2 := TotalAmount1 - VATAmount;
        TotalSalesLine."Line Amount" := TotalAmount1 + TotalSalesLine."Inv. Discount Amount";
      END ELSE
        TotalAmount2 := TotalAmount1 + VATAmount;

      IF "Prices Including VAT" THEN
        TotalSalesLineLCY.Amount := TotalAmount2
      ELSE
        TotalSalesLineLCY.Amount := TotalAmount1;
      IF "Currency Code" <> '' THEN BEGIN
        IF ("Document Type" IN ["Document Type"::"Blanket Order","Document Type"::Quote]) AND
           ("Posting Date" = 0D)
        THEN
          UseDate := WORKDATE
        ELSE
          UseDate := "Posting Date";

        TotalSalesLineLCY.Amount :=
          CurrExchRate.ExchangeAmtFCYToLCY(
            UseDate,"Currency Code",TotalSalesLineLCY.Amount,"Currency Factor");
      END;
      ProfitLCY := TotalSalesLineLCY.Amount - TotalSalesLineLCY."Unit Cost (LCY)";
      IF TotalSalesLineLCY.Amount = 0 THEN
        ProfitPct := 0
      ELSE
        ProfitPct := ROUND(100 * ProfitLCY / TotalSalesLineLCY.Amount,0.01);
      }
    END;

    LOCAL PROCEDURE CustInvDiscRecExists@4(InvDiscCode@1000 : Code[20]) : Boolean;
    VAR
      CustInvDisc@1001 : Record 19;
    BEGIN
      CustInvDisc.SETRANGE(Code,InvDiscCode);
      EXIT(CustInvDisc.FIND('-'));
    END;

    LOCAL PROCEDURE GetVATSpecification@21();
    BEGIN
      CurrPage.Subform.PAGE.GetTempVATAmountLine(TempVATAmountLine);
      UpdateHeaderInfo;
    END;

    LOCAL PROCEDURE SetVATSpecification@11();
    BEGIN
      CurrPage.Subform.PAGE.SetTempVATAmountLine(TempVATAmountLine);
      CurrPage.Subform.PAGE.InitGlobals(
        "Currency Code",AllowVATDifference,AllowVATDifference,
        "Prices Including VAT",AllowInvDisc,"VAT Base Discount %",1);
    END;

    LOCAL PROCEDURE UpdateVATOnSalesTaxInvLines@1();
    VAR
      SalesTaxInvLine@1000 : Record 50055;
    BEGIN
      GetVATSpecification;
      IF TempVATAmountLine.GetAnyLineModified THEN BEGIN
        SalesTaxInvLine.UpdateVATOnLines(0,Rec,SalesTaxInvLine,TempVATAmountLine);
        SalesTaxInvLine.UpdateVATOnLines(1,Rec,SalesTaxInvLine,TempVATAmountLine);
      END;
      PrevNo := '';
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   15.05.2007   KKE   -Sales Tax Invoice/Receipt.
    }
    END.
  }
}

OBJECT Page 50110 Get Ads. Booking
{
  OBJECT-PROPERTIES
  {
    Date=07/04/07;
    Time=[ 6:00:00 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    SourceTable=Table50038;
    PageType=Card;
    OnQueryClosePage=BEGIN
                       IF CloseAction = ACTION::LookupOK THEN
                           LookupOKOnPush;
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                Editable=FALSE;
                GroupType=Repeater }

    { 1000000001;2;Field  ;
                SourceExpr="Ads. Item No." }

    { 1000000003;2;Field  ;
                SourceExpr="Magazine Code" }

    { 1000000005;2;Field  ;
                SourceExpr="Volume No." }

    { 1000000007;2;Field  ;
                SourceExpr="Issue No." }

    { 1000000009;2;Field  ;
                SourceExpr="Issue Date" }

    { 1000000011;2;Field  ;
                SourceExpr="Booking Revenue Code" }

    { 1000000013;2;Field  ;
                SourceExpr="Ads. Type" }

    { 1000000015;2;Field  ;
                SourceExpr="Ads. Sub-Type" }

    { 1000000017;2;Field  ;
                SourceExpr="Ads. Size" }

    { 1000000019;2;Field  ;
                SourceExpr="Ads. Position" }

    { 1000000021;2;Field  ;
                SourceExpr="Ads. Product" }

    { 1000000023;2;Field  ;
                SourceExpr="Product Category" }

    { 1000000025;2;Field  ;
                SourceExpr="Booking Date" }

    { 1000000027;2;Field  ;
                SourceExpr="Counting Unit" }

  }
  CODE
  {
    VAR
      DummyPlanNo@1000000000 : Code[20];
      MagazineItemNo@1000000001 : Code[20];
      RevisionNo@1000000002 : Integer;

    PROCEDURE InitRequest@1000000001(_DummyPlanNo@1000000000 : Code[20];_MagazineItemNo@1000000001 : Code[20];_RevisionNo@1000000002 : Integer);
    BEGIN
      DummyPlanNo := _DummyPlanNo;
      MagazineItemNo := _MagazineItemNo;
      RevisionNo := _RevisionNo;
    END;

    PROCEDURE InsertBookingList@1000000000(VAR AdsBookingLine@1000000000 : Record 50038);
    VAR
      AdsBookingLine2@1000000003 : Record 50038;
      BookingList@1000000001 : Record 50025;
      BookingRevType@1000000002 : Record 50027;
      AdsProduct@1000000004 : Record 50031;
    BEGIN
      IF AdsBookingLine.FIND('-') THEN
      REPEAT
        IF NOT BookingList.GET(DummyPlanNo,RevisionNo,BookingList."From Type"::Ads,
           AdsBookingLine."Booking No.",AdsBookingLine."Line No.")
        THEN BEGIN
          IF NOT BookingRevType.GET(AdsBookingLine."Booking Revenue Code") THEN
            CLEAR(BookingRevType);
          IF NOT AdsProduct.GET(AdsBookingLine."Ads. Product") THEN
            CLEAR(AdsProduct);
          BookingList.INIT;
          BookingList."Dummy Plan No." := DummyPlanNo;
          BookingList."Revision No." := RevisionNo;
          BookingList."From Type" := BookingList."From Type"::Ads;
          BookingList."Booking No." := AdsBookingLine."Booking No.";
          BookingList."Booking Line No." := AdsBookingLine."Line No.";
          BookingList."Magazine Item No." := MagazineItemNo;
          IF AdsProduct.Description = '' THEN
            BookingList."Column Name" := AdsBookingLine."Ads. Product"
          ELSE
            BookingList."Column Name" := AdsProduct.Description;
          BookingList."Content Code" := AdsBookingLine."Ads. Product";
          BookingList."Content Type" := AdsBookingLine."Booking Revenue Code";
          //BookingList."Counting Unit" := AdsBookingLine."Counting Unit";
          BookingList."Counting Unit" := ROUND(AdsBookingLine."Total Counting Unit",0.01);
          BookingList."Blackground Color" := BookingRevType."Blackground Color";
          BookingList."Foreground Color" := BookingRevType."Foreground Color";
          BookingList."Magazine Code" := AdsBookingLine."Magazine Code";
          BookingList."Ads. Position" := AdsBookingLine."Ads. Position";
          BookingList."Ads. Product" := AdsBookingLine."Ads. Product";
          BookingList."Ads. Size" := AdsBookingLine."Ads. Size";
          BookingList."Ads. Type" := AdsBookingLine."Ads. Type";
          BookingList."Ads. Sub-Type" := AdsBookingLine."Ads. Sub-Type";
          BookingList."Owner Customer" := AdsBookingLine."Owner Customer";
          BookingList."Salesperson Code" := AdsBookingLine."Salesperson Code";
          BookingList.Remark := AdsBookingLine.Remark;
          BookingList.INSERT;
        END;
        AdsBookingLine2.GET(AdsBookingLine."Booking No.",AdsBookingLine."Line No.");
        AdsBookingLine2."Planning Status" := AdsBookingLine2."Planning Status"::Picked;
        AdsBookingLine2.MODIFY;
      UNTIL AdsBookingLine.NEXT=0;
    END;

    LOCAL PROCEDURE LookupOKOnPush@19031339();
    BEGIN
      CurrPage.SETSELECTIONFILTER(Rec);
      InsertBookingList(Rec);
      CurrPage.CLOSE;
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   17.05.2007   KKE   New form for "Get Ads. Booking" - Editorial Module
    }
    END.
  }
}

OBJECT Page 50111 Get Content Booking
{
  OBJECT-PROPERTIES
  {
    Date=06/26/07;
    Time=[ 6:00:00 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    SourceTable=Table50020;
    PageType=Card;
    OnQueryClosePage=BEGIN
                       IF CloseAction = ACTION::LookupOK THEN
                           LookupOKOnPush;
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                Editable=FALSE;
                GroupType=Repeater }

    { 1000000001;2;Field  ;
                SourceExpr="Content List No." }

    { 1000000003;2;Field  ;
                SourceExpr="Content Code" }

    { 1000000005;2;Field  ;
                SourceExpr="Column Name" }

    { 1000000007;2;Field  ;
                SourceExpr=Description }

    { 1000000009;2;Field  ;
                SourceExpr="No. of Page" }

    { 1000000011;2;Field  ;
                SourceExpr="Content Type" }

    { 1000000013;2;Field  ;
                SourceExpr="Content Sub Type" }

    { 1000000015;2;Field  ;
                SourceExpr="Author Name" }

    { 1000000017;2;Field  ;
                SourceExpr="Source of Information" }

    { 1000000019;2;Field  ;
                SourceExpr="Cost (LCY)" }

    { 1000000021;2;Field  ;
                SourceExpr="Content Receipt Date" }

    { 1000000023;2;Field  ;
                SourceExpr="Own Customer" }

  }
  CODE
  {
    VAR
      DummyPlanNo@1000000001 : Code[20];
      MagazineItemNo@1000000000 : Code[20];
      RevisionNo@1000000002 : Integer;

    PROCEDURE InitRequest@1000000001(_DummyPlanNo@1000000000 : Code[20];_MagazineItemNo@1000000001 : Code[20];_RevisionNo@1000000002 : Integer);
    BEGIN
      DummyPlanNo := _DummyPlanNo;
      MagazineItemNo := _MagazineItemNo;
      RevisionNo := _RevisionNo;
    END;

    PROCEDURE InsertBookingList@1000000000(VAR ContentIndexLine@1000000000 : Record 50020);
    VAR
      ContentIndexLine2@1000000003 : Record 50020;
      BookingList@1000000001 : Record 50025;
      ContentType@1000000002 : Record 50015;
    BEGIN
      IF ContentIndexLine.FIND('-') THEN
      REPEAT
        IF NOT BookingList.GET(DummyPlanNo,RevisionNo,BookingList."From Type"::Content,
           ContentIndexLine."Content List No.",ContentIndexLine."Content List Line No.")
        THEN BEGIN
          ContentType.GET(ContentIndexLine."Content Type");
          BookingList.INIT;
          BookingList."Dummy Plan No." := DummyPlanNo;
          BookingList."Revision No." := RevisionNo;
          BookingList."From Type" := BookingList."From Type"::Content;
          BookingList."Booking No." := ContentIndexLine."Content List No.";
          BookingList."Booking Line No." := ContentIndexLine."Content List Line No.";
          BookingList."Magazine Item No." := MagazineItemNo;
          BookingList."Column Name" := ContentIndexLine."Column Name";
          BookingList."Content Code" := ContentIndexLine."Content Code";
          BookingList."Content Type" := ContentIndexLine."Content Type";
          BookingList."Counting Unit" := ContentIndexLine."No. of Page";
          BookingList."Blackground Color" := ContentType."Blackground Color";
          BookingList."Foreground Color" := ContentType."Foreground Color";
          BookingList."Ads. Size" := ContentIndexLine.Size;
          BookingList."Owner Customer" := ContentIndexLine."Own Customer";
          BookingList.Description := ContentIndexLine.Description;
          BookingList."Author Name" := ContentIndexLine."Author Name";
          BookingList."Source of Information" := ContentIndexLine."Source of Information";
          BookingList."Content Receipt Date" := ContentIndexLine."Content Receipt Date";
          BookingList.INSERT;
          ContentIndexLine2.GET(ContentIndexLine."Content List No.",ContentIndexLine."Content List Line No.");
          ContentIndexLine2.Status := ContentIndexLine2.Status::Picked;
          ContentIndexLine2.MODIFY;
        END;
      UNTIL ContentIndexLine.NEXT=0;
    END;

    LOCAL PROCEDURE LookupOKOnPush@19031339();
    BEGIN
      CurrPage.SETSELECTIONFILTER(Rec);
      InsertBookingList(Rec);
      CurrPage.CLOSE;
    END;

    BEGIN
    {
      Microsoft Business Solutions Navision
      ----------------------------------------
      Project: Burda (Thailand) Co., Ltd
      KKE : Kanoknard Ketnut

      No.   Date         Sign  Description
      ----------------------------------------
      001   18.05.2007   KKE   New form for "Get Content Booking" - Editorial Module
    }
    END.
  }
}

OBJECT Page 50112 Average VAT Setup
{
  OBJECT-PROPERTIES
  {
    Date=07/09/07;
    Time=[ 6:00:00 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    SourceTable=Table50056;
    DelayedInsert=Yes;
    PageType=Card;
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                GroupType=Repeater }

    { 1000000001;2;Field  ;
                SourceExpr=Year }

    { 1000000003;2;Field  ;
                SourceExpr="From Date" }

    { 1000000005;2;Field  ;
                SourceExpr="To Date" }

    { 1000000007;2;Field  ;
                SourceExpr="VAT Claim %" }

    { 1000000012;2;Field  ;
                SourceExpr="VAT Unclaim %" }

    { 1000000014;2;Field  ;
                SourceExpr="User ID" }

  }
  CODE
  {

    BEGIN
    END.
  }
}

OBJECT Page 50113 Get Invoice - Ads. Billing
{
  OBJECT-PROPERTIES
  {
    Date=11/02/07;
    Time=10:13:21 AM;
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    Editable=No;
    SourceTable=Table21;
    PageType=Card;
    OnQueryClosePage=BEGIN
                       IF CloseAction = ACTION::LookupOK THEN
                           LookupOKOnPush;
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000000;1;Group  ;
                GroupType=Repeater }

    { 1000000001;2;Field  ;
                SourceExpr="Customer No." }

    { 1000000003;2;Field  ;
                SourceExpr="Posting Date" }

    { 1000000005;2;Field  ;
                SourceExpr="Document Type" }

    { 1000000007;2;Field  ;
                SourceExpr="Document No." }

    { 1000000009;2;Field  ;
                SourceExpr="Due Date" }

    { 1000000011;2;Field  ;
                SourceExpr=Amount }

    { 1000000013;2;Field  ;
                SourceExpr="Remaining Amount" }

    { 1000000018;2;Field  ;
                SourceExpr="Used By Ads. Billing No." }

  }
  CODE
  {
    VAR
      DocNo@1000000001 : Code[20];
      LineNo@1000000000 : Integer;

    PROCEDURE InitRequest@1000000000(_DocNo@1000000000 : Code[20];_LineNo@1000000001 : Integer);
    BEGIN
      DocNo := _DocNo;
      LineNo := _LineNo;
    END;

    PROCEDURE InsertAdsBillingLine@1000000001(VAR CustLedgEntry@1000000000 : Record 21);
    VAR
      AdsBillingLine@1000000001 : Record 50051;
    BEGIN
      IF CustLedgEntry.FIND('-') THEN
      REPEAT
        CustLedgEntry.CALCFIELDS("Remaining Amount","Remaining Amt. (LCY)");
        LineNo += 10000;
        AdsBillingLine.INIT;
        AdsBillingLine."Billing No." := DocNo;
        AdsBillingLine."Line No." := LineNo ;
        AdsBillingLine."Bill-to Customer No." := CustLedgEntry."Customer No.";
        AdsBillingLine."Cust. Ledger Entry No." := CustLedgEntry."Entry No.";
        IF NOT AdsBillingLine.CheckDupCustEntryNo THEN BEGIN
          AdsBillingLine.VALIDATE("Cust. Ledger Entry No.",CustLedgEntry."Entry No.");
          AdsBillingLine.INSERT;
        END;
      UNTIL CustLedgEntry.NEXT=0;
    END;

    LOCAL PROCEDURE LookupOKOnPush@19031339();
    BEGIN
      CurrPage.SETSELECTIONFILTER(Rec);
      InsertAdsBillingLine(Rec);
      CurrPage.CLOSE;
    END;

    BEGIN
    END.
  }
}

OBJECT Page 50114 Ads Sales Report MSM
{
  OBJECT-PROPERTIES
  {
    Date=09/01/08;
    Time=[ 4:06:14 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    PageType=Card;
    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1000000000;1 ;Action    ;
                      CaptionML=ENU=Report Ad &Issue;
                      Promoted=Yes;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 //SHELL(text001, COMPANYNAME + '|||' + USERID);
                                 SHELL(text001);
                               END;
                                }
      { 1000000001;1 ;Action    ;
                      CaptionML=ENU=Report Ad &Monthly;
                      Promoted=Yes;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SHELL(text002);
                               END;
                                }
      { 1000000002;1 ;Action    ;
                      CaptionML=ENU=Report Ad &Yearly;
                      Promoted=Yes;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SHELL(text003);
                               END;
                                }
      { 1000000004;1 ;Action    ;
                      CaptionML=ENU=Report &Editorial;
                      Promoted=Yes;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SHELL(text004);
                               END;
                                }
      { 1000000003;1 ;Action    ;
                      CaptionML=ENU=Report AD &Sales;
                      Promoted=Yes;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SHELL(text005);
                               END;
                                }
      { 1000000011;1 ;Action    ;
                      CaptionML=ENU=Report AD &Detail;
                      Promoted=Yes;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SHELL(text011);
                               END;
                                }
      { 1000000006;1 ;Action    ;
                      CaptionML=ENU=Report Ad Sales M&onthly;
                      Promoted=Yes;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SHELL(text006);
                               END;
                                }
      { 1000000007;1 ;Action    ;
                      CaptionML=ENU=Report Ad Top 10;
                      Promoted=Yes;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SHELL(text007);
                               END;
                                }
      { 1000000008;1 ;Action    ;
                      CaptionML=ENU=Report Ad Top 20;
                      Promoted=Yes;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SHELL(text008);
                               END;
                                }
      { 1000000009;1 ;Action    ;
                      CaptionML=ENU=Report Ad E&xpend Amt.;
                      Promoted=Yes;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SHELL(text009);
                               END;
                                }
      { 1000000010;1 ;Action    ;
                      CaptionML=ENU=Report Ads. &Position;
                      Promoted=Yes;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SHELL(text010);
                               END;
                                }
      { 1000000012;1 ;Action    ;
                      CaptionML=ENU=Report Sales Monthly (Adtype);
                      Promoted=Yes;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SHELL(text012);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000005;1;Field  ;
                CaptionClass=Text19009583;
                Style=Strong;
                StyleExpr=TRUE }

  }
  CODE
  {
    VAR
      text001@1000000000 : TextConst 'ENU=Z:\Navision Report\MSM\Report Ad Issue.exe';
      text002@1000000001 : TextConst 'ENU=Z:\Navision Report\MSM\Report Ad Monthly.exe';
      text003@1000000002 : TextConst 'ENU=Z:\Navision Report\MSM\Report Ad Yearly.exe';
      text004@1000000003 : TextConst 'ENU=Z:\Navision Report\MSM\Report Editorial.exe';
      text005@1000000004 : TextConst 'ENU=Z:\Navision Report\MSM\Report AD Sales.exe';
      text006@1000000008 : TextConst 'ENU=Z:\Navision Report\MSM\Report Ad Sales Monthly.exe';
      text007@1000000007 : TextConst 'ENU=Z:\Navision Report\MSM\Report Ad Top 10.exe';
      text008@1000000006 : TextConst 'ENU=Z:\Navision Report\MSM\Report Ad Top 20.exe';
      text009@1000000005 : TextConst 'ENU=Z:\Navision Report\MSM\Report Ad Top 100.exe';
      text010@1000000009 : TextConst 'ENU=Z:\Navision Report\MSM\Report Ad Position.exe';
      text011@1000000010 : TextConst 'ENU=Z:\Navision Report\MSM\Report Ad Detial.exe';
      text012@1000000011 : TextConst 'ENU=Z:\Navision Report\MSM\Report Sales Monthly (Adtype).exe';
      Text19009583@19048339 : TextConst 'ENU=Report MSM';

    BEGIN
    END.
  }
}

OBJECT Page 50115 Ads Sales Report MSP
{
  OBJECT-PROPERTIES
  {
    Date=09/01/08;
    Time=[ 4:08:08 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    PageType=Card;
    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1000000000;1 ;Action    ;
                      CaptionML=ENU=Report Ad &Issue;
                      Promoted=Yes;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 //SHELL(text001, COMPANYNAME + '|||' + USERID);
                                 SHELL(text001);
                               END;
                                }
      { 1000000001;1 ;Action    ;
                      CaptionML=ENU=Report Ad &Monthly;
                      Promoted=Yes;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SHELL(text002);
                               END;
                                }
      { 1000000002;1 ;Action    ;
                      CaptionML=ENU=Report Ad &Yearly;
                      Promoted=Yes;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SHELL(text003);
                               END;
                                }
      { 1000000004;1 ;Action    ;
                      CaptionML=ENU=Report &Editorial;
                      Promoted=Yes;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SHELL(text004);
                               END;
                                }
      { 1000000003;1 ;Action    ;
                      CaptionML=ENU=Report AD &Sales;
                      Promoted=Yes;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SHELL(text005);
                               END;
                                }
      { 1000000011;1 ;Action    ;
                      CaptionML=ENU=Report AD &Detail;
                      Promoted=Yes;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SHELL(text011);
                               END;
                                }
      { 1000000006;1 ;Action    ;
                      CaptionML=ENU=Report Ad Sales M&onthly;
                      Promoted=Yes;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SHELL(text006);
                               END;
                                }
      { 1000000007;1 ;Action    ;
                      CaptionML=ENU=Report Ad Top 10;
                      Promoted=Yes;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SHELL(text007);
                               END;
                                }
      { 1000000008;1 ;Action    ;
                      CaptionML=ENU=Report Ad Top 20;
                      Promoted=Yes;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SHELL(text008);
                               END;
                                }
      { 1000000009;1 ;Action    ;
                      CaptionML=ENU=Report Ad E&xpend Amt;
                      Promoted=Yes;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SHELL(text009);
                               END;
                                }
      { 1000000010;1 ;Action    ;
                      CaptionML=ENU=Report Ads. &Position;
                      Promoted=Yes;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SHELL(text010);
                               END;
                                }
      { 1000000012;1 ;Action    ;
                      CaptionML=ENU=Report Sales Monthly (Adtype);
                      Promoted=Yes;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SHELL(text012);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000005;1;Field  ;
                CaptionClass=Text19012975;
                Style=Strong;
                StyleExpr=TRUE }

  }
  CODE
  {
    VAR
      text001@1000000000 : TextConst 'ENU=Z:\Navision Report\MSP\Report Ad Issue.exe';
      text002@1000000001 : TextConst 'ENU=Z:\Navision Report\MSP\Report Ad Monthly.exe';
      text003@1000000002 : TextConst 'ENU=Z:\Navision Report\MSP\Report Ad Yearly.exe';
      text004@1000000003 : TextConst 'ENU=Z:\Navision Report\MSP\Report Editorial.exe';
      text005@1000000004 : TextConst 'ENU=Z:\Navision Report\MSP\Report AD Sales.exe';
      text006@1000000008 : TextConst 'ENU=Z:\Navision Report\MSP\Report Ad Sales Monthly.exe';
      text007@1000000007 : TextConst 'ENU=Z:\Navision Report\MSP\Report Ad Top 10.exe';
      text008@1000000006 : TextConst 'ENU=Z:\Navision Report\MSP\Report Ad Top 20.exe';
      text009@1000000005 : TextConst 'ENU=Z:\Navision Report\MSP\Report Ad Top 100.exe';
      text010@1000000009 : TextConst 'ENU=Z:\Navision Report\MSP\Report Ad Position.exe';
      text011@1000000010 : TextConst 'ENU=Z:\Navision Report\MSP\Report Ad Detial.exe';
      text012@1000000011 : TextConst 'ENU=Z:\Navision Report\MSp\Report Sales Monthly (Adtype).exe';
      Text19012975@19000267 : TextConst 'ENU=Report MSP';

    BEGIN
    END.
  }
}

OBJECT Page 50116 Ads Sales Report MSA
{
  OBJECT-PROPERTIES
  {
    Date=09/01/08;
    Time=[ 4:07:44 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    PageType=Card;
    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1000000000;1 ;Action    ;
                      CaptionML=ENU=Report Ad &Issue;
                      Promoted=Yes;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 //SHELL(text001, COMPANYNAME + '|||' + USERID);
                                 SHELL(text001);
                               END;
                                }
      { 1000000001;1 ;Action    ;
                      CaptionML=ENU=Report Ad &Monthly;
                      Promoted=Yes;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SHELL(text002);
                               END;
                                }
      { 1000000002;1 ;Action    ;
                      CaptionML=ENU=Report Ad &Yearly;
                      Promoted=Yes;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SHELL(text003);
                               END;
                                }
      { 1000000004;1 ;Action    ;
                      CaptionML=ENU=Report &Editorial;
                      Promoted=Yes;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SHELL(text004);
                               END;
                                }
      { 1000000003;1 ;Action    ;
                      CaptionML=ENU=Report AD &Sales;
                      Promoted=Yes;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SHELL(text005);
                               END;
                                }
      { 1000000011;1 ;Action    ;
                      CaptionML=ENU=Report AD &Detail;
                      Promoted=Yes;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SHELL(text011);
                               END;
                                }
      { 1000000006;1 ;Action    ;
                      CaptionML=ENU=Report Ad Sales M&onthly;
                      Promoted=Yes;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SHELL(text006);
                               END;
                                }
      { 1000000007;1 ;Action    ;
                      CaptionML=ENU=Report Ad Top 10;
                      Promoted=Yes;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SHELL(text007);
                               END;
                                }
      { 1000000008;1 ;Action    ;
                      CaptionML=ENU=Report Ad Top 20;
                      Promoted=Yes;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SHELL(text008);
                               END;
                                }
      { 1000000009;1 ;Action    ;
                      CaptionML=ENU=Report Ad E&xpend Amt.;
                      Promoted=Yes;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SHELL(text009);
                               END;
                                }
      { 1000000010;1 ;Action    ;
                      CaptionML=ENU=Report Ads. &Position;
                      Promoted=Yes;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SHELL(text010);
                               END;
                                }
      { 1000000012;1 ;Action    ;
                      CaptionML=ENU=Report Sales Monthly (Adtype);
                      Promoted=Yes;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SHELL(text012);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000005;1;Field  ;
                CaptionClass=Text19036015;
                Style=Strong;
                StyleExpr=TRUE }

  }
  CODE
  {
    VAR
      text001@1000000000 : TextConst 'ENU=Z:\Navision Report\MSA\Report Ad Issue.exe';
      text002@1000000001 : TextConst 'ENU=Z:\Navision Report\MSA\Report Ad Monthly.exe';
      text003@1000000002 : TextConst 'ENU=Z:\Navision Report\MSA\Report Ad Yearly.exe';
      text004@1000000003 : TextConst 'ENU=Z:\Navision Report\MSA\Report Editorial.exe';
      text005@1000000004 : TextConst 'ENU=Z:\Navision Report\MSA\Report AD Sales.exe';
      text006@1000000008 : TextConst 'ENU=Z:\Navision Report\MSA\Report Ad Sales Monthly.exe';
      text007@1000000007 : TextConst 'ENU=Z:\Navision Report\MSA\Report Ad Top 10.exe';
      text008@1000000006 : TextConst 'ENU=Z:\Navision Report\MSA\Report Ad Top 20.exe';
      text009@1000000005 : TextConst 'ENU=Z:\Navision Report\MSA\Report Ad Top 100.exe';
      text010@1000000009 : TextConst 'ENU=Z:\Navision Report\MSA\Report Ad Position.exe';
      text011@1000000010 : TextConst 'ENU=Z:\Navision Report\MSA\Report Ad Detial.exe';
      text012@1000000011 : TextConst 'ENU=Z:\Navision Report\MSA\Report Sales Monthly (Adtype).exe';
      Text19036015@19021501 : TextConst 'ENU=Report MSA';

    BEGIN
    END.
  }
}

OBJECT Page 50117 Subscriber Report
{
  OBJECT-PROPERTIES
  {
    Date=09/08/09;
    Time=10:22:41 AM;
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    PageType=Card;
    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1000000000;1 ;Action    ;
                      CaptionML=ENU=E&xpire;
                      Promoted=Yes;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 //SHELL(text001, COMPANYNAME + '|||' + USERID);
                                 SHELL(text001);
                               END;
                                }
      { 1000000001;1 ;Action    ;
                      CaptionML=ENU=&New/Renew;
                      Promoted=Yes;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SHELL(text002);
                               END;
                                }
      { 1000000002;1 ;Action    ;
                      CaptionML=ENU=&Subscriber Cross Tab;
                      Promoted=Yes;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SHELL(text003);
                               END;
                                }
      { 1000000007;1 ;Action    ;
                      CaptionML=ENU=&Subscriber List;
                      Promoted=Yes;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SHELL(text007);
                               END;
                                }
      { 1000000004;1 ;Action    ;
                      CaptionML=ENU=E&ducation;
                      Promoted=Yes;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SHELL(text004);
                               END;
                                }
      { 1000000003;1 ;Action    ;
                      CaptionML=ENU=&Occupation;
                      Promoted=Yes;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SHELL(text005);
                               END;
                                }
      { 1000000010;1 ;Action    ;
                      CaptionML=ENU=&Revenue;
                      Promoted=Yes;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SHELL(text006);
                               END;
                                }
      { 1000000006;1 ;Action    ;
                      CaptionML=ENU=Subscription Movement;
                      Promoted=Yes;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SHELL(text008);
                               END;
                                }
      { 1000000008;1 ;Action    ;
                      CaptionML=ENU=Subscription Shipping;
                      Promoted=Yes;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SHELL(text009);
                               END;
                                }
      { 1000000009;1 ;Action    ;
                      CaptionML=ENU=Subscription Promotion;
                      Promoted=Yes;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SHELL(text010);
                               END;
                                }
      { 1000000011;1 ;Action    ;
                      CaptionML=ENU=Subscription Payment;
                      Promoted=Yes;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SHELL(text011);
                               END;
                                }
      { 1000000012;1 ;Action    ;
                      CaptionML=ENU=Subscription Analyse;
                      Promoted=Yes;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SHELL(text012);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000005;1;Field  ;
                CaptionClass=Text19009583;
                Style=Strong;
                StyleExpr=TRUE }

  }
  CODE
  {
    VAR
      text001@1000000000 : TextConst 'ENU=Z:\Navision Report\Subscriber\MSM\Expire.exe';
      text002@1000000001 : TextConst 'ENU=Z:\Navision Report\Subscriber\MSM\NewContact.exe';
      text003@1000000002 : TextConst 'ENU=Z:\Navision Report\Subscriber\MSM\Age.exe';
      text004@1000000003 : TextConst 'ENU=Z:\Navision Report\Subscriber\MSM\Education.exe';
      text005@1000000004 : TextConst 'ENU=Z:\Navision Report\Subscriber\MSM\Occupation.exe';
      text006@1000000008 : TextConst 'ENU=Z:\Navision Report\Subscriber\MSM\Revenue.exe';
      text007@1000000005 : TextConst 'ENU=Z:\Navision Report\Subscriber\MSM\Report Subscriber list.exe';
      text008@1000000011 : TextConst 'ENU=Z:\Navision Report\Subcriber\Subscription Movement.exe';
      text009@1000000010 : TextConst 'ENU=Z:\Navision Report\Subcriber\Subscription Shipping.exe';
      text010@1000000009 : TextConst 'ENU=Z:\Navision Report\Subcriber\Subscription Promotion.exe';
      text011@1000000007 : TextConst 'ENU=Z:\Navision Report\Subcriber\Subscription Payment.exe';
      text012@1000000006 : TextConst 'ENU=Z:\Navision Report\Subcriber\Subscription Analyse.exe';
      Text19009583@19048339 : TextConst 'ENU=Report MSM';

    BEGIN
    END.
  }
}

OBJECT Page 50118 Subscriber Report MSP
{
  OBJECT-PROPERTIES
  {
    Date=09/23/08;
    Time=[ 5:06:37 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    PageType=Card;
    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1000000000;1 ;Action    ;
                      CaptionML=ENU=E&xpire;
                      Promoted=Yes;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 //SHELL(text001, COMPANYNAME + '|||' + USERID);
                                 SHELL(text001);
                               END;
                                }
      { 1000000001;1 ;Action    ;
                      CaptionML=ENU=&New/Renew;
                      Promoted=Yes;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SHELL(text002);
                               END;
                                }
      { 1000000002;1 ;Action    ;
                      CaptionML=ENU=&Subscriber Cross Tab;
                      Promoted=Yes;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SHELL(text003);
                               END;
                                }
      { 1000000006;1 ;Action    ;
                      CaptionML=ENU=&Subscriber List;
                      Promoted=Yes;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SHELL(text007);
                               END;
                                }
      { 1000000004;1 ;Action    ;
                      CaptionML=ENU=E&ducation;
                      Promoted=Yes;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SHELL(text004);
                               END;
                                }
      { 1000000003;1 ;Action    ;
                      CaptionML=ENU=&Occupation;
                      Promoted=Yes;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SHELL(text005);
                               END;
                                }
      { 1000000010;1 ;Action    ;
                      CaptionML=ENU=&Revenue;
                      Promoted=Yes;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SHELL(text006);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000005;1;Field  ;
                CaptionClass=Text19012975;
                Style=Strong;
                StyleExpr=TRUE }

  }
  CODE
  {
    VAR
      text001@1000000000 : TextConst 'ENU=Z:\Navision Report\Subscriber\MSP\Expire.exe';
      text002@1000000001 : TextConst 'ENU=Z:\Navision Report\Subscriber\MSP\NewContact.exe';
      text003@1000000002 : TextConst 'ENU=Z:\Navision Report\Subscriber\MSP\Age.exe';
      text004@1000000003 : TextConst 'ENU=Z:\Navision Report\Subscriber\MSP\Education.exe';
      text005@1000000004 : TextConst 'ENU=Z:\Navision Report\Subscriber\MSP\Occupation.exe';
      text006@1000000008 : TextConst 'ENU=Z:\Navision Report\Subscriber\MSP\Revenue.exe';
      text007@1000000005 : TextConst 'ENU=Z:\Navision Report\Subscriber\MSP\Report Subscriber list.exe';
      Text19012975@19000267 : TextConst 'ENU=Report MSP';

    BEGIN
    END.
  }
}

OBJECT Page 50119 Subscriber Report MSA
{
  OBJECT-PROPERTIES
  {
    Date=09/23/08;
    Time=[ 5:20:09 PM];
    Version List=Burda1.00;
  }
  PROPERTIES
  {
    PageType=Card;
    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1000000000;1 ;Action    ;
                      CaptionML=ENU=E&xpire;
                      Promoted=Yes;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 //SHELL(text001, COMPANYNAME + '|||' + USERID);
                                 SHELL(text001);
                               END;
                                }
      { 1000000001;1 ;Action    ;
                      CaptionML=ENU=&New/Renew;
                      Promoted=Yes;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SHELL(text002);
                               END;
                                }
      { 1000000002;1 ;Action    ;
                      CaptionML=ENU=&Subscriber Cross Tab;
                      Promoted=Yes;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SHELL(text003);
                               END;
                                }
      { 1000000006;1 ;Action    ;
                      CaptionML=ENU=&Subscriber List;
                      Promoted=Yes;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SHELL(text007);
                               END;
                                }
      { 1000000004;1 ;Action    ;
                      CaptionML=ENU=E&ducation;
                      Promoted=Yes;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SHELL(text004);
                               END;
                                }
      { 1000000003;1 ;Action    ;
                      CaptionML=ENU=&Occupation;
                      Promoted=Yes;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SHELL(text005);
                               END;
                                }
      { 1000000010;1 ;Action    ;
                      CaptionML=ENU=&Revenue;
                      Promoted=Yes;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SHELL(text006);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000005;1;Field  ;
                CaptionClass=Text19036015;
                Style=Strong;
                StyleExpr=TRUE }

  }
  CODE
  {
    VAR
      text001@1000000000 : TextConst 'ENU=Z:\Navision Report\Subscriber\MSA\Expire.exe';
      text002@1000000001 : TextConst 'ENU=Z:\Navision Report\Subscriber\MSA\NewContact.exe';
      text003@1000000002 : TextConst 'ENU=Z:\Navision Report\Subscriber\MSA\Age.exe';
      text004@1000000003 : TextConst 'ENU=Z:\Navision Report\Subscriber\MSA\Education.exe';
      text005@1000000004 : TextConst 'ENU=Z:\Navision Report\Subscriber\MSA\Occupation.exe';
      text006@1000000008 : TextConst 'ENU=Z:\Navision Report\Subscriber\MSA\Revenue.exe';
      text007@1000000005 : TextConst 'ENU=Z:\Navision Report\Subscriber\MSA\Report Subscriber list.exe';
      Text19036015@19021501 : TextConst 'ENU=Report MSA';

    BEGIN
    END.
  }
}

